{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./sources/utils/utils.js","webpack:///./sources/utils/dom_helpers.js","webpack:///./sources/utils/extends.js","webpack:///./sources/utils/eventable.js","webpack:///./sources/core/lightbox/controls/base_control.js","webpack:///./sources/utils/helpers.js","webpack:///./sources/core/ui/layout/cell.js","webpack:///./sources/utils/date_helpers.js","webpack:///./sources/core/ui/grid/editors/editors/base.js","webpack:///./sources/utils/env.js","webpack:///./sources/core/lightbox/controls/select_control.js","webpack:///./sources/core/ui/mouse_event_container.js","webpack:///./sources/core/ui/grid/editors/controller.js","webpack:///./sources/core/ui/grid/grid.js","webpack:///./sources/locale/locale.js","webpack:///./sources/core/worktime/calendar_arguments_helper.js","webpack:///./sources/utils/task_tree_helpers.js","webpack:///./sources/core/gantt_data_range.js","webpack:///./sources/core/datastore/treedatastore.js","webpack:///./sources/core/datastore/power_array.js","webpack:///./sources/core/datastore/datastore.js","webpack:///./sources/core/ui/render/task_bar_render.js","webpack:///./sources/core/ui/resouce_store_mixin.js","webpack:///./sources/core/ui/timeline/scales_ignore.js","webpack:///./sources/core/ui/timeline/timeline.js","webpack:///./sources/core/ui/layout/layout.js","webpack:///./sources/utils/dom_event_scope.js","webpack:///./sources/utils/timeout.js","webpack:///./sources/core/destructor.js","webpack:///./sources/core/common/assert.js","webpack:///./sources/core/gantt_core.js","webpack:///./sources/core/touch.js","webpack:///./sources/css/skins/contrast_white.js","webpack:///./sources/css/skins/contrast_black.js","webpack:///./sources/css/skins/material.js","webpack:///./sources/css/skins/broadway.js","webpack:///./sources/css/skins/terrace.js","webpack:///./sources/css/skins/meadow.js","webpack:///./sources/css/skins/skyblue.js","webpack:///./sources/core/skin.js","webpack:///./sources/core/cached_functions.js","webpack:///./sources/core/lightbox/controls/typeselect_control.js","webpack:///./sources/core/data_task_types.js","webpack:///./sources/core/lightbox_optional_time.js","webpack:///./sources/core/lightbox/controls/parent_control.js","webpack:///./sources/core/lightbox/controls/duration_control.js","webpack:///./sources/core/lightbox/controls/radio_control.js","webpack:///./sources/core/lightbox/controls/checkbox_control.js","webpack:///./sources/core/lightbox/controls/time_control.js","webpack:///./sources/core/lightbox/controls/textarea_control.js","webpack:///./sources/core/lightbox/controls/template_control.js","webpack:///./sources/core/lightbox/index.js","webpack:///./sources/core/data.js","webpack:///./sources/core/facades/worktime_calendars.js","webpack:///./sources/core/worktime/strategy/no_work_time.js","webpack:///./sources/core/worktime/time_calculator.js","webpack:///./sources/core/worktime/strategy/calendar_workunit_cache.js","webpack:///./sources/core/worktime/strategy/calendar_strategy.js","webpack:///./sources/core/worktime/calendar_manager.js","webpack:///./sources/core/worktime/work_time.js","webpack:///./sources/core/load.js","webpack:///./sources/core/tasks.js","webpack:///./sources/core/wai_aria.js","webpack:///./sources/core/grid_column_api.gpl.js","webpack:///./sources/core/grid_column_api.js","webpack:///./sources/core/dynamic_loading.js","webpack:///./sources/core/plugins/auto_task_types.js","webpack:///./sources/core/plugins/new_task_placeholder.js","webpack:///./sources/core/plugins/resources.js","webpack:///./sources/core/plugins/dhtmlx_hooks.js","webpack:///./sources/core/plugins/jquery_hooks.js","webpack:///./sources/core/plugins/wbs.js","webpack:///./sources/core/plugins/batch_update.js","webpack:///./sources/core/plugins/autoscroll.js","webpack:///./sources/core/plugins/index.js","webpack:///./sources/core/dataprocessor/dataprocessor.js","webpack:///./sources/core/dataprocessor/live_update_hooks.js","webpack:///./sources/core/dataprocessor/hooks.js","webpack:///./sources/core/datastore/datastore_render.js","webpack:///./sources/core/datastore/select.js","webpack:///./sources/core/facades/datastore_links.js","webpack:///./sources/core/facades/datastore_tasks.js","webpack:///./sources/core/facades/datastore.js","webpack:///./sources/core/datastore/datastore_hooks.js","webpack:///./sources/core/facades/layout.js","webpack:///./sources/core/data_task_layers.js","webpack:///./sources/core/ui/main_layout_initializer.js","webpack:///./sources/core/ui/timeline/links_dnd.js","webpack:///./sources/core/ui/timeline/tasks_dnd.js","webpack:///./sources/core/ui/timeline/main_timeline_initializer.js","webpack:///./sources/core/ui/grid/tasks_grid_dnd.js","webpack:///./sources/core/ui/grid/main_grid_initializer.js","webpack:///./sources/core/ui/render/task_grid_line_render.js","webpack:///./sources/core/ui/render/link_render.js","webpack:///./sources/core/ui/render/task_bg_render.js","webpack:///./sources/core/ui/render/task_split_render.js","webpack:///./sources/core/ui/timeline/resource_timeline.js","webpack:///./sources/core/ui/grid/resource_grid.js","webpack:///./sources/core/ui/grid/editors/editors/predecessor.js","webpack:///./sources/core/ui/grid/editors/editors/date.js","webpack:///./sources/core/ui/grid/editors/editors/select.js","webpack:///./sources/core/ui/grid/editors/editors/number.js","webpack:///./sources/core/ui/grid/editors/editors/text.js","webpack:///./sources/core/ui/grid/editors/keyboard_mappings/keyboard_navigation.js","webpack:///./sources/core/ui/grid/editors/keyboard_mappings/default.js","webpack:///./sources/core/ui/grid/editors/keyboard_mappings.js","webpack:///./sources/core/ui/grid/grid_resize.js","webpack:///./sources/core/ui/timeline/tasks_canvas_render.js","webpack:///./sources/core/ui/timeline/scales.js","webpack:///./sources/core/ui/layout/scrollbar_cell.js","webpack:///./sources/core/ui/layout/resizer_cell.js","webpack:///./sources/core/ui/layout/view_cell.js","webpack:///./sources/core/ui/layout/view_layout.js","webpack:///./sources/core/ui/render/render_factory.js","webpack:///./sources/core/ui/render/layer_engine.js","webpack:///./sources/core/ui/gantt_layers.js","webpack:///./sources/core/ui/mouse.js","webpack:///./sources/core/ui/configurable.js","webpack:///./sources/core/ui/ui_factory.js","webpack:///./sources/core/ui/index.js","webpack:///./sources/core/message.js","webpack:///./sources/core/common/state.js","webpack:///./sources/core/common/templates.js","webpack:///./sources/core/common/dnd.js","webpack:///./sources/core/common/date.js","webpack:///./sources/core/common/ajax.js","webpack:///./sources/core/common/config.js","webpack:///./sources/core/common/services.js","webpack:///./sources/core/common/import.js","webpack:///./sources/constants/index.js","webpack:///./sources/core/gantt.js","webpack:///./sources/core/deprecated_warnings.js","webpack:///./sources/dhtmlxgantt.commercial.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","seed","dateHelper","copy","result","Array","Number","String","Boolean","length","isDate","Date","apply","defined","obj","mixin","target","source","force","f","undefined","uid","valueOf","functor","arguments","event","el","handler","capture","addEventListener","attachEvent","eventRemove","removeEventListener","detachEvent","elementPosition","elem","top","left","right","bottom","getBoundingClientRect","box","body","document","docElem","documentElement","parentNode","scrollTop","window","pageYOffset","scrollLeft","pageXOffset","clientTop","clientLeft","offsetWidth","offsetHeight","parseInt","offsetTop","offsetLeft","offsetParent","y","Math","round","x","width","height","isVisible","node","display","visibility","getComputedStyle","style","currentStyle","hasNonNegativeTabIndex","isNaN","getAttribute","hasHref","a","area","nodeName","loLowerCase","isEnabled","input","select","textarea","button","toLowerCase","hasAttribute","getClassName","className","baseVal","indexOf","_trimString","_slave","createElement","getTargetNode","e","tagName","srcElement","str","trim","this","replace","getNodePosition","getFocusableNodes","root","nodes","querySelectorAll","join","nodesArray","slice","splice","getScrollSize","div","cssText","appendChild","clientWidth","removeChild","addClassName","removeClassName","split","regEx","RegExp","insertNode","newone","innerHTML","child","firstChild","removeNode","getChildNodes","css","ch","childNodes","len","out","push","toNode","getElementById","querySelector","locateClassName","classname","strict","trg","ind","charAt","locateAttribute","attribute","getRelativeEventPosition","ev","pageX","pageY","pos","clientX","clientY","isChildOf","parent","b","__","constructor","EventHost","_connected","_silent_mode","_silentStart","_silentEnd","createEventStorage","dhx_catch","z","res","zr","addEvent","removeEvent","id","eventHost","catcher","callObj","attachAll","callback","callEvent","arg0","handlerName","concat","checkEvent","list","detachAllEvents","dummy","console","log","BaseControl","render","set_value","get_value","focus","gantt","units","second","minute","hour","day","week","month","quarter","year","getSecondsInUnit","unit","forEach","arr","workArray","arrayMap","map","resArray","utils","eventable","domHelpers","Cell","config","factory","$container","$parent","$config","headerHeight","$gantt","$domEvents","_createDomEventScope","$id","$name","$factory","destructor","$view","$services","getService","detach","_headerClickHandler","detachAll","cell","scrollTo","clear","getNode","padding","resize","final","$preResize","topCont","topSize","getSize","minWidth","maxWidth","minHeight","maxHeight","setSize","hide","_hide","show","index","cellIndex","moveView","hidden","$toHTML","content","header","raw","html","canCollapse","$fill","init","self","toggle","delegate","collapsed","size","gravity","getContentSize","$lastSize","contentX","contentY","_getBorderSizes","borders","horizontal","vertical","_currentBorders","_borders","_sizeHeader","_sizeContent","_setBorders","view","cssHash","xLayout","floor","transform","getFullYear","getMonth","getDate","BaseEditor","column","placeholder","get_input","is_changed","currentValue","is_valid","save","env","isIE","navigator","userAgent","isIE6","XMLHttpRequest","isIE7","isIE8","isOpera","isChrome","isKHTML","isFF","isIPad","search","isEdge","__extends","_super","SelectControl","sns","options","label","_dhx_onchange","onchange","_focus","events","mouseEvents","h","getKeyboardMapping","textEditorFactory","numberEditorFactory","selectEditorFactory","dateEditorFactory","predecessorEditorFactory","initConfigs","editor_types","text","number","date","predecessor","keyboardMapping","eventBus","inlineEditController","createEditors","grid","_createPlaceholder","itemId","columnName","getItemTop","getItemHeight","cols","getGridColumns","_getEditorPosition","setAttribute","item_attribute","getColumnIndex","handlers","store","controller","_itemId","_columnName","_editor","_editorType","_placeholder","locateCell","row","getEditorConfig","getColumn","editor","mapping","getMapping","getDatastore","oldId","newId","getState","batch_update","editorType","startEdit","exists","editorState","setValue","editorConfig","$getConfig","type","$grid_data","onShow","state","item","getItem","map_to","getValue","_getItemValue","getTask","isChanged","onHide","newValue","oldValue","end_date","calculateEndDate","start_date","duration","task","updateItem","_findEditableCell","start","direction","nextIndex","nextColumn","getNextCell","dir","getFirstCell","getLastCell","editNextCell","canChangeRow","moveRow","editPrevCell","getNext","getPrev","editNextRow","editPrevRow","handlerId","gridResize","Grid","$state","container","gridAriaAttr","_waiAria","gridAttrString","gridDataAriaAttr","gridDataAttrString","$grid","gridScaleRowAttrString","$grid_scale","attr","layers","_createLayerConfig","resizer","_renderHeaderResizers","doOnRender","_mouseDelegates","_addLayers","_initEvents","outerWidth","columns","innerWidth","scrollable","_setColumnsWidth","grid_width","dataHeight","max","scale_height","refresh","rowStore","contentHeight","row_height","countVisible","contentWidth","_getGridWidth","scrollHeight","scrollWidth","_initSmartRenderingPlaceholder","_calculateGridWidth","_renderGridHeader","getIndexById","renderer","$ui","gridLine","filter","_taskLayers","taskRenderer","getDataRender","createDataRender","defaultContainer","taskLayers","layer","host","bar_layer","addLayer","_refreshPlaceholderOnStoreUpdate","smart_rendering","scrollY","scroll","getView","getScrollState","scrollSize","$rowsPlaceholder","_staticBgHandler","close","open","_clearLayers","removeLayer","_getColumnWidth","min_width","min_grid_column_width","new_width","max_width","min","_getGridWidthLimits","min_limit","max_limit","newWidth","start_index","columns_width","final_width","extra_width","start_width","col","share","iterator","curExtra","_getColsTotalWidth","cols_width","v","parseFloat","unknown","gridWidth","autofit","diff","delta","changed","_setContentSize","locale","templates","rtl","reverse","cells","labels","lineHeigth","last","colWidth","sort","_sort","cssClass","grid_header_class","gridScaleCellAttrString","lineHeight","month_full","month_short","day_full","day_short","new_task","icon_save","icon_cancel","icon_details","icon_edit","icon_delete","confirm_closing","confirm_deleting","section_description","section_time","section_type","column_wbs","column_text","column_start_date","column_duration","column_add","link","confirm_link_deleting","link_start","link_end","type_task","type_project","type_milestone","minutes","hours","days","weeks","months","years","message_ok","message_cancel","IsWorkTimeArgument","calendar","ClosestWorkTimeArgument","CalculateEndDateArgument","step","GetDurationArgument","end","getWorkHoursArguments","setWorkTimeArguments","unsetWorkTimeArguments","isWorkTimeArguments","processedConfig","duration_unit","getClosestWorkTimeArguments","arg","_getStartEndConfig","param","argumentType","duration_step","getDurationArguments","hasDurationArguments","calculateEndDateArguments","copyLinkIdsArray","linkIds","targetHash","isLinkExists","getLink","copyLinkIds","$source","$target","getSubtreeLinks","rootId","isTaskExists","eachTask","getSubtreeTasks","ScaleHelper","_init_tasks_range","cfg","scale_unit","scale_offset_minimal","helper","scales","primaryScale","subscales","sortScales","_scale_range_unit","range","start_interval","add","resolveConfigRange","getSubtaskDates","dateRangeResolver","_min_date","_max_date","fit_tasks","old_min","old_max","_adjust_scales","powerArray","DataStore","TreeDataStore","_branches","pull","$initItem","initItem","$parentProperty","parentProperty","$getRootId","val","$openInitially","openInitially","visibleOrder","$create","fullOrder","_searchVisibleOrder","_skip_refresh","eachParent","$open","isSplitTask","_buildTree","data","setParent","getParent","_add_branch","$level","calculateItemLevel","_updateOrder","parse","loaded","_parseInner","_addItemInner","targetIndex","_move_branch","$rendered_parent","_changeIdInner","children","getChildren","_replace_branch_child","_traverseBranches","code","branch","taskId","_removeItemInner","items","eachItem","move","sid","tindex","getBranchIndex","source_pid","tbranch","_moveInner","hasChild","childId","parentId","pid","getSiblings","getNextSibling","siblings","getPrevSibling","clearAll","level","_setParentInner","new_pid","silent","startItem","added_already","old_parent","new_parent","old_id","new_id","newbranch","field","desc","criteria","original_criteria","els","temp","rule","$powerArray","array","$removeAt","$remove","$find","$insertAt","$each","master","$map","$filter","_filterRule","removeItem","order","data_size","getVisibleItems","getIndexRange","addItem","changeId","sindex","getIdByIndex","arraysEqual","arr1","arr2","quick","oldOrder","count","serialize","filteredOrder","from","to","Infinity","ret","getItems","_getNullIfUndefined","getFirst","getLast","_task_default_render","_isAllowedUnscheduledTask","getItemPosition","$getTemplates","taskType","getTaskType","padd","types","milestone","link_line_width","show_progress","element","done","progress","pr","progressColor","backgroundColor","opacity","progress_text","position","wrapper","drag_progress","isReadonly","drag","markerPos","_render_task_progress","task_text","_render_task_content","textColor","color","basic","template","project","isSummaryTask","select_task","selected_task","drag_id","drag_mode","touch_drag","link_source_id","link_target_id","highlight_critical_path","isCriticalTask","link_landing_area","from_id","from_start","link_from_start","to_start","link_to_start","allowDrag","isLinkAllowed","dragClass","_combine_item_class","task_class","styles","side","_get_link_crossing_css","_render_side_content","leftside_text","_render_leftside_content","rightside_text","_render_rightside_content","setTaskBarAttr","drag_resize","_render_pair","drag_links","show_links","outer","inner","showLinkPoints","touch","cond","leftside","links","start_to_start","finish_to_start","finish_to_finish","_get_conditions","ln","tp","min_date","max_date","type_renderers","defaultRenderer","_linkToTaskStore","$data","tasksStore","updateDelay","tasks","ownStore","requestAnimationFrame","cancelAnimationFrame","processIgnores","display_count","ignore_x","ignore_time","skip_off_time","ignore","trace_x","_ignore_time_config","ignored_colls","canvasRender","Timeline","$scaleHelper","_findBinary","prev","low","high","$task","$task_scale","$task_data","$task_bg","$task_links","$task_bars","_tasks","col_width","full_width","rendered","linksAttr","bindLinks","link_attribute","linkLayers","_attachLayers","backgroundImage","scale","data_els","_refreshScales","smart_scales","_scales","_getScaleChunkHtml","taskFilter","expose","taskBar","taskSplitBar","append","taskBg","static_background","_linkLayers","_taskRenderer","getLayer","_initStaticBackgroundRender","linkStore","linkRenderer","linkLayer","_linkRenderer","staticRender","getScale","_render_tasks_scales","scales_html","outer_width","helpers","_getScales","availWidth","autosize","autosize_min_width","cfgs","prepareConfigs","min_column_width","fromPos","toPos","scale_row_class","tplClass","_prepareScaleHtml","globalConfig","globalTemplates","date_to_str","startIndex","endIndex","inherit_scale_class","scale_cell_class","cssclass","getTimelineCellAttr","dateFromPos","summ","part","_getColumnDuration","posFromDate","columnIndexByDate","assert","wholeCells","partCell","trace_x_ascending","ignores","day_ind","transition","trace_index_transition","xLeft","xRight","task_height","offset","task_height_offset","getRowTop","task_id","Layout","_this","$root","_parseConfig","$cells","_resizeScrollbars","scrollbars","scrollbar","scrollChanged","visibleScrollbars","hiddenSrollbars","showScrollbar","hideScrollbar","shouldHide","shouldShow","visibleGroups","group","_syncCellSizes","groupName","newSize","groups","_eachChild","_syncGroupSize","_xLayout","ownSize","resizeSibling","siblingSize","totalGravity","totalSize","k","mainGrid","$content","startStage","mainCall","_resizeInProgress","contentViews","getCellsByType","setContentSize","_getAutosizeMode","isChild","cellId","sub","alert","insertBefore","rows","views","initUI","getCells","cellSize","_cleanElSize","toString","_getBoxStyles","computed","properties","boxSizing","clientHeight","MozBoxSizing","horPaddings","paddingLeft","paddingRight","borderLeftWidth","borderRightWidth","vertPaddings","paddingTop","paddingBottom","borderTopWidth","borderBottomWidth","borderBox","innerHeight","outerHeight","boxSizes","contentSizes","_sizes","margin","_calcFreeSpace","_free","_gravity","_calcSize","_configureBorders","borderClass","lastVisibleIndex","lastCell","borderColorClass","_updateCellVisibility","oldVisibleCells","_visibleCells","firstCall","visibleCells","cellView","marginSide","dx","dy","createScope","attach","extend","updPerSecond","_on_timeout","timeout","ceil","setTimeout","_eventRemoveAll","$layout","resetLightbox","_dp","check","message","show_errors","expire","calculateScaleRange","resizeDelay","scroll_size","clearTimeout","_reinit","_update_flags","initTemplates","_clearTaskLayers","_clearLinkLayers","reset","layout","createView","storeNames","refreshData","$mouseEvents","$click","buttons","edit","showLightbox","delete","question","title","confirm_deleting_title","_dhtmlx_confirm","$new","deleteTask","hideLightbox","posX","_getHorizontalScrollbar","codeScrollLeft","visible_date","task_scroll_offset","preserve_scroll","new_pos","showDate","setSizes","locate","targetAttribute","task_attribute","_locate_css","_locateHTML","getTaskRowNode","changeLightboxType","getLightboxType","_silent_redraw_lightbox","_get_link_type","start_to_finish","_correct_dst_change","prevOffset","time_unit","offsetChanged","getTimezoneOffset","_is_icon_open_click","getTaskDND","_tasks_dnd","touch_feedback","touch_feedback_duration","_prevent_touch_scroll","_touch_feedback","vibrate","touchEventsSupported","createEvent","_touch_events","touches","pointerEnabled","pointerType","msPointerEnabled","MSPOINTER_TYPE_MOUSE","touchHandlers","names","accessor","scroll_state","dblclicktime","action_mode","scroll_mode","action_start","long_tap_timer","current_target","start_drag","on_mouse_move","preventDefault","cancelBubble","abs","_touch_scroll_active","new_scroll_state","block_action","on_mouse_down","renders","_getTaskLayers","isTaskVisible","cloneNode","cloneTaskRendered","_start_dnd","_touch_drag","refreshTask","on_mouse_up","now","onDoubleClick","skins","link_arrow_size","lightbox_additional_height","_second_column_width","_third_column_width","material","_redefine_lightbox_buttons","buttons_left","buttons_right","getTaskNode","indx","broadway","_lightbox_template","_config_buttons_left","_config_buttons_right","gantt_delete_btn","gantt_save_btn","terrace","meadow","skyblue","_get_skin","skin","getElementsByTagName","href","match","skinset","_configure","resetSkin","activate","_cached_functions","update_if_changed","active","cache","critical_path_mode","wrap_methods","methods","_prefetch_originals","prefetch","methodname","original","optimizer","argumentsArray","args","get_arguments_hash","cached_values","has_cached_value","get_cached_value","cache_value","arguments_hash","is_date","getUTCDate","values","stringify_argument","deactivate","setup","override_gantt","gantt_methods","optimize_render","deactivTimeout","TypeselectControl","oldOnChange","lightbox","checkType","form_blocks","typeselect","_extend_to_optional","lightbox_block","optional_time","section","_resolve_default_mapping","disable","enable","disabled","update_block","_lightbox_id","previousSibling","button_text","resizeLightbox","button_click","_get_typed_lightbox_config","duration_optional","time_optional","time","ParentControl","_display","item_id","getTaskByTime","allow_root","unshift","root_id","root_label","_filter","tmpDom","newOptions","onselect","replaceChild","DurationControl","_getStartDate","_time_format_order","_getDuration","getTimePicker","singleDate","single_date","readonly","lightboxDurationInputAttrString","duration_val","inps","btns","endspan","_calc_date","task_date","_change_duration","onclick","onkeydown","charCode","keyCode","which","constants","KEY_CODES","DOWN","UP","calculateDuration","_fill_lightbox_select","startDate","endDate","RadioControl","radio","default_value","checked","CheckboxControl","checkboxes","entry","TimeControl","auto_end_date","_update_lightbox_select","selects","needSetTime","_getDate","mapOffset","_get_timepicker_step","_getEndDate","TextareaControl","_get_input","TemplateControl","getHtmlButtons","floatRight","_migrate_buttons","lightboxButtonAttrString","getHtmlTimePickerOptions","settings","start_year","end_year","tdate","timeFormat","year_range","first","_time_values","time_picker","setTime","getHours","getMinutes","_lightbox_methods","registerProvider","getLightbox","_center_lightbox","showCover","_fill_lightbox","lightboxVisibleAttr","round_dnd_dates","timeline","_is_chart_visible","time_step","getLabel","sections","j","updateCollection","list_name","collection","serverList","_lightbox_type","lightboxDiv","fullWidth","classNames","_lightbox","_is_lightbox_timepicker","wide_form","lightboxAttr","drag_lightbox","onmousedown","_ready_to_dnd","onselectstart","cursor","_init_dnd_events","_render_sections","labelBlock","inputBlock","nextSibling","inputId","bindLabelsToInputs","_init_lightbox_events","block","con","scroll_top","scroll_left","view_height","_cover","_document_height","_scroll_height","lightbox_events","_save_lightbox","gantt_cancel_btn","_cancel_lightbox","src","sec","buttonTarget","SPACE","shiftKey","click","keys","edit_save","edit_cancel","getLightboxValues","addTask","updateTask","lightboxHiddenAttr","hideCover","_custom_lightbox","_set_lightbox_values","lightboxHeader","lightbox_header","task_time","substr","getLightboxSection","get_template_control","control","get_select_control","get_textarea_control","get_time_control","_move_while_dnd","_finish_dnd","_dnd_start_lb","gantt_unselectable","lb","_lb_start","ariaAttrs","date_part","time_format","getTimeFormat","limit_time_select","first_hour","last_hour","setHours","lightboxSelectAttrString","checkbox","ok","opts","confirm","type_value","oldType","formData","updTask","isUnscheduledTask","unscheduled","show_unscheduled","taskStart","taskEnd","getGlobalTaskIndex","_defaultTaskDate","parent_id","getTaskByIndex","_set_default_task_timing","createTask","details_on_create","selectTask","showTask","oldid","newid","unselect","getSelectedId","_get_task_timing_mode","task_type","$no_start","$no_end","$rendered_type","_init_task_timing","task_mode","dirty","resetProjectDates","taskMode","dates","_assign_project_dates","getSubtaskDuration","taskTiming","_update_parents","has_changed","oldStart","oldEnd","roundDate","upper","lower","colIndex","steps","tzOffset","correctTaskWorkTime","work_time","correct_work_time","isWorkTime","getClosestWorkTime","calendarManager","timeCalculator","getWorkHours","setWorkTime","unsetWorkTime","_hasDuration","hasDuration","createCalendar","addCalendar","getCalendar","getCalendars","getTaskCalendar","deleteCalendar","CalendarDisabledTimeStrategy","argumentsHelper","_calculateDuration","fixedUnits","createArgumentsHelper","NoWorkTimeCalendar","TimeCalculator","$disabledCalendar","_getCalendar","manager","WorkUnitsCache","_cache","getTime","put","Cache","CalendarWorkTimeStrategy","_workingUnitsCache","_getUnitOrder","_timestamp","timestamp","UTC","_checkIfWorkingUnit","_isWorkTime","_is_work_day","_getWorkHours","_is_work_hour","_internDatesPull","_nextDate","_getWorkUnitsBetweenGeneric","stepStart","stepEnd","next","checkFirst","checkLast","isLastStep","_getHoursPerDay","_getWorkHoursForRange","_getWorkUnitsBetweenHours","firstDayStart","firstDayEnd","day_start","lastDayStart","lastDayEnd","startPart","endPart","hourRange","worktime","_setCalendar","_tryChangeCalendarSettings","payload","backup","JSON","stringify","_isEmptyCalendar","datesArray","isFullWeekSet","checkFullArray","getDay","reset_calendar","is_work_unit","mult","_calculateEndDate","added","_getClosestWorkTime","curr","future_target","prev_target","tick","both_directins","inc","unitOrder","biggerTimeUnit","biggerTimeUnitSettings","CalendarWorktimeStrategy","CalendarManager","_calendars","_getDayHoursForMultiple","calendars","currPos","reduce","acc","mergeCalendars","newCalendar","_convertWorktimeSettings","parentCalendar","defaults","fulltime","apiCore","createDefaultCalendars","calendar_property","resource_calendars","resource","calendarId","worktimes","restoreConfigCalendars","configs","global","worktimeFacadeFactory","facade","load","url","_load_url","cl","_load_type","ajax","on_load","xmlDoc","responseText","resp","_process_loading","collections","_load_collections","linksStore","initial_scroll","firstTask","collections_loaded","option","option_key","$ignore","json","dhx_security","security_key","serializeTask","_copyObject","serializeLink","_copyLink","xml_format","rawLinks","getLinks","xml","_xmlNodeToJSON","attrs_only","attributes","nodeType","nodeValue","_getCollections","loader","xpath","itms","attrs","_getXML","toptag","getXMLTopNode","xmltop","skey","evs","oldxml","startdate","est","enddate","predecessortasks","editable_property","readonly_property","htmlTags","extraSpaces","stripHTMLLite","htmlText","singleQuotes","escapeQuotes","getAttributeString","dateString","aria-label","_taskCommonAttr","tooltip_text","$dataprocessor_class","isSelectedTask","drag_move","taskRowAttr","order_branch","linkAttr","linkTypes","toStart","fromStart","drag_link","gridSeparatorAttr","buttonName","role","tabindex","headerText","time_option","aria-valuemin","multiselect","gridCellAttrString","textValue","gridAddButtonAttrString","messageButtonAttrString","buttonLabel","messageInfoAttr","messageModalAttr","quickInfoAttr","quickInfoHeaderAttrString","quickInfoHeader","quickInfoButtonAttrString","tooltipAttr","tooltipVisibleAttr","tooltipHiddenAttr","wai_aria_attributes","getGridColumn","visibleColumns","old_has_children","branch_loading_property","branch_loading","getUserData","needLoading","encodeURIComponent","setUserData","callIfEnabled","auto_types","updateParents","batchUpdate","checkParent","setTaskType","delTaskParent","originalRowDndParent","originalMoveTaskParent","allTypes","targetType","updateAfterRemoveChild","placeholder_task","silenceDataProcessor","dataProcessor","_silencedPlaceholder","setUpdated","insertPlaceholder","placeholders","getTaskBy","afterEdit","newTask","createResourceMethods","resourceTaskCache","propertyName","propertyValue","filterResourceTasks","getResourceTasks","resourceIds","cacheKey","resourceHash","getResourceLoad","resourceId","resourceProperty","timegrid","currDate","timetable","resource_render_empty_cells","calculateResourceLoad","renderLine","resource_property","resource_cell_class","resource_cell_value","sizes","filterTasks","resourceRow","resource_store","dhtmlx","attaches","attachGantt","cmp","attachObject","dataType","dataObj","that","vs","av","border","gridId","gridObj","dhtmlXCellObject","jQuery","$","fn","dhx_gantt","each","newgantt","Gantt","getGanttInstance","error","wbs","_needRecalc","_isRecalcNeeded","_isGroupSort","_groups","is_active","_getWBSCode","_calcWBS","$virtual","$wbs","_setWBSCode","getWBSCode","getByWBSCode","parts","currentNode","_isFirst","_prevSibling","_wbs","_parent","createWbs","getTaskByWBSCode","createMethod","isActive","disableMethod","methodName","dummyMethod","restoreMethod","restoreMethods","batchUpdatePayload","noRedraw","dp_mode","call_dp","updateMode","setUpdateMode","resetProjects","refreshLink","methodsHash","setGanttMode","sendData","scrollRange","scrollStep","scrollDelay","scrollSpeed","interval","isMove","delayTimeout","startPos","started","eventPos","getAutoscrollContainer","isScrollState","dragMarker","isResize","isLink","defineDelayTimeout","speed","autoscroll_speed","setInterval","autoscroll_delay","defineScrollInterval","clearInterval","autoscrollInterval","isScroll","autoscroll","posY","need_scroll","scrollState","currentScrollTop","scrollOuterHeight","inner_height","scrollInnerHeight","currentScrollLeft","scrollOuterWidth","inner_width","scrollInnerWidth","autoscroll_step","boxSize","startCoord","serverProcessorURL","serverProcessor","action_param","updatedRows","autoUpdate","_tMode","_headers","_payload","post_delim","_waitMode","_in_progress","_invalid","mandatoryFields","messages","updated","inserted","deleted","invalid","invalid_cell","enableUTFencoding","setTransactionMode","total","headers","_tSend","_endnm","escape","_utf","setDataColumns","_columns","getSyncState","enableDataNames","enablePartialDataSend","_changed","dnd","rowId","findRow","existing","set_invalid","is_invalid","_clearUpdateFlag","markRow","_methods","details","checkBeforeUpdate","mytype","_h2","editStop","sendAllData","_beforeSendData","_getRowData","_sendData","serialize_one","stack","pref","_applyPayload","urlSeparator","a1","back","ids","afterUpdate","a3","_user","a4","query","method","action","gr_id","valid","_getAllData","has_one","setVerificator","verifFunction","clearVerificator","pattern","defineAction","_uActions","afterUpdateCallback","tid","btag","marker","correct","soid","tag","finalizeUpdate","cleanUpdate","atag","anObj","_dp_init","setOnAfterUpdate","enableDebug","setOnBeforeUpdateHandler","func","setAutoUpdate","user","_need_update","_update_busy","xml_node","afterAutoUpdate","fullSync","loadUpdate","getUpdates","_v","_a","version","vers","upds","status","insertCallback","upd","isExist","addLink","deleteCallback","deleteLink","dataprocessor","liveUpdateHooks","oldAfterUpdate","dataProcessorHandlers","dp","_serverProcessor","modes","_ganttMode","newState","reqUrl","filePath","_change_id","changeLinkId","changeTaskId","_row_style","row_id","_delete_task","_sendTaskOrder","$drop_target","clientSideDelete","clientOnly","treeHelper","cascadeDelete","cascade_delete","dpMode","cascade","itemLinks","getTaskLinks","updateLink","substring","detachDataProcessor","userdata","bindDataStore","itemRepainter","getLayers","render_item","renderers","render_items","skipRepaint","change_id","refreshId","selectedId","deleteItem","getLinkCount","getTaskCount","getVisibleTaskCount","getTaskIndex","startTask","calculateTaskLevel","moveTask","createTasksFacade","createLinksFacade","createDatastoreSelect","datastoreRender","getDatastores","createDatastoreFacade","createDatastore","$StoreType","open_tree_initially","setService","storeList","stores","refresh_links","linkId","_clear_data","unselectTask","facadeFactory","parseDate","checkLinkedTaskVisibility","sync_link","sourceTask","targetTask","sync_link_delete","sync_links","mapEvents","conf","mapFrom","mapTo","sourceEvent","targetEvent","$index","oldState","sourceVisible","targetVisible","deletedLinks","onItemLoading","onBeforeAdd","onAfterAdd","onBeforeUpdate","onAfterUpdate","onBeforeDelete","onAfterDelete","onIdChange","onBeforeItemMove","onAfterItemMove","onFilterItem","onItemOpen","onItemClose","onBeforeSelect","onAfterSelect","onAfterUnselect","getTimeline","getGrid","getVerticalScrollbar","getHorizontalScrollbar","DEFAULT_VALUE","tryCall","fallback","getTaskTop","getTaskPosition","getTaskHeight","roundTaskDates","getLinkNode","oldH","oldV","newV","newH","date_x","scroll_to","_scroll_state","x_pos","y_pos","x_inner","y_inner","scrollVer","scrollHor","horState","visible","verState","initializer","_legacyGridResizerClass","resizers","gridResizer","onCreated","mainTimeline","show_chart","showGrid","show_grid","colsWidth","grid_limits","original_grid_width","skinSettings","_getVerticalScrollbar","oldPos","newPos","$scroll_ver","$scroll_hor","_findGridResizer","gridFirst","_getSiblings","_behind","_front","onInitialized","resizeInfo","initialWidth","prevCellWidth","nextCellWidth","viewCell","limits","newBehindSize","newFrontSize","oldBackSize","oldFrontSize","newBackSize","oldSize","onDestroyed","initLinksDND","_link_landing","_link_target_task","_link_target_task_start","_link_source_task","_link_source_task_start","getDndState","services","DnD","sensitivity","updates_per_second","getLinePos","shift","isStart","taskPos","xEnd","yEnd","milestoneWidth","origWidth","sqrt","getVisibleMilestoneWidth","getMilestonePosition","isMilestone","updateMarkedHtml","drag_link_class","resetDndState","coordinateCircleQuarter","sX","eX","sY","eY","_dir_start","dd","getPosition","advanceMarker","landing","prevTarget","prevLanding","prevToStart","targ","_dir_end","targetChanged","s_x","s_y","e_x","e_y","_direction","getDirectionLine","link_direction_class","dist","pow","tan","angle","atan","PI","sin","cos","ieTransform","shiftLeft","shiftTop","showDirectingLine","createLinkDND","createTaskDND","round_task_dates","dragMultiple","_events","before_start","before_finish","after_finish","_handlers","_domEvents","clear_drag_state","set_actions","drag_from_start","stage","_move","_resize","_resize_progress","start_x","start_y","coords_x","_drag_task_coords","min_duration","diffValue","_find_max_shift","dragItems","correctShift","minX","maxX","maxShift","minShift","new_start","new_end","obj_s_x","obj_e_x","_mouse_position_change","_is_number","isFinite","_update_on_move","_update_item_on_move","curr_date","drag_project","initialDrag","childDrag","_get_drag_mode","_fix_dnd_scale_time","fixStart","fixEnd","_fix_working_times","_finalize_mouse_up","_fireEvent","_dhx_changed","dragProperty","params","trigger","drag_state","taskDnD","linkDnD","_linksDnD","_tasksDnD","_attachDomEvents","_attachStateProvider","extendDom","_clearDomEvents","_clearStateProvider","_delete_link_handler","link_description","coll","coll_date","scale_step","unregisterProvider","dnd_sensitivity","hideQuickInfo","_hideQuickInfo","getStore","initial_open_state","outerHTML","$transparent","lastTaskOfLevel","last_item","_getGridPos","gridHeight","_getTargetY","_getTaskByY","dropIndex","targetY","allowedLevel","over","order_branch_free","nextId","prevId","rowDnd","extendGantt","ext","inlineEditors","_inlineEditors","initEvents","clearEvents","scroll_on_click","sorting_method","callHandler","totalWidth","aria","date_grid","tree","grid_indent","grid_open","grid_folder","grid_blank","grid_file","align","grid_row_class","css_template","drawer","current_pos","dirs","up","down","path","point","get_lines","dots","line_to","get_path","line","_get_line","get_wrapper_sizes","wrapper_size","link_wrapper_width","get_line_sizes","line_size","marginTop","marginLeft","render_line","innerPos","get_direction","vect","path_builder","current","point_to","get_points","pt","get_endpoint","xy","shiftX","lineType","get_line_type","forward","sign","milestoneHeight","lines","cssTemplate","link_class","isCriticalLink","endpoint","line_width","_render_link_arrow","borderColor","show_task_cells","task_cell_class","odd","task_row_class","defaultRender","sub_tasks","resourceStoreMixin","ResourceTimeline","ResourceGrid","PredecessorEditor","parseInputString","predecessors","delimiter","formatPredecessors","pred","getLinksDiff","predecessorCodes","selectedLinks","lag","getSelectedLinks","existingLinksSearch","linksToAdd","linkKey","linksToDelete","remove","linksDiff","autoSchedule","inputPredecessors","taskPredecessors","html5DateFormat","dateToStr","strToDate","DateEditor","str_to_date","parsed","SelectEditor","optionsHtml","NumberEditor","TextEditor","onBlurDelay","keyNav","keyboardNavigation","activeCell","command","hasEditor","keyboard","preventKeyNav","ENTER","ctrlKey","metaKey","ESC","LEFT","RIGHT","DELETE","TAB","destroy","keyboard_navigation","defaultPrevented","shouldPrevent","defaultMapping","keyNavMappings","setMapping","keyboard_navigation_cells","_grid_resize","column_before_start","grid_resizer_column_attribute","column_index","column_after_start","drag_index","column_drag_move","target_column","pointerPosition","minPointerPosition","maxPointerPosition","markerStartPosition","marker_width","keep_grid_width","limit_max","targetWidth","rightColumnsWidth","column_drag_end","resize_el","createStaticBgHelper","canvasBgCache","staticBgStyleId","parseRgb","rgbCss","exec","g","getUrlFromCache","getHashKey","cellStyles","bottomBorderColor","rightBorderColor","cacheUrl","generateBgUrl","canvas","context","getContext","rowHeight","image","createImageData","imageSmoothingEnabled","verticalLineWidth","rightBorderWidth","verticalLineColor","w","drawDot","horizontalLineWidth","bottomBorderWidth","horizontalLineColor","putImageData","drawGrid","toDataURL","matrix","getCssClass","targetNode","totalHeight","bgDivs","bgTiles","tile","prevCell","divs","prevWidth","widths","leftPos","maxTileSize","appVersion","currentTop","tileWidth","currentHeight","whiteSpace","createBgDivs","differentWidths","getColumnWidths","styleHTML","cachedUrl","bgImage","getStyleElement","createBackgroundTiles","rowStyles","getPropertyValue","getCellStyles","fragment","createDocumentFragment","getSum","setSumWidth","sum_width","adjustSize","splitSize","full","initTemplate","date_scale","min_coll_width","container_width","minDate","maxDate","heights","main_scale","initScaleConfig","initColSizes","limitVisibleRange","alineScaleColumns","reverseScale","setPosSettings","indexes","trace_indexes","skip","probe","min_col_width","line_height","cont_width","column_count","eachColumn","iterateScales","lower_scale","upper_scale","upper_dates","lower_dates","prevUpper","target_index","upper_start","upper_end","lower_start","lower_end","lastDate","outDate","shared","ScrollbarCell","_scrollHorizontalHandler","_scrollVerticalHandler","_outerScrollVerticalHandler","_outerScrollHorizontalHandler","_mouseWheelHandler","_isHorizontal","scrollPosition","_isVertical","_initVertical","_initHorizontal","_initMouseWheel","_initLinkedViews","_getRootParent","_eachView","eachCell","_getLinkedViews","scrollX","_updateLinkedViews","scrollHorizontally","_scrolling","scrollVertically","_wheel_time","_oldLeft","_getScrollSize","outerSize","isHorizontal","linked","scrollProperty","innerSizeProperty","outerProperty","_getScrollOffset","cellScrollSize","nonScrollableSize","outerScroll","innerScroll","scrollSizes","_setScrollSize","toggleVisibility","_getScaleOffset","parentLayout","_oldTop","_checkWheelTarget","connectedViews","ff","wx","deltaX","wheelDeltaX","wy","deltaY","wheelDelta","oldLeft","detail","oldTop","ResizerCell","startBackSize","startFrontSize","_moveHandler","_moveResizer","_resizer","_upHandler","newSizes","_getNewSizes","front","_setSizes","_setBackground","_clearResizer","_clearListeneres","_startOnMove","_cancelDND","_callStartDNDEvent","_xMode","_startDND","stop","_eachGroupItem","_isPosChanged","_downHandler","_setResizer","_positions","classes","overflow","_getDirection","_getResizePosition","behindSide","behindMin","frontSide","frontMin","newBehindSide","newFrontSide","_getGroupName","_getGroupResizePosition","minMax","positions","nextX","nextY","_setGravity","frontSize","behindSize","newFrontG","newBehindG","_assignNewSizes","ViewCell","childConfig","$initialized","unload","outerX","outerY","childSize","ViewLayout","$cell","byMaxSize","otherCell","task_area_pulls","task_area_renderers","getRenderer","layer_attribute","dom","remove_item","clear_container","buffer","vis","replace_item","newNode","restore","clearRenderers","renderFactoryProvider","mergeFilters","filter_methods","filter_method","renderFactory","createGroup","get_container","rel_root","defaultFilters","renderGroup","tempCollection","filters","_add","pending","topmost","rel","eachLayer","createLayerFactory","previusSiblingContainer","defaultContainerSibling","addTaskLayer","removeTaskLayer","addLinkLayer","_getLinkLayers","removeLinkLayer","createMouseHandler","eventHandlers","doubleclick","contextMenu","addEventTarget","onClick","findEventHandlers","callEventHandlers","onContextMenu","returnValue","hash","delegateHandlers","handlerResult","details_on_dblclick","onMouseMove","_last_move_event","domEvents","eventName","elementHandlers","ViewSettings","extendSettings","parentSettings","own","parentView","parentConfig","parentTemplates","configurable","createFactory","createdViews","creator","configure","registerView","viewConstructor","uiFactory","createLayers","Resizer","Scrollbar","gridEditorsFactory","renderTaskBar","renderSplitTaskBar","renderTaskBg","renderLink","gridRenderer","mainGridInitializer","mainTimelineInitializer","mainLayoutInitializer","attachInitializer","layersEngine","layersApi","layersService","boxAttribute","_dhx_msg_cfg","usercall","modalBox","modal_key","messageBox","modality","cover","buttonAriaAttrs","getFirstDefined","_createBox","cancel","contentId","btn","_boxStructure","alertPopup","confirmPopup","boxPopup","box_params","focusable","timers","info","hideAll","popups","modalbox","stateProviders","internal","provider","regTemplates","initial","template_name","xml_date","server_utc","api_date","task_unscheduled_time","grid_date_format","tooltip_date_format","copyDomEvent","altKey","_obj","_settings","inputMethods","getInputMethods","_drag_start_timer","clearDragTimer","original_target","dragStart","traceDragEvents","domElement","inputMethod","mousemove","dragMove","limited_mousemove","dragScroll","mouseup","dragEnd","checkPositionChange","diff_x","diff_y","initDnDMarker","backupEventTarget","domEvent","getEvent","backup_element","elementFromPoint","month_short_hash","month_full_hash","old","hour_start","time_part","week_start","start_on_monday","month_start","setDate","quarter_start","res_month","setMonth","year_start","setMinutes","minute_start","getSeconds","setSeconds","getMilliseconds","setMilliseconds","_add_days","ndate","setYear","add_quarter","to_fixed","num","format","utc","Function","getISOWeek","getWeek","splt","mask","_getWeekNumber","isoWeek","nday","first_thursday","year_number","ordinal_date","getUTCISOWeek","convert_to_utc","getUTCFullYear","getUTCMonth","getUTCHours","getUTCMinutes","getUTCSeconds","DOMParser","parseFromString","ActiveXObject","async","loadXML","tagname","xhr","responseXML","xpathExp","docObj","selectNodes","ownerDocument","evaluate","XPathResult","ANY_TYPE","iterateNext","_call","onLoad","getSync","postData","del","post","postSync","getLong","postLong","longParams","isQt","onreadystatechange","readyState","setRequestHeader","toUpperCase","send","show_loading","dhx_save_btn","dhx_cancel_btn","dhx_delete_btn","project_sections","milestone_sections","grid_resizer_attribute","grid_resize","prevent_default_scroll","service","$inject","templatesLoader","stateService","uiApi","createLayoutFacade","deprecated","badCode","goodCode","formatting","warn","wrapDeprecated","dhtmlxMethods","dynMethods","warnings","base"],"mappings":";;;;;;;;eACA,IAAAA,KAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,IACAG,EAAAH,EACAI,GAAA,EACAH,YAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,IAAAD,QAAAF,GAGAG,EAAAE,GAAA,EAGAF,EAAAD,QAKAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,GAA0CK,YAAA,EAAAC,IAAAL,KAK1CZ,EAAAkB,EAAA,SAAAhB,GACA,oBAAAiB,eAAAC,aACAN,OAAAC,eAAAb,EAAAiB,OAAAC,aAAwDC,MAAA,WAExDP,OAAAC,eAAAb,EAAA,cAAiDmB,OAAA,KAQjDrB,EAAAsB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAArB,EAAAqB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFA1B,EAAAkB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAArB,EAAAU,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAzB,EAAA6B,EAAA,SAAA1B,GACA,IAAAS,EAAAT,KAAAqB,WACA,WAA2B,OAAArB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD/B,EAAAkC,EAAA,aAIAlC,IAAAmC,EAAA,uBClFA,IAmCAC,EAnCAC,EAAArC,EAAA,GAqEAG,EAAAD,SACAoC,KApEA,SAAAA,EAAAR,GACA,IAAA1B,EAAAkB,EAAAiB,EAEA,GAAAT,GAAA,iBAAAA,EAAA,CAGA,IAFAS,KACAjB,GAAAkB,MAAAC,OAAAC,OAAAC,SACAvC,EAAA,EAAWA,EAAAkB,EAAAsB,OAAYxC,IACvB0B,aAAAR,EAAAlB,KACAmC,EAAAnC,EAAA,IAAAkB,EAAAlB,GAAA0B,GAAA,IAAAR,EAAAlB,IAOA,IAAAA,KAJAiC,EAAAQ,OAAAf,KACAS,EAAA,IAAAO,KAAAhB,IAGAA,EACAhB,OAAAkB,UAAAC,eAAAc,MAAAjB,GAAA1B,MACAmC,EAAAnC,GAAAkC,EAAAR,EAAA1B,KAGA,OAAAmC,GAAAT,GAiDAkB,QAxCA,SAAAC,GACA,mBAwCAC,MA/CA,SAAAC,EAAAC,EAAAC,GACA,QAAAC,KAAAF,QACAG,IAAAJ,EAAAG,IAAAD,KAAAF,EAAAG,GAAAF,EAAAE,IACA,OAAAH,GA6CAK,IArCA,WAKA,OAJApB,IACAA,GAAA,IAAAU,MAAAW,aAEArB,GAkCAR,KA7BA,SAAA8B,EAAA5B,GACA,OAAA4B,EAAA9B,KACA8B,EAAA9B,KAAAE,GAEA,WAAoB,OAAA4B,EAAAX,MAAAjB,EAAA6B,aA0BpBC,MAvBA,SAAAC,EAAAD,EAAAE,EAAAC,GACAF,EAAAG,iBACAH,EAAAG,iBAAAJ,EAAAE,OAAAP,IAAAQ,MAEAF,EAAAI,aACAJ,EAAAI,YAAA,KAAAL,EAAAE,IAmBAI,YAhBA,SAAAL,EAAAD,EAAAE,EAAAC,GACAF,EAAAM,oBACAN,EAAAM,oBAAAP,EAAAE,OAAAP,IAAAQ,MAEAF,EAAAO,aACAP,EAAAO,YAAA,KAAAR,EAAAE,oBChEA,SAAAO,EAAAC,GACA,IAAAC,EAAA,EAAAC,EAAA,EAAAC,EAAA,EAAAC,EAAA,EACA,GAAAJ,EAAAK,sBAAA,CACA,IAAAC,EAAAN,EAAAK,wBACAE,EAAAC,SAAAD,KACAE,EAAAD,SAAAE,iBACAF,SAAAD,KAAAI,YACAH,SAAAD,KAEAK,EAAAC,OAAAC,aAAAL,EAAAG,WAAAL,EAAAK,UACAG,EAAAF,OAAAG,aAAAP,EAAAM,YAAAR,EAAAQ,WACAE,EAAAR,EAAAQ,WAAAV,EAAAU,WAAA,EACAC,EAAAT,EAAAS,YAAAX,EAAAW,YAAA,EACAjB,EAAAK,EAAAL,IAAAW,EAAAK,EACAf,EAAAI,EAAAJ,KAAAa,EAAAG,EAEAf,EAAAK,SAAAD,KAAAY,YAAAb,EAAAH,MACAC,EAAAI,SAAAD,KAAAa,aAAAd,EAAAF,WACE,CACF,KAAAJ,GACAC,GAAAoB,SAAArB,EAAAsB,UAAA,IACApB,GAAAmB,SAAArB,EAAAuB,WAAA,IACAvB,IAAAwB,aAGArB,EAAAK,SAAAD,KAAAY,YAAAnB,EAAAmB,YAAAjB,EACAE,EAAAI,SAAAD,KAAAa,aAAApB,EAAAoB,aAAAnB,EAEA,OAASwB,EAAAC,KAAAC,MAAA1B,GAAA2B,EAAAF,KAAAC,MAAAzB,GAAA2B,MAAA7B,EAAAmB,YAAAW,OAAA9B,EAAAoB,aAAAjB,MAAAuB,KAAAC,MAAAxB,GAAAC,OAAAsB,KAAAC,MAAAvB,IAGT,SAAA2B,EAAAC,GACA,IAAAC,GAAA,EACAC,GAAA,EACA,GAAArB,OAAAsB,iBAAA,CACA,IAAAC,EAAAvB,OAAAsB,iBAAAH,EAAA,MACAC,EAAAG,EAAA,QACAF,EAAAE,EAAA,gBACEJ,EAAAK,eACFJ,EAAAD,EAAAK,aAAA,QACAH,EAAAF,EAAAK,aAAA,YAEA,cAAAJ,GAAA,UAAAC,EAGA,SAAAI,EAAAN,GACA,OAAAO,MAAAP,EAAAQ,aAAA,gBAAAR,EAAAQ,aAAA,eAGA,SAAAC,EAAAT,GAEA,QADoBU,GAAA,EAAAC,MAAA,GACpBX,EAAAY,SAAAC,kBACAb,EAAAQ,aAAA,QAKA,SAAAM,EAAAd,GAEA,QADmBe,OAAA,EAAAC,QAAA,EAAAC,UAAA,EAAAC,QAAA,EAAA1F,QAAA,GACnBwE,EAAAY,SAAAO,iBACAnB,EAAAoB,aAAA,YA4CA,SAAAC,EAAArB,GACA,IAAAA,EAAA,SAEA,IAAAsB,EAAAtB,EAAAsB,WAAA,GAOA,OANAA,EAAAC,UACAD,IAAAC,SAEAD,EAAAE,UACAF,EAAA,IAEAG,EAAAH,GAwBA,IAAAI,EAAAlD,SAAAmD,cAAA,OA2BA,SAAAC,EAAAC,GAQA,OANAA,EAAAC,QACAD,GAEAA,KAAAhD,OAAAvB,OACAT,QAAAgF,EAAAE,WAoBA,SAAAN,EAAAO,GAEA,OADA5F,OAAAV,UAAAuG,MAAA,WAAgD,OAAAC,KAAAC,QAAA,mBAChD1F,MAAAuF,GAiEAnI,EAAAD,SACAwI,gBAAArE,EACAsE,kBAlMA,SAAAC,GAgBA,IAfA,IAAAC,EAAAD,EAAAE,kBACA,UACA,aACA,QACA,SACA,WACA,SACA,SACA,SACA,QACA,aACA,qBACAC,KAAA,OAEAC,EAAAxG,MAAAR,UAAAiH,MAAA1I,KAAAsI,EAAA,GACAzI,EAAA,EAAeA,EAAA4I,EAAApG,OAAuBxC,IAAA,CACtC,IAAAkG,EAAA0C,EAAA5I,IACAwG,EAAAN,IAAAc,EAAAd,IAAAS,EAAAT,KAAAD,EAAAC,KAEA0C,EAAAE,OAAA9I,EAAA,GACAA,KAGA,OAAA4I,GA2KAG,cAxKA,WACA,IAAAC,EAAAtE,SAAAmD,cAAA,OACAmB,EAAA1C,MAAA2C,QAAA,uIAEAvE,SAAAD,KAAAyE,YAAAF,GACA,IAAAjD,EAAAiD,EAAA3D,YAAA2D,EAAAG,YAGA,OAFAzE,SAAAD,KAAA2E,YAAAJ,GAEAjD,GAiKAwB,eACA8B,aAlJA,SAAAnD,EAAAsB,GACAA,IAAA,IAAAtB,EAAAsB,UAAAE,QAAAF,KACAtB,EAAAsB,WAAA,IAAAA,IAiJA8B,gBA7IA,SAAApD,EAAA3F,GACAA,IAAAgJ,MAAA,KACA,QAAAvJ,EAAA,EAAgBA,EAAAO,EAAAiC,OAAiBxC,IAAA,CACjC,IAAAwJ,EAAA,IAAAC,OAAA,UAAAlJ,EAAAP,GAAA,mBACAkG,EAAAsB,UAAAtB,EAAAsB,UAAAa,QAAAmB,EAAA,MA0IAE,WA9HA,SAAAxD,EAAAyD,GACA/B,EAAAgC,UAAAD,EACA,IAAAE,EAAAjC,EAAAkC,WAEA,OADA5D,EAAAgD,YAAAW,GACAA,GA2HAE,WAxHA,SAAA7D,GACAA,KAAArB,YACAqB,EAAArB,WAAAuE,YAAAlD,IAuHA8D,cAnHA,SAAA9D,EAAA+D,GAIA,IAHA,IAAAC,EAAAhE,EAAAiE,WACAC,EAAAF,EAAA1H,OACA6H,KACArK,EAAA,EAAgBA,EAAAoK,EAASpK,IAAA,CACzB,IAAA6C,EAAAqH,EAAAlK,GACA6C,EAAA2E,YAAA,IAAA3E,EAAA2E,UAAAE,QAAAuC,IACAI,EAAAC,KAAAzH,GAGA,OAAAwH,GA0GAE,OAzIA,SAAArE,GACA,uBAAAA,EACAxB,SAAA8F,eAAAtE,IAAAxB,SAAA+F,cAAAvE,IAAAxB,SAAAD,KAEAyB,GAAAxB,SAAAD,MAsIAiG,gBAzEA,SAAA3C,EAAA4C,EAAAC,QACAzH,IAAAyH,IACAA,GAAA,GAKA,IAHA,IAAAC,EAAA/C,EAAAC,GACAkC,EAAA,GAEAY,GAAA,CAGA,GAFAZ,EAAA1C,EAAAsD,GAEA,CACA,IAAAC,EAAAb,EAAAvC,QAAAiD,GACA,GAAAG,GAAA,GACA,IAAAF,EACA,OAAAC,EAGA,IAAAzG,EAAA,IAAA0G,IAAAnD,EAAAsC,EAAAc,OAAAD,EAAA,IACAzG,EAAAyG,EAAAH,EAAAnI,QAAAyH,EAAAzH,SAAAmF,EAAAsC,EAAAc,OAAAD,EAAAH,EAAAnI,SAEA,GAAA4B,GAAAC,EACA,OAAAwG,GAIAA,IAAAhG,WAEA,aA+CAmG,gBA9FA,SAAAjD,EAAAkD,GACA,GAAAA,EAAA,CAIA,IAFA,IAAAJ,EAAA/C,EAAAC,GAEA8C,GAAA,CACA,GAAAA,EAAAnE,cACAmE,EAAAnE,aAAAuE,GACA,OAAAJ,EAEAA,IAAAhG,WAEA,cAmFAiD,gBACAoD,yBA3CA,SAAAC,EAAAjF,GACA,GAAAiF,EAAAC,OAAAD,EAAAE,MACA,IAAAC,GAAaxF,EAAAqF,EAAAC,MAAAzF,EAAAwF,EAAAE,OAEb,IAAA/K,EAAAoE,SAAAE,gBAMAJ,GALA8G,GACAxF,EAAAqF,EAAAI,QAAAjL,EAAA2E,WAAA3E,EAAA8E,WACAO,EAAAwF,EAAAK,QAAAlL,EAAAwE,UAAAxE,EAAA6E,WAGAlB,EAAAiC,IAGA,OAFAoF,EAAAxF,EAAAwF,EAAAxF,EAAAtB,EAAAsB,EAAAI,EAAAjB,WACAqG,EAAA3F,EAAA2F,EAAA3F,EAAAnB,EAAAmB,EAAAO,EAAApB,UACAwG,GA+BAG,UA3BA,SAAA5B,EAAA6B,GACA,IAAA7B,IAAA6B,EACA,SAGA,KAAA7B,MAAA6B,GACA7B,IAAAhF,WAGA,OAAAgF,IAAA6B,mBChQA3L,EAAAD,QAAA,SAAAQ,EAAAqL,GACA,QAAA7J,KAAA6J,IAAA9J,eAAAC,KAAAxB,EAAAwB,GAAA6J,EAAA7J,IACA,SAAA8J,IAAgBxD,KAAAyD,YAAAvL,EAChBA,EAAAsB,UAAA,OAAA+J,EAAAjL,OAAAY,OAAAqK,IAAAC,EAAAhK,UAAA+J,EAAA/J,UAAA,IAAAgK,mBCHA,IAAAE,EAAA,WACA1D,KAAA2D,cACA3D,KAAA4D,cAAA,GAGAF,EAAAlK,WACAqK,aAAA,WACA7D,KAAA4D,cAAA,GAEAE,WAAA,WACA9D,KAAA4D,cAAA,IAIA,IAAAG,EAAA,SAAAtJ,GACA,IAAAuJ,KACAC,EAAA,WAEA,IADA,IAAAC,GAAA,EACAtM,EAAA,EAAiBA,EAAAoM,EAAA5J,OAAsBxC,IACvC,GAAAoM,EAAApM,GAAA,CACA,IAAAuM,EAAAH,EAAApM,GAAA2C,MAAAE,EAAAU,WACA+I,KAAAC,EAGA,OAAAD,GAUA,OARAD,EAAAG,SAAA,SAAArB,GACA,4BACAiB,EAAA9B,KAAAa,GAAA,GAGAkB,EAAAI,YAAA,SAAAC,GACAN,EAAAM,GAAA,MAEAL,GAgDAtM,EAAAD,QA7CA,SAAA+C,GAEA,IAAA8J,EAAA,IAAAb,EACAjJ,EAAAgB,YAAA,SAAAtD,EAAAqM,EAAAC,GAKA,OAJAtM,EAAA,MAAAA,EAAA8G,cACAsF,EAAApM,KACAoM,EAAApM,GAAA4L,EAAAU,GAAAzE,OAEA7H,EAAA,IAAAoM,EAAApM,GAAAiM,SAAAI,IAEA/J,EAAAiK,UAAA,SAAAC,EAAAF,GACAzE,KAAAvE,YAAA,aAAAkJ,EAAAF,IAGAhK,EAAAmK,UAAA,SAAAzM,EAAA0M,EAAAJ,GACA,GAAAF,EAAAX,aAAA,SAEA,IAAAkB,EAAA,MAAA3M,EAAA8G,cAMA,OAJAsF,EAAA,eACAA,EAAA,cAAAhK,MAAAkK,GAAAzE,MAAA7H,GAAA4M,OAAAF,KAGAN,EAAAO,IACAP,EAAAO,GAAAvK,MAAAkK,GAAAzE,KAAA6E,IAGApK,EAAAuK,WAAA,SAAA7M,GACA,QAAAoM,EAAA,MAAApM,EAAA8G,gBAEAxE,EAAAmB,YAAA,SAAA0I,GACA,GAAAA,EAAA,CACA,IAAAW,EAAAX,EAAAnD,MAAA,KACAoD,EAAAU,EAAA,IAAAZ,YAAAY,EAAA,MAGAxK,EAAAyK,gBAAA,WACA,QAAA/M,KAAAoM,EACA,IAAApM,EAAAmH,QAAA,eACAiF,EAAApM,oBC5EA,SAAAgN,IACAC,QAAAC,IAAA,8BAEA,SAAAC,KAIAA,EAAA9L,UAAA+L,OAAAJ,EACAG,EAAA9L,UAAAgM,UAAAL,EACAG,EAAA9L,UAAAiM,UAAAN,EACAG,EAAA9L,UAAAkM,MAAAP,EAEAxN,EAAAD,QAAA,SAAAiO,GACA,OAAAL,kBCbA,IAAAM,GACAC,OAAA,EACAC,OAAA,GACAC,KAAA,KACAC,IAAA,MACAC,KAAA,OACAC,MAAA,OACAC,QAAA,OACAC,KAAA,SAiCAzO,EAAAD,SACA2O,iBAhCA,SAAAC,GACA,OAAAV,EAAAU,IAAAV,EAAAG,MAgCAQ,QA7BA,SAAAC,EAAA7B,GACA,GAAA6B,EAAAD,QACAC,EAAAD,QAAA5B,QAGA,IADA,IAAA8B,EAAAD,EAAA/F,QACA7I,EAAA,EAAgBA,EAAA6O,EAAArM,OAAsBxC,IACtC+M,EAAA8B,EAAA7O,OAwBA8O,SAnBA,SAAAF,EAAA7B,GACA,GAAA6B,EAAAG,IACA,OAAAH,EAAAG,IAAAhC,GAKA,IAHA,IAAA8B,EAAAD,EAAA/F,QACAmG,KAEAhP,EAAA,EAAgBA,EAAA6O,EAAArM,OAAsBxC,IACtCgP,EAAA1E,KAAAyC,EAAA8B,EAAA7O,OAGA,OAAAgP,qBCpCA,IAAAC,EAAArP,EAAA,GAEAsP,GADAtP,EAAA,IACAA,EAAA,IACAuP,EAAAvP,EAAA,GAEAwP,EAAA,WACA,aAEA,SAAAA,EAAA1D,EAAA2D,EAAAC,EAAAvB,GACArC,IACAtD,KAAAmH,WAAAJ,EAAA5E,OAAAmB,GACAtD,KAAAoH,QAAA9D,GAGAtD,KAAAqH,QAAAR,EAAAnM,MAAAuM,GACAK,aAAA,KAEAtH,KAAAuH,OAAA5B,EACA3F,KAAAwH,WAAA7B,EAAA8B,uBAEAzH,KAAA0H,IAAAT,EAAA3C,IAAA,IAAAuC,EAAA7L,MAEAgF,KAAA2H,MAAA,OACA3H,KAAA4H,SAAAV,EAEAJ,EAAA9G,MA0SA,OAtSAgH,EAAAxN,UAAAqO,WAAA,WACA7H,KAAAoH,QAAApH,KAAAmH,WAAAnH,KAAA8H,MAAA,KACA9H,KAAAuH,OAAAQ,UAAAC,WAAA,eACAC,OAAA,6BAAAjI,KAAAkI,qBACAlI,KAAAwH,WAAAW,YACAnI,KAAA4E,UAAA,gBACA5E,KAAAkF,mBAEA8B,EAAAxN,UAAA4O,KAAA,SAAA9D,GACA,aAGA0C,EAAAxN,UAAA6O,SAAA,SAAArM,EAAAD,GAEA,EAAAC,OACAgE,KAAA8H,MAAAjL,WAAAb,GAEA,EAAAD,OACAiE,KAAA8H,MAAApL,UAAAX,IAIAiL,EAAAxN,UAAA8O,MAAA,WACAtI,KAAAuI,UAAA/G,UAAA,GACAxB,KAAAuI,UAAAnJ,UAAA,uBACAY,KAAAuI,UAAArK,MAAAsK,QAAA,KAGAxB,EAAAxN,UAAAiP,OAAA,SAAAC,GACA,GAAA1I,KAAAoH,QACA,OAAApH,KAAAoH,QAAAqB,OAAAC,IAGA,IAAAA,IACA1I,KAAA2I,YAAA,GAGA,IAAAC,EAAA5I,KAAAmH,WACAzJ,EAAAkL,EAAA3L,YACAM,EAAAqL,EAAA1L,aACA2L,EAAA7I,KAAA8I,UACAF,IAAAtM,SAAAD,OACAqB,EAAApB,SAAAD,KAAAY,YACAM,EAAAjB,SAAAD,KAAAa,cAEAQ,EAAAmL,EAAAE,WACArL,EAAAmL,EAAAE,UAEArL,EAAAmL,EAAAG,WACAtL,EAAAmL,EAAAG,UAEAzL,EAAAsL,EAAAI,YACA1L,EAAAsL,EAAAI,WAEA1L,EAAAsL,EAAAK,YACA3L,EAAAsL,EAAAK,WAEAlJ,KAAAmJ,QAAAzL,EAAAH,GAIAyC,KAAA2I,WAGA3I,KAAA2I,YAAA,GAGA3B,EAAAxN,UAAA4P,KAAA,WACApJ,KAAAqJ,OAAA,GACArJ,KAAAyI,UAEAzB,EAAAxN,UAAA8P,KAAA,SAAAzO,GACAmF,KAAAqJ,OAAA,GACAxO,GAAAmF,KAAAoH,SACApH,KAAAoH,QAAAkC,OAEAtJ,KAAAyI,UAEAzB,EAAAxN,UAAA6P,MAAA,SAAAtQ,GACA,QAAAA,GAAAiH,KAAA8H,MAAArL,WACAuD,KAAA8H,MAAArL,WAAAuE,YAAAhB,KAAA8H,YAEA,QAAA/O,IAAAiH,KAAA8H,MAAArL,WAAA,CACA,IAAA8M,EAAAvJ,KAAAoH,QAAAoC,UAAAxJ,KAAA0H,KACA1H,KAAAoH,QAAAqC,SAAAzJ,KAAAuJ,GAEAvJ,KAAAqH,QAAAqC,OAAA3Q,GAEAiO,EAAAxN,UAAAmQ,QAAA,SAAAC,EAAA/H,QACA,IAAA+H,IAA2BA,EAAA,IAC3B/H,MAAA,GAAA7B,KAAAqH,QAAAxF,KAAA,IAAAtB,KAAA,KACA,IAAA9F,EAAAuF,KAAAqH,QACAwC,EAAA,GACApP,EAAAqP,IACAF,EAAA,iBAAAnP,EAAAqP,IAAArP,EAAAqP,IAAA,IAGAF,IACAA,EAAA,sCAAA/H,EAAA,WAAAA,EAAA,eAAApH,EAAAsP,MAAA,cAEAtP,EAAAoP,SAEAA,EAAA,qCADApP,EAAAuP,YAAA,oDACA,4CAAAvP,EAAAoP,OAAA,iBAGA,uCAAAhI,EAAA,mBAAA7B,KAAA0H,IAAA,KAAAmC,EAAAD,EAAA,UAEA5C,EAAAxN,UAAAyQ,MAAA,SAAAnM,EAAAwF,GACAtD,KAAA8H,MAAAhK,EACAkC,KAAAoH,QAAA9D,EACAtD,KAAAkK,QAEAlD,EAAAxN,UAAA+O,QAAA,WACA,OAAAvI,KAAA8H,MAAAzF,cAAA,sBAAArC,KAAA8H,OAEAd,EAAAxN,UAAA0Q,KAAA,WAGA,IAAAC,EAAAnK,KAEAA,KAAAkI,oBAAA,SAAAvI,GACAoH,EAAAnE,gBAAAjD,EAAA,iBACAwK,EAAAzC,KACAyC,EAAAC,UAIApK,KAAAuH,OAAAQ,UAAAC,WAAA,eACAqC,SAAA,6BAAArK,KAAAkI,qBAEAlI,KAAA4E,UAAA,eAEAoC,EAAAxN,UAAA4Q,OAAA,WACApK,KAAAqH,QAAAiD,WAAAtK,KAAAqH,QAAAiD,UACAtK,KAAAyI,UAEAzB,EAAAxN,UAAAsP,QAAA,WACA,IAAAyB,GACA3M,OAAAoC,KAAAqH,QAAAzJ,QAAA,EACAD,MAAAqC,KAAAqH,QAAA1J,OAAA,EACA6M,QAAAxK,KAAAqH,QAAAmD,SAAA,EACAvB,UAAAjJ,KAAAqH,QAAA4B,WAAA,EACAF,SAAA/I,KAAAqH,QAAA0B,UAAA,EACAG,UAAAlJ,KAAAqH,QAAA6B,WAAA,IACAF,SAAAhJ,KAAAqH,QAAA2B,UAAA,KAEA,GAAAhJ,KAAAqH,QAAAiD,UAAA,CACA,IAAAvR,EAAA,MAAAiH,KAAAqH,QAAAtO,KACAwR,EAAAxR,EAAA,kBAAAwR,EAAAxR,EAAA,wBAAAiH,KAAAqH,QAAAC,aAEA,OAAAiD,GAGAvD,EAAAxN,UAAAiR,eAAA,WAEA,IAAA9M,EAAAqC,KAAA0K,UAAAC,SACAhN,IAAA,EAAAA,IACAA,EAAAqC,KAAA0K,UAAA/M,OAGA,IAAAC,EAAAoC,KAAA0K,UAAAE,SAKA,OAJAhN,IAAA,EAAAA,IACAA,EAAAoC,KAAA0K,UAAA9M,SAIAD,QACAC,WAIAoJ,EAAAxN,UAAAqR,gBAAA,WACA,IAAAC,GACA/O,IAAA,EACAE,MAAA,EACAC,OAAA,EACAF,KAAA,EACA+O,WAAA,EACAC,SAAA,GAwBA,OAtBAhL,KAAAiL,kBACAjL,KAAAiL,gBAAAjL,KAAAkL,SAAAlP,QACA8O,EAAA9O,KAAA,EACA8O,EAAAC,cAGA/K,KAAAiL,gBAAAjL,KAAAkL,SAAAjP,SACA6O,EAAA7O,MAAA,EACA6O,EAAAC,cAGA/K,KAAAiL,gBAAAjL,KAAAkL,SAAAnP,OACA+O,EAAA/O,IAAA,EACA+O,EAAAE,YAGAhL,KAAAiL,gBAAAjL,KAAAkL,SAAAhP,UACA4O,EAAA5O,OAAA,EACA4O,EAAAE,aAIAF,GAIA9D,EAAAxN,UAAA2P,QAAA,SAAAzL,EAAAH,GACAyC,KAAA8H,MAAA5J,MAAAP,MAAAD,EAAA,KACAsC,KAAA8H,MAAA5J,MAAAN,OAAAL,EAAA,KAEA,IAAAuN,EAAA9K,KAAA6K,kBACAD,EAAArN,EAAAuN,EAAAE,SACAL,EAAAjN,EAAAoN,EAAAC,WAEA/K,KAAA0K,WAAoBhN,IAAAH,IAAAoN,WAAAC,YACpB5K,KAAAqH,QAAAwC,OACA7J,KAAAmL,cAEAnL,KAAAoL,gBAIApE,EAAAxN,UAAA0R,UACAlP,KAAA,gCACAC,MAAA,iCACAF,IAAA,+BACAG,OAAA,mCAGA8K,EAAAxN,UAAA6R,YAAA,SAAAxJ,EAAAyJ,GACAA,IACAA,EAAAtL,MAEA,IAAAlC,EAAAwN,EAAAxD,MAEA,QAAAlQ,KAAAoI,KAAAkL,SACAnE,EAAA7F,gBAAApD,EAAAkC,KAAAkL,SAAAtT,IAGA,iBAAAiK,IACAA,OAGA,IAAA0J,KAEA,IAAA3T,EAAA,EAAgBA,EAAAiK,EAAAzH,OAAgBxC,IAChCmP,EAAA9F,aAAAnD,EAAA+D,EAAAjK,IACA2T,EAAA1J,EAAAjK,KAAA,EAGA0T,EAAAL,gBAAAM,GAIAvE,EAAAxN,UAAA4R,aAAA,WACA,IAAAxB,EAAA5J,KAAA8H,MAAA/F,WAAA,GACA6H,GAAA,wBAAAA,EAAAxK,YACAwK,EAAA1L,MAAAN,OAAAoC,KAAA0K,UAAAE,SAAA,OAIA5D,EAAAxN,UAAA2R,YAAA,WACA,IAAAZ,EAAAvK,KAAA0K,UACAH,EAAAK,UAAA5K,KAAAqH,QAAAC,aACA,IAAAuC,EAAA7J,KAAA8H,MAAA/F,WAAA,GACA6H,EAAA5J,KAAA8H,MAAA/F,WAAA,GACAyJ,EAAA,MAAAxL,KAAAqH,QAAAtO,KACA,GAAAiH,KAAAqH,QAAAiD,UAEA,GADAV,EAAA1L,MAAAH,QAAA,OACAyN,EAAA,CACA3B,EAAAzK,UAAA,kCACAyK,EAAA3L,MAAAP,MAAA4M,EAAAhN,EAAA,KACA,IAAArF,EAAAsF,KAAAiO,MAAAlB,EAAAhN,EAAA,EAAAgN,EAAA7M,EAAA,GACAmM,EAAA3L,MAAAwN,UAAA,2BAAAxT,EAAA,OAAAA,EAAA,MACA0R,EAAA1L,MAAAH,QAAA,YAGA8L,EAAAzK,UAAA,uCAKAyK,EAAAzK,UADAoM,EACA,sBAGA,+BAEA3B,EAAA3L,MAAAP,MAAA,OACAkM,EAAA3L,MAAAwN,UAAA,GACA9B,EAAA1L,MAAAH,QAAA,GACA6L,EAAA1L,MAAAN,OAAA2M,EAAAK,SAAA,KAEAf,EAAA3L,MAAAN,OAAAoC,KAAAqH,QAAAC,aAAA,MAEAN,EA9TA,GAiUArP,EAAAD,QAAAsP,iBC9TArP,EAAAD,SACA2C,OATA,SAAAI,GACA,SAAAA,GAAA,iBAAAA,KACAA,EAAAkR,aAAAlR,EAAAmR,UAAAnR,EAAAoR,2BCFAlU,EAAAD,QAAA,SAAAiO,GAEA,IAAAmG,EAAA,aA8CA,OA3CAA,EAAAtS,WACA8P,KAAA,SAAAhF,EAAAyH,EAAA9E,EAAA+E,KAEA5C,KAAA,aAEA5D,UAAA,SAAA3M,EAAAyL,EAAAyH,EAAAjO,GACAkC,KAAAiM,UAAAnO,GAAAjF,SAEA4M,UAAA,SAAAnB,EAAAyH,EAAAjO,GACA,OAAAkC,KAAAiM,UAAAnO,GAAAjF,OAAA,IAEAqT,WAAA,SAAArT,EAAAyL,EAAAyH,EAAAjO,GACA,IAAAqO,EAAAnM,KAAAyF,UAAAnB,EAAAyH,EAAAjO,GACA,OAAAqO,GAAAtT,GAAAsT,EAAAlR,SAAApC,EAAAoC,QACAkR,EAAAlR,WAAApC,EAAAoC,UAEAkR,GAAAtT,GAGAuT,SAAA,SAAAvT,EAAAyL,EAAAyH,EAAAjO,GACA,UAGAuO,KAAA,SAAA/H,EAAAyH,EAAAjO,KAGAmO,UAAA,SAAAnO,GACA,OAAAA,EAAAuE,cAAA,UAEAqD,MAAA,SAAA5H,GACA,IAAAe,EAAAmB,KAAAiM,UAAAnO,GACAe,IAGAA,EAAA6G,OACA7G,EAAA6G,QAGA7G,EAAAC,QACAD,EAAAC,YAIAgN,kBChDA,IAAAQ,GACAC,KAAAC,UAAAC,UAAAnN,QAAA,YAAAkN,UAAAC,UAAAnN,QAAA,cACAoN,OAAA/P,OAAAgQ,gBAAAH,UAAAC,UAAAnN,QAAA,WACAsN,MAAAJ,UAAAC,UAAAnN,QAAA,gBAAAkN,UAAAC,UAAAnN,QAAA,aACAuN,MAAAL,UAAAC,UAAAnN,QAAA,gBAAAkN,UAAAC,UAAAnN,QAAA,cACAwN,QAAAN,UAAAC,UAAAnN,QAAA,YACAyN,SAAAP,UAAAC,UAAAnN,QAAA,aACA0N,QAAAR,UAAAC,UAAAnN,QAAA,cAAAkN,UAAAC,UAAAnN,QAAA,gBACA2N,KAAAT,UAAAC,UAAAnN,QAAA,cACA4N,OAAAV,UAAAC,UAAAU,OAAA,aACAC,QAAA,GAAAZ,UAAAC,UAAAnN,QAAA,SAGA3H,EAAAD,QAAA4U,mBCbA,IAAAe,EAAA7V,EAAA,GAEAG,EAAAD,QAAA,SAAAiO,GACA,IAAA2H,EAAA9V,EAAA,EAAAA,CAAAmO,GAEA,SAAA4H,IAGA,OAFAD,EAAA/S,MAAAyF,KAAA7E,YAAA6E,KA0CA,OArCAqN,EAAAE,EAAAD,GAEAC,EAAA/T,UAAA+L,OAAA,SAAAiI,GACA,IAEA5V,EADAmS,EAAA,gDADAyD,EAAA5P,QAAA,YACA,kCAGA,GAAA4P,EAAAC,SAAAD,EAAAC,QAAArT,OACA,IAAAxC,EAAA,EAAcA,EAAA4V,EAAAC,QAAArT,OAAwBxC,IACtCmS,GAAA,kBAAAyD,EAAAC,QAAA7V,GAAAuB,IAAA,KAAAqU,EAAAC,QAAA7V,GAAA8V,MAAA,YAKA,OADA3D,GAAA,mBAIAwD,EAAA/T,UAAAgM,UAAA,SAAA1H,EAAAjF,EAAAkK,EAAAyK,GACA,IAAA1O,EAAAhB,EAAA4D,YACA5C,EAAA6O,eAAAH,EAAAI,WACA9O,EAAA8O,SAAAJ,EAAAI,SACA9O,EAAA6O,eAAA,QAEA,IAAA9U,IACAA,GAAAiG,EAAA2O,QAAA,QAAmC5U,OACnCiG,EAAAjG,SAAA,IAGA0U,EAAA/T,UAAAiM,UAAA,SAAA3H,GACA,OAAAA,EAAA4D,WAAA7I,OAGA0U,EAAA/T,UAAAkM,MAAA,SAAA5H,GACA,IAAAU,EAAAV,EAAA4D,WACAiE,EAAAkI,OAAArP,GAAA,IAGA+O,kBC3BA5V,EAAAD,QArBA,SAAAiO,GACA,IAAAmI,KAEA,OACAzD,SAAA,SAAAjP,EAAAgE,EAAA9D,EAAA8E,GACA0N,EAAA5L,MAAA9G,EAAAgE,EAAA9D,EAAA8E,IAEAuF,EAAAoC,UAAAC,WAAA,eACAqC,SAAAjP,EAAAgE,EAAA9D,EAAA8E,IAEAyH,WAAA,WAEA,IADA,IAAAkG,EAAApI,EAAAoC,UAAAC,WAAA,eACApQ,EAAA,EAAiBA,EAAAkW,EAAA1T,OAAmBxC,IAAA,CACpC,IAAAoW,EAAAF,EAAAlW,GACAmW,EAAA9F,OAAA+F,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAEAF,yBChBA,IAAAG,EAAAzW,EAAA,KACA0W,EAAA1W,EAAA,KACA2W,EAAA3W,EAAA,KACA4W,EAAA5W,EAAA,KACA6W,EAAA7W,EAAA,KACA8W,EAAA9W,EAAA,KACAqP,EAAArP,EAAA,GACAuP,EAAAvP,EAAA,GACAsP,EAAAtP,EAAA,GAEA,SAAA+W,EAAA5I,GACAA,EAAAsB,OAAAuH,cACAC,KAAA,IAAAP,EAAAvI,IACA+I,OAAA,IAAAP,EAAAxI,IACA7G,OAAA,IAAAsP,EAAAzI,IACAgJ,KAAA,IAAAN,EAAA1I,IACAiJ,YAAA,IAAAN,EAAA3I,KAwZAhO,EAAAD,QApZA,SAAAiO,GACA,IAAAkJ,EAAAZ,IAEAa,KACAhI,EAAAgI,GAqYA,IAAAC,GACA7E,KAAAqE,EACAS,cArYA,SAAAC,GAsCA,SAAAC,EAAAC,EAAAC,GACA,IAAAlM,EAtBA,SAAAiM,EAAAC,GAOA,IANA,IAAArT,EAAAkT,EAAAI,WAAAF,GACAvR,EAAAqR,EAAAK,cAAAH,GACAI,EAAAN,EAAAO,iBACAxT,EAAA,EACA2B,EAAA,EAEA/F,EAAA,EAAkBA,EAAA2X,EAAAnV,OAAiBxC,IAAA,CACnC,GAAA2X,EAAA3X,GAAAO,MAAAiX,EAAA,CACAzR,EAAA4R,EAAA3X,GAAA+F,MACA,MAEA3B,GAAAuT,EAAA3X,GAAA+F,MAEA,OACA5B,MACAC,OACA4B,SACAD,SAIA8R,CAAAN,EAAAC,GACA/T,EAAAiB,SAAAmD,cAAA,OAaA,OAZApE,EAAA+D,UAAA,gCACA/D,EAAAqU,aAAAT,EAAA5H,QAAAsI,eAAAR,GACA9T,EAAAqU,aAAA,mBAAAN,GACA/T,EAAAqU,aAAA,oBAAAT,EAAAW,eAAAR,IAEA/T,EAAA6C,MAAA2C,SACA,OAAAqC,EAAAnH,IAAA,KACA,QAAAmH,EAAAlH,KAAA,KACA,SAAAkH,EAAAvF,MAAA,KACA,UAAAuF,EAAAtF,OAAA,MACA2C,KAAA,KAEAlF,EAIA,IAAAwU,KACAC,EAAA,KACAC,GACAC,QAAA,KACAC,YAAA,KACAC,QAAA,KACAC,YAAA,KACAC,aAAA,KAEAC,WAhEA,SAAAvS,GACA,IAAAwS,EAAAvJ,EAAAnE,gBAAA9E,EAAAmR,EAAA5H,QAAAsI,gBACAvH,EAAArB,EAAAnE,gBAAA9E,EAAA,oBACA,GAAAsK,EAAA,CACA,IAAAgH,EAAAhH,EAAA9J,aAAA,oBAEA,OACAgG,GAFAgM,EAAAhS,aAAA2Q,EAAA5H,QAAAsI,gBAGAP,cAGA,aAsDAmB,gBAAA,SAAAnB,GAEA,OADAH,EAAAuB,UAAApB,GACAqB,QAGAvG,KAAA,WACA,IAAAwG,EAAA7B,EAAA8B,aACAD,EAAAxG,MACAwG,EAAAxG,KAAAlK,KAAAiP,GAGAa,EAAAb,EAAA1H,OAAAqJ,aAAA3B,EAAA5H,QAAAjO,MAEA,IAAA+Q,EAAAnK,KAEA6P,EAAA3N,KAAA4N,EAAArU,YAAA,sBAAAoV,EAAAC,GACA3G,EAAA6F,SAAAa,IACA1G,EAAA6F,QAAAc,MAGAjB,EAAA3N,KAAA4N,EAAArU,YAAA,4BACAwT,EAAA1H,OAAAwJ,SAAA,eAAAC,cAIA7G,EAAAtM,cAAAiS,EAAAjS,UAAAsM,EAAA6F,UACA7F,EAAAf,UAIApJ,KAAAkK,KAAA,cAGA6G,SAAA,WACA,OACAN,OAAAzQ,KAAAkQ,QACAe,WAAAjR,KAAAmQ,YACAnE,YAAAhM,KAAAoQ,aACA9L,GAAAtE,KAAAgQ,QACAZ,WAAApP,KAAAiQ,cAIAiB,UAAA,SAAA/B,EAAAC,GAKA,GAJApP,KAAAnC,aACAmC,KAAAqM,OAGAyD,EAAAqB,OAAAhC,GAAA,CAIA,IAAAiC,GAAuB9M,GAAA6K,EAAAC,eACvB,IAAApP,KAAA4E,UAAA,qBAAAwM,MAIApR,KAAAsJ,KAAA8H,EAAA9M,GAAA8M,EAAAhC,YACApP,KAAAqR,WAEArR,KAAA4E,UAAA,eAAAwM,OAEAvT,UAAA,WACA,SAAAmC,KAAAkQ,UAAAnJ,EAAA1D,UAAArD,KAAAoQ,aAAA9T,SAAAD,QAEAiN,KAAA,SAAA6F,EAAAC,GACApP,KAAAnC,aACAmC,KAAAqM,OAEA,IAAA+E,GAAuB9M,GAAA6K,EAAAC,cAEvBrD,EAAAkD,EAAAuB,UAAAY,EAAAhC,YACAkC,EAAAtR,KAAAuQ,gBAAAxE,EAAA5T,MACA,GAAAmZ,EAAA,CAGA,IAAAb,EAAAxB,EAAAsC,aAAA/C,aAAA8C,EAAAE,MAEAxF,EAAAkD,EAAAkC,EAAA9M,GAAA8M,EAAAhC,YACAH,EAAAwC,WAAA3Q,YAAAkL,GACAyE,EAAAnH,KAAA8H,EAAA9M,GAAAyH,EAAAuF,EAAAtF,GACAhM,KAAAkQ,QAAAO,EACAzQ,KAAAoQ,aAAApE,EACAhM,KAAAgQ,QAAAoB,EAAA9M,GACAtE,KAAAiQ,YAAAmB,EAAAhC,WACApP,KAAAmQ,YAAAmB,EAAAE,KAEA,IAAAd,EAAA7B,EAAA8B,aACAD,EAAAgB,QACAhB,EAAAgB,OAAA1R,KAAAgM,EAAAiD,KAIAoC,SAAA,WACA,IAAAM,EAAA3R,KAAA+Q,WACA5B,EAAAwC,EAAArN,GACA8K,EAAAuC,EAAAvC,WAEArD,EAAAkD,EAAAuB,UAAApB,GACAwC,EAAA9B,EAAA+B,QAAA1C,GACAmC,EAAAtR,KAAAuQ,gBAAAnB,GAEA,GAAAkC,EAAA,CAGA,IAAAzY,EAAA+Y,EAAAN,EAAAQ,QACA,QAAAR,EAAAQ,SACAjZ,EAAAiX,EAAA+B,QAAA1C,IAGAnP,KAAAkQ,QAAA1K,UAAA3M,EAAAsW,EAAApD,EAAA/L,KAAAoQ,cACApQ,KAAA0F,UAGAA,MAAA,WACA1F,KAAAkQ,QAAAxK,MAAA1F,KAAAoQ,eAGA2B,SAAA,WACA,IAAAhG,EAAAkD,EAAAuB,UAAAxQ,KAAAiQ,aACA,OAAAjQ,KAAAkQ,QAAAzK,UAAAzF,KAAAgQ,QAAAjE,EAAA/L,KAAAoQ,eAGA4B,cAAA,WACA,IAAAV,EAAAtR,KAAAuQ,gBAAAvQ,KAAAiQ,aAEA,GAAAqB,EAAA,CAGA,IACAzY,EADA8M,EAAAsM,QAAAjS,KAAAgQ,SACAsB,EAAAQ,QAIA,MAHA,QAAAR,EAAAQ,SACAjZ,EAAAiX,EAAA+B,QAAA7R,KAAAgQ,UAEAnX,IAGAqZ,UAAA,WAEA,IAAAnG,EAAAkD,EAAAuB,UAAAxQ,KAAAiQ,aAEApX,EAAAmH,KAAAgS,gBAEA,OAAAhS,KAAAkQ,QAAAhE,WAAArT,EAAAmH,KAAAgQ,QAAAjE,EAAA/L,KAAAoQ,eAGAhH,KAAA,WACA,GAAApJ,KAAAgQ,QAAA,CAGA,IAAAb,EAAAnP,KAAAgQ,QACAZ,EAAApP,KAAAiQ,YAEAS,EAAA7B,EAAA8B,aACAD,EAAAyB,QACAzB,EAAAyB,OAAAnS,UAAAoQ,aAAAnB,GAGAjP,KAAAgQ,QAAA,KACAhQ,KAAAiQ,YAAA,KACAjQ,KAAAmQ,YAAA,KACAnQ,KAAAoQ,eAEApQ,KAAAkQ,SACAlQ,KAAAkQ,QAAA9G,KAAApJ,KAAAoQ,cAEApQ,KAAAkQ,QAAA,KACAlQ,KAAAoQ,aAAA3T,YACAuD,KAAAoQ,aAAA3T,WAAAuE,YAAAhB,KAAAoQ,cAEApQ,KAAAoQ,aAAA,KAEApQ,KAAA4E,UAAA,cAAkCN,GAAA6K,EAAAC,mBAElC/C,KAAA,WACA,GAAArM,KAAAnC,aAAAiS,EAAAqB,OAAAnR,KAAAgQ,UAAAhQ,KAAAkS,YAAA,CAKA,IAAA/C,EAAAnP,KAAAgQ,QACAZ,EAAApP,KAAAiQ,YAEA,GAAAH,EAAAqB,OAAAhC,GAAA,CAIA,IAAAyC,EAAA9B,EAAA+B,QAAA1C,GACAmC,EAAAtR,KAAAuQ,gBAAAnB,GACAgC,GACA9M,GAAA6K,EACAC,aACAgD,SAAApS,KAAA+R,WACAM,SAAArS,KAAAgS,iBAEA,QAAAhS,KAAA4E,UAAA,gBAAAwM,KACApR,KAAAkQ,QAAA9D,SAAAgF,EAAAgB,SAAAhB,EAAA9M,GAAA8M,EAAAhC,WAAApP,KAAAoQ,cAAA,CAEA,IAAAvX,EAAAuY,EAAAgB,SACA,QAAAd,EAAAQ,QACAF,EAAAxC,GAAAvW,EACA,YAAAuW,EACAwC,EAAAU,SAAA3M,EAAA4M,iBAAAX,GACQ,YAAAxC,EACRwC,EAAAY,WAAA7M,EAAA4M,kBACAC,WAAAZ,EAAAU,SACAG,UAAAb,EAAAa,SACAC,KAAAd,IAEQ,cAAAxC,IACRwC,EAAAU,SAAA3M,EAAA4M,iBAAAX,IAGA9B,EAAA6C,WAAAxD,IAEAnP,KAAAkQ,QAAA7D,KAAA8C,EAAAF,EAAAuB,UAAApB,GAAApP,KAAAoQ,cAEApQ,KAAA4E,UAAA,UAAAwM,IAGApR,KAAAoJ,aA5CApJ,KAAAoJ,QA+CAwJ,kBAAA,SAAAC,EAAAC,GACA,IAAAC,EAAAF,EAEAG,EADA/D,EAAAO,iBACAuD,GAEA3D,EAAA4D,IAAA7a,KAAA,KACA,GAAAiX,EAAA,CACA,KAAAA,IAAApP,KAAAuQ,gBAAAnB,IACAA,EAAApP,KAAA4S,kBAAAC,EAAAC,KAEA,OAAA1D,EAEA,aAGA6D,YAAA,SAAAC,GACA,OAAAlT,KAAA4S,kBAAA3D,EAAAW,eAAA5P,KAAAiQ,aAAAiD,MAGAC,aAAA,WACA,OAAAnT,KAAA4S,kBAAA,MAGAQ,YAAA,WACA,OAAApT,KAAA4S,kBAAA3D,EAAAO,iBAAApV,OAAA,OAGAiZ,aAAA,SAAAC,GACA,IAAAlL,EAAApI,KAAAiT,YAAA,GACA,GAAA7K,EAAA,CACA,IAAA4K,EAAAhT,KAAAiT,YAAA,GACAD,GAAAhT,KAAAuQ,gBAAAyC,IACAhT,KAAAkR,UAAAlR,KAAAgQ,QAAAgD,QAEK,GAAAM,GAAAtT,KAAAuT,QAAA,IACL,IAAAb,EAAA1S,KAAAuT,QAAA,IACAnL,EAAApI,KAAAmT,iBACAnT,KAAAuQ,gBAAAnI,IACApI,KAAAkR,UAAAwB,EAAAtK,KAKAoL,aAAA,SAAAF,GACA,IAAAlL,EAAApI,KAAAiT,aAAA,GACA,GAAA7K,EAAA,CACA,IAAA4K,EAAAhT,KAAAiT,aAAA,GACAD,GAAAhT,KAAAuQ,gBAAAyC,IACAhT,KAAAkR,UAAAlR,KAAAgQ,QAAAgD,QAEK,GAAAM,GAAAtT,KAAAuT,SAAA,IACL,IAAAb,EAAA1S,KAAAuT,SAAA,IACAnL,EAAApI,KAAAoT,gBACApT,KAAAuQ,gBAAAnI,IACApI,KAAAkR,UAAAwB,EAAAtK,KAKAmL,QAAA,SAAAL,GACA,OAAAA,EAAA,EACAvN,EAAA8N,QAAAzT,KAAAgQ,SAEArK,EAAA+N,QAAA1T,KAAAgQ,UAIA2D,YAAA,WACA,IAAArD,EAAAtQ,KAAAiT,YAAA,GACA3C,GACAtQ,KAAAkR,UAAAZ,EAAAtQ,KAAAiQ,cAIA2D,YAAA,WACA,IAAAtD,EAAAtQ,KAAAiT,aAAA,GACA3C,GACAtQ,KAAAkR,UAAAZ,EAAAtQ,KAAAiQ,cAGApI,WAAA,WACAgI,EAAAtJ,QAAA,SAAAsN,GACA/D,EAAAlU,YAAAiY,KAEA/D,EAAA,KACA9P,KAAAoJ,OACApJ,KAAAkF,oBAOA,OAHA2B,EAAAnM,MAAAqV,EAAAlB,GACAhI,EAAAnM,MAAAqV,EAAAjB,GAEAiB,IAYA,OAHAlJ,EAAAnM,MAAAqU,EAAAF,GACAhI,EAAAnM,MAAAqU,EAAAD,GAEAC,oBCraA,IAAAhI,EAAAvP,EAAA,GACAqP,EAAArP,EAAA,GACAsP,EAAAtP,EAAA,GACAsc,EAAAtc,EAAA,KAGAuc,GAFAvc,EAAA,IAEA,SAAA8L,EAAA2D,EAAAC,EAAAvB,GACA3F,KAAAqH,QAAAR,EAAAnM,SAA8BuM,OAC9BjH,KAAAuH,OAAA5B,EACA3F,KAAAoH,QAAA9D,EACAwD,EAAA9G,MACAA,KAAAgU,YAIAD,EAAAva,WACA0Q,KAAA,SAAA+J,GACA,IAAAtO,EAAA3F,KAAAuH,OACA2M,EAAAvO,EAAAwO,SAAAC,iBACAC,EAAA1O,EAAAwO,SAAAG,qBAGAL,EAAAzS,UAAA,iEAAqF0S,EAAA,UACrFlU,KAAAuU,MAAAN,EAAAlS,WAAA,GAEA/B,KAAAuU,MAAA/S,UAAA,iCACAmE,EAAAwO,SAAAK,yBAAA,uCAAAH,EAAA,UAEArU,KAAAyU,YAAAzU,KAAAuU,MAAAxS,WAAA,GACA/B,KAAAyR,WAAAzR,KAAAuU,MAAAxS,WAAA,GAEA,IAAA2S,EAAA1U,KAAAuR,aAAAvR,KAAAqH,QAAAjO,KAAA,cAMA,IALAsb,GAAA1U,KAAAqH,QAAAjO,OACAsb,EAAA1U,KAAAqH,QAAAjO,KAAA,OAEA4G,KAAAqH,QAAAsI,eAAA+E,GAAA,MAEA1U,KAAAqH,QAAAsN,OAAA,CACA,IAAAA,EAAA3U,KAAA4U,qBACA5U,KAAAqH,QAAAsN,SAGA,IAAAE,EAAAf,EAAAnO,EAAA3F,MACA6U,EAAA3K,OACAlK,KAAA8U,sBAAAD,EAAAE,WACA/U,KAAAgV,gBAAAxd,EAAA,GAAAA,CAAAmO,GAEA3F,KAAAiV,WAAAjV,KAAAuH,QACAvH,KAAAkV,cACAlV,KAAA4E,UAAA,eAGAuE,QAAA,SAAAxL,EAAAC,GACAoC,KAAAqH,QAAA1J,MAAAqC,KAAAgU,OAAArW,QACAqC,KAAAgU,OAAApW,SAOA,IAHA,IAOAuX,EAPAC,EAAApV,KAAAwP,iBACA6F,EAAA,EAEAzd,EAAA,EAAAC,EAAAud,EAAAhb,OAAqCxC,EAAAC,EAAOD,IAC5Cyd,GAAA,EAAAD,EAAAxd,GAAA+F,OAIAU,MAAAgX,IAAArV,KAAAqH,QAAAiO,aAEAD,EADAF,EAAAnV,KAAAuV,iBAAA5X,EAAA,IAIAqC,KAAAqH,QAAAiO,YACAtV,KAAAyU,YAAAvW,MAAAP,MAAA0X,EAAA,KACArV,KAAAyR,WAAAvT,MAAAP,MAAA0X,EAAA,OAEArV,KAAAyU,YAAAvW,MAAAP,MAAA,UACAqC,KAAAyR,WAAAvT,MAAAP,MAAA,WAEAqC,KAAAqH,QAAA1J,OAAA,EAEA,IAAAsJ,EAAAjH,KAAAuR,aACA4D,IAAAxX,IACAsJ,EAAAuO,WAAAL,EACAnV,KAAAqH,QAAA1J,MAAAwX,EAAA,GAGA,IAAAM,EAAAjY,KAAAkY,IAAA1V,KAAAgU,OAAApW,OAAAqJ,EAAA0O,aAAA,GACA3V,KAAAyR,WAAAvT,MAAAN,OAAA6X,EAAA,KACAzV,KAAA4V,WAEA9M,QAAA,WAEA,IAAA7B,EAAAjH,KAAAuR,aAEAzB,EAAA9P,KAAAqH,QAAAwO,SAEAC,EAAAhG,EAAA7I,EAAA8O,WAAAjG,EAAAkG,eAAA,EACAC,EAAAjW,KAAAkW,gBAWA,OARAxY,EAAAsC,KAAAgU,OAAArW,MACAJ,EAAAyC,KAAAgU,OAAApW,OACA+M,SAAA3K,KAAAnC,YAAAoY,EAAA,EACArL,SAAA5K,KAAAnC,YAAAoJ,EAAA0O,aAAAG,EAAA,EACAK,aAAAnW,KAAAnC,YAAAiY,EAAA,EACAM,YAAApW,KAAAnC,YAAAoY,EAAA,IAKAL,QAAA,WAEA5V,KAAAqH,QAAAjO,OACA4G,KAAAqH,QAAAwO,SAAA7V,KAAAuH,OAAAqJ,aAAA5Q,KAAAqH,QAAAjO,OAEA4G,KAAAqW,iCAEArW,KAAAsW,sBACAtW,KAAAuW,qBAEAlO,SAAA,SAAArM,EAAAD,GACAiE,KAAAnC,cAGA,EAAA7B,OACAgE,KAAAgU,OAAAnX,WAAAmD,KAAAuU,MAAA1X,WAAAb,GAIA,EAAAD,OACAiE,KAAAgU,OAAAtX,UAAAsD,KAAAyR,WAAA/U,UAAAX,KAIA6T,eAAA,SAAAzX,GAGA,IAFA,IAAAid,EAAApV,KAAAuR,aAAA6D,QAEAxd,EAAA,EAAiBA,EAAAwd,EAAAhb,OAAoBxC,IACrC,GAAAwd,EAAAxd,GAAAO,QACA,OAAAP,EAGA,aAGA4Y,UAAA,SAAArY,GACA,IAAAoR,EAAAvJ,KAAA4P,eAAAzX,GACA,cAAAoR,EACA,KAEAvJ,KAAAuR,aAAA6D,QAAA7L,IAGAiG,eAAA,WAEA,OADAxP,KAAAuR,aACA6D,QAAA3U,SAEA5C,UAAA,WACA,OAAAmC,KAAAoH,SAAApH,KAAAoH,QAAAC,SACArH,KAAAoH,QAAAC,QAAAqC,OAEA1J,KAAAuU,MAAAtX,aAIAoS,WAAA,SAAA/K,GACA,GAAAtE,KAAAqH,QAAAwO,SAAA,CACA,IAAA/F,EAAA9P,KAAAqH,QAAAwO,SACA,OAAA/F,EAEAA,EAAA0G,aAAAlS,GAAAtE,KAAAuR,aAAAwE,WAFA,EAKA,UAIAzG,cAAA,WAEA,OADAtP,KAAAuR,aACAwE,YAGAnB,mBAAA,WACA,IACAzK,EAAAnK,KAUA,QAPAyW,SAJAzW,KAAAuH,OAIAmP,IAAA/B,OAAAgC,SACA1C,UAAAjU,KAAAyR,WACAmF,QAAA,WACA,OAAAzM,EAAAtM,iBAOAoX,WAAA,SAAAtP,GACA,GAAA3F,KAAAqH,QAAAjO,KAAA,CAGA4G,KAAA6W,eAEA,IAAA1M,EAAAnK,KAEA2U,EAAA3U,KAAAuH,OAAAQ,UAAAC,WAAA,UACA8O,EAAAnC,EAAAoC,cAAA/W,KAAAqH,QAAAjO,MAEA0d,IACAA,EAAAnC,EAAAqC,kBACA7e,KAAA6H,KAAAqH,QAAAjO,KACA6d,iBAAA,WAAiC,OAAA9M,EAAAsH,eAKjC,IADA,IAAAyF,EAAAlX,KAAAqH,QAAAsN,OACA/c,EAAA,EAAgBsf,GAAAtf,EAAAsf,EAAA9c,OAAqCxC,IAAA,CACrD,IAAAuf,EAAAD,EAAAtf,GACAuf,EAAAC,KAAApX,KACA,IAAAqX,EAAAP,EAAAQ,SAAAH,GACAnX,KAAA6W,YAAA3U,KAAAmV,GAGArX,KAAAqH,QAAAjO,OACA4G,KAAAqH,QAAAwO,SAAA7V,KAAAuH,OAAAqJ,aAAA5Q,KAAAqH,QAAAjO,OAEA4G,KAAAqW,mCAGAkB,iCAAA,SAAAjT,GACA,IAAA2C,EAAAjH,KAAAuR,aACAzB,EAAA9P,KAAAqH,QAAAwO,SAEA,GAAA/F,GAAA,OAAAxL,GAAAtE,KAAAnC,aAAAoJ,EAAAuQ,gBAAA,CAIA,IAAA1B,EACA,GAAA9V,KAAAqH,QAAAoQ,QAAA,CACA,IAAAC,EAAA1X,KAAAuH,OAAAmP,IAAAiB,QAAA3X,KAAAqH,QAAAoQ,SACAC,IACA5B,EAAA4B,EAAAE,iBAAAC,YAOA,GAJA/B,IACAA,EAAAhG,EAAA7I,EAAA8O,WAAAjG,EAAAkG,eAAA,GAGAF,EAAA,CACA9V,KAAA8X,kBAAA9X,KAAA8X,iBAAArb,YACAuD,KAAA8X,iBAAArb,WAAAuE,YAAAhB,KAAA8X,kBAGA,IAAA9L,EAAAhM,KAAA8X,iBAAAxb,SAAAmD,cAAA,OACAuM,EAAA9N,MAAAF,WAAA,SACAgO,EAAA9N,MAAAN,OAAAkY,EAAA,KACA9J,EAAA9N,MAAAP,MAAA,MACAqC,KAAAyR,WAAA3Q,YAAAkL,MAIAqK,+BAAA,WACA,IAAAvG,EAAA9P,KAAAqH,QAAAwO,SACA/F,IAGA9P,KAAAqW,+BAAA,aAEArW,KAAA+X,iBAAAjI,EAAArU,YAAA,iBAAAoL,EAAAzN,KAAA4G,KAAAuX,iCAAAvX,SAGAkV,YAAA,WACAlV,KAAAgV,gBAAA3K,SAAA,sBAAA1E,MAAAvM,KAAA,SAAAuG,EAAA2E,EAAA7B,GACA,IAAAqN,EAAA9P,KAAAqH,QAAAwO,SACA,IAAA/F,EAAA,SAEA,IAAAnV,EAAAoM,EAAAnE,gBAAAjD,EAAAK,KAAAqH,QAAAsI,gBAKA,OAJAhV,GACAmV,EAAAkI,MAAArd,EAAA2D,aAAA0B,KAAAqH,QAAAsI,kBAGA,GACG3P,WAAAuU,OAEHvU,KAAAgV,gBAAA3K,SAAA,qBAAA1E,MAAAvM,KAAA,SAAAuG,EAAA2E,EAAA7B,GACA,IAAAqN,EAAA9P,KAAAqH,QAAAwO,SACA,IAAA/F,EAAA,SAEA,IAAAnV,EAAAoM,EAAAnE,gBAAAjD,EAAAK,KAAAqH,QAAAsI,gBAKA,OAJAhV,GACAmV,EAAAmI,KAAAtd,EAAA2D,aAAA0B,KAAAqH,QAAAsI,kBAGA,GACG3P,WAAAuU,QAGH2D,aAAA,SAAAvS,GAIA,IAHA,IACAmR,EADA9W,KAAAuH,OAAAQ,UAAAC,WAAA,UACA+O,cAAA/W,KAAAqH,QAAAjO,MAEAxB,EAAA,EAAgBA,EAAAoI,KAAA6W,YAAAzc,OAA6BxC,IAC7Ckf,EAAAqB,YAAAnY,KAAA6W,YAAAjf,IAGAoI,KAAA6W,gBAGAuB,gBAAA,SAAArM,EAAA9E,EAAAtJ,GACA,IAAA0a,EAAAtM,EAAAsM,WAAApR,EAAAqR,sBACAC,EAAA/a,KAAAkY,IAAA/X,EAAA0a,GAAA,IAGA,OAFAtM,EAAAyM,YACAD,EAAA/a,KAAAib,IAAAF,EAAAxM,EAAAyM,YACAD,GAGAG,oBAAA,WAMA,IALA,IAAAzR,EAAAjH,KAAAuR,aACA6D,EAAApV,KAAAwP,iBACAmJ,EAAA,EACAC,EAAA,EAEAhhB,EAAA,EAAgBA,EAAAwd,EAAAhb,OAAkBxC,IAClC+gB,GAAAvD,EAAAxd,GAAAygB,UAAAjD,EAAAxd,GAAAygB,UAAApR,EAAAqR,2BACAvd,IAAA6d,IACAA,EAAAxD,EAAAxd,GAAA4gB,UAAAI,EAAAxD,EAAAxd,GAAA4gB,eAAAzd,GAIA,OAAA4d,EAAAC,IAGArD,iBAAA,SAAAsD,EAAAC,GACA,IAAA7R,EAAAjH,KAAAuR,aACA6D,EAAApV,KAAAwP,iBACAuJ,EAAA,EACAC,EAAAH,EAEAC,EAAAnc,OAAA0B,MAAAya,IAAA,EAAAA,EAEA,QAAAlhB,EAAA,EAAAC,EAAAud,EAAAhb,OAAqCxC,EAAAC,EAAOD,IAC5CmhB,GAAA,EAAA3D,EAAAxd,GAAA+F,MAGA,GAAAhB,OAAA0B,MAAA0a,GAAA,CACA/Y,KAAAsW,sBACAyC,EAAA,EACA,IAAAnhB,EAAA,EAAAC,EAAAud,EAAAhb,OAAsCxC,EAAAC,EAAOD,IAC7CmhB,GAAA,EAAA3D,EAAAxd,GAAA+F,MAIA,IAAAsb,EAAAD,EAAAD,EAEAG,EAAA,EACA,IAAAthB,EAAA,EAAeA,EAAAkhB,EAAA,EAAiBlhB,IAChCshB,GAAA9D,EAAAxd,GAAA+F,MAGAob,GAAAG,EAEA,IAAAthB,EAAAkhB,EAAA,EAA2BlhB,EAAAwd,EAAAhb,OAAkBxC,IAAA,CAE7C,IAAAuhB,EAAA/D,EAAAxd,GACAwhB,EAAA5b,KAAAC,MAAAwb,GAAAE,EAAAxb,MAAAob,IAGAE,EAAA,EACAE,EAAAd,WAAAc,EAAAxb,MAAAyb,EAAAD,EAAAd,UACAe,EAAAD,EAAAd,UAAAc,EAAAxb,OACAwb,EAAAd,WAAApR,EAAAqR,uBAAAa,EAAAxb,MAAAyb,EAAAnS,EAAAqR,wBACAc,EAAAnS,EAAAqR,sBAAAa,EAAAxb,OACIwb,EAAAX,WAAAW,EAAAxb,MAAAyb,EAAAD,EAAAX,YACJY,EAAAD,EAAAX,UAAAW,EAAAxb,OAEAob,GAAAI,EAAAxb,MACAwb,EAAAxb,OAAAyb,EACAH,GAAAG,EAKA,IADA,IAAAC,EAAAJ,EAAA,OACAA,EAAA,OAAAI,GAAAJ,EAAA,QAAAI,GAAA,CACA,IAAAC,EAAAL,EACA,IAAArhB,EAAAkhB,EAAA,EAA0BlhB,EAAAwd,EAAAhb,OAAkBxC,IAAA,CAC5C,IAAA2gB,EAOA,IAPAA,EAAAnD,EAAAxd,GAAA+F,MAAA0b,IAEArZ,KAAAoY,gBAAAhD,EAAAxd,GAAAqP,EAAAsR,KACAU,GAAAI,EACAjE,EAAAxd,GAAA+F,MAAA4a,IAGAU,EACA,MAIA,GAAAK,GAAAL,EACA,MAIAA,GAAAH,GAAA,KACAP,EAAAnD,EAAA0D,GAAAnb,MAAAsb,IACAjZ,KAAAoY,gBAAAhD,EAAA0D,GAAA7R,EAAAsR,KACAnD,EAAA0D,GAAAnb,MAAA4a,IAMA,OAAAvY,KAAAuZ,sBAGAA,mBAAA,WAIA,IAHA,IAAAnE,EAAApV,KAAAwP,iBACAgK,EAAA,EAEA5hB,EAAA,EAAiBA,EAAAwd,EAAAhb,OAAoBxC,IAAA,CACrC,IAAA6hB,EAAAC,WAAAtE,EAAAxd,GAAA+F,OACA,GAAAhB,OAAA0B,MAAAob,GACA,SAEAD,GAAAC,EAEA,OAAAD,GAEAlD,oBAAA,WAOA,IANA,IAAArP,EAAAjH,KAAAuR,aACA6D,EAAApV,KAAAwP,iBACAgK,EAAA,EACAG,KACAhc,KAEA/F,EAAA,EAAiBA,EAAAwd,EAAAhb,OAAoBxC,IAAA,CACrC,IAAA6hB,EAAAC,WAAAtE,EAAAxd,GAAA+F,OACAhB,OAAA0B,MAAAob,KACAA,EAAAxS,EAAAqR,uBAAA,GACAqB,EAAAzX,KAAAtK,IAEA+F,EAAA/F,GAAA6hB,EACAD,GAAAC,EAEA,IAAAG,EAAA5Z,KAAAkW,gBAAA,EACA,GAAAjP,EAAA4S,SAAAF,EAAAvf,OAAA,CACA,IAAA0f,EAAAF,EAAAJ,EAEA,GAAAvS,EAAA4S,QAEA,IAAAjiB,EAAA,EAAmBA,EAAA+F,EAAAvD,OAAkBxC,IAAA,CACrC,IAAAmiB,EAAAvc,KAAAC,MAAAqc,GAAAnc,EAAAvD,OAAAxC,IACA+F,EAAA/F,IAAAmiB,GACAxB,EAAAvY,KAAAoY,gBAAAhD,EAAAxd,GAAAqP,EAAAtJ,EAAA/F,MAEA+F,EAAA/F,KACAmiB,EAAAxB,EAAA5a,EAAA/F,GACA+F,EAAA/F,GAAA2gB,GAEAuB,GAAAC,OAEI,GAAAJ,EAAAvf,OAEJ,IAAAxC,EAAA,EAAmBA,EAAA+hB,EAAAvf,OAAoBxC,IAAA,CACvCmiB,EAAAvc,KAAAC,MAAAqc,GAAAH,EAAAvf,OAAAxC,IAAA,IAGA2gB,EAFAhP,EAAAoQ,EAAA/hB,GACA+F,EAAA4L,IAAAwQ,GACAxB,EAAAvY,KAAAoY,gBAAAhD,EAAA7L,GAAAtC,EAAAtJ,EAAA4L,MACA5L,EAAA4L,KACAwQ,EAAAxB,EAAA5a,EAAA4L,GACA5L,EAAA4L,GAAAgP,GAEAuB,GAAAC,EAIA,IAAAniB,EAAA,EAAkBA,EAAA+F,EAAAvD,OAAkBxC,IACpCwd,EAAAxd,GAAA+F,QAAA/F,OAEG,CACH,IAAAoiB,EAAAJ,GAAAJ,EACAxZ,KAAAqH,QAAA1J,MAAA6b,EAAA,EACAvS,EAAAuO,WAAAgE,EACAQ,GACAha,KAAAoH,QAAA6S,gBAAAja,KAAAqH,QAAA1J,MAAAqC,KAAAqH,QAAAzJ,UAOA2Y,kBAAA,WACA,IAAA5Q,EAAA3F,KAAAuH,OACAN,EAAAjH,KAAAuR,aACA2I,EAAAla,KAAAuH,OAAA2S,OACAC,EAAAna,KAAAuH,OAAA4S,UAEA/E,EAAApV,KAAAwP,iBACAvI,EAAAmT,MACAhF,IAAAiF,WAQA,IANA,IAAAC,KACA3c,EAAA,EACA4c,EAAAL,EAAAK,OAEAC,EAAAvT,EAAA0O,aAAA,EAEA/d,EAAA,EAAiBA,EAAAwd,EAAAhb,OAAoBxC,IAAA,CACrC,IAAA6iB,EAAA7iB,GAAAwd,EAAAhb,OAAA,EACA+e,EAAA/D,EAAAxd,GAGAuhB,EAAAhhB,OACAghB,EAAAhhB,KAAAwN,EAAA3K,MAAA,IAGA,IAAA0f,EAAA,EAAAvB,EAAAxb,MAEAic,EAAA5Z,KAAAkW,gBACAuE,GAAAb,EAAAjc,EAAA+c,IACAvB,EAAAxb,MAAA+c,EAAAd,EAAAjc,GACAA,GAAA+c,EACA,IAAAC,EAAAhV,EAAAiV,OAAAzB,EAAAhhB,MAAAwN,EAAAiV,MAAAziB,KAAA,gCAAAwN,EAAAiV,MAAA9H,UAAA,cACA+H,GAAA,uBACA,mBAAA1B,EAAAhhB,KACAsiB,EAAA,qBACAN,EAAAW,kBAAA3B,EAAAhhB,KAAAghB,IAAA5Y,KAAA,KAEArC,EAAA,UAAAwc,GAAAD,EAAA,YACA/M,EAAAyL,EAAAzL,OAAA6M,EAAA,UAAApB,EAAAhhB,MACAuV,KAAA,GAEA,IAEAtF,EAAA,eAAAyS,EAAA,YAAA3c,EAAA,KAFAyH,EAAAwO,SAAA4G,wBAAA5B,EAAAzL,GAEA,oBAAAyL,EAAAhhB,KAAA,gBAAAghB,EAAAhhB,KAAA,KAAAuV,EAAAiN,EAAA,SACAL,EAAApY,KAAAkG,GAEApI,KAAAyU,YAAAvW,MAAAN,OAAAqJ,EAAA,kBACAjH,KAAAyU,YAAAvW,MAAA8c,WAAAR,EAAA,KAEAxa,KAAAyU,YAAAjT,UAAA8Y,EAAA/Z,KAAA,IAEAP,KAAA8U,uBACA9U,KAAA8U,yBAIAoB,cAAA,WAEA,OAAAlW,KAAAqH,QAAA1J,OAGAkK,WAAA,WACA7H,KAAAkY,aAAAlY,KAAAuH,QACAvH,KAAAgV,gBAAAnN,aACA7H,KAAAgV,gBAAA,KACAhV,KAAAuU,MAAA,KACAvU,KAAAyU,YAAA,KACAzU,KAAAyR,WAAA,KACAzR,KAAAuH,OAAA,KAEAvH,KAAAqH,QAAAwO,WACA7V,KAAAqH,QAAAwO,SAAAja,YAAAoE,KAAA+X,kBACA/X,KAAAqH,QAAAwO,SAAA,MAGA7V,KAAA4E,UAAA,gBACA5E,KAAAkF,oBAIAvN,EAAAD,QAAAqc,oCC1jBApc,EAAAD,QAAA,SAAAiO,GACAA,EAAAuU,QACAvL,MACAsM,YAAA,+GACAC,aAAA,yEACAC,UAAA,wEACAC,WAAA,4CAEAb,QACAc,SAAA,WACAC,UAAA,OACAC,YAAA,SACAC,aAAA,UACAC,UAAA,OACAC,YAAA,SACAC,gBAAA,GACAC,iBAAA,kDACAC,oBAAA,cACAC,aAAA,cACAC,aAAA,OAGAC,WAAA,MACAC,YAAA,YACAC,kBAAA,aACAC,gBAAA,WACAC,WAAA,GAGAC,KAAA,OACAC,sBAAA,kBACAC,WAAA,WACAC,SAAA,SAEAC,UAAA,OACAC,aAAA,UACAC,eAAA,YAEAC,QAAA,UACAC,MAAA,QACAC,KAAA,OACAC,MAAA,OACAC,OAAA,SACAC,MAAA,QAGAC,WAAA,KACAC,eAAA,8BC/CA,IAAAtW,EAAArP,EAAA,GACAqC,EAAArC,EAAA,GAGA,SAAA4lB,EAAAzO,EAAArI,EAAAoM,EAAApO,EAAA+Y,GAMA,OALArd,KAAA2O,OACA3O,KAAAsG,OACAtG,KAAA0S,OACA1S,KAAAsE,KACAtE,KAAAqd,WACArd,KAGA,SAAAsd,EAAA3O,EAAAuE,EAAA5M,EAAAoM,EAAApO,EAAA+Y,GAOA,OANArd,KAAA2O,OACA3O,KAAAkT,MACAlT,KAAAsG,OACAtG,KAAA0S,OACA1S,KAAAsE,KACAtE,KAAAqd,WACArd,KAGA,SAAAud,EAAA/K,EAAAC,EAAAnM,EAAAkX,EAAA9K,EAAApO,EAAA+Y,GAQA,OAPArd,KAAAwS,aACAxS,KAAAyS,WACAzS,KAAAsG,OACAtG,KAAAwd,OACAxd,KAAA0S,OACA1S,KAAAsE,KACAtE,KAAAqd,WACArd,KAGA,SAAAyd,EAAA5K,EAAA6K,EAAAhL,EAAA2K,GAOA,OANArd,KAAAwS,WAAAK,EACA7S,KAAAsS,SAAAoL,EACA1d,KAAA0S,OACA1S,KAAAqd,WACArd,KAAAsG,KAAA,KACAtG,KAAAwd,KAAA,KACAxd,KA6IArI,EAAAD,QA1IA,SAAAiO,GACA,OACAgY,sBAAA,WACA,IAAA1W,EAAA9L,UAAA,GAQA,OANA8L,EADApN,EAAAQ,OAAA4M,IAEA0H,KAAA1H,GAGAJ,EAAAnM,SAA2BuM,IAI3B2W,qBAAA,WACA,OAAAziB,UAAA,IAEA0iB,uBAAA,WACA,OAAA1iB,UAAA,IAEA2iB,oBAAA,WACA,IAKAC,EALA9W,EAAA9L,UAAA,GACA,OAAA8L,aAAAmW,EACAnW,IAQA8W,EAJA9W,EAAA0H,KAIA,IAAAyO,EAAAnW,EAAA0H,KAAA1H,EAAAX,KAAAW,EAAAyL,KAAA,KAAAzL,EAAAoW,UAFA,IAAAD,EAAAjiB,UAAA,GAAAA,UAAA,GAAAA,UAAA,QAAAA,UAAA,KAKAmL,KAAAyX,EAAAzX,MAAAX,EAAAsB,OAAA+W,cAEAD,IAEAE,4BAAA,SAAAC,GACA,IAIAH,EAJA9W,EAAA9L,UAAA,GACA,OAAA8L,aAAAqW,EACArW,GAIA8W,EADAlkB,EAAAQ,OAAA4M,GACA,IAAAqW,EAAArW,GAGA,IAAAqW,EACArW,EAAA0H,KACA1H,EAAAiM,IACAjM,EAAAX,KACAW,EAAAyL,KACA,KACAzL,EAAAoW,UAIApW,EAAA3C,KACAyZ,EAAArL,KAAAzL,GAEA8W,EAAA7K,IAAAjM,EAAAiM,KAAA,MACA6K,EAAAzX,KAAAW,EAAAX,MAAAX,EAAAsB,OAAA+W,cAEAD,IAGAI,mBAAA,SAAAC,GACA,IACAnX,EADAoX,EAAAZ,EAEA,OAAAW,aAAAC,EACAD,GAEAvkB,EAAAQ,OAAA+jB,GACAnX,EAAA,IAAAoX,EAAAljB,UAAA,GAAAA,UAAA,GAAAA,UAAA,GAAAA,UAAA,KAEA8L,EAAA,IAAAoX,EAAAD,EAAA5L,WAAA4L,EAAA9L,SAAA8L,EAAA1L,MACA0L,EAAA9Z,KACA2C,EAAAyL,KAAA0L,IAIAnX,EAAAX,KAAAW,EAAAX,MAAAX,EAAAsB,OAAA+W,cACA/W,EAAAuW,KAAAvW,EAAAuW,MAAA7X,EAAAsB,OAAAqX,cACArX,EAAAuL,WAAAvL,EAAAuL,YAAAvL,EAAA4L,OAAA5L,EAAA0H,KAEA1H,IAGAsX,qBAAA,SAAA1L,EAAA6K,EAAApX,EAAAkX,GACA,OAAAxd,KAAAme,mBAAA5jB,MAAAyF,KAAA7E,YAGAqjB,qBAAA,SAAA3L,EAAA6K,EAAApX,EAAAkX,GACA,OAAAxd,KAAAme,mBAAA5jB,MAAAyF,KAAA7E,YAGAsjB,0BAAA,SAAA5L,EAAAJ,EAAAnM,EAAAkX,GACA,IAIAO,EAJA9W,EAAA9L,UAAA,GACA,OAAA8L,aAAAsW,EACAtW,GAKA8W,EADAlkB,EAAAQ,OAAA4M,GACA,IAAAsW,EACApiB,UAAA,GACAA,UAAA,GACAA,UAAA,QACAJ,EACAI,UAAA,QACAJ,EACAI,UAAA,IAIA,IAAAoiB,EACAtW,EAAAuL,WACAvL,EAAAwL,SACAxL,EAAAX,KACAW,EAAAuW,KACAvW,EAAAyL,KACA,KACAzL,EAAAoW,UAGApW,EAAA3C,KACAyZ,EAAArL,KAAAzL,GAGA8W,EAAAzX,KAAAyX,EAAAzX,MAAAX,EAAAsB,OAAA+W,cACAD,EAAAP,KAAAO,EAAAP,MAAA7X,EAAAsB,OAAAqX,cAEAP,qBChLA,SAAAW,EAAA/Y,EAAAgZ,EAAAC,GACA,QAAAhnB,EAAA,EAAeA,EAAA+mB,EAAAvkB,OAAoBxC,IACnC+N,EAAAkZ,aAAAF,EAAA/mB,MACAgnB,EAAAD,EAAA/mB,IAAA+N,EAAAmZ,QAAAH,EAAA/mB,KAKA,SAAAmnB,EAAApZ,EAAA+M,EAAAkM,GACAF,EAAA/Y,EAAA+M,EAAAsM,QAAAJ,GACAF,EAAA/Y,EAAA+M,EAAAuM,QAAAL,GA2BAjnB,EAAAD,SACAwnB,gBAzBA,SAAAvZ,EAAAwZ,GACA,IAAAjb,KAUA,OARAyB,EAAAyZ,aAAAD,IACAJ,EAAApZ,IAAAsM,QAAAkN,GAAAjb,GAGAyB,EAAA0Z,SAAA,SAAA5d,GACAsd,EAAApZ,EAAAlE,EAAAyC,IACEib,GAEFjb,GAeAob,gBAZA,SAAA3Z,EAAAwZ,GACA,IAAAjb,KAMA,OAJAyB,EAAA0Z,SAAA,SAAA5d,GACAyC,EAAAzC,EAAA6C,IAAA7C,GACE0d,GAEFjb,qBClCA,IAAAqb,EAAA/nB,EAAA,IAqDA,SAAAgoB,EAAA7Z,GACA,IAAA8Z,EAhBA,SAAA9Z,GACA,IAAAW,EAAAX,EAAAsB,OAAAyY,WACAlC,EAAA7X,EAAAsB,OAAAuW,KACA,GAAA7X,EAAAsB,OAAA0Y,qBAAA,CAEA,IAAAC,EAAA,IAAAL,EAAA5Z,GACAka,GAAAD,EAAAE,gBAAA/a,OAAAY,EAAAsB,OAAA8Y,WAEAH,EAAAI,WAAAH,GACAvZ,EAAAuZ,IAAAzlB,OAAA,GAAAkM,KACAkX,EAAAqC,IAAAzlB,OAAA,GAAAojB,MAAA,EAEA,OAASlX,OAAAkX,QAITyC,CAAAta,GACAW,EAAAmZ,EAAAnZ,KACAkX,EAAAiC,EAAAjC,KACA0C,EAzCA,SAAA5Z,EAAAX,GACA,IAAAua,GACA1N,WAAA,KACAF,SAAA,MAGA,GAAA3M,EAAAsB,OAAAuL,YAAA7M,EAAAsB,OAAAqL,SAAA,CACA4N,EAAA1N,WAAA7M,EAAAgJ,KAAArI,EAAA,cAAAhM,KAAAqL,EAAAsB,OAAAuL,aAEA,IAAAkL,EAAA,IAAApjB,KAAAqL,EAAAsB,OAAAqL,UACA6N,EAAAxa,EAAAgJ,KAAArI,EAAA,cAAAhM,KAAAojB,IAEAA,GADAA,IAAAyC,EACAxa,EAAAgJ,KAAAyR,IAAAD,EAAA,EAAA7Z,GAEA6Z,EAGAD,EAAA5N,SAAAoL,EAEA,OAAAwC,EAsBAG,CAAA/Z,EAAAX,GAEAua,EAAA1N,YAAA0N,EAAA5N,YACA4N,EAzDA,SAAAva,GAGA,OAAAA,EAAA2a,kBAsDAC,CAAA5a,IACA6M,YAAA0N,EAAA5N,WACA4N,GAnDA1N,WAAA,IAAAlY,KACAgY,SAAA,IAAAhY,OAqDA4lB,EAAA1N,WAAA7M,EAAAgJ,KAAArI,EAAA,UAAA4Z,EAAA1N,YACA0N,EAAA1N,WAAA7M,EAAA4M,kBACAC,WAAA7M,EAAAgJ,KAAArI,EAAA,UAAA4Z,EAAA1N,YACAC,UAAA,EACAnM,OACAkX,SAGA0C,EAAA5N,SAAA3M,EAAAgJ,KAAArI,EAAA,UAAA4Z,EAAA5N,UACA4N,EAAA5N,SAAA3M,EAAA4M,kBAA2CC,WAAA0N,EAAA5N,SAAAG,SAAA,EAAAnM,OAAAkX,UAG3C7X,EAAA6a,UAAAN,EAAA1N,WACA7M,EAAA8a,UAAAP,EAAA5N,SAkBA3a,EAAAD,QAAA,SAAAiO,GACA6Z,EAAA7Z,GAhBA,SAAAA,GACA,GAAAA,EAAAsB,OAAAyZ,UAAA,CACA,IAAAC,GAAAhb,EAAA6a,UACAI,GAAAjb,EAAA8a,UAEA,IAAA9a,EAAA6a,WAAAG,IAAAhb,EAAA8a,WAAAG,EAIA,OAHAjb,EAAAJ,SAEAI,EAAAf,UAAA,uBACA,GAQAic,CAAAlb,qBClGA,IAAAmb,EAAAtpB,EAAA,IACAqP,EAAArP,EAAA,GACAsP,EAAAtP,EAAA,GACAupB,EAAAvpB,EAAA,IAEAwpB,EAAA,SAAA/Z,GAiCA,OAhCAjH,KAAAihB,aAEAjhB,KAAAkhB,QACAlhB,KAAAmhB,UAAAla,EAAAma,SACAphB,KAAAqhB,gBAAApa,EAAAqa,gBAAA,SAEA,mBAAAra,EAAAkY,OACAnf,KAAAuhB,WAAA,SAAAC,GACA,kBAAqB,OAAAA,GADrB,CAEGva,EAAAkY,QAAA,GAEHnf,KAAAuhB,WAAAta,EAAAkY,OAIAnf,KAAAyhB,eAAAxa,EAAAya,cAEA1hB,KAAA2hB,aAAAb,EAAAc,UACA5hB,KAAA6hB,UAAAf,EAAAc,UACA5hB,KAAA8hB,uBACA9hB,KAAA+hB,eAAA,EAEAjb,EAAA9G,MAEAA,KAAAvE,YAAA,wBAAA6I,EAAAsN,GACA,IAAAqG,GAAA,EAIA,OAHAjY,KAAAgiB,WAAA,SAAA1e,GACA2U,KAAA3U,EAAA2e,QAAAtc,MAAAuc,YAAA5e,IACGsO,KACHqG,IAGAjY,MAGAghB,EAAAxnB,UAAAqN,EAAAnM,OAEAynB,WAAA,SAAAC,GAGA,IAFA,IAAAxQ,EAAA,KACAuN,EAAAnf,KAAAuhB,aACA3pB,EAAA,EAAAoK,EAAAogB,EAAAhoB,OAAqCxC,EAAAoK,EAASpK,IAC9Cga,EAAAwQ,EAAAxqB,GACAoI,KAAAqiB,UAAAzQ,EAAA5R,KAAAsiB,UAAA1Q,IAAAuN,GAIA,IAAAvnB,EAAA,EAAAoK,EAAAogB,EAAAhoB,OAAqCxC,EAAAoK,EAASpK,IAC9Cga,EAAAwQ,EAAAxqB,GACAoI,KAAAuiB,YAAA3Q,GACAA,EAAA4Q,OAAAxiB,KAAAyiB,mBAAA7Q,GAEA/K,EAAArM,QAAAoX,EAAAqQ,SACArQ,EAAAqQ,MAAApb,EAAArM,QAAAoX,EAAAqG,MAAArG,EAAAqG,KAAAjY,KAAAyhB,kBAIAzhB,KAAA0iB,gBAGAC,MAAA,SAAAP,GACApiB,KAAA4E,UAAA,iBAAAwd,IACA,IAAAQ,EAAA5iB,KAAA6iB,YAAAT,GACApiB,KAAAmiB,WAAAS,GACA5iB,KAAA4W,SACA5W,KAAA4E,UAAA,WAAAge,KAGAE,cAAA,SAAAlR,EAAArI,GAEA,IAAAjG,EAAAtD,KAAAsiB,UAAA1Q,GAEA/K,EAAArM,QAAA8I,KACAA,EAAAtD,KAAAuhB,aACAvhB,KAAAqiB,UAAAzQ,EAAAtO,IAGA,IACAyf,EADA/iB,KAAAwW,aAAAlT,GACA9F,KAAAib,IAAAjb,KAAAkY,IAAAnM,EAAA,GAAAvJ,KAAA2hB,aAAAvnB,QAEA,EAAA2oB,QACAA,OAAAhoB,GAEAgmB,EAAAvnB,UAAAspB,cAAA/qB,KAAAiI,KAAA4R,EAAAmR,GACA/iB,KAAAqiB,UAAAzQ,EAAAtO,GAEAsO,EAAAnY,eAAA,qBACAuG,KAAAgjB,aAAApR,IAAAqR,kBAEAjjB,KAAAuiB,YAAA3Q,EAAArI,IAEA2Z,eAAA,SAAArS,EAAAC,GACA,IAAAqS,EAAAnjB,KAAAojB,YAAAvS,GACA8Q,EAAA3hB,KAAA8hB,oBAAAjR,GAEAkQ,EAAAvnB,UAAA0pB,eAAAnrB,KAAAiI,KAAA6Q,EAAAC,GAEA,IAAAxN,EAAAtD,KAAAsiB,UAAAxR,GAEA9Q,KAAAqjB,sBAAA/f,EAAAuN,EAAAC,GACA,QAAAlZ,EAAA,EAAiBA,EAAAurB,EAAA/oB,OAAqBxC,IACtCoI,KAAAqiB,UAAAriB,KAAA6R,QAAAsR,EAAAvrB,IAAAkZ,GAGA9Q,KAAA8hB,oBAAAhR,GAAA6Q,SACA3hB,KAAAihB,UAAApQ,IAGAyS,kBAAA,SAAAC,EAAAjgB,GACAA,KAAAtD,KAAAuhB,aACA,IAAAiC,EAAAxjB,KAAAihB,UAAA3d,GACA,GAAAkgB,EACA,QAAA5rB,EAAA,EAAmBA,EAAA4rB,EAAAppB,OAAmBxC,IAAA,CACtC,IAAAuX,EAAAqU,EAAA5rB,GACA2rB,EAAAxrB,KAAAiI,KAAAmP,GACAnP,KAAAihB,UAAA9R,IACAnP,KAAAsjB,kBAAAC,EAAApU,KAKAuT,aAAA,SAAAa,GAEAvjB,KAAA6hB,UAAAf,EAAAc,UACA5hB,KAAAsjB,kBAAA,SAAAG,GACAzjB,KAAA6hB,UAAA3f,KAAAuhB,KAGAF,GACAxC,EAAAvnB,UAAAkpB,aAAA3qB,KAAAiI,KAAAujB,IAGAG,iBAAA,SAAApf,GAEA,IAAAqf,KACA3jB,KAAA4jB,SAAA,SAAAniB,GACAkiB,EAAAzhB,KAAAT,IACI6C,GAEJqf,EAAAzhB,KAAAlC,KAAA6R,QAAAvN,IAEA,QAAA1M,EAAA,EAAiBA,EAAA+rB,EAAAvpB,OAAkBxC,IAEnCoI,KAAAgjB,aAAAW,EAAA/rB,GAAAoI,KAAAsiB,UAAAqB,EAAA/rB,IAAA,MACAmpB,EAAAvnB,UAAAkqB,iBAAA3rB,KAAAiI,KAAA2jB,EAAA/rB,GAAA0M,IACAtE,KAAAgjB,aAAAW,EAAA/rB,GAAAoI,KAAAsiB,UAAAqB,EAAA/rB,IAAA,OAIAisB,KAAA,SAAAC,EAAAC,EAAAzgB,GAEA,IAAAgB,EAAAnJ,UAAA,GACA,GAAAmJ,EAAA,CACA,GAAAA,IAAAwf,EAAA,OAEAxgB,EAAAtD,KAAAsiB,UAAAhe,GACAyf,EAAA/jB,KAAAgkB,eAAA1f,GAEA,GAAAwf,GAAAxgB,EAAA,CAGAA,KAAAtD,KAAAuhB,aACA,IAAA3mB,EAAAoF,KAAA6R,QAAAiS,GACAG,EAAAjkB,KAAAsiB,UAAA1nB,EAAA0J,IAGA4f,GAFAlkB,KAAAojB,YAAApjB,KAAAsiB,UAAA1nB,EAAA0J,KAEAtE,KAAAojB,YAAA9f,IAIA,IAFA,GAAAygB,IACAA,EAAAG,EAAA9pB,OAAA,GACA6pB,GAAA3gB,EAEA,GADAtD,KAAAgkB,eAAAF,IACAC,EAAA,OAGA,QAAA/jB,KAAA4E,UAAA,oBAAAkf,EAAAxgB,EAAAygB,IAAA,CAGA/jB,KAAAqjB,sBAAAY,EAAAH,IACAI,EAAAlkB,KAAAojB,YAAA9f,IAEAygB,GAIAG,IAAAzjB,MAAA,EAAAsjB,GAAAhf,QAAA+e,IAAA/e,OAAAmf,EAAAzjB,MAAAsjB,IAFAG,EAAAhiB,KAAA4hB,GAIA9jB,KAAAqiB,UAAAznB,EAAA0I,GACAtD,KAAAihB,UAAA3d,GAAA4gB,EAEA,IAAApK,EAAA9Z,KAAAyiB,mBAAA7nB,KAAA4nB,OACA5nB,EAAA4nB,QAAA1I,EACA9Z,KAAA4jB,SAAA,SAAAhS,GACAA,EAAA4Q,QAAA1I,GACIlf,EAAA0J,GAAAtE,MAGJA,KAAAmkB,WAAAnkB,KAAAwW,aAAAsN,GAAA9jB,KAAAwW,aAAAlT,GAAAygB,GAEA/jB,KAAA4E,UAAA,mBAAAkf,EAAAxgB,EAAAygB,IACA/jB,KAAA4V,aAGAoO,eAAA,SAAA1f,GAEA,IADA,IAAAkf,EAAAxjB,KAAAojB,YAAApjB,KAAAsiB,UAAAhe,IACA1M,EAAA,EAAkBA,EAAA4rB,EAAAppB,OAAmBxC,IACrC,GAAA4rB,EAAA5rB,IAAA0M,EACA,OAAA1M,EAEA,UAEAwsB,SAAA,SAAA9f,GACA,OAAAuC,EAAArM,QAAAwF,KAAAihB,UAAA3c,KAAAtE,KAAAihB,UAAA3c,GAAAlK,QAEAgpB,YAAA,SAAA9e,GACA,OAAAuC,EAAArM,QAAAwF,KAAAihB,UAAA3c,IAAAtE,KAAAihB,UAAA3c,GAAAwc,EAAAc,WAGAve,UAAA,SAAAghB,EAAAC,GACA,IAAAtkB,KAAAmR,OAAAkT,GACA,SACA,GAAAC,IAAAtkB,KAAAuhB,aACA,SAEA,IAAAvhB,KAAAokB,SAAAE,GACA,SAEA,IAAA1S,EAAA5R,KAAA6R,QAAAwS,GACAE,EAAAvkB,KAAAsiB,UAAA+B,GAGA,GADArkB,KAAA6R,QAAAyS,GACA9B,QAAA5Q,EAAA4Q,OACA,SAGA,KAAA5Q,GAAA5R,KAAAmR,OAAAoT,IAAA,CAGA,IAFA3S,EAAA5R,KAAA6R,QAAA0S,KAEA3S,EAAAtN,IAAAggB,EACA,SACAC,EAAAvkB,KAAAsiB,UAAA1Q,GAEA,UAGA4S,YAAA,SAAAlgB,GACA,IAAAtE,KAAAmR,OAAA7M,GACA,OAAAwc,EAAAc,UAEA,IAAAte,EAAAtD,KAAAsiB,UAAAhe,GACA,OAAAtE,KAAAojB,YAAA9f,IAGAmhB,eAAA,SAAAngB,GAEA,IADA,IAAAogB,EAAA1kB,KAAAwkB,YAAAlgB,GACA1M,EAAA,EAAAoK,EAAA0iB,EAAAtqB,OAAuCxC,EAAAoK,EAASpK,IAChD,GAAA8sB,EAAA9sB,IAAA0M,EACA,OAAAogB,EAAA9sB,EAAA,SAEA,aAEA+sB,eAAA,SAAArgB,GAEA,IADA,IAAAogB,EAAA1kB,KAAAwkB,YAAAlgB,GACA1M,EAAA,EAAAoK,EAAA0iB,EAAAtqB,OAAuCxC,EAAAoK,EAASpK,IAChD,GAAA8sB,EAAA9sB,IAAA0M,EACA,OAAAogB,EAAA9sB,EAAA,SAEA,aAEA0qB,UAAA,SAAAhe,GACA,IAAAsN,EAAA,KAaA,OAXAA,OADA7W,IAAAuJ,KACAA,EAEAtE,KAAA6R,QAAAvN,IAKAsN,EAAA5R,KAAAqhB,iBAEArhB,KAAAuhB,cAMAqD,SAAA,WACA5kB,KAAAihB,aACAF,EAAAvnB,UAAAorB,SAAA7sB,KAAAiI,OAGAyiB,mBAAA,SAAA7Q,GACA,IAAAiT,EAAA,EAIA,OAHA7kB,KAAAgiB,WAAA,WACA6C,KACIjT,GACJiT,GAGAC,gBAAA,SAAAlT,EAAAmT,EAAAC,GACAA,IACApT,EAAAnY,eAAA,oBACAuG,KAAAgjB,aAAApR,IAAAqR,iBAAA8B,GAEA/kB,KAAAgjB,aAAApR,IAAA5R,KAAAqhB,iBAAA0D,KAIA1C,UAAA,SAAAzQ,EAAAmT,EAAAC,GACAhlB,KAAA8kB,gBAAAlT,EAAAmT,EAAAC,GAEApT,EAAA5R,KAAAqhB,iBAAA0D,GAEAnB,SAAA,SAAAL,EAAAjgB,GACAA,KAAAtD,KAAAuhB,aAGA,IAAAiC,EAAAxjB,KAAAojB,YAAA9f,GACA,GAAAkgB,EACA,QAAA5rB,EAAA,EAAiBA,EAAA4rB,EAAAppB,OAAiBxC,IAAA,CAClC,IAAAga,EAAA5R,KAAAkhB,KAAAsC,EAAA5rB,IACA2rB,EAAAxrB,KAAAiI,KAAA4R,GACA5R,KAAAokB,SAAAxS,EAAAtN,KACAtE,KAAA4jB,SAAAL,EAAA3R,EAAAtN,MAGA0d,WAAA,SAAAuB,EAAA0B,GAGA,IAFA,IAAArT,EAAAqT,EACA3hB,EAAAtD,KAAAsiB,UAAA1Q,GACA5R,KAAAmR,OAAA7N,IACAsO,EAAA5R,KAAA6R,QAAAvO,GACAigB,EAAAxrB,KAAAiI,KAAA4R,GACAtO,EAAAtD,KAAAsiB,UAAA1Q,IAGA2Q,YAAA,SAAA3Q,EAAArI,EAAAjG,GACA,IAAAihB,OAAAxpB,IAAAuI,EAAAtD,KAAAsiB,UAAA1Q,GAAAtO,EACAtD,KAAAokB,SAAAG,KACAvkB,KAAAihB,UAAAsD,GAAAzD,EAAAc,WAGA,IAFA,IAAA4B,EAAAxjB,KAAAojB,YAAAmB,GACAW,GAAA,EACAttB,EAAA,EAAAwC,EAAAopB,EAAAppB,OAAyCxC,EAAAwC,EAAYxC,IACrD,GAAA4rB,EAAA5rB,IAAAga,EAAAtN,GAAA,CACA4gB,GAAA,EACA,MAGAA,IACA,EAAA3b,KAEAia,EAAA9iB,OAAA6I,EAAA,EAAAqI,EAAAtN,IAEAkf,EAAAthB,KAAA0P,EAAAtN,IAGAsN,EAAAqR,iBAAAsB,IAGAvB,aAAA,SAAApR,EAAAuT,EAAAC,GAGAplB,KAAAqjB,sBAAA8B,EAAAvT,EAAAtN,IACAtE,KAAAmR,OAAAiU,OAAAplB,KAAAuhB,aAEAvhB,KAAAuiB,YAAA3Q,OAAA7W,EAAAqqB,UAEAplB,KAAAihB,UAAArP,EAAAtN,IAEAsN,EAAA4Q,OAAAxiB,KAAAyiB,mBAAA7Q,GACA5R,KAAA4jB,SAAA,SAAAniB,GACAA,EAAA+gB,OAAAxiB,KAAAyiB,mBAAAhhB,IACImQ,EAAAtN,KAGJ+e,sBAAA,SAAAvlB,EAAAunB,EAAAC,GACA,IAAA9B,EAAAxjB,KAAAojB,YAAAtlB,GACA,GAAA0lB,QAAAzoB,IAAA+C,EAAA,CAEA,IADA,IAAAynB,EAAAzE,EAAAc,UACAhqB,EAAA,EAAiBA,EAAA4rB,EAAAppB,OAAiBxC,IAClC4rB,EAAA5rB,IAAAytB,EACAE,EAAArjB,KAAAshB,EAAA5rB,IACA0tB,GACAC,EAAArjB,KAAAojB,GAEAtlB,KAAAihB,UAAAnjB,GAAAynB,IAKA5K,KAAA,SAAA6K,EAAAC,EAAAniB,GACAtD,KAAAmR,OAAA7N,KACAA,EAAAtD,KAAAuhB,cAGAiE,MAAA,SACA,IAAAE,EAAA,4BAAAlnB,EAAA+E,GACA,OAAA/E,EAAAgnB,IAAAjiB,EAAAiiB,GACA,EAGAhnB,EAAAgnB,GAAAjiB,EAAAiiB,GACA,MACIA,EAEJ,GAAAC,EAAA,CACA,IAAAE,EAAAD,EACAA,EAAA,SAAAlnB,EAAA+E,GACA,OAAAoiB,EAAApiB,EAAA/E,IAIA,IAAAonB,EAAA5lB,KAAAojB,YAAA9f,GACA,GAAAsiB,EAAA,CAEA,IADA,IAAAC,KACAjuB,EAAAguB,EAAAxrB,OAAA,EAAgCxC,GAAA,EAAQA,IACxCiuB,EAAAjuB,GAAAoI,KAAA6R,QAAA+T,EAAAhuB,IAEAiuB,EAAAlL,KAAA+K,GAEA,IAAA9tB,EAAA,EAAmBA,EAAAiuB,EAAAzrB,OAAiBxC,IACpCguB,EAAAhuB,GAAAiuB,EAAAjuB,GAAA0M,GACAtE,KAAA2a,KAAA6K,EAAAC,EAAAG,EAAAhuB,MAKAgf,OAAA,SAAAkP,GACA,QAAAluB,KAAAoI,KAAAkhB,KACAlhB,KAAAkhB,KAAAtpB,GAAAqrB,mBAAAjjB,KAAAsiB,UAAAtiB,KAAAkhB,KAAAtpB,KACAoI,KAAAgjB,aAAAhjB,KAAAkhB,KAAAtpB,GAAAoI,KAAAkhB,KAAAtpB,GAAAqrB,iBAAAjjB,KAAAsiB,UAAAtiB,KAAAkhB,KAAAtpB,KAGA,OAAAmpB,EAAAvnB,UAAAod,OAAArc,MAAAyF,KAAA7E,YAGA8c,KAAA,SAAA3T,GACAtE,KAAAmR,OAAA7M,KACAtE,KAAA6R,QAAAvN,GAAA2d,OAAA,EACAjiB,KAAA4E,UAAA,cAAAN,MAIA0T,MAAA,SAAA1T,GACAtE,KAAAmR,OAAA7M,KACAtE,KAAA6R,QAAAvN,GAAA2d,OAAA,EACAjiB,KAAA4E,UAAA,eAAAN,MAIAuD,WAAA,WACAkZ,EAAAvnB,UAAAqO,WAAA9P,KAAAiI,MACAA,KAAAihB,UAAA,OAGAF,EAAAvnB,WAGA7B,EAAAD,QAAAspB,mBC/cA,IAAAna,EAAArP,EAAA,GAEAuuB,GACAnE,QAAA,SAAAoE,GACA,OAAAnf,EAAAnM,MAAAsrB,MAAAhmB,OAGAimB,UAAA,SAAA/iB,EAAAlB,GACAkB,GAAA,GAAAlD,KAAAU,OAAAwC,EAAAlB,GAAA,IAGAkkB,QAAA,SAAArtB,GACAmH,KAAAimB,UAAAjmB,KAAAmmB,MAAAttB,KAGAutB,UAAA,SAAAhE,EAAAlf,GACA,GAAAA,GAAA,IAAAA,EAEA,CACA,IAAAK,EAAAvD,KAAAU,OAAAwC,EAAAlD,KAAA5F,OAAA8I,GACAlD,KAAAkD,GAAAkf,EACApiB,KAAAkC,KAAA3H,MAAAyF,KAAAuD,QAJAvD,KAAAkC,KAAAkgB,IAQA+D,MAAA,SAAA/D,GACA,QAAAxqB,EAAA,EAAeA,EAAAoI,KAAA5F,OAAexC,IAC9B,GAAAwqB,GAAApiB,KAAApI,GAAA,OAAAA,EACA,UAGAyuB,MAAA,SAAAnrB,EAAAorB,GACA,QAAA1uB,EAAA,EAAeA,EAAAoI,KAAA5F,OAAiBxC,IAChCsD,EAAAnD,KAAAuuB,GAAAtmB,UAAApI,KAGA2uB,KAAA,SAAArrB,EAAAorB,GACA,QAAA1uB,EAAA,EAAeA,EAAAoI,KAAA5F,OAAiBxC,IAChCoI,KAAApI,GAAAsD,EAAAnD,KAAAuuB,GAAAtmB,UAAApI,IACA,OAAAoI,MAEAwmB,QAAA,SAAAtrB,EAAAorB,GACA,QAAA1uB,EAAA,EAAeA,EAAAoI,KAAA5F,OAAiBxC,IAChCsD,EAAAnD,KAAAuuB,GAAAtmB,UAAApI,MACAoI,KAAAU,OAAA9I,EAAA,GACAA,KAEA,OAAAoI,OAIArI,EAAAD,QAAAquB,mBCnDA,IAAAjF,EAAAtpB,EAAA,IACAqP,EAAArP,EAAA,GACAsP,EAAAtP,EAAA,GAEAupB,EAAA,SAAA9Z,GASA,OARAjH,KAAAkhB,QACAlhB,KAAAmhB,UAAAla,EAAAma,SACAphB,KAAA2hB,aAAAb,EAAAc,UACA5hB,KAAA6hB,UAAAf,EAAAc,UACA5hB,KAAA+hB,eAAA,EACA/hB,KAAAymB,YAAA,KACAzmB,KAAA8hB,uBACAhb,EAAA9G,MACAA,MAEA+gB,EAAAvnB,WAEAqpB,YAAA,SAAAT,GAGA,IAFA,IAAAxQ,EAAA,KACAgR,KACAhrB,EAAA,EAAAoK,EAAAogB,EAAAhoB,OAAmCxC,EAAAoK,EAAQpK,IAC3Cga,EAAAwQ,EAAAxqB,GACAoI,KAAAmhB,YACAvP,EAAA5R,KAAAmhB,UAAAvP,IAEA5R,KAAA4E,UAAA,iBAAAgN,MACA5R,KAAAkhB,KAAAznB,eAAAmY,EAAAtN,MACAtE,KAAA6hB,UAAA3f,KAAA0P,EAAAtN,IACAse,EAAA1gB,KAAA0P,IAEA5R,KAAAkhB,KAAAtP,EAAAtN,IAAAsN,GAGA,OAAAgR,GAEAD,MAAA,SAAAP,GACApiB,KAAA4E,UAAA,iBAAAwd,IACA,IAAAQ,EAAA5iB,KAAA6iB,YAAAT,GACApiB,KAAA4V,UACA5V,KAAA4E,UAAA,WAAAge,KAEA/Q,QAAA,SAAAvN,GACA,OAAAtE,KAAAkhB,KAAA5c,IAGAoe,aAAA,SAAAa,GACAA,EAAAxrB,KAAAiI,KAAA2hB,cACA4B,EAAAxrB,KAAAiI,KAAA6hB,YAEAlP,WAAA,SAAArO,EAAAsN,GAGA,GAFA/K,EAAArM,QAAAoX,OAAA5R,KAAA6R,QAAAvN,KAEAtE,KAAA+hB,gBACA,IAAA/hB,KAAA4E,UAAA,kBAAAgN,EAAAtN,GAAAsN,IAAA,SAEA5R,KAAAkhB,KAAA5c,GAAAsN,EACA5R,KAAA+hB,gBACA/hB,KAAA4E,UAAA,iBAAAgN,EAAAtN,GAAAsN,IACA5R,KAAA4E,UAAA,kBAAAgN,EAAAtN,GAAAsN,EAAA,aAIA8R,iBAAA,SAAApf,GAGAtE,KAAA0iB,aAAA,WAA+B1iB,KAAAkmB,QAAA5hB,YAC/BtE,KAAAkhB,KAAA5c,IAGAoiB,WAAA,SAAApiB,GAGA,IAAA7J,EAAAuF,KAAA6R,QAAAvN,GACA,IAAAtE,KAAA+hB,gBACA,IAAA/hB,KAAA4E,UAAA,kBAAAnK,EAAA6J,GAAA7J,IAAA,SAGAuF,KAAA0jB,iBAAApf,GAEAtE,KAAA+hB,gBACA/hB,KAAA4W,SACA5W,KAAA4E,UAAA,iBAAAnK,EAAA6J,GAAA7J,IAEAuF,KAAA4E,UAAA,kBAAAnK,EAAA6J,GAAA7J,EAAA,aAIAqoB,cAAA,SAAAlR,EAAArI,GAIA,GAAAvJ,KAAAmR,OAAAS,EAAAtN,IACAtE,KAAAglB,OAAA,WAA0BhlB,KAAA2S,WAAAf,EAAAtN,GAAAsN,SACvB,CACH,IAAA+U,EAAA3mB,KAAA2hB,aAGAiF,EAAAD,EAAAvsB,SAEAyM,EAAArM,QAAA+O,MAAA,KACAA,EAAAqd,GAEArd,EAAAqd,IAEArd,EAAA/L,KAAAib,IAAAkO,EAAAvsB,OAAAmP,IAOAvJ,KAAAkhB,KAAAtP,EAAAtN,IAAAsN,EACA5R,KAAA+hB,eACA/hB,KAAA0iB,aAAA,YACA,IAAA1iB,KAAAmmB,MAAAvU,EAAAtN,KACAtE,KAAAomB,UAAAxU,EAAAtN,GAAAiF,KAGAvJ,KAAA4W,UAKA/Y,UAAA,SAAAyG,GACA,OAAAtE,KAAA2hB,aAAAwE,MAAA7hB,IAAA,GAEAuiB,gBAAA,WACA,OAAA7mB,KAAA8mB,iBAGAC,QAAA,SAAAnV,EAAArI,GAQA,OAPA1C,EAAArM,QAAAoX,EAAAtN,MACAsN,EAAAtN,GAAAuC,EAAA7L,OAEAgF,KAAAmhB,YACAvP,EAAA5R,KAAAmhB,UAAAvP,OAGA5R,KAAA+hB,gBACA,IAAA/hB,KAAA4E,UAAA,eAAAgN,EAAAtN,GAAAsN,OAIA5R,KAAA8iB,cAAAlR,EAAArI,GAEAvJ,KAAA+hB,gBACA/hB,KAAA4E,UAAA,cAAAgN,EAAAtN,GAAAsN,IAEA5R,KAAA4E,UAAA,kBAAAgN,EAAAtN,GAAAsN,EAAA,SAEAA,EAAAtN,KAGA4e,eAAA,SAAArS,EAAAC,GACA9Q,KAAAkhB,KAAArQ,KACA7Q,KAAAkhB,KAAApQ,GAAA9Q,KAAAkhB,KAAArQ,IAEA,IAAA8Q,EAAA3hB,KAAA8hB,oBAAAjR,GACA7Q,KAAAkhB,KAAApQ,GAAAxM,GAAAwM,EACA9Q,KAAA0iB,aAAA,WACA1iB,UAAAmmB,MAAAtV,IAAAC,IAEA9Q,KAAA8hB,oBAAAhR,GAAA6Q,SACA3hB,KAAA8hB,oBAAAjR,UAGA7Q,KAAAkhB,KAAArQ,IAEAmW,SAAA,SAAAnW,EAAAC,GACA9Q,KAAAkjB,eAAArS,EAAAC,GAEA9Q,KAAA4E,UAAA,cAAAiM,EAAAC,KAGAK,OAAA,SAAA7M,GACA,QAAAtE,KAAAkhB,KAAA5c,IAGA6f,WAAA,SAAA8C,EAAAlD,GACA,IAAAzf,EAAAtE,KAAAknB,aAAAD,GAEAjnB,KAAA0iB,aAAA,WACA1iB,KAAAimB,UAAAgB,GACAjnB,KAAAomB,UAAA9hB,EAAA9G,KAAAib,IAAAzY,KAAA5F,OAAA2pB,OAOAF,KAAA,SAAAoD,EAAAlD,GAGA,IAAAzf,EAAAtE,KAAAknB,aAAAD,GACAxsB,EAAAuF,KAAA6R,QAAAvN,GACAtE,KAAAmkB,WAAA8C,EAAAlD,GAGA/jB,KAAA+hB,eAEA/hB,KAAA4E,UAAA,kBAAAnK,EAAA6J,GAAA7J,EAAA,UAGAmqB,SAAA,WACA5kB,KAAAkhB,QACAlhB,KAAA2hB,aAAAb,EAAAc,UACA5hB,KAAA6hB,UAAAf,EAAAc,UACA5hB,KAAA+hB,gBACA/hB,KAAA4E,UAAA,iBACA5E,KAAA4V,YAGAoP,OAAA,SAAAzB,EAAA+C,GACAtmB,KAAA+hB,eAAA,EACAwB,EAAAxrB,KAAAuuB,GAAAtmB,MACAA,KAAA+hB,eAAA,GAGAoF,YAAA,SAAAC,EAAAC,GACA,GAAAD,EAAAhtB,SAAAitB,EAAAjtB,OACA,SACA,QAAAxC,EAAA,EAAgBA,EAAAwvB,EAAAhtB,OAAiBxC,IACjC,GAAAwvB,EAAAxvB,KAAAyvB,EAAAzvB,GACA,SAGA,UAGAge,QAAA,SAAAtR,EAAAgjB,GACA,IAAAtnB,KAAA+hB,cAAA,CAEA,GAAAzd,GAEA,IAAAgjB,EAAA,CACA,IAAAC,EAAAvnB,KAAA2hB,aACA3hB,KAAA4W,SACA5W,KAAAmnB,YAAAI,EAAAvnB,KAAA2hB,gBACArd,OAAAvJ,SAKAiF,KAAA4W,SAGAtS,EACAtE,KAAA4E,UAAA,kBAAAN,EAAAtE,KAAAkhB,KAAA5c,GAAA,UAEAtE,KAAA4E,UAAA,qCAGA4iB,MAAA,WACA,OAAAxnB,KAAA6hB,UAAAznB,QAEA4b,aAAA,WACA,OAAAhW,KAAA2hB,aAAAvnB,QAGAugB,KAAA,SAAAA,KAEA8M,UAAA,aAEA7D,SAAA,SAAAL,GACA,QAAA3rB,EAAA,EAAeA,EAAAoI,KAAA6hB,UAAAznB,OAAyBxC,IAAA,CACxC,IAAAga,EAAA5R,KAAAkhB,KAAAlhB,KAAA6hB,UAAAjqB,IACA2rB,EAAAxrB,KAAAiI,KAAA4R,KAIAgF,OAAA,SAAAkP,GACA,IAAA4B,EAAA5G,EAAAc,UACA5hB,KAAA4jB,SAAA,SAAAhS,GACA5R,KAAA4E,UAAA,gBAAAgN,EAAAtN,GAAAsN,KACA8V,EAAAxlB,KAAA0P,EAAAtN,MAIAtE,KAAA2hB,aAAA+F,EACA1nB,KAAA8hB,uBACA,QAAAlqB,EAAA,EAAgBA,EAAAoI,KAAA2hB,aAAAvnB,OAA8BxC,IAC9CoI,KAAA8hB,oBAAA9hB,KAAA2hB,aAAA/pB,OAIAkvB,cAAA,SAAAa,EAAAC,GACAA,EAAApqB,KAAAib,IAAAmP,GAAAC,IAAA7nB,KAAAgW,eAAA,GAGA,IADA,IAAA8R,KACAlwB,EAAA+vB,GAAA,EAAuB/vB,GAAAgwB,EAAShwB,IAChCkwB,EAAA5lB,KAAAlC,KAAA6R,QAAA7R,KAAA2hB,aAAA/pB,KACA,OAAAkwB,GAEAC,SAAA,WACA,IAAA7jB,KACA,QAAAtM,KAAAoI,KAAAkhB,KACAhd,EAAAhC,KAAAlC,KAAAkhB,KAAAtpB,IAKA,OAAAsM,GAGAgjB,aAAA,SAAA3d,GACA,OAAAvJ,KAAA2hB,aAAApY,IAEAiN,aAAA,SAAAlS,GACA,IAAAJ,EAAAlE,KAAA8hB,oBAAAxd,GAIA,YAHAvJ,IAAAmJ,IACAA,GAAA,GAEAA,GAEA8jB,oBAAA,SAAAnvB,GACA,YAAAkC,IAAAlC,EACA,KAEAA,GAGAovB,SAAA,WACA,OAAAjoB,KAAAgoB,oBAAAhoB,KAAA2hB,aAAA,KAEAuG,QAAA,WACA,OAAAloB,KAAAgoB,oBAAAhoB,KAAA2hB,aAAA3hB,KAAA2hB,aAAAvnB,OAAA,KAEAqZ,QAAA,SAAAnP,GACA,OAAAtE,KAAAgoB,oBAAAhoB,KAAA2hB,aAAA3hB,KAAAwW,aAAAlS,GAAA,KAEAoP,QAAA,SAAApP,GACA,OAAAtE,KAAAgoB,oBAAAhoB,KAAA2hB,aAAA3hB,KAAAwW,aAAAlS,GAAA,KAEAuD,WAAA,WACA7H,KAAAkF,kBACAlF,KAAAkhB,KAAA,KACAlhB,KAAAmhB,UAAA,KACAnhB,KAAA2hB,aAAA,KACA3hB,KAAA6hB,UAAA,KACA7hB,KAAA+hB,cAAA,KACA/hB,KAAAymB,YAAA,KACAzmB,KAAA8hB,oBAAA,OAIAnqB,EAAAD,QAAAqpB,iBCTAppB,EAAAD,QAhVA,SAAAiO,GAeA,SAAAwiB,EAAAzV,EAAApH,GACA,IAAA3F,EAAAyiB,0BAAA1V,GAAA,CAIA,IAAAxP,EAAAoI,EAAA+c,gBAAA3V,GAEA+M,EAAAnU,EAAAiG,aACA4I,EAAA7O,EAAAgd,gBACA1qB,EAAA0N,EAAAgE,gBAEAiZ,EAAA5iB,EAAA6iB,YAAA9V,EAAAlB,MAEAiX,EAAAjrB,KAAAiO,OAAA9F,EAAAsB,OAAA8O,WAAAnY,GAAA,GACA2qB,GAAA9I,EAAAiJ,MAAAC,WAAAlJ,EAAAmJ,gBAAA,IAEAH,GAAA,GAGAF,GAAA9I,EAAAiJ,MAAAC,YACAzlB,EAAAlH,MAAAwB,KAAAC,MAAAG,EAAA,GACAsF,EAAAvF,MAAAC,GAGA,IAAAgD,EAAAtE,SAAAmD,cAAA,OAEA9B,EAAAH,KAAAC,MAAAyF,EAAAvF,OAEA2N,EAAAjE,QAAAsI,gBACA/O,EAAA8O,aAAApE,EAAAjE,QAAAsI,eAAA+C,EAAApO,IAGAmb,EAAAoJ,eAAAN,GAAA9I,EAAAiJ,MAAAC,WA+HA,SAAAjW,EAAAoW,EAAA9f,EAAAyW,EAAAtF,GACA,IAAA4O,EAAA,EAAArW,EAAAsW,UAAA,EAEAhgB,EAAAxL,KAAAkY,IAAA1M,EAAA,KACA,IAAAigB,EAAA3sB,SAAAmD,cAAA,OACA9B,EAAAH,KAAAC,MAAAuL,EAAA+f,GAEAprB,EAAAH,KAAAib,IAAAzP,EAAArL,GACA+U,EAAAwW,gBACAD,EAAA/qB,MAAAirB,gBAAAzW,EAAAwW,cACAD,EAAA/qB,MAAAkrB,QAAA,GAEAH,EAAA/qB,MAAAP,QAAA,KACAsrB,EAAA7pB,UAAA,sBACA6pB,EAAAznB,UAAA2Y,EAAAkP,cAAA3W,EAAAF,WAAAE,EAAAJ,SAAAI,GAEA+M,EAAArF,MACA6O,EAAA/qB,MAAAorB,SAAA,WACAL,EAAA/qB,MAAAjC,MAAA,OAGA,IAAAstB,EAAAjtB,SAAAmD,cAAA,OAKA,GAJA8pB,EAAAnqB,UAAA,8BACAmqB,EAAAzoB,YAAAmoB,GACAH,EAAAhoB,YAAAyoB,GAEA5jB,EAAAsB,OAAAuiB,gBAAA7jB,EAAA8jB,WAAA/W,GAAA,CACA,IAAAgX,EAAAptB,SAAAmD,cAAA,OAEAkqB,EAAAhsB,EACA8hB,EAAArF,MACAuP,EAAA3gB,EAAArL,GAGA+rB,EAAAxrB,MAAAlC,KAAA2tB,EAAA,KACAD,EAAAtqB,UAAA,2BACA6pB,EAAAnoB,YAAA4oB,GACAZ,EAAAhoB,YAAA4oB,IAnKAE,CAAAlX,EAAA9R,EAAAjD,EAAA8hB,EAAAtF,GAIA,IAAAvQ,EAiHA,SAAA8I,EAAA/U,EAAAwc,GACA,IAAAvQ,EAAAtN,SAAAmD,cAAA,OAKA,OAJAkG,EAAA6iB,YAAA9V,EAAAlB,OAAA7L,EAAAsB,OAAAyhB,MAAAC,YACA/e,EAAApI,UAAA2Y,EAAA0P,UAAAnX,EAAAF,WAAAE,EAAAJ,SAAAI,IACA9I,EAAAxK,UAAA,qBAEAwK,EAvHAkgB,CAAApX,EAAA/U,EAAAwc,GACAzH,EAAAqX,YACAngB,EAAA1L,MAAA8rB,MAAAtX,EAAAqX,WAEAnpB,EAAAE,YAAA8I,GAEA,IAAA/H,EAqLA,SAAAooB,EAAAC,EAAA/a,EAAA7D,GACA,IAAAmU,EAAAnU,EAAAiG,aACA1P,GAAAooB,GACAC,GACAroB,EAAAK,KAAAgoB,GAEA,IAAAvY,EAAAhM,EAAAoL,WAEA2B,EAAA/M,EAAAsM,QAAA9C,GAwCA,GAtCAxJ,EAAA6iB,YAAA9V,EAAAlB,OAAAiO,EAAAiJ,MAAAC,UACA9mB,EAAAK,KAAA,mBACGyD,EAAA6iB,YAAA9V,EAAAlB,OAAAiO,EAAAiJ,MAAAyB,SACHtoB,EAAAK,KAAA,iBAGAL,EAAAK,KAAA,aAAAyD,EAAA6iB,YAAA9V,EAAAlB,OAGA7L,EAAAykB,cAAA1X,IACA7Q,EAAAK,KAAA,wBAEAyD,EAAAuc,YAAAxP,IACA7Q,EAAAK,KAAA,sBAGAud,EAAA4K,aAAAlb,GAAAwC,EAAA2Y,eACAzoB,EAAAK,KAAA,kBAEAiN,GAAAwC,EAAA4Y,UACA1oB,EAAAK,KAAA,cAAAyP,EAAA6Y,WACA7Y,EAAA8Y,YACA5oB,EAAAK,KAAA,eAAAyP,EAAA6Y,YAIA7Y,EAAA+Y,gBAAAvb,GACAtN,EAAAK,KAAA,qBAEAyP,EAAAgZ,gBAAAxb,GACAtN,EAAAK,KAAA,qBAGAud,EAAAmL,yBAAAjlB,EAAAklB,gBACAllB,EAAAklB,eAAAnY,IACA7Q,EAAAK,KAAA,uBAGAyP,EAAAmZ,mBACAnZ,EAAAgZ,gBAAAhZ,EAAA+Y,gBACA/Y,EAAAgZ,gBAAAhZ,EAAA+Y,eAAA,CAEA,IAAAK,EAAApZ,EAAA+Y,eACAM,EAAArZ,EAAAsZ,gBACAC,EAAAvZ,EAAAwZ,cAEAC,EAAAzlB,EAAA0lB,cAAAN,EAAA5b,EAAA6b,EAAAE,GAEAI,EAAA,GAGAA,EAFAF,EACAF,EACA,mBAEA,oBAEAA,EACA,kBAEA,mBAEArpB,EAAAK,KAAAopB,GAEA,OAAAzpB,EAAAtB,KAAA,KA7PAgrB,CAAA,kBACApR,EAAAqR,WAAA9Y,EAAAF,WAAAE,EAAAJ,SAAAI,GACAA,EAAApO,GACAgH,IACAoH,EAAAsX,OAAAtX,EAAAwW,eAAAxW,EAAAqX,aACAloB,GAAA,4BAEAjB,EAAAxB,UAAAyC,EAEA,IAAA4pB,GACA,QAAAvoB,EAAAlH,KAAA,KACA,QAAAysB,EAAAvlB,EAAAnH,KAAA,KACA,UAAA6B,EAAA,KACA,eAAAJ,KAAAkY,IAAA9X,EAAA,GAAAA,EAAA,EAAAA,EAAA,QACA,SAAAD,EAAA,MAEA+U,EAAAsX,OACAyB,EAAAvpB,KAAA,oBAAAwQ,EAAAsX,OAEAtX,EAAAqX,WACA0B,EAAAvpB,KAAA,SAAAwQ,EAAAqX,WAGAnpB,EAAA1C,MAAA2C,QAAA4qB,EAAAlrB,KAAA,KACA,IAAAmrB,EAsDA,SAAAhZ,EAAA+M,EAAAtF,GACA,IAAAtY,EAAA,cAAA8pB,GAAAlM,EAAArF,IAAA1H,GACA,OAAAkZ,EAAAlZ,EAAAyH,EAAA0R,cAAAhqB,GAxDAiqB,CAAApZ,EAAA+M,EAAAtF,GACAuR,GAAA9qB,EAAAE,YAAA4qB,IAEAA,EAwDA,SAAAhZ,EAAA+M,EAAAtF,GACA,IAAAtY,EAAA,eAAA8pB,IAAAlM,EAAArF,IAAA1H,GACA,OAAAkZ,EAAAlZ,EAAAyH,EAAA4R,eAAAlqB,GA1DAmqB,CAAAtZ,EAAA+M,EAAAtF,KACAvZ,EAAAE,YAAA4qB,GAEA/lB,EAAAwO,SAAA8X,eAAAvZ,EAAA9R,GAEA,IAAA+Q,EAAAhM,EAAAoL,WAgCA,OA9BApL,EAAA8jB,WAAA/W,KACA+M,EAAAyM,cAAAvmB,EAAAykB,cAAA1X,IAAA6V,GAAA9I,EAAAiJ,MAAAC,WACAwD,EAAAvrB,EAAA,kBAAA8R,EAAA,SAAA7Q,GACA,IAAAxG,EAAAiB,SAAAmD,cAAA,OAEA,OADApE,EAAA+D,UAAAyC,EACAxG,GACKokB,GAELA,EAAA2M,YAAA3M,EAAA4M,YACAF,EAAAvrB,EAAA,qBAAA8R,EAAA,SAAA7Q,GACA,IAAAyqB,EAAAhwB,SAAAmD,cAAA,OACA6sB,EAAAltB,UAAAyC,EACAyqB,EAAApuB,MAAA2C,SACA,UAAAjD,EAAA,KACA,eAAAA,EAAA,MACA2C,KAAA,KACA,IAAAgsB,EAAAjwB,SAAAmD,cAAA,OACA8sB,EAAAntB,UAAA,mBAEA,IAAAotB,GAAA,EAOA,OANA7a,EAAA+Y,gBAAAjL,EAAAgN,QACAD,GAAA,GAGAD,EAAAruB,MAAAH,QAAAyuB,EAAA,WACAF,EAAAxrB,YAAAyrB,GACAD,GACK7M,IAGL7e,GAGA,SAAAgrB,EAAAlZ,EAAAwX,EAAArP,GACA,IAAAqP,EAAA,YAEA,IAAAzb,EAAAyb,EAAAxX,EAAAF,WAAAE,EAAAJ,SAAAI,GACA,IAAAjE,EAAA,YACA,IAAA7E,EAAAtN,SAAAmD,cAAA,OAGA,OAFAmK,EAAAxK,UAAA,sBAAAyb,EACAjR,EAAApI,UAAAiN,EACA7E,EAaA,SAAA+hB,EAAA3vB,EAAA0W,GACA,IAAAga,EAoEA,SAAAC,GACA,OAAAA,GAEA3N,SACArZ,EAAAsB,OAAA2lB,MAAAC,gBAEA5N,SACAtZ,EAAAsB,OAAA2lB,MAAAC,eACAlnB,EAAAsB,OAAA2lB,MAAAE,mBAKA9N,SACArZ,EAAAsB,OAAA2lB,MAAAE,gBACAnnB,EAAAsB,OAAA2lB,MAAAG,kBAEA9N,SACAtZ,EAAAsB,OAAA2lB,MAAAG,mBAtFAC,CAAAhxB,GAEA,QAAApE,KAAA80B,EAEA,IADA,IAAAE,EAAAla,EAAA9a,GACAq1B,EAAA,EAAmBA,EAAAL,EAAAxyB,OAAmB6yB,IAGtC,IAFA,IAAA5Q,EAAA1W,EAAAmZ,QAAA8N,EAAAK,IAEAC,EAAA,EAAoBA,EAAAR,EAAA90B,GAAAwC,OAAqB8yB,IACzC,GAAA7Q,EAAA7K,MAAAkb,EAAA90B,GAAAs1B,GACA,4BAKA,SAyJA,SAAAf,EAAA7oB,EAAAzB,EAAA6Q,EAAA9I,EAAA3C,GACA,IACA6hB,EADAnX,EAAAhM,EAAAoL,YAEA2B,EAAAF,aAAAb,EAAAwb,YAEArE,EAAAlf,GADA/H,EAAAoF,EAAAmT,IAAA,4CACA7Z,KAAA,OACAmP,aAAA,mCACApM,EAAAxC,YAAAgoB,KAGApW,EAAAJ,WAAAX,EAAAyb,YAEAtE,EAAAlf,GADA/H,EAAAoF,EAAAmT,IAAA,0CACA7Z,KAAA,OACAmP,aAAA,iCACApM,EAAAxC,YAAAgoB,IAKA,OA3UA,SAAApW,EAAApH,GACA,IAEAmL,EAFAnL,EAAAiG,aACA8b,eACA1nB,EAAA6iB,YAAA9V,EAAAlB,OACA8b,EAAAnF,EAEA,OAAA1R,EAGAA,EAAA1e,KAAA4N,EAAA+M,EAAA,SAAAA,GAAoD,OAAA4a,EAAAv1B,KAAA4N,EAAA+M,EAAApH,IAAiDA,GAFrGgiB,EAAAv1B,KAAA4N,EAAA+M,EAAApH,oBC2BA3T,EAAAD,QApCA,SAAA4V,GACA,OACAsI,QAAA,WACA5V,KAAAutB,mBACAjgB,EAAA9T,UAAAoc,QAAArb,MAAAyF,KAAA7E,YAGAoyB,iBAAA,WAEA,GAAAvtB,KAAAqH,QAAAwO,UAAA7V,KAAAuH,OAAAimB,MAAAC,WAAA,CACA,IAKAC,EALAC,EAAA3tB,KAAAuH,OAAAimB,MAAAC,WACAG,EAAA5tB,KAAAqH,QAAAwO,SAEA8X,EAAA,aAAAC,EAAAz1B,QACAw1B,EAAA,aAAAC,EAAAz1B,OAAA,EAEAw1B,EAAAlyB,YAAA,0BAAA6I,EAAAsN,EAAA7Y,GACA4D,OAAAkxB,uBACAC,qBAAAJ,GACAA,EAAAG,sBAAA,WACAD,EAAAhY,aAGAgY,EAAAhY,aAMA5V,KAAAutB,iBAAA,kCC5BA,IAAAhO,EAAA/nB,EAAA,KA+BAG,EAAAD,QA7BA,SAAAiO,GACA,IAAAia,EAAA,IAAAL,EAAA5Z,GAyBA,OAvBAia,EAAAmO,eAAA,SAAA9mB,GACA,IAAA+mB,EAAA/mB,EAAAugB,MAEA,GADAvgB,EAAAgnB,YACAtoB,EAAAuoB,aAAAvoB,EAAAsB,OAAAknB,cAAA,CACA,IAAAC,EAAAzoB,EAAAuoB,aAAA,WACA,UAEAF,EAAA,EAEA,QAAAp2B,EAAA,EAAkBA,EAAAqP,EAAAonB,QAAAj0B,OAA2BxC,IAE7Cw2B,EAAAr2B,KAAA4N,EAAAsB,EAAAonB,QAAAz2B,KAAAoI,KAAAsuB,oBAAAv2B,KAAA4N,EAAAsB,EAAAonB,QAAAz2B,GAAAqP,IACAA,EAAAgnB,SAAAhnB,EAAAonB,QAAAz2B,GAAAqD,YAAA,EACAgM,EAAAsnB,eAAA,GAEAP,IAKA/mB,EAAA+mB,iBAGApO,oBC7BA,IAAAL,EAAA/nB,EAAA,IACAsP,EAAAtP,EAAA,GACAqP,EAAArP,EAAA,GAEAg3B,EAAAh3B,EAAA,KAEAi3B,EAAA,SAAAnrB,EAAA2D,EAAAC,EAAAvB,GACA3F,KAAAqH,QAAAR,EAAAnM,SAA8BuM,OAC9BjH,KAAA0uB,aAAA,IAAAnP,EAAA5Z,GACA3F,KAAAuH,OAAA5B,EACAmB,EAAA9G,OAgoBA,SAAA2uB,EAAA3I,EAAArrB,GAIA,IADA,IAAA/C,EAAAga,EAAAgd,EAAAC,EAAA,EAAAC,EAAA9I,EAAA5rB,OAAA,EACAy0B,GAAAC,GAKA,GAFAld,GAAAoU,EADApuB,EAAA4F,KAAAiO,OAAAojB,EAAAC,GAAA,IAEAF,GAAA5I,EAAApuB,EAAA,GACAga,EAAAjX,EACAk0B,EAAAj3B,EAAA,MADA,CAIA,KAAAga,EAAAjX,GAAA,CAUA,MAAAqrB,EAAApuB,KAAAouB,EAAApuB,EAAA,IAAAA,IAEA,OAAAA,EAXA,IAAAyG,MAAAuwB,MAAAj0B,EAKA,OAAA/C,EAAA,EAJAk3B,EAAAl3B,EAAA,EAYA,OAAAouB,EAAA5rB,OAAA,EAxpBAq0B,EAAAj1B,WACA0Q,KAAA,SAAA+J,GACAA,EAAAzS,WAAA,uEACAxB,KAAA+uB,MAAA9a,EAAAlS,WAAA,GAEA/B,KAAA+uB,MAAAvtB,UAAA,0EACAxB,KAAAgvB,YAAAhvB,KAAA+uB,MAAAhtB,WAAA,GAEA/B,KAAAivB,WAAAjvB,KAAA+uB,MAAAhtB,WAAA,GACA/B,KAAAivB,WAAAztB,UAAA,2GACAxB,KAAAkvB,SAAAlvB,KAAAivB,WAAAltB,WAAA,GACA/B,KAAAmvB,YAAAnvB,KAAAivB,WAAAltB,WAAA,GACA/B,KAAAovB,WAAApvB,KAAAivB,WAAAltB,WAAA,GAEA/B,KAAAqvB,QACAC,UAAA,EACA3xB,SACA4xB,WAAA,EACAlB,WACAmB,aAGA,IAAAvoB,EAAAjH,KAAAuR,aACAmD,EAAAzN,EAAAjH,KAAAqH,QAAAjO,KAAA,cACAq2B,EAAAxoB,EAAAjH,KAAAqH,QAAAqoB,UAAA,eACAhb,GAAA1U,KAAAqH,QAAAjO,OACAsb,EAAA1U,KAAAqH,QAAAjO,KAAA,QAEAq2B,GAAAzvB,KAAAqH,QAAAqoB,YACAD,EAAAzvB,KAAAqH,QAAAqoB,UAAA,OAEA1vB,KAAAqH,QAAAsI,eAAA+E,GAAA,KACA1U,KAAAqH,QAAAsoB,eAAAF,GAAA,KAEA,IAAA9a,EAAA3U,KAAA4U,qBACA5U,KAAAqH,QAAAsN,SACA3U,KAAAqH,QAAAsN,SAAAgZ,OAEA3tB,KAAAqH,QAAAuoB,aACA5vB,KAAAqH,QAAAuoB,WAAAjb,EAAAiY,OAGA5sB,KAAA6vB,cAAA7vB,KAAAuH,QACAvH,KAAA4E,UAAA,eAIAuE,QAAA,SAAAxL,EAAAC,GACA,IAAAqJ,EAAAjH,KAAAuR,aAKA,GAHA,EAAA5T,QACAqC,KAAAqH,QAAA1J,SAEA,EAAAC,MAAA,CAEAoC,KAAAqH,QAAAzJ,SACA,IAAA6X,EAAAjY,KAAAkY,IAAA1V,KAAAqH,QAAAzJ,OAAAqJ,EAAA0O,cACA3V,KAAAivB,WAAA/wB,MAAAN,OAAA6X,EAAA,KAMA,GAHAzV,KAAA4V,UACA5V,KAAAkvB,SAAAhxB,MAAA4xB,gBAAA,GAEA7oB,EAAAuQ,iBAAAxX,KAAAqH,QAAAwO,SAAA,CACA,IAAA/F,EAAA9P,KAAAqH,QAAAwO,SACA7V,KAAAkvB,SAAAhxB,MAAAN,OAAAqJ,EAAA8O,WAAAjG,EAAAkG,eAAA,UAEAhW,KAAAkvB,SAAAhxB,MAAAN,OAAA,GAMA,IAHA,IAAAmyB,EAAA/vB,KAAAqvB,OAEAW,EAAAhwB,KAAAivB,WAAAltB,WACAnK,EAAA,EAAAoK,EAAAguB,EAAA51B,OAAsCxC,EAAAoK,EAASpK,IAAA,CAC/C,IAAAyD,EAAA20B,EAAAp4B,GACAyD,EAAA6D,aAAA,eAAA7D,EAAA6C,QACA7C,EAAA6C,MAAAP,MAAAoyB,EAAAR,WAAA,QAIA1xB,UAAA,WACA,OAAAmC,KAAAoH,SAAApH,KAAAoH,QAAAC,SACArH,KAAAoH,QAAAC,QAAAqC,OAEA1J,KAAA+uB,MAAA9xB,aAIA6L,QAAA,WACA,IAAA7B,EAAAjH,KAAAuR,aACAzB,EAAA9P,KAAAqH,QAAAwO,SAEAC,EAAAhG,EAAA7I,EAAA8O,WAAAjG,EAAAkG,eAAA,EACAC,EAAAjW,KAAAqvB,OAAAE,WAEA,OACA7xB,EAAAsC,KAAAqH,QAAA1J,MACAJ,EAAAyC,KAAAqH,QAAAzJ,OACA+M,SAAA3K,KAAAnC,YAAAoY,EAAA,EACArL,SAAA5K,KAAAnC,YAAAoJ,EAAA0O,aAAAG,EAAA,EACAK,aAAAnW,KAAAnC,YAAAiY,EAAA,EACAM,YAAApW,KAAAnC,YAAAoY,EAAA,IAIA5N,SAAA,SAAArM,EAAAD,GACAiE,KAAAnC,cAGA,EAAA9B,QACAiE,KAAAqH,QAAA3K,UAAAX,EACAiE,KAAAivB,WAAAvyB,UAAAsD,KAAAqH,QAAA3K,WAEA,EAAAV,QACAgE,KAAA+uB,MAAAlyB,WAAAb,EACAgE,KAAAqH,QAAAxK,WAAAmD,KAAA+uB,MAAAlyB,WACAmD,KAAAiwB,oBAIAA,eAAA,WACA,GAAAjwB,KAAAnC,aAGAmC,KAAAuR,aACA2e,aAAA,CAEA,IAAAxyB,EAAAsC,KAAAqH,QAAAxK,WACAc,EAAAqC,KAAAqH,QAAA1J,MAEAkiB,EAAA7f,KAAAmwB,QACAnwB,KAAAgvB,YAAAxtB,UAAAxB,KAAAowB,mBAAAvQ,EAAAniB,IAAAC,KAEAiX,mBAAA,WACA,IAAAzK,EAAAnK,KACAqwB,EAAA,WACA,OAAAlmB,EAAAtM,aAqCA,OACA8vB,QAjCA2C,QAAA,EACA7Z,SAAAzW,KAAAuH,OAAAmP,IAAA/B,OAAA4b,QACAtc,UAAAjU,KAAAovB,WACAxY,QAAAyZ,KAGA5Z,SAAAzW,KAAAuH,OAAAmP,IAAA/B,OAAA6b,aACA5Z,QAAAyZ,GACApc,UAAAjU,KAAAovB,WACAqB,QAAA,IAGAha,SAAAzW,KAAAuH,OAAAmP,IAAA/B,OAAA+b,OACAzc,UAAAjU,KAAAkvB,SACAtY,QACA,WACA,OAAAzM,EAAAoH,aAAAof,mBAEAN,KAgBAzD,QATA0D,QAAA,EACA7Z,SAAAzW,KAAAuH,OAAAmP,IAAA/B,OAAA0H,KACApI,UAAAjU,KAAAmvB,YACAvY,QAAAyZ,OAWAR,cAAA,SAAAlqB,GACA3F,KAAA6W,eACA7W,KAAA4wB,eAEA,IAAAzmB,EAAAnK,KAEA2U,EAAA3U,KAAAuH,OAAAQ,UAAAC,WAAA,UAEA,GAAAhI,KAAAqH,QAAAjO,KAAA,CAEA+Q,EAAA9C,QAAAwO,SAAA1L,EAAA5C,OAAAqJ,aAAAzG,EAAA9C,QAAAjO,MAEA,IAAA0d,EAAAnC,EAAAoC,cAAA/W,KAAAqH,QAAAjO,MAEA0d,IACAA,EAAAnC,EAAAqC,kBACA7e,KAAA6H,KAAAqH,QAAAjO,KACA6d,iBAAA,WAAkC,OAAA9M,EAAA8kB,eAIlCnY,EAAA7C,UAAA,WAAuC,OAAA9J,EAAA8kB,YAGvC,IADA,IAAA/X,EAAAlX,KAAAqH,QAAAsN,OACA/c,EAAA,EAAiBsf,GAAAtf,EAAAsf,EAAA9c,OAAqCxC,IAAA,CAGtD,iBAFAuf,EAAAD,EAAAtf,MAGAuf,EAAAnX,KAAAuH,OAAAmP,IAAA/B,OAAAwC,IAGA,mBAAAA,IACAA,GAAcV,SAAAU,IAGdA,EAAAC,KAAApX,KACA,IAAAqX,EAAAP,EAAAQ,SAAAH,GACAnX,KAAA6W,YAAA3U,KAAAmV,GACAF,EAAAmZ,SACAtwB,KAAA6wB,cAAA/Z,EAAAga,SAAAzZ,IAIArX,KAAA+wB,8BAGA,GAAA/wB,KAAAqH,QAAAqoB,UAAA,CACAvlB,EAAA9C,QAAA2pB,UAAA7mB,EAAA5C,OAAAqJ,aAAAzG,EAAA9C,QAAAqoB,WAEA,IAAAuB,EAAAtc,EAAAoC,cAAA/W,KAAAqH,QAAAqoB,WAEAuB,IACAA,EAAAtc,EAAAqC,kBACA7e,KAAA6H,KAAAqH,QAAAqoB,UACAzY,iBAAA,WAAkC,OAAA9M,EAAA8kB,eAGlC,IAAAW,EAAA5vB,KAAAqH,QAAAuoB,WACA,IAAAh4B,EAAA,EAAiBg4B,GAAAh4B,EAAAg4B,EAAAx1B,OAAqCxC,IAAA,CAMtD,IAAAuf,EAJA,iBAAAA,IACAA,EAAAnX,KAAAuH,OAAAmP,IAAA/B,OAAAwC,KAGAA,EAAAyY,EAAAh4B,IACAwf,KAAApX,KACA,IAAAkxB,EAAAD,EAAA3Z,SAAAH,GACAnX,KAAA6W,YAAA3U,KAAAgvB,GACAtB,EAAAh4B,GAAA04B,SACAtwB,KAAAmxB,cAAAF,EAAAH,SAAAI,OAMAH,4BAAA,WACA,IAAA5mB,EAAAnK,KACAoxB,EAAA5C,EAAAt1B,SACA4W,EAAA3F,EAAA9C,QAAAwO,SACA/F,IAEA9P,KAAA+X,iBAAAjI,EAAArU,YAAA,0BAAA6I,EAAAsN,EAAA7Y,GACA,UAAAuL,GAIA6F,EAAAtM,YAAA,CAEA,IAAAoJ,EAAAkD,EAAAoH,aACA,GAAAtK,EAAA0pB,kBAAA,CACA,IAAA7gB,EAAA3F,EAAA5C,OAAAqJ,aAAAzG,EAAA9C,QAAAjO,MACA0W,GACAshB,EAAA7rB,OAAA4E,EAAA+kB,SAAAjoB,EAAAkD,EAAAknB,WAAApqB,EAAA8O,WAAAjG,EAAAkG,oBAKAhW,KAAA+wB,4BAAA,eAGA7Y,aAAA,SAAAvS,GAKA,IAJA,IAAAgP,EAAA3U,KAAAuH,OAAAQ,UAAAC,WAAA,UACA8O,EAAAnC,EAAAoC,cAAA/W,KAAAqH,QAAAjO,MACA63B,EAAAtc,EAAAoC,cAAA/W,KAAAqH,QAAAqoB,WAEA93B,EAAA,EAAgBA,EAAAoI,KAAA6W,YAAAzc,OAA6BxC,IAC7Ckf,EAAAqB,YAAAnY,KAAA6W,YAAAjf,IAEA,IAAAA,EAAA,EAAgBA,EAAAoI,KAAA4wB,YAAAx2B,OAA6BxC,IAC7Cq5B,EAAA9Y,YAAAnY,KAAA4wB,YAAAh5B,IAGAoI,KAAA4wB,eACA5wB,KAAA6W,gBAGAya,qBAAA,WACA,IAAArqB,EAAAjH,KAAAuR,aAEAggB,EAAA,GACAC,EAAA,EACA7b,EAAA,EAEAhE,EAAA3R,KAAAuH,OAAAwJ,WAEA,GAAA/Q,KAAAnC,YAAA,CACA,IAAA4zB,EAAAzxB,KAAA0uB,aACA7O,EAAA7f,KAAA0xB,aACA/b,EAAA1O,EAAA0O,aAEA,IAAAgc,EAAA3xB,KAAAqH,QAAA1J,MACA,KAAAsJ,EAAA2qB,UAAA,MAAA3qB,EAAA2qB,WACAD,EAAAn0B,KAAAkY,IAAAzO,EAAA4qB,mBAAA,IAGA,IAAAC,EAAAL,EAAAM,eAAAlS,EAAA5Y,EAAA+qB,iBAAAL,EAAAhc,EAAA,EAAAhE,EAAAwb,SAAAxb,EAAAyb,SAAAnmB,EAAAmT,KACAqF,EAAAzf,KAAAqvB,OAAAyC,IAAA13B,OAAA,GACA4F,KAAAmwB,QAAA2B,EAEAP,EAAAvxB,KAAAowB,mBAAA0B,EAAA,EAAA9xB,KAAAqH,QAAA1J,OAEA6zB,EAAA/R,EAAA8P,WAAA,KACA5Z,GAAA,KAGA3V,KAAAgvB,YAAA9wB,MAAAN,OAAA+X,EAEA3V,KAAAivB,WAAA/wB,MAAAP,MACAqC,KAAAgvB,YAAA9wB,MAAAP,MAAA6zB,EAEAxxB,KAAAgvB,YAAAxtB,UAAA+vB,GAIAnB,mBAAA,SAAAvQ,EAAAoS,EAAAC,GAKA,IAJA,IACAnoB,KAEAlI,EAHA7B,KAAAuH,OAAAQ,UAAAoS,YAGAgY,gBACAv6B,EAAA,EAAiBA,EAAAioB,EAAAzlB,OAAmBxC,IAAA,CACpC,IAAAijB,EAAA,mBACAuX,EAAAvwB,EAAAge,EAAAjoB,IACAw6B,IACAvX,GAAA,IAAAuX,GAGAroB,EAAA7H,KAAA,eAAA2Y,EAAA,mBAAAgF,EAAAjoB,GAAA,OACA,oCAA0BioB,EAAAjoB,GAAA,cAAAoI,KAAAqyB,kBAAAxS,EAAAjoB,GAAAq6B,EAAAC,GAAA,UAG1B,OAAAnoB,EAAAxJ,KAAA,KAEA8xB,kBAAA,SAAAprB,EAAAgrB,EAAAC,GACA,IAAAI,EAAAtyB,KAAAuR,aACAghB,EAAAvyB,KAAAuH,OAAAQ,UAAAoS,YAEAG,KACA3L,EAAA,KAAA/E,EAAA,KAAA/H,EAAA,MAEAoF,EAAAijB,UAAAjjB,EAAA0H,QACA/E,EAAA3C,EAAAijB,UAAAlqB,KAAAuH,OAAAoH,KAAA6jB,YAAAvrB,EAAA0H,OAGA,IAAA8jB,EAAA,EACAC,EAAAzrB,EAAAugB,OAEA8K,EAAApC,cAAA7xB,MAAA4zB,IAAA5zB,MAAA6zB,KACAO,EAAA9D,EAAA1nB,EAAAjL,KAAAi2B,GACAS,EAAA/D,EAAA1nB,EAAAjL,KAAAk2B,GAAA,GAGArwB,EAAAoF,EAAApF,KAAA,cAEAoF,EAAApF,KAAAywB,EAAAK,sBACA9wB,EAAA0wB,EAAAK,kBAGA,QAAAh7B,EAAA66B,EAA0B76B,EAAA86B,GAC1BzrB,EAAAonB,QAAAz2B,GADwCA,IAAA,CAGxC+W,EAAA,IAAArU,KAAA2M,EAAAonB,QAAAz2B,IACA,IAAAiB,EAAA+Q,EAAA7R,KAAAiI,KAAA2O,GACAhR,EAAAsJ,EAAAtJ,MAAA/F,GACAgG,EAAAqJ,EAAArJ,OACA5B,EAAAiL,EAAAjL,KAAApE,GACAsG,EAAA,GACAgsB,EAAA,GACA2I,EAAA,GAEA,GAAAl1B,EAAA,CAGAO,EAAA,wBAAqCN,EAAA,OAFrC00B,EAAApC,aAAA,0BAAmEl0B,EAAA,SAGnE62B,EAAA,oBAAAj7B,GAAAqP,EAAAugB,MAAA,0BAEA0C,EAAAroB,EAAA9J,KAAAiI,KAAA2O,MACAkkB,GAAA,IAAA3I,GAEA,IACA9hB,EAAA,eAAAyqB,EAAA,IADA7yB,KAAAuH,OAAA4M,SAAA2e,oBAAAj6B,GACA,WAAAqF,EAAA,KAAArF,EAAA,SACAyhB,EAAApY,KAAAkG,IAMA,OAAAkS,EAAA/Z,KAAA,KAEAwyB,YAAA,SAAAr1B,GACA,IAAAqyB,EAAA/vB,KAAAqvB,OACA,GAAA3xB,EAAA,GAAAA,EAAAqyB,EAAAR,aAAAQ,EAAAR,WACA,YAGA,IAAA7sB,EAAAisB,EAAA3uB,KAAAqvB,OAAArzB,KAAA0B,GACAs1B,EAAAhzB,KAAAqvB,OAAArzB,KAAA0G,GAEA4sB,EAAAS,EAAApyB,MAAA+E,IAAAqtB,EAAAT,UACA2D,EAAA,EACA3D,IACA2D,GAAAv1B,EAAAs1B,GAAA1D,EACAS,EAAA3V,MACA6Y,EAAA,EAAAA,IAKA,IAAA3sB,EAAA,EAMA,OALA2sB,IACA3sB,EAAAtG,KAAAkzB,mBAAAnD,IAAA1B,QAAA3rB,KAGA,IAAApI,KAAAy1B,EAAA1B,QAAA3rB,GAAAzH,UAAAuC,KAAAC,MAAAw1B,EAAA3sB,KAGA6sB,YAAA,SAAAxkB,GACA,IAAA3O,KAAAnC,YACA,SAEA,IAAA6E,EAAA1C,KAAAozB,kBAAAzkB,GACA3O,KAAAuH,OAAA8rB,OAAA3wB,GAAA,uBAEA,IAAA4wB,EAAA91B,KAAAiO,MAAA/I,GACA6wB,EAAA7wB,EAAA,EAEAQ,EAAAlD,KAAAqvB,OAAArzB,KAAAwB,KAAAib,IAAA6a,EAAAtzB,KAAAqvB,OAAA1xB,MAAAvD,OAAA,IAcA,OAbAk5B,GAAAtzB,KAAAqvB,OAAA1xB,MAAAvD,SACA8I,GAAAlD,KAAAqvB,OAAA1xB,MAAAqC,KAAAqvB,OAAA1xB,MAAAvD,OAAA,IAIAm5B,IACAD,EAAAtzB,KAAAqvB,OAAA1xB,MAAAvD,OACA8I,GAAAlD,KAAAqvB,OAAA1xB,MAAA21B,IAAAC,EAAA,GAEArwB,GAAA,GAIA1F,KAAAC,MAAAyF,IAEAkwB,kBAAA,SAAAzkB,GACA,IAAAzL,EAAA,IAAA5I,KAAAqU,GAAA1T,UACA6hB,EAAA9c,KAAAqvB,OAAAmE,kBACAC,EAAAzzB,KAAAqvB,OAAApB,SAEAtc,EAAA3R,KAAAuH,OAAAwJ,WAEA,GAAA7N,GAAAyO,EAAAwb,SACA,OAAAntB,KAAAqvB,OAAAjV,IACA0C,EAAA1iB,OAEA,EAKA,GAAA8I,GAAAyO,EAAAyb,SACA,OAAAptB,KAAAqvB,OAAAjV,IACA,EAEA0C,EAAA1iB,OAeA,IAFA,IAAAs5B,EAAA/E,EAAA7R,EAAA5Z,GACA8C,GAAA8W,EAAA4W,GACAD,EAAAztB,IACAA,GAAA8W,IAAA4W,GAGA,IAAAC,EAAA3zB,KAAAqvB,OAAAuE,uBACArqB,EAAAmqB,EACA,IAAA1tB,EACA,OAAA2tB,EACAA,EAAA,GAEA,EAIA,IAAAV,GAAAtkB,EAAAmO,EAAA4W,IAAA1zB,KAAAkzB,mBAAAlzB,KAAAqvB,OAAAvS,EAAA4W,IACA,OAAAC,EACAA,EAAApqB,IAAA,EAAA0pB,GAEA1pB,EAAA0pB,GAKA5K,gBAAA,SAAA3V,EAAAF,EAAAF,GACA,IAAAuhB,EAAAC,EAAAn2B,EAYA,OAXAqC,KAAAqvB,OAAAjV,KACA0Z,EAAA9zB,KAAAmzB,YAAA3gB,GAAAE,EAAAF,YACAqhB,EAAA7zB,KAAAmzB,YAAA7gB,GAAAI,EAAAJ,YAEAuhB,EAAA7zB,KAAAmzB,YAAA3gB,GAAAE,EAAAF,YACAshB,EAAA9zB,KAAAmzB,YAAA7gB,GAAAI,EAAAJ,WAEA3U,EAAAH,KAAAkY,IAAAoe,EAAAD,EAAA,IAKA73B,KAAA63B,EACA93B,IAJAiE,KAAAqP,WAAAqD,EAAApO,IAKA1G,OAJAoC,KAAAsP,gBAKA3R,UAIA2R,cAAA,WACA,IAAArI,EAAAjH,KAAAuR,aAGA3T,EAAAqJ,EAAA8sB,YAEA,WAAAn2B,EAAA,CACA,IAAAo2B,EAAA/sB,EAAAgtB,oBAAA,EACAr2B,EAAAqJ,EAAA8O,WAAAie,EAIA,OADAp2B,EAAAJ,KAAAib,IAAA7a,EAAAqJ,EAAA8O,YACAvY,KAAAkY,IAAA9X,EAAA,IAGAs2B,UAAA,SAAA3qB,GACA,OAAAA,EAAAvJ,KAAAuR,aAAAwE,YAGA1G,WAAA,SAAA8kB,GACA,GAAAn0B,KAAAqH,QAAAwO,SAAA,CACA,IAAA/F,EAAA9P,KAAAqH,QAAAwO,SACA,IAAA/F,EAAA,SAEA,GAAAA,EAAAwS,WAAAxS,EAAAqB,OAAAgjB,IAAArkB,EAAAqB,OAAArB,EAAAwS,UAAA6R,IAAA,CACA,IAAA7wB,EAAAwM,EAAA+B,QAAA/B,EAAAwS,UAAA6R,IACA,GAAAn0B,KAAAuH,OAAA2a,YAAA5e,GACA,OAAAwM,EAAA0G,aAAAlT,EAAAgB,IAAAtE,KAAAuR,aAAAwE,WAGA,OAAAjG,EAAA0G,aAAA2d,GAAAn0B,KAAAuR,aAAAwE,WAGA,UAKAsb,SAAA,WACA,OAAArxB,KAAAqvB,QAGAqC,WAAA,WACA,IAAAzqB,EAAAjH,KAAAuR,aACAkgB,EAAAzxB,KAAA0uB,aACA7O,GAAA4R,EAAA3R,gBAAA/a,OAAAkC,EAAA8Y,WAGA,OADA0R,EAAAzR,WAAAH,GACAA,GAGAqT,mBAAA,SAAAnD,EAAAphB,GACA,OAAA3O,KAAAuH,OAAAoH,KAAAyR,IAAAzR,EAAAohB,EAAAvS,KAAAuS,EAAAzpB,MAAAqI,GAGAiH,QAAA,WACA5V,KAAAqH,QAAAjO,OACA4G,KAAAqH,QAAAwO,SAAA7V,KAAAuH,OAAAqJ,aAAA5Q,KAAAqH,QAAAjO,OAGA4G,KAAAqH,QAAAqoB,YACA1vB,KAAAqH,QAAA2pB,UAAAhxB,KAAAuH,OAAAqJ,aAAA5Q,KAAAqH,QAAAqoB,YAGA1vB,KAAA+wB,8BACA/wB,KAAAsxB,wBAGAzpB,WAAA,WACA,IAAAlC,EAAA3F,KAAAuH,OACAvH,KAAAkY,aAAAvS,GAEA3F,KAAA+uB,MAAA,KACA/uB,KAAAgvB,YAAA,KACAhvB,KAAAivB,WAAA,KACAjvB,KAAAkvB,SAAA,KACAlvB,KAAAmvB,YAAA,KACAnvB,KAAAovB,WAAA,KAEApvB,KAAAuH,OAAA,KAEAvH,KAAAqH,QAAAwO,WACA7V,KAAAqH,QAAAwO,SAAAja,YAAAoE,KAAA+X,kBACA/X,KAAAqH,QAAAwO,SAAA,MAEA7V,KAAAqH,QAAA2pB,YACAhxB,KAAAqH,QAAA2pB,UAAA,MAGAhxB,KAAA4E,UAAA,gBACA5E,KAAAkF,oBAKAvN,EAAAD,QAAA+2B,mBCxoBA,IAAAphB,EAAA7V,EAAA,GACAuP,EAAAvP,EAAA,GAIA48B,GAHA58B,EAAA,GAGA,SAAA8V,GACA,aAGA,SAAA8mB,EAAA9wB,EAAA2D,EAAAC,GACA,IAAAmtB,EAAA/mB,EAAA/S,MAAAyF,KAAA7E,YAAA6E,KAOA,OALAsD,IACA+wB,EAAAC,OAAA,GAEAD,EAAAE,aAAAttB,GACAotB,EAAA1sB,MAAA,SACA0sB,EA+tBA,OAxuBAhnB,EAAA+mB,EAAA9mB,GAYA8mB,EAAA56B,UAAAqO,WAAA,WACA7H,KAAAmH,YAAAnH,KAAA8H,OACAf,EAAApF,WAAA3B,KAAA8H,OAGA,QAAAlQ,EAAA,EAAiBA,EAAAoI,KAAAw0B,OAAAp6B,OAAwBxC,IAAA,CACzCoI,KAAAw0B,OAAA58B,GACAiQ,aAEA7H,KAAAw0B,UAEAlnB,EAAA9T,UAAAqO,WAAA9P,KAAAiI,OAGAo0B,EAAA56B,UAAAi7B,kBAAA,SAAA7C,EAAA8C,GACA,IAeAC,EAfAC,GAAA,EACAC,KACAC,KAEA,SAAAC,EAAAJ,GACAA,EAAAvtB,QAAAkC,OACAsrB,GAAA,EACAC,EAAA3yB,KAAAyyB,GAEA,SAAAK,EAAAL,GACAA,EAAAvtB,QAAAgC,OACAwrB,GAAA,EACAE,EAAA5yB,KAAAyyB,GAIA,QAAA/8B,EAAA,EAAgBA,EAAA88B,EAAAt6B,OAAuBxC,IAGvCg6B,GAFA+C,EAAAD,EAAA98B,IAEAyP,QAAAqQ,QACAsd,EAAAL,GACIA,EAAAM,aACJD,EAAAL,GACIA,EAAAO,aACJH,EAAAJ,GAEAA,EAAA92B,YACAg3B,EAAA3yB,KAAAyyB,GAEAG,EAAA5yB,KAAAyyB,GAKA,IAAAQ,KACA,IAAAv9B,EAAA,EAAgBA,EAAAi9B,EAAAz6B,OAA8BxC,IAC9Ci9B,EAAAj9B,GAAAyP,QAAA+tB,QACAD,EAAAN,EAAAj9B,GAAAyP,QAAA+tB,QAAA,GAIA,IAAAx9B,EAAA,EAAgBA,EAAAk9B,EAAA16B,OAA4BxC,KAC5C+8B,EAAAG,EAAAl9B,IAEAyP,QAAA+tB,OAAAD,EAAAR,EAAAttB,QAAA+tB,QACAL,EAAAJ,GAIA,OAAAC,GAGAR,EAAA56B,UAAA67B,eAAA,SAAAC,EAAAC,GACA,GAAAD,EAAA,CAGA,IAAAE,KAcA,OAZAx1B,KAAAy1B,WAAA,SAAArtB,GACAA,EAAAf,QAAA+tB,OAAA,aAAAhtB,EAAAT,OAAA,WAAAS,EAAAT,QACA6tB,EAAAptB,EAAAf,QAAA+tB,SACAI,EAAAptB,EAAAf,QAAA+tB,WAEAI,EAAAptB,EAAAf,QAAA+tB,OAAAlzB,KAAAkG,MAIAotB,EAAAF,IACAt1B,KAAA01B,eAAAF,EAAAF,GAAAC,GAEAC,EAAAF,KAGAlB,EAAA56B,UAAAk8B,eAAA,SAAApb,EAAAib,GACA,GAAAjb,EAAAlgB,OAKA,IAHA,IAAAb,EAAA+gB,EAAA,GAAAlT,QAAAuuB,SAAA,iBACA7iB,EAAAwH,EAAA,GAAAlT,QAAAqd,eAAAnK,EAAA,GAAA5S,KAAA,KAEA9P,EAAA,EAAgBA,EAAA0iB,EAAAlgB,OAAkBxC,IAAA,CAClC,IAAAg+B,EAAAtb,EAAA1iB,GAAAkR,UAEA+sB,EAAA/iB,EAAA,EAAAwH,EAAA1iB,GAAAwP,QAAAqd,eAAAnK,EAAA1iB,GAAA8P,KAAA4S,EAAA1iB,GAAAwP,QAAAud,eAAArK,EAAA1iB,GAAA8P,KACA,WAAAmuB,EAAAluB,QACAkuB,EAAA/iB,EAAA,EAAA+iB,EAAAzuB,QAAAqd,eAAAoR,EAAAnuB,KAAAmuB,EAAAzuB,QAAAud,eAAAkR,EAAAnuB,MAEA,IAAAouB,EAAAD,EAAA/sB,UAEA,GAAA+sB,EAAAt8B,GAAA,CACA,IAAAw8B,EAAAH,EAAAprB,QAAAsrB,EAAAtrB,QACAwrB,EAAAJ,EAAAr8B,GAAAu8B,EAAAv8B,GACA08B,EAAAF,EAAAC,EACA1b,EAAA1iB,GAAAyP,QAAAmD,QAAAyrB,EAAAV,EAEAM,EAAAxuB,QAAA9N,GAAAy8B,EAAAT,EACAM,EAAAxuB,QAAAmD,QAAAurB,EAAAE,EAAAV,OAIAjb,EAAA1iB,GAAAyP,QAAA9N,GAAAg8B,EAGA,IAAAW,EAAAl2B,KAAAuH,OAAAmP,IAAAiB,QAAA,QACAue,GAAA5b,EAAA1iB,GAAAu+B,WAAAD,MAAA7uB,QAAAiO,aACAtV,KAAAuH,OAAAN,OAAAuO,WAAA+f,KAKAnB,EAAA56B,UAAAiP,OAAA,SAAA2tB,GACA,IAAAC,GAAA,EAUA,GATAr2B,KAAAs0B,QAAAt0B,KAAAs2B,oBACAt2B,KAAA4E,UAAA,qBACAyxB,GAAA,EACAr2B,KAAAs2B,mBAAA,GAGAhpB,EAAA9T,UAAAiP,OAAA1Q,KAAAiI,MAAA,GACAsN,EAAA9T,UAAAiP,OAAA1Q,KAAAiI,MAAA,GAEAq2B,EAAA,CAEA,IAAAE,KAGAA,GADAA,GADAA,IAAAxxB,OAAA/E,KAAAw2B,eAAA,cACAzxB,OAAA/E,KAAAw2B,eAAA,gBACAzxB,OAAA/E,KAAAw2B,eAAA,aAIA,IAFA,IAAA9B,EAAA10B,KAAAw2B,eAAA,YAEA5+B,EAAA,EAAiBA,EAAA2+B,EAAAn8B,OAAyBxC,IAC1C2+B,EAAA3+B,GAAAyP,QAAAqC,QACA6sB,EAAA3+B,GAAA6+B,iBAGA,IAAA7E,EAAA5xB,KAAA02B,iBAAA12B,KAAAqH,QAAAuqB,UAEAgD,EAAA50B,KAAAy0B,kBAAA7C,EAAA8C,GAOA,GALA10B,KAAAqH,QAAAuqB,WACA5xB,KAAA4xB,SAAA5xB,KAAAqH,QAAAuqB,UACAgD,GAAA,GAGAA,EAAA,CACA50B,KAAAyI,SACA,IAAA7Q,EAAA,EAAkBA,EAAA2+B,EAAAn8B,OAAyBxC,IAC3C2+B,EAAA3+B,GAAAyP,QAAAqC,QACA6sB,EAAA3+B,GAAA6+B,iBAIAz2B,KAAA4E,UAAA,eAEAyxB,IACAr2B,KAAAs2B,mBAAA,IAIAlC,EAAA56B,UAAAi8B,WAAA,SAAAlS,EAAAnb,GAGA,GADAmb,EADAnb,KAAApI,MAEAoI,EAAAosB,OACA,QAAA58B,EAAA,EAAiBA,EAAAwQ,EAAAosB,OAAAp6B,OAAwBxC,IACzCoI,KAAAy1B,WAAAlS,EAAAnb,EAAAosB,OAAA58B,KAKAw8B,EAAA56B,UAAAm9B,QAAA,SAAArrB,GACA,IAAApH,GAAA,EAMA,OALAlE,KAAAy1B,WAAA,SAAAh0B,GACAA,IAAA6J,GAAA7J,EAAA00B,WAAA7qB,IACApH,GAAA,KAGAA,GAGAkwB,EAAA56B,UAAAg9B,eAAA,SAAAhlB,GACA,IAAAtN,KASA,GARAsN,IAAAxR,KAAA2H,OACAzD,EAAAhC,KAAAlC,MAGAA,KAAAm2B,UAAAn2B,KAAAm2B,SAAAxuB,OAAA6J,GACAtN,EAAAhC,KAAAlC,KAAAm2B,UAGAn2B,KAAAw0B,OACA,QAAA58B,EAAA,EAAiBA,EAAAoI,KAAAw0B,OAAAp6B,OAAwBxC,IAAA,CACzC,IAAAurB,EAAAiR,EAAA56B,UAAAg9B,eAAAz+B,KAAAiI,KAAAw0B,OAAA58B,GAAA4Z,GACA2R,EAAA/oB,QACA8J,EAAAhC,KAAA3H,MAAA2J,EAAAif,GAIA,OAAAjf,GAGAkwB,EAAA56B,UAAAirB,eAAA,SAAAmS,GACA,IAAArtB,EAAAvJ,KAAAwJ,UAAAotB,GACA,OAAArtB,GAAA,GAAAvJ,KAAAw0B,OAAAjrB,EAAA,GACAvJ,KAAAw0B,OAAAjrB,EAAA,GAEA,MAIA6qB,EAAA56B,UAAAmrB,eAAA,SAAAiS,GACA,IAAArtB,EAAAvJ,KAAAwJ,UAAAotB,GACA,OAAArtB,GAAA,GAAAvJ,KAAAw0B,OAAAjrB,EAAA,GACAvJ,KAAAw0B,OAAAjrB,EAAA,GAEA,MAKA6qB,EAAA56B,UAAA4O,KAAA,SAAA9D,GACA,QAAA1M,EAAA,EAAiBA,EAAAoI,KAAAw0B,OAAAp6B,OAAwBxC,IAAA,CACzC,IAAA6J,EAAAzB,KAAAw0B,OAAA58B,GACA,GAAA6J,EAAAiG,MAAApD,EACA,OAAA7C,EAEA,IAAAo1B,EAAAp1B,EAAA2G,KAAA9D,GACA,GAAAuyB,EACA,OAAAA,IAIAzC,EAAA56B,UAAAgQ,UAAA,SAAAlF,GACA,QAAA1M,EAAA,EAAiBA,EAAAoI,KAAAw0B,OAAAp6B,OAAwBxC,IACzC,GAAAoI,KAAAw0B,OAAA58B,GAAA8P,MAAApD,EACA,OAAA1M,EAGA,UAEAw8B,EAAA56B,UAAAiQ,SAAA,SAAA6B,EAAA5I,GACA,GAAA1C,KAAAw0B,OAAA9xB,KAAA4I,EACA,OAAA3O,OAAAm6B,MAAA,mBAGAp0B,GAAA1C,KAAAqH,QAAAwC,OAAA,IACA,IAAA/L,EAAAkC,KAAA8H,MACApF,GAAA5E,EAAAiE,WAAA3H,OACA0D,EAAAgD,YAAAwK,EAAAxD,OAGAhK,EAAAi5B,aAAAzrB,EAAAxD,MAAAhK,EAAAiE,WAAAW,KAIA0xB,EAAA56B,UAAA+6B,aAAA,SAAAttB,GACAjH,KAAAw0B,UACAx0B,KAAA21B,UAAA1uB,EAAA+vB,KAEA,IADA,IAAA1c,EAAArT,EAAA+vB,MAAA/vB,EAAAsI,MAAAtI,EAAAgwB,MACAr/B,EAAA,EAAiBA,EAAA0iB,EAAAlgB,OAAkBxC,IAAA,CACnC,IAAAwQ,EAAAkS,EAAA1iB,GACAwQ,EAAArP,KAAAiH,KAAA21B,SAAA,QACA,IAAAQ,EAAAn2B,KAAA4H,SAAAsvB,OAAA9uB,EAAApI,MACAm2B,GAIAA,EAAA/uB,QAAApH,KACAA,KAAAw0B,OAAAtyB,KAAAi0B,KAJA7b,EAAA5Z,OAAA9I,EAAA,GACAA,OAOAw8B,EAAA56B,UAAA29B,SAAA,WACA,OAAAn3B,KAAAw0B,QAEAJ,EAAA56B,UAAA+L,OAAA,WACA,IAAA+F,EAAAvE,EAAAzF,WAAAtB,KAAAmH,WAAAnH,KAAA2J,WACA3J,KAAAiK,MAAAqB,EAAA,MACAtL,KAAA4E,UAAA,cACA5E,KAAAyI,SAGAzI,KAAAuF,OAAAvF,KAAAyI,QAEA2rB,EAAA56B,UAAAyQ,MAAA,SAAAnM,EAAAwF,GACAtD,KAAA8H,MAAAhK,EACAkC,KAAAoH,QAAA9D,EAEA,IADA,IAAAgX,EAAAvT,EAAAnF,cAAA9D,EAAA,qBACAlG,EAAA0iB,EAAAlgB,OAAA,EAAgCxC,GAAA,EAAQA,IAAA,CACxC,IAAAi/B,EAAA72B,KAAAw0B,OAAA58B,GACAi/B,EAAA5sB,MAAAqQ,EAAA1iB,GAAAoI,MAEA62B,EAAAxvB,QAAAqC,QACAmtB,EAAA/uB,MAAArL,WAAAuE,YAAA61B,EAAA/uB,SAIAssB,EAAA56B,UAAAmQ,QAAA,WAGA,IAFA,IAAA5Q,EAAAiH,KAAA21B,SAAA,QACA5rB,KACAnS,EAAA,EAAiBA,EAAAoI,KAAAw0B,OAAAp6B,OAAwBxC,IACzCmS,EAAA7H,KAAAlC,KAAAw0B,OAAA58B,GAAA+R,WAEA,OAAA2D,EAAA9T,UAAAmQ,QAAA5R,KAAAiI,KAAA+J,EAAAxJ,KAAA,KAAAP,KAAAs0B,MAAA,sDAAAv7B,IAGAq7B,EAAA56B,UAAAiR,eAAA,SAAA1R,GAKA,IAJA,IAGAq+B,EAAAhvB,EAAA0C,EAHAmL,EAAA,EACAH,EAAA,EAGAle,EAAA,EAAiBA,EAAAoI,KAAAw0B,OAAAp6B,OAAwBxC,KACzCwQ,EAAApI,KAAAw0B,OAAA58B,IACAyP,QAAAqC,SAGA0tB,EAAAhvB,EAAAqC,eAAA1R,GAEA,cAAAqP,EAAAf,QAAAiE,MAAAvS,EAAAqP,EAAAf,QAAAqQ,UACA0f,EAAAx5B,OAAA,EACAw5B,EAAAz5B,MAAA,GAGAyK,EAAAf,QAAAwN,UACA7U,KAAA21B,SACAyB,EAAAx5B,OAAA,EAEAw5B,EAAAz5B,MAAA,GAIAmN,EAAA1C,EAAAyC,kBAEA7K,KAAA21B,UACA1f,GAAAmhB,EAAAz5B,MAAAmN,EAAAC,WACA+K,EAAAtY,KAAAkY,IAAAI,EAAAshB,EAAAx5B,OAAAkN,EAAAE,YAEAiL,EAAAzY,KAAAkY,IAAAO,EAAAmhB,EAAAz5B,MAAAmN,EAAAC,YACA+K,GAAAshB,EAAAx5B,OAAAkN,EAAAE,WAaA,OARAiL,IADAnL,EAAA9K,KAAA6K,mBACAE,WACA+K,GAAAhL,EAAAE,SAEAhL,KAAAs0B,QACAre,GAAA,EACAH,GAAA,IAIAnY,MAAAsY,EACArY,OAAAkY,IAIAse,EAAA56B,UAAA69B,aAAA,SAAAx+B,GACA,UAAAA,GAAA,IAAAy+B,WAAAr3B,QAAA,aAEAm0B,EAAA56B,UAAA+9B,cAAA,SAAA32B,GACA,IAAA42B,EAAA,KAUAC,GACA,QACA,SAEA,aACA,gBACA,cACA,eAEA,kBACA,mBACA,iBACA,qBAEAhM,GACAiM,UAAA,eAvBAF,EADA76B,OAAAsB,iBACAtB,OAAAsB,iBAAA2C,EAAA,OAIAjD,MAAAiD,EAAAG,YACAnD,OAAAgD,EAAA+2B,eAkBAD,WAGAF,EAAAI,eACAnM,EAAAiM,UAAA,cAAAF,EAAAI,cAEA,QAAAhgC,EAAA,EAAeA,EAAA6/B,EAAAr9B,OAAuBxC,IACtC6zB,EAAAgM,EAAA7/B,IAAA4/B,EAAAC,EAAA7/B,IAAAoI,KAAAq3B,aAAAG,EAAAC,EAAA7/B,KAAA,EAIA,IAAAwE,GACAy7B,YAAApM,EAAAqM,YAAArM,EAAAsM,aAAAtM,EAAAuM,gBAAAvM,EAAAwM,iBACAC,aAAAzM,EAAA0M,WAAA1M,EAAA2M,cAAA3M,EAAA4M,eAAA5M,EAAA6M,kBACAC,UAAA9M,EAAAiM,UACAriB,WAAAoW,EAAA9tB,MACA66B,YAAA/M,EAAA7tB,OACAuX,WAAAsW,EAAA9tB,MACA86B,YAAAhN,EAAA7tB,QAYA,OARAxB,EAAAm8B,WACAn8B,EAAAiZ,YAAAjZ,EAAAy7B,YACAz7B,EAAAo8B,aAAAp8B,EAAA87B,eAEA97B,EAAA+Y,YAAA/Y,EAAAy7B,YACAz7B,EAAAq8B,aAAAr8B,EAAA87B,cAGA97B,GAGAg4B,EAAA56B,UAAAk9B,iBAAA,SAAAzvB,GACA,IAAA/C,GAAaxG,GAAA,EAAAH,GAAA,GAQb,MAPA,OAAA0J,EACA/C,EAAAxG,EAAAwG,EAAA3G,GAAA,EACG,MAAA0J,IAAA,IAAAA,EACH/C,EAAA3G,GAAA,EACG,MAAA0J,IACH/C,EAAAxG,GAAA,GAEAwG,GAGAkwB,EAAA56B,UAAAo4B,SAAA,SAAA74B,GACA,IAAAmL,EAAAlE,KAAA02B,iBAAA39B,GACA2/B,EAAA14B,KAAAu3B,cAAAv3B,KAAAmH,YACAwxB,EAAA34B,KAAAyK,eAAA1R,GAEA+E,EAAAkC,KAAAmH,WACAjD,EAAAxG,IACAg7B,EAAAH,YACAI,EAAAh7B,OAAA+6B,EAAAb,aAEA/5B,EAAAI,MAAAP,MAAAg7B,EAAAh7B,MAAA,MAEAuG,EAAA3G,IACAm7B,EAAAH,YACAI,EAAA/6B,QAAA86B,EAAAR,cAEAp6B,EAAAI,MAAAN,OAAA+6B,EAAA/6B,OAAA,OAIAw2B,EAAA56B,UAAAsP,QAAA,WACA9I,KAAA44B,UAQA,IAPA,IAAAj7B,EAAA,EACAoL,EAAA,EACAC,EAAA,IACApL,EAAA,EACAsL,EAAA,IACAD,EAAA,EAEArR,EAAA,EAAiBA,EAAAoI,KAAAw0B,OAAAp6B,OAAwBxC,IAAA,CAEzC,IAAA2S,EAAAvK,KAAA44B,OAAAhhC,GAAAoI,KAAAw0B,OAAA58B,GAAAkR,UACA9I,KAAAw0B,OAAA58B,GAAAyP,QAAAqC,SAGA1J,KAAA21B,WACAprB,EAAA5M,OAAA4M,EAAAxB,SACApL,GAAA4M,EAAAxB,SAGApL,GAAA4M,EAAA5M,MAEAqL,GAAAuB,EAAAvB,SACAD,GAAAwB,EAAAxB,SACAnL,EAAAJ,KAAAkY,IAAA9X,EAAA2M,EAAA3M,QACAsL,EAAA1L,KAAAib,IAAAvP,EAAAqB,EAAArB,WACAD,EAAAzL,KAAAkY,IAAAzM,EAAAsB,EAAAtB,cAGAsB,EAAA3M,QAAA2M,EAAAtB,UACArL,GAAA2M,EAAAtB,UAGArL,GAAA2M,EAAA3M,OAEAsL,GAAAqB,EAAArB,UACAD,GAAAsB,EAAAtB,UACAtL,EAAAH,KAAAkY,IAAA/X,EAAA4M,EAAA5M,OACAqL,EAAAxL,KAAAib,IAAAzP,EAAAuB,EAAAvB,UACAD,EAAAvL,KAAAkY,IAAA3M,EAAAwB,EAAAxB,YAGA,IAAAoB,EAAAmD,EAAA9T,UAAAsP,QAAA/Q,KAAAiI,MAwBA,OAtBAmK,EAAAnB,UAAA,MACAmB,EAAAnB,YAGAmB,EAAAjB,WAAA,MACAiB,EAAAjB,aAGAiB,EAAApB,SAAAoB,EAAApB,UAAAoB,EAAApB,SAAA,EAAAoB,EAAApB,SAEAoB,EAAAlB,UAAAkB,EAAAlB,WAAAkB,EAAAlB,UAAA,EAAAkB,EAAAlB,UAEAjJ,KAAA21B,UACAxrB,EAAApB,UAAA/I,KAAAqH,QAAAwxB,OAAA74B,KAAAw0B,OAAA,UACArqB,EAAApB,UAAA,EAAA/I,KAAAqH,QAAAmB,SAAA,EACA2B,EAAAlB,WAAA,EAAAjJ,KAAAqH,QAAAmB,SAAA,IAGA2B,EAAAlB,WAAAjJ,KAAAqH,QAAAwxB,OAAA74B,KAAAw0B,OAAA,UACArqB,EAAAlB,WAAA,EAAAjJ,KAAAqH,QAAAmB,SAAA,GAGA2B,GAGAiqB,EAAA56B,UAAAs/B,eAAA,SAAAn/B,EAAAyO,EAAAoD,GACA,IAAAiN,EAAAjN,EAAApD,EAAAW,SAAAX,EAAAa,UACAyM,EAAAtN,EAAAY,SACA0iB,EAAA/xB,EAuBA,OAtBA+xB,GAcAA,EAAAhW,IACAgW,EAAAhW,GAEAgW,EAAAjT,IACAiT,EAAAjT,GAEAzY,KAAA+4B,OAAArN,KAnBAA,EAAAluB,KAAAiO,MAAAzL,KAAA+4B,MAAA/4B,KAAAg5B,SAAA5wB,EAAAoC,UACAkL,IACAgW,EAAAhW,EACA1V,KAAA+4B,OAAArN,EACA1rB,KAAAg5B,UAAA5wB,EAAAoC,SAEAkhB,EAAAjT,IACAiT,EAAAjT,EACAzY,KAAA+4B,OAAArN,EACA1rB,KAAAg5B,UAAA5wB,EAAAoC,UAYAkhB,GAEA0I,EAAA56B,UAAAy/B,UAAA,SAAAt/B,EAAA4Q,EAAAiB,GACA,IAAAkgB,EAAA/xB,EACA8e,EAAAjN,EAAAjB,EAAAxB,SAAAwB,EAAAtB,UACAyM,EAAAlK,EAAAjB,EAAAvB,SAAAuB,EAAArB,UAUA,OATAwiB,IACAA,EAAAluB,KAAAiO,MAAAzL,KAAA+4B,MAAA/4B,KAAAg5B,SAAAzuB,EAAAC,UAEAkhB,EAAAhW,IACAgW,EAAAhW,GAEAgW,EAAAjT,IACAiT,EAAAjT,GAEAiT,GAGA0I,EAAA56B,UAAA0/B,kBAAA,WACAl5B,KAAAs0B,OACAt0B,KAAAqL,aACArL,KAAAkL,SAAAlP,KACAgE,KAAAkL,SAAAnP,IACAiE,KAAAkL,SAAAjP,MACA+D,KAAAkL,SAAAhP,QAEA8D,MAQA,IALA,IAAAm5B,EAAAn5B,KAAA21B,SAAA31B,KAAAkL,SAAAjP,MAAA+D,KAAAkL,SAAAhP,OAEAoe,EAAAta,KAAAw0B,OAEA4E,EAAA9e,EAAAlgB,OAAA,EACAxC,EAAAwhC,EAA+BxhC,GAAA,EAAQA,IACvC,IAAA0iB,EAAA1iB,GAAAyP,QAAAqC,OAAA,CACA0vB,EAAAxhC,EACA,MAIA,IAAAA,EAAA,EAAiBA,EAAA0iB,EAAAlgB,OAAkBxC,IACnC,IAAA0iB,EAAA1iB,GAAAyP,QAAAqC,OAAA,CAIA,IAAA2vB,EAAAzhC,GAAAwhC,EACAE,EAAA,IACAD,GAAA/e,EAAA1iB,EAAA,IACA,aAAA0iB,EAAA1iB,EAAA,GAAAyP,QAAAiE,OACAtL,KAAA21B,SACA0D,GAAA,EAEAC,EAAA,wCAOAt5B,KAAAqL,YAAAguB,MAAAF,EAAAG,GAAAhf,EAAA1iB,MAIAw8B,EAAA56B,UAAA+/B,sBAAA,WAKA,IAJA,IAGAnxB,EAHAoxB,EAAAx5B,KAAAy5B,kBACAC,GAAA15B,KAAAy5B,cACAE,KAEA/hC,EAAA,EAAiBA,EAAAoI,KAAA44B,OAAAx+B,OAAwBxC,IACzCwQ,EAAApI,KAAAw0B,OAAA58B,IAEA8hC,GAAAtxB,EAAAf,QAAAqC,QAAA8vB,EAAApxB,EAAAV,KACAU,EAAAiB,OAAA,GACIjB,EAAAf,QAAAqC,QAAA8vB,EAAApxB,EAAAV,MACJU,EAAAiB,OAAA,GAGAjB,EAAAf,QAAAqC,SACAiwB,EAAAvxB,EAAAV,MAAA,GAGA1H,KAAAy5B,cAAAE,GAGAvF,EAAA56B,UAAA2P,QAAA,SAAAzL,EAAAH,GACAyC,KAAAk5B,oBACA5rB,EAAA9T,UAAA2P,QAAApR,KAAAiI,KAAAtC,EAAAH,GACAA,EAAAyC,KAAA0K,UAAAE,SACAlN,EAAAsC,KAAA0K,UAAAC,SAEA,IAOAvC,EACAmC,EARA/B,EAAAxI,KAAAqH,QAAAmB,SAAA,EACAxI,KAAA8H,MAAA5J,MAAAsK,UAAA,KACAxI,KAAAg5B,SAAA,EACAh5B,KAAA+4B,MAAA/4B,KAAA21B,SAAAj4B,EAAAH,EACAyC,KAAA+4B,OAAA,EAAAvwB,EAMAxI,KAAAu5B,wBAEA,QAAA3hC,EAAA,EAAiBA,EAAAoI,KAAA44B,OAAAx+B,OAAwBxC,IAGzC,KAFAwQ,EAAApI,KAAAw0B,OAAA58B,IAEAyP,QAAAqC,OAAA,CAGA,IAAAmvB,EAAA74B,KAAAqH,QAAAwxB,QAAA,EACA,WAAAzwB,EAAAT,OAAAkxB,IACAA,GAAA,GAIA,IAAAe,EAAAxxB,EAAAN,MAEA+xB,EAAA75B,KAAA21B,SAAA,6BACA/9B,IAAAoI,KAAAw0B,OAAAp6B,OAAA,IACAw/B,EAAA17B,MAAA27B,GAAAhB,EAAA,KACA74B,KAAA+4B,OAAAF,GAEAtuB,EAAAvK,KAAA44B,OAAAhhC,GACAoI,KAAA21B,SACAprB,EAAA5M,QACAqC,KAAAg5B,UAAAzuB,EAAAC,SAIAD,EAAA3M,SACAoC,KAAAg5B,UAAAzuB,EAAAC,SAIA,IAAA5S,EAAA,EAAiBA,EAAAoI,KAAA44B,OAAAx+B,OAAwBxC,IAGzC,KAFAwQ,EAAApI,KAAAw0B,OAAA58B,IAEAyP,QAAAqC,OAAA,CAIA,IAAA/L,GADA4M,EAAAvK,KAAA44B,OAAAhhC,IACA+F,MACAC,EAAA2M,EAAA3M,OACAoC,KAAA21B,SACA31B,KAAA84B,eAAAn7B,EAAA4M,GAAA,GAGAvK,KAAA84B,eAAAl7B,EAAA2M,GAAA,GAGA,IAAA3S,EAAA,EAAiBA,EAAAoI,KAAAw0B,OAAAp6B,OAAwBxC,IAGzC,KAFAwQ,EAAApI,KAAAw0B,OAAA58B,IAEAyP,QAAAqC,OAAA,CAGAa,EAAAvK,KAAA44B,OAAAhhC,GACA,IAAAkiC,OAAA,EACAC,OAAA,EACA/5B,KAAA21B,UACAmE,EAAA95B,KAAAi5B,UAAA1uB,EAAA5M,MAAA4M,GAAA,GACAwvB,EAAAx8B,EAAA,EAAAiL,IAGAsxB,EAAAp8B,EAAA,EAAA8K,EACAuxB,EAAA/5B,KAAAi5B,UAAA1uB,EAAA3M,OAAA2M,GAAA,IAGAnC,EAAAe,QAAA2wB,EAAAC,KAKA3F,EA3uBA,CAFA58B,EAAA,KAgvBAG,EAAAD,QAAA08B,mBCnvBA,IAAAvtB,EAAArP,EAAA,GAsCAG,EAAAD,QApCA,SAAAsiC,EAAA51B,EAAAC,GACAD,KAAAyC,EAAAzL,MACAiJ,KAAAwC,EAAAnL,YAEA,IAAAmU,KAEA,OACAoqB,OAAA,SAAA5+B,EAAAD,EAAAE,EAAAC,GACAsU,EAAA3N,MAAkB4mB,QAAAztB,EAAAD,QAAAuJ,SAAArJ,EAAAC,YAClB6I,EAAA/I,EAAAD,EAAAE,EAAAC,IAEA0M,OAAA,SAAA5M,EAAAD,EAAAE,EAAAC,GACA8I,EAAAhJ,EAAAD,EAAAE,EAAAC,GACA,QAAA3D,EAAA,EAAiBA,EAAAiY,EAAAzV,OAAqBxC,KACtC0D,EAAAuU,EAAAjY,IACAkxB,UAAAztB,GAAAC,EAAAF,WAAAE,EAAAqJ,WAAArJ,KAAAC,cACAsU,EAAAnP,OAAA9I,EAAA,GACAA,MAIAuQ,UAAA,WACA,QAAAvQ,EAAA,EAAiBA,EAAAiY,EAAAzV,OAAqBxC,IACtCyM,EAAAwL,EAAAjY,GAAAkxB,QAAAjZ,EAAAjY,GAAAwD,MAAAyU,EAAAjY,GAAA+M,SAAAkL,EAAAjY,GAAA2D,SACA8I,EAAAwL,EAAAjY,GAAAkxB,QAAAjZ,EAAAjY,GAAAwD,MAAAyU,EAAAjY,GAAA+M,cAAA5J,GACAsJ,EAAAwL,EAAAjY,GAAAkxB,QAAAjZ,EAAAjY,GAAAwD,MAAAyU,EAAAjY,GAAA+M,UAAA,GACAN,EAAAwL,EAAAjY,GAAAkxB,QAAAjZ,EAAAjY,GAAAwD,MAAAyU,EAAAjY,GAAA+M,UAAA,GAEAkL,MAEAqqB,OAAA,WACA,OAAAF,EAAAh6B,KAAA5E,MAAA4E,KAAAtE,+BCfA/D,EAAAD,QAlBA,SAAA0f,EAAA+iB,GACA,IAAAA,EACA,SAEA,GAAA/iB,EAAAgjB,YACA,SAEA,IAAAC,EAAA78B,KAAA88B,KAAA,IAAAH,GACA,OAAAE,EAAA,IAEAE,WAAA,kBACAnjB,EAAAgjB,aACEC,GAEFjjB,EAAAgjB,aAAA,GACA,mBCkBAziC,EAAAD,QAjCA,SAAAiO,GAEAA,EAAAkC,WAAA,WAuBA,QAAAjQ,KAtBA+N,EAAAf,UAAA,gBAEA5E,KAAA4kB,WACA5kB,KAAAkF,kBAEAlF,KAAAs0B,cACAt0B,KAAAs0B,MAAA3uB,MAGA3F,KAAAw6B,kBACAx6B,KAAAy6B,SACAz6B,KAAAy6B,QAAA5yB,aAGA7H,KAAA06B,gBAEA16B,KAAA26B,KAAA36B,KAAA26B,IAAA9yB,YACA7H,KAAA26B,IAAA9yB,aAGA7H,KAAA+H,UAAAF,aAEA7H,KACA,IAAApI,EAAA0H,QAAA,aACAU,KAAApI,oBCtBAD,EAAAD,QAAA,SAAAiO,GACA,gBAAAi1B,EAAAC,GAEAD,GACAj1B,EAAAsB,OAAA6zB,cAAA,IAAAn1B,EAAAf,UAAA,WAAAi2B,KACAl1B,EAAAk1B,SAAmBrpB,KAAA,QAAA/C,KAAAosB,EAAAE,QAAA,uBCVnB,IAAAh0B,EAAAvP,EAAA,GACAi6B,EAAAj6B,EAAA,GAEAG,EAAAD,QAAA,SAAAiO,GACA,IAAAq1B,EAAAxjC,EAAA,IAEAmO,EAAA0tB,OAAA77B,EAAA,GAAAA,CAAAmO,GAGAA,EAAAuE,KAAA,SAAApM,EAAA6pB,EAAAC,GAUA,IAAAqT,EATAtT,GAAAC,IACA5nB,KAAAiH,OAAAuL,WAAAxS,KAAAwgB,UAAA,IAAAlmB,KAAAqtB,GACA3nB,KAAAiH,OAAAqL,SAAAtS,KAAAygB,UAAA,IAAAnmB,KAAAstB,IAEA5nB,KAAA2O,KAAAzE,OAEAlK,KAAAiH,OAAAi0B,cACAl7B,KAAAiH,OAAAi0B,YAAAn0B,EAAApG,iBAAA,GAGAgF,EAAAvK,MAAAuB,OAAA,oBACAw+B,aAAAF,GACAA,EAAAV,WAAA,WACA50B,EAAAJ,UACI,OAIJvF,KAAAkK,KAAA,SAAApM,GACAkC,KAAAmH,YAAAnH,KAAAmH,WAAA1K,aACAuD,KAAAmH,WAAA1K,WAAAuE,YAAAhB,KAAAmH,YACAnH,KAAAmH,WAAA,MAGAnH,KAAAy6B,SACAz6B,KAAAy6B,QAAAnyB,QAEAtI,KAAAo7B,QAAAt9B,IAGAkC,KAAAo7B,QAAAt9B,IAGA6H,EAAAy1B,QAAA,SAAAt9B,GACAkC,KAAA4E,UAAA,yBAEA5E,KAAA06B,gBACA16B,KAAAq7B,gBAGAr7B,KAAA+H,UAAAC,WAAA,kBACAszB,cAAAt7B,MAEAA,KAAAu7B,mBACAv7B,KAAAw7B,mBAGAx7B,KAAAy6B,UACAz6B,KAAAy6B,QAAA5yB,aACA7H,KAAA0W,IAAA+kB,SAGAz7B,KAAAs0B,MAAAvtB,EAAA5E,OAAArE,GACAkC,KAAAs0B,QACAt0B,KAAAs0B,MAAA9yB,UAAA,IAEAxB,KAAAs0B,MAAA3uB,MAAA3F,KACAg7B,EAAAh7B,MACAA,KAAAiH,OAAAy0B,OAAAp3B,GAAA,OACAtE,KAAAy6B,QAAAz6B,KAAA0W,IAAAilB,WAAA,SAAA79B,EAAAkC,KAAAiH,OAAAy0B,QAEA17B,KAAAy6B,QAAAh/B,YAAA,4BAEA,IADA,IAAAmgC,EAAAj2B,EAAAoC,UAAAC,WAAA,cACApQ,EAAA,EAAiBA,EAAAgkC,EAAAxhC,OAAuBxC,IACxC+N,EAAAiL,aAAAgrB,EAAAhkC,IAAAgf,WAIA5W,KAAAy6B,QAAAh/B,YAAA,sBACAkK,EAAAk2B,gBAGA77B,KAAA4E,UAAA,yBACA5E,KAAAy6B,QAAAl1B,SAEAI,EAAAwB,WAAAnH,KAAAy6B,QAAAtzB,WAAAzF,WACA1B,KAAA4E,UAAA,uBACA5E,KAAA87B,aAAAL,MAAAz7B,KAAAs0B,OACAt0B,KAAA4E,UAAA,mBAEA5E,KAAAuF,UAGAI,EAAAo2B,QACAC,SACAC,KAAA,SAAA33B,GACAqB,EAAAu2B,aAAA53B,IAEA63B,OAAA,SAAA73B,GACA,IAAA83B,EAAAz2B,EAAAuU,OAAAK,OAAAqB,iBACAygB,EAAA12B,EAAAuU,OAAAK,OAAA+hB,uBAEA32B,EAAA42B,gBAAAH,EAAAC,EAAA,WACA12B,EAAAyZ,aAAA9a,IAKAqB,EAAAsM,QAAA3N,GACAk4B,MACA72B,EAAAqf,OAAA,WACArf,EAAA82B,WAAAn4B,GAAA,KAEAqB,EAAAk2B,eAEAl2B,EAAA82B,WAAAn4B,GAGAqB,EAAA+2B,gBAdA/2B,EAAA+2B,oBAqBA/2B,EAAAJ,OAAA,WACAvF,KAAA4E,UAAA,2BAEA5E,KAAAiH,OAAA0T,MAAA3a,KAAA4a,QACA5a,KAAA4a,WAAA7f,GAGA,IAAAmI,EAAAlD,KAAA4X,iBACA+kB,EAAAz5B,IAAAxF,EAAA,EACAsC,KAAA48B,4BAEAD,EADA38B,KAAA48B,0BACAv1B,QAAAw1B,gBAAAF,GAAA,GAIA,IAAAG,EAAA,KASA,GARAH,IACAG,EAAAn3B,EAAAotB,YAAA4J,EAAA38B,KAAAiH,OAAA81B,qBAEA/B,EAAAh7B,MAEAA,KAAAy6B,QAAApzB,QAAAuqB,SAAA5xB,KAAAiH,OAAA2qB,SACA5xB,KAAAy6B,QAAAhyB,SAEAzI,KAAAiH,OAAA+1B,iBAAA95B,GAEAy5B,EAAA,CACA,IAAAM,EAAAt3B,EAAAiS,kBAEAklB,IADAn3B,EAAAotB,YAAAkK,EAAAv/B,IACAu/B,EAAA1/B,GAAA2F,EAAA3F,IACAu/B,GACA98B,KAAAk9B,SAAAJ,GAEA55B,EAAA3F,GACAoI,EAAA0C,cAAAtN,EAAAmI,EAAA3F,IAKAyC,KAAA4E,UAAA,qBAIAe,EAAAw3B,SAAAx3B,EAAAJ,OAEAI,EAAAy3B,OAAA,SAAAz9B,GACA,IAAA8C,EAAAsE,EAAArH,cAAAC,GAIA,IADAoH,EAAA5H,aAAAsD,IACA,IAAAnD,QAAA,kCAEA,IAAA+9B,EAAAliC,UAAA,IAAA6E,KAAAiH,OAAAq2B,eAEAx/B,EAAAiJ,EAAAnE,gBAAAH,EAAA46B,GACA,OAAAv/B,EACAA,EAAAQ,aAAA++B,GAEA,MAIA13B,EAAA43B,YAAA,SAAA59B,EAAA4C,EAAAC,GACA,OAAAuE,EAAAzE,gBAAA3C,EAAA4C,EAAAC,IAGAmD,EAAA63B,YAAA,SAAA79B,EAAAkD,GACA,OAAAkE,EAAAnE,gBAAAjD,EAAAkD,GAAA7C,KAAAiH,OAAAq2B,iBAGA33B,EAAA83B,eAAA,SAAAn5B,GAGA,IAFA,IAAAshB,EAAA5lB,KAAAyR,WAAA1P,WACAc,EAAA7C,KAAAiH,OAAAq2B,eACA1lC,EAAA,EAAiBA,EAAAguB,EAAAxrB,OAAgBxC,IAAA,CACjC,GAAAguB,EAAAhuB,GAAA0G,aAEA,GADAsnB,EAAAhuB,GAAA0G,aAAAuE,IACAyB,EAAA,OAAAshB,EAAAhuB,GAGA,aAGA+N,EAAA+3B,mBAAA,SAAAlsB,GACA,GAAAxR,KAAA29B,mBAAAnsB,EACA,SACA7L,EAAAi4B,wBAAApsB,IAIA7L,EAAAk4B,eAAA,SAAA7S,EAAAE,GACA,IAAA1Z,EAAA,KAUA,OATAwZ,GAAAE,EACA1Z,EAAA7L,EAAAsB,OAAA2lB,MAAAC,gBACG7B,GAAAE,EACH1Z,EAAA7L,EAAAsB,OAAA2lB,MAAAE,gBACG9B,GAAAE,EAEAF,IAAAE,IACH1Z,EAAA7L,EAAAsB,OAAA2lB,MAAAkR,iBAFAtsB,EAAA7L,EAAAsB,OAAA2lB,MAAAG,iBAIAvb,GAGA7L,EAAA0lB,cAAA,SAAA1D,EAAAC,EAAAoD,EAAAE,GACA,IAAA7O,EAAA,KAOA,KALAA,EADA,mBACAsL,GAEW/sB,OAAA+sB,EAAAhtB,OAAAitB,EAAApW,KAAAxR,KAAA69B,eAAA7S,EAAAE,KAGX,SACA,KAAA7O,EAAAzhB,QAAAyhB,EAAA1hB,QAAA0hB,EAAA7K,MAAA,SACA,GAAA6K,EAAAzhB,QAAAyhB,EAAA1hB,OAAA,SAEA,IAAAuJ,GAAA,EAKA,OAHAlE,KAAAgF,WAAA,sBACAd,EAAAlE,KAAA4E,UAAA,oBAAAyX,KAEAnY,GAIAyB,EAAAo4B,oBAAA,SAAApvB,EAAAqvB,EAAAxgB,EAAAlX,GACA,IAAA23B,EAAAxM,EAAAprB,iBAAAC,GAAAkX,EACA,GAAAygB,EAAA,MAAAA,EAAA,OAEA,IAAAC,EAAAvvB,EAAAwvB,oBAAAH,EACAE,IACAvvB,EAAAhJ,EAAAgJ,KAAAyR,IAAAzR,EAAAuvB,EAAA,WAGA,OAAAvvB,GAGAhJ,EAAA6J,eAAA,WACA,OAAA7J,EAAAsB,OAAAmO,QAAA3U,SAGAkF,EAAAuc,YAAA,SAAAxP,GACA,eAAAA,EAAAnN,QAAAI,EAAAye,SAAA1R,EAAApO,KAGAqB,EAAAy4B,oBAAA,SAAAz+B,GACA,IAAAA,EACA,SACA,IAAAhF,EAAAgF,EAAAhF,QAAAgF,EAAAE,WACA,IAAAlF,MAAAyE,UACA,SACA,IAAAA,EAAA2H,EAAA5H,aAAAxE,GACA,WAAAyE,EAAAE,QAAA,0BAAAF,EAAAE,QAAA,qBAAAF,EAAAE,QAAA,gCCpRA3H,EAAAD,QAAA,SAAAiO,GAqEA,SAAA04B,IACA,IAAAC,EAIA,OAHA34B,EAAA+Q,IAAAiB,QAAA,cACA2mB,EAAA34B,EAAA+Q,IAAAiB,QAAA,YAAA2mB,YAEAA,EAxEA34B,EAAAsB,OAAAwjB,WAAA,IACA9kB,EAAAsB,OAAAwlB,OAAA,EACA9mB,EAAAsB,OAAAs3B,gBAAA,EACA54B,EAAAsB,OAAAu3B,wBAAA,EACA74B,EAAA84B,uBAAA,EAGA94B,EAAA+4B,gBAAA,WACA/4B,EAAAsB,OAAAs3B,gBACA/xB,UAAAmyB,SACAnyB,UAAAmyB,QAAAh5B,EAAAsB,OAAAu3B,0BAIA74B,EAAAlK,YAAA,eAAAkK,EAAAvM,KAAA,WAQA,GAPA,SAAA4G,KAAAiH,OAAAwlB,QACAzsB,KAAAiH,OAAAwlB,MAAAzsB,KAAAiH,OAAAwlB,SACA,GAAAjgB,UAAAC,UAAAnN,QAAA,YACA,GAAAkN,UAAAC,UAAAnN,QAAA,UACA,GAAAkN,UAAAC,UAAAnN,QAAA,aACA,GAAAkN,UAAAC,UAAAnN,QAAA,WAEAU,KAAAiH,OAAAwlB,MAAA,CAEA,IAAAmS,GAAA,EACA,IACAtiC,SAAAuiC,YAAA,cACI,MAAAl/B,GACJi/B,GAAA,EAGAA,EACA5+B,KAAA8+B,eAAA,8CAAA/7B,GACA,OAAAA,EAAAg8B,SAAAh8B,EAAAg8B,QAAA3kC,OAAA,OACA2I,EAAAg8B,QAAA,IAEApkC,OAAAoI,EAAApI,OACAqI,MAAAD,EAAAg8B,QAAA,GAAA/7B,MACAC,MAAAF,EAAAg8B,QAAA,GAAA97B,MACAE,QAAAJ,EAAAg8B,QAAA,GAAA57B,QACAC,QAAAL,EAAAg8B,QAAA,GAAA37B,SAGAL,GACK,WACL,WAEIpG,OAAA6P,UAAAwyB,eACJh/B,KAAA8+B,eAAA,kDAAA/7B,GACA,eAAAA,EAAAk8B,YAAA,KACAl8B,GACK,SAAAA,GACL,OAAAA,GAAA,SAAAA,EAAAk8B,cAEItiC,OAAA6P,UAAA0yB,kBACJl/B,KAAA8+B,eAAA,wDAAA/7B,GACA,OAAAA,EAAAk8B,aAAAl8B,EAAAo8B,qBAAA,KACAp8B,GACK,SAAAA,GACL,OAAAA,KAAAk8B,aAAAl8B,EAAAo8B,yBAKEx5B,IAWF,IAAAy5B,KAKAz5B,EAAAm5B,cAAA,SAAAO,EAAAC,EAAAlR,GAaA,IAXA,IAKAmR,EALAC,EAAA,EACAC,GAAA,EACAC,GAAA,EAEAC,EAAA,KAEAC,EAAA,KACAC,EAAA,KAIAjoC,EAAA,EAAgBA,EAAAwnC,EAAAhlC,OAA0BxC,IAC1C+N,EAAAjK,YAAA0jC,EAAAxnC,GAAA,GAAAwnC,EAAAxnC,GAAA,GAAAwnC,EAAAxnC,GAAA,KAEAwnC,MAGAl9B,MAAAyD,EAAAwB,WAAAk4B,EAAA,YAAA1/B,GACA,IAAA2+B,EAAAD,IAEA,IAAAjQ,EAAAzuB,IAGA8/B,EAAA,CAEAG,GAAAzE,aAAAyE,GAEA,IAAAhlC,EAAA0kC,EAAA3/B,GACA,GAAA2+B,MAAA5U,KAAAplB,IAAAg6B,EAAA5U,KAAAoW,YAKA,OAJAxB,EAAAyB,cAAAnlC,GACA+E,EAAAqgC,gBACArgC,EAAAqgC,iBACArgC,EAAAsgC,cAAA,GACA,EAEA,IAAAt6B,EAAA84B,sBAAA,CACA,GAAA7jC,GAAA+kC,EAAA,CACA,IAAA7F,EAAA6F,EAAA38B,MAAApI,EAAAoI,MACA+2B,EAAA4F,EAAA18B,MAAArI,EAAAqI,MAOA,IANAy8B,IAAAliC,KAAA0iC,IAAApG,GAAA,GAAAt8B,KAAA0iC,IAAAnG,GAAA,KACAp0B,EAAAw6B,qBAAAT,GAAA,EACAF,EAAA,EACAD,EAAA55B,EAAAiS,kBAGA8nB,EAAA,CACA/5B,EAAA0C,SAAAk3B,EAAA7hC,EAAAo8B,EAAAyF,EAAAhiC,EAAAw8B,GACA,IAAAqG,EAAAz6B,EAAAiS,iBAEA,GAAA2nB,EAAA7hC,GAAA0iC,EAAA1iC,GAAAq8B,EAAA,EAAAD,GACAyF,EAAAhiC,GAAA6iC,EAAA7iC,GAAAu8B,EAAA,EAAAC,EACA,OAAAsG,EAAA1gC,IAIA,OAAA0gC,EAAA1gC,GAEA,aAKAy/B,EAAAl9B,MAAAlC,KAAAmH,WAAA,uBAAAxH,GACA,GAAA8/B,EACA,OAAAY,EAAA1gC,MAIAy/B,EAAAl9B,MAAAlC,KAAAmH,WAAAk4B,EAAA,YAAA1/B,GACA,IAAAyuB,EAAAzuB,GACA,GAAAA,EAAAo/B,SAAAp/B,EAAAo/B,QAAA3kC,OAAA,EACAqlC,GAAA,MADA,CAKAE,EAAAL,EAAA3/B,GACAgG,EAAA43B,YAAAoC,EAAA,qBAAAh6B,EAAA43B,YAAAoC,EAAA,sBACAF,GAAA,GAEA,IAAAnB,EAAAD,IAGAuB,EAAArF,WAAA,WACA,IAAA9W,EAAA9d,EAAAy3B,OAAAuC,GACArB,GAAA7a,IAAA9d,EAAA43B,YAAAoC,EAAA,wBAAAh6B,EAAA43B,YAAAoC,EAAA,qBACArB,EAAAgC,cAAAX,GAEArB,EAAA5U,MAAA4U,EAAA5U,KAAAoW,cAmEA,SAAArc,GACA,IAAA8c,EAAA56B,EAAA66B,iBACA9tB,EAAA/M,EAAAsM,QAAAwR,GACA,GAAA/Q,GAAA/M,EAAA86B,cAAAhd,GACA,QAAA7rB,EAAA,EAAmBA,EAAA2oC,EAAAnmC,OAAoBxC,IAEvC,IADA8a,EAAA6tB,EAAA3oC,GAAA43B,SAAA/L,KACA/Q,EAAApU,aAAAqH,EAAAsB,OAAAq2B,iBAAA5qB,EAAApU,aAAAqH,EAAAsB,OAAAq2B,iBAAA7Z,EAAA,CACA,IAAA3pB,EAAA4Y,EAAAguB,WAAA,GACAb,EAAAntB,EACA6tB,EAAA3oC,GAAA43B,SAAA/L,GAAA3pB,EACA4Y,EAAAxU,MAAAH,QAAA,OACAjE,EAAAsF,WAAA,oBACAsT,EAAAjW,WAAAqE,YAAAhH,IA9EA6mC,CAAAld,GACA6a,EAAAsC,WAAAjB,GACAh6B,EAAAk7B,aAAA,EAEAl7B,EAAAm7B,YAAArd,GAEA9d,EAAA+4B,oBAKAkB,EAAA,MACIj6B,EAAAsB,OAAAwjB,gBAIJ2U,EAAAl9B,MAAAlC,KAAAmH,WAAAk4B,EAAA,YAAA1/B,GACA,IAAAyuB,EAAAzuB,GAAA,CACAigC,GAAAzE,aAAAyE,GACAj6B,EAAAk7B,aAAA,EACApB,GAAA,EACA,IAAA7kC,EAAA0kC,EAAA3/B,GAEA2+B,EAAAD,IAiBA,GAfAC,GACAA,EAAAyC,YAAAnmC,GAEAilC,IACAl6B,EAAAm7B,YAAAn7B,EAAAy3B,OAAAyC,IACAA,EAAApjC,aACAojC,EAAApjC,WAAAuE,YAAA6+B,GACAl6B,EAAA+4B,oBAIA/4B,EAAAw6B,qBAAAV,EAAAC,GAAA,EACAG,EAAA,KAGAF,GAAAH,EAAA,CACA,IAAAwB,EAAA,IAAA1mC,KACA,GAAA0mC,EAAAxB,EAAA,IAEA75B,EAAAoC,UAAAC,WAAA,eACAi5B,cAAAtB,GACAU,EAAA1gC,QAEA6/B,EAAAwB,OAEAxB,EAAA,IAAAllC,SAIA,IAAA1C,EAAA,EAAgBA,EAAAwnC,EAAAhlC,OAA0BxC,IAC1C+N,EAAAvK,MAAAgkC,EAAAxnC,GAAA,GAAAwnC,EAAAxnC,GAAA,GAAAwnC,EAAAxnC,GAAA,IAIA,SAAAyoC,EAAA1gC,GAIA,OAHAA,KAAAqgC,gBACArgC,EAAAqgC,kBACArgC,GAAAvE,OAAA6kC,cAAA,GACA,oBC3OAtoC,EAAAD,QAAA,SAAAiO,GACAA,EAAAu7B,MAAA,gBACAj6B,QACAuO,WAAA,IACAO,WAAA,GACAJ,aAAA,GACAiT,gBAAA,EACAuY,gBAAA,EACAC,2BAAA,IAEAC,qBAAA,IACAC,oBAAA,oBCXA3pC,EAAAD,QAAA,SAAAiO,GACAA,EAAAu7B,MAAA,gBACAj6B,QACAuO,WAAA,IACAO,WAAA,GACAJ,aAAA,GACAiT,gBAAA,EACAuY,gBAAA,EACAC,2BAAA,IAEAC,qBAAA,IACAC,oBAAA,oBCXA3pC,EAAAD,QAAA,SAAAiO,GACAA,EAAAu7B,MAAAK,UACAt6B,QACAuO,WAAA,IACAO,WAAA,GACAke,mBAAA,EACAte,aAAA,GACAiT,gBAAA,EACAuY,gBAAA,EACAC,2BAAA,IAEAC,qBAAA,IACAC,oBAAA,GACAE,4BACAC,cAAA,kBACAC,eAAA,mCAIA/7B,EAAAlK,YAAA,2BAAA6I,GACA,IAAAxL,EAAA6M,EAAAg8B,YAAAr9B,GACAxL,IACAA,EAAAsG,WAAA,wBACAm7B,WAAA,WACA,IAAAqH,EAAA9oC,EAAAsG,UAAAE,QAAA,yBACAsiC,GAAA,IACA9oC,EAAAsG,UAAAtG,EAAAsG,UAAAqB,MAAA,EAAAmhC,KAEI,wBC5BJjqC,EAAAD,QAAA,SAAAiO,GACAA,EAAAu7B,MAAAW,UACA56B,QACAuO,WAAA,IACAO,WAAA,GACAJ,aAAA,GACAiT,gBAAA,EACAuY,gBAAA,EACAC,2BAAA,IAEAC,qBAAA,GACAC,oBAAA,GAEAQ,mBAAA,qNACAC,wBACAC,uBACAC,iBAAA,cACAC,eAAA,8BCjBAvqC,EAAAD,QAAA,SAAAiO,GACAA,EAAAu7B,MAAAiB,SACAl7B,QACAuO,WAAA,IACAO,WAAA,GACAJ,aAAA,GACAiT,gBAAA,EACAuY,gBAAA,EACAC,2BAAA,IAEAC,qBAAA,GACAC,oBAAA,oBCXA3pC,EAAAD,QAAA,SAAAiO,GACAA,EAAAu7B,MAAAkB,QACAn7B,QACAuO,WAAA,IACAO,WAAA,GACAJ,aAAA,GACAiT,gBAAA,EACAuY,gBAAA,EACAC,2BAAA,IAEAC,qBAAA,GACAC,oBAAA,oBCXA3pC,EAAAD,QAAA,SAAAiO,GACAA,EAAAu7B,MAAAmB,SACAp7B,QACAuO,WAAA,IACAO,WAAA,GACAJ,aAAA,GACAiT,gBAAA,EACAuY,gBAAA,EACAC,2BAAA,IAEAC,qBAAA,GACAC,oBAAA,oBCLA,SAAAgB,EAAAznC,EAAA8K,GACA,IAAA48B,EAAA58B,EAAA48B,KACA,IAAAA,GAAA1nC,EAEA,IADA,IAAA+xB,EAAAtwB,SAAAkmC,qBAAA,QACA5qC,EAAA,EAAiBA,EAAAg1B,EAAAxyB,OAAkBxC,IAAA,CACnC,IAAAsM,EAAA0oB,EAAAh1B,GAAA6qC,KAAAC,MAAA,6BACA,GAAAx+B,IACAyB,EAAAu7B,MAAAh9B,EAAA,MAAAq+B,GAAA,CACAA,EAAAr+B,EAAA,GACA,OAMAyB,EAAA48B,QAAA,UACA,IAAAI,EAAAh9B,EAAAu7B,MAAAv7B,EAAA48B,OAAA58B,EAAAu7B,MAAA,SAtBA,SAAA/nB,EAAAiJ,EAAAvnB,GACA,QAAA1B,KAAAipB,QACA,IAAAjJ,EAAAhgB,IAAA0B,KACAse,EAAAhgB,GAAAipB,EAAAjpB,IAsBAypC,CAAAj9B,EAAAsB,OAAA07B,EAAA17B,OAAApM,GAEA,IAAAoM,EAAAtB,EAAA6J,iBACAvI,EAAA,KAAAtB,EAAAnL,QAAAyM,EAAA,GAAAtJ,SACAsJ,EAAA,GAAAtJ,MAAAglC,EAAAtB,sBACAp6B,EAAA,KAAAtB,EAAAnL,QAAAyM,EAAA,GAAAtJ,SACAsJ,EAAA,GAAAtJ,MAAAglC,EAAArB,qBAEA,IAAA1pC,EAAA,EAAcA,EAAAqP,EAAA7M,OAAiBxC,IAAA,CAC/B,IAAAmU,EAAA9E,EAAArP,GACA,OAAAmU,EAAA5T,OACA4T,EAAApO,QACAoO,EAAApO,MAAA,IAEAgI,EAAAnL,QAAAuR,EAAAsM,YAAA1S,EAAAnL,QAAAuR,EAAAyM,aACAzM,EAAAsM,UAAAtM,EAAAsM,WAAAtM,EAAApO,MACAoO,EAAAyM,UAAAzM,EAAAyM,WAAAzM,EAAApO,OAEAoO,EAAAsM,YACAtM,EAAAsM,WAAAtM,EAAAsM,WACAtM,EAAAyM,YACAzM,EAAAyM,WAAAzM,EAAAyM,WACAzM,EAAApO,QACAoO,EAAApO,OAAAoO,EAAApO,MACAoO,EAAApO,MAAAoO,EAAAsM,WAAAtM,EAAAsM,UAAAtM,EAAApO,MAAAoO,EAAAsM,UAAAtM,EAAApO,MACAoO,EAAApO,MAAAoO,EAAAyM,WAAAzM,EAAAyM,UAAAzM,EAAApO,MAAAoO,EAAAyM,UAAAzM,EAAApO,QAKAglC,EAAA17B,OAAA8sB,cACApuB,EAAAsB,OAAA8sB,YAAA4O,EAAA17B,OAAA8sB,aAAA,QAEA4O,EAAAb,qBACAn8B,EAAAm8B,mBAAAa,EAAAb,oBAEAa,EAAAnB,6BACA77B,EAAAsB,OAAAy6B,cAAAiB,EAAAnB,2BAAA,cACA77B,EAAAsB,OAAAw6B,aAAAkB,EAAAnB,2BAAA,cAIA77B,EAAA+0B,gBAGA/iC,EAAAD,QAAA,SAAAiO,GACAA,EAAAk9B,YACAl9B,EAAAk9B,UAAA,WACA7iC,KAAAuiC,KAAA,GACAD,GAAA,EAAAtiC,OAEA2F,EAAAu7B,SAEAv7B,EAAAlK,YAAA,gCACA6mC,GAAA,EAAAtiC,yBCzEArI,EAAAD,QAAA,SAAAiO,GA0IA,SAAAm9B,IAKA,OAJAn9B,EAAAo9B,kBAAAC,kBAAAr9B,GACAA,EAAAo9B,kBAAAE,QACAt9B,EAAAo9B,kBAAAD,YAEA,EA7IAn9B,EAAAo9B,mBACAG,SACAnqC,MAAA,EACAoqC,oBAAA,EACAC,aAAA,SAAAC,EAAA/pC,GACA,GAAAA,EAAAgqC,oBACA,QAAA1rC,KAAA0B,EAAAgqC,oBACAhqC,EAAA1B,GAAA0B,EAAAgqC,oBAAA1rC,GAGA0B,EAAAgqC,uBACA,IAAA1rC,EAAA,EAAgBA,EAAAyrC,EAAAjpC,OAAoBxC,IACpCoI,KAAAujC,SAAAF,EAAAzrC,GAAA0B,IAGAiqC,SAAA,SAAAC,EAAApsB,GACA,IAAAqsB,EAAArsB,EAAAosB,GACA,GAAAC,EAAA,CACA,IAAAC,EAAA1jC,KAEAoX,EAAAksB,oBAAAE,GAAAC,EACArsB,EAAAosB,GAAA,WAGA,IADA,IAAAG,EAAA,IAAA3pC,MAAAmB,UAAAf,QACAxC,EAAA,EAAAC,EAAAsD,UAAAf,OAAyCxC,EAAAC,EAAOD,IAChD+rC,EAAA/rC,GAAAuD,UAAAvD,GAGA,GAAA8rC,EAAAT,OAAA,CACA,IAAAW,EAAAF,EAAAG,mBAAA7pC,MAAAR,UAAAiH,MAAA1I,KAAA4rC,IACAD,EAAAR,MAAAM,KACAE,EAAAR,MAAAM,OAGA,IAAAM,EAAAJ,EAAAR,MAAAM,GAEA,GAAAE,EAAAK,iBAAAD,EAAAF,GACA,OAAAF,EAAAM,iBAAAF,EAAAF,GAEA,IAAA/qC,EAAA4qC,EAAAlpC,MAAAyF,KAAA2jC,GAEA,OADAD,EAAAO,YAAAH,EAAAF,EAAA/qC,GACAA,EAIA,OAAA4qC,EAAAlpC,MAAAyF,KAAA2jC,IAGA,OAAAF,GAEAQ,YAAA,SAAAf,EAAAgB,EAAArrC,GACAmH,KAAAmkC,QAAAtrC,KACAA,EAAA,IAAAyB,KAAAzB,IACAqqC,EAAAgB,GAAArrC,GAEAkrC,iBAAA,SAAAb,EAAAgB,GACA,OAAAhB,EAAAzpC,eAAAyqC,IAEAF,iBAAA,SAAAd,EAAAgB,GACA,IAAA9hB,EAAA8gB,EAAAgB,GAMA,OAHAlkC,KAAAmkC,QAAA/hB,KACAA,EAAA,IAAA9nB,KAAA8nB,IAEAA,GAEA+hB,QAAA,SAAAtrC,GACA,OAAAA,KAAAurC,YAEAP,mBAAA,SAAAD,GAEA,IADA,IAAAS,KACAzsC,EAAA,EAAgBA,EAAAgsC,EAAAxpC,OAAiBxC,IACjCysC,EAAAniC,KAAAlC,KAAAskC,mBAAAV,EAAAhsC,KAEA,UAAAysC,EAAA9jC,KAAA,KAA6B,KAE7B+jC,mBAAA,SAAAzrC,GAUA,OAPAA,EAAAyL,GACAzL,EAAAyL,GACGtE,KAAAmkC,QAAAtrC,GACHA,EAAAoC,UAEApC,GAEA,IAEAiqC,SAAA,WACA9iC,KAAAsI,QACAtI,KAAAijC,QAAA,GAEAsB,WAAA,WACAvkC,KAAAsI,QACAtI,KAAAijC,QAAA,GAEA36B,MAAA,WACAtI,KAAAkjC,UAGAsB,MAAA,SAAA7+B,GACA,IAAA8+B,KAEAC,GACA,kBACA,iBACA,gBACA,iBACA,aAKA,QAAA1kC,KAAAjH,KACA4M,EAAAsB,OAAA2jB,0BACA6Z,EAAAC,IAEG,IAAA1kC,KAAAjH,OACH0rC,EAAAC,GAGA1kC,KAAAojC,aAAAqB,EAAA9+B,IAGAq9B,kBAAA,SAAAr9B,IACA3F,KAAAmjC,oBAAAx9B,EAAAsB,OAAA2jB,yBACA5qB,KAAAjH,OAAA4M,EAAAsB,OAAA09B,mBAEA3kC,KAAAmjC,mBAAAx9B,EAAAsB,OAAA2jB,wBACA5qB,KAAAjH,KAAA4M,EAAAsB,OAAA09B,gBACA3kC,KAAAwkC,MAAA7+B,MAYAA,EAAAlK,YAAA,sBAAAqnC,GACAn9B,EAAAlK,YAAA,qBAAAqnC,GACAn9B,EAAAlK,YAAA,iCACAqnC,MAEAn9B,EAAAlK,YAAA,gBAAAqnC,GACAn9B,EAAAlK,YAAA,0BACAkK,EAAAo9B,kBAAAwB,eAEA,IAAAK,EAAA,KACAj/B,EAAAlK,YAAA,2BACAmpC,GACAzJ,aAAAyJ,GACAA,EAAArK,WAAA,WACA50B,EAAAo9B,kBAAAwB,cACE,OAGF5+B,EAAAlK,YAAA,gCAEA,OADAkK,EAAAo9B,kBAAAC,kBAAAr9B,IACA,sBC3KA,IAAA0H,EAAA7V,EAAA,GAEAG,EAAAD,QAAA,SAAAiO,GACA,IAAA2H,EAAA9V,EAAA,GAAAA,CAAAmO,GAEA,SAAAk/B,IAGA,OAFAv3B,EAAA/S,MAAAyF,KAAA7E,YAAA6E,KAmCA,OA9BAqN,EAAAw3B,EAAAv3B,GAEAu3B,EAAArrC,UAAA+L,OAAA,SAAAiI,GACA,IAAAkb,EAAA/iB,EAAAsB,OAAAyhB,MACAxO,EAAAvU,EAAAuU,OAAAK,OACA9M,KAEAmJ,EAAApJ,EAAAoJ,QAAA,WACA,UAEA,QAAAhf,KAAA8wB,GACA,IAAA9R,EAAAhf,EAAA8wB,EAAA9wB,KACA6V,EAAAvL,MAAkB/I,IAAAuvB,EAAA9wB,GAAA8V,MAAAwM,EAAA,QAAAtiB,KAGlB4V,EAAAC,UAEA,IAAAq3B,EAAAt3B,EAAAI,SAUA,OATAJ,EAAAI,SAAA,WACAjI,EAAAoL,WAAAg0B,SAEAp/B,EAAA+3B,mBAAA19B,KAAAnH,OACA,mBAAAisC,GACAA,EAAAvqC,MAAAyF,KAAA7E,YAIAmS,EAAA9T,UAAA+L,OAAAhL,MAAAyF,KAAA7E,YAGA0pC,oBCzCAltC,EAAAD,QAAA,SAAAiO,GACA,IAAAk/B,EAAArtC,EAAA,GAAAA,CAAAmO,GAEAA,EAAA6iB,YAAA,SAAAhX,GACA,IAAAwzB,EAAAxzB,EAKA,QAAA5Z,KAJA4Z,GAAA,iBAAAA,IACAwzB,EAAAxzB,QAGAxR,KAAAiH,OAAAyhB,MACA,GAAA1oB,KAAAiH,OAAAyhB,MAAA9wB,IAAAotC,EACA,OAAAA,EAGA,OAAAr/B,EAAAsB,OAAAyhB,MAAAhW,MAGA/M,EAAAs/B,YAAAC,WAAA,IAAAL,kBCjBAltC,EAAAD,QAAA,SAAAiO,GAEAA,EAAAw/B,oBAAA,SAAAC,GAEA,IAAA3yB,EAAA2yB,EACAC,GACA9/B,OAAAkN,EAAAlN,OACAG,MAAA+M,EAAA/M,MACAF,UAAA,SAAA1H,EAAAjF,EAAA6Z,EAAA4yB,GACA,IAAA50B,EAAA/K,EAAA4/B,yBAAAD,GACA,IAAA5yB,EAAAhC,EAAA8B,aAAA,cAAA9B,EAAA8B,YAAAxS,KAAAooB,0BAAA1V,GAAA,CACA2yB,EAAAG,QAAA1nC,EAAAwnC,GACA,IAAA9jB,KAEA,QAAA5pB,KAAA8Y,EAEA8Q,EAAA9Q,EAAA9Y,IAAA8a,EAAA9a,GAGA,OAAA6a,EAAAjN,UAAAzN,KAAA4N,EAAA7H,EAAAjF,EAAA2oB,EAAA8jB,GAGA,OADAD,EAAAI,OAAA3nC,EAAAwnC,GACA7yB,EAAAjN,UAAAzN,KAAA4N,EAAA7H,EAAAjF,EAAA6Z,EAAA4yB,IAGA7/B,UAAA,SAAA3H,EAAA4U,EAAA4yB,GACA,OAAAA,EAAAI,UACalzB,WAAA,MAEbC,EAAAhN,UAAA1N,KAAA4N,EAAA7H,EAAA4U,EAAA4yB,IAGAK,aAAA,SAAA7nC,EAAAwnC,GAIA,GAHA3/B,EAAAf,UAAA,mBAAAe,EAAAigC,aAAAN,IACAxnC,EAAAI,MAAAH,QAAAunC,EAAAI,SAAA,eAEAJ,EAAAtmC,OAAA,CACA,IAAAA,EAAAlB,EAAA+nC,gBAAAxjC,cAAA,8BACAkY,EAAA5U,EAAAuU,OAAAK,OAEAurB,EAAAR,EAAAI,SAAAnrB,EAAA+qB,EAAAntC,KAAA,kBAAAoiB,EAAA+qB,EAAAntC,KAAA,mBAEA6G,EAAAwC,UAAAskC,EAEAngC,EAAAogC,kBAEAP,QAAA,SAAA1nC,EAAAwnC,GACAA,EAAAI,UAAA,EACAL,EAAAM,aAAA7nC,EAAAwnC,IAGAG,OAAA,SAAA3nC,EAAAwnC,GACAA,EAAAI,UAAA,EACAL,EAAAM,aAAA7nC,EAAAwnC,IAEAU,aAAA,SAAAz8B,EAAAlO,EAAAiqC,EAAArxB,GACA,QAAAtO,EAAAf,UAAA,mBAAAe,EAAAigC,aAAAN,IAAA,CAGA,IAAAr+B,EAAAtB,EAAAsgC,6BAAA18B,GACAtC,EAAAy+B,SACAL,EAAAI,OAAAxxB,EAAAhN,GAEAo+B,EAAAG,QAAAvxB,EAAAhN,MAIA,OAAAo+B,GAGA1/B,EAAAs/B,YAAAiB,kBAAAvgC,EAAAw/B,oBAAAx/B,EAAAs/B,YAAAxyB,UACA9M,EAAAs/B,YAAAkB,cAAAxgC,EAAAw/B,oBAAAx/B,EAAAs/B,YAAAmB,wBCvEA,IAAA/4B,EAAA7V,EAAA,GAEAG,EAAAD,QAAA,SAAAiO,GACA,IAAA2H,EAAA9V,EAAA,GAAAA,CAAAmO,GAEA,SAAA0gC,IAGA,OAFA/4B,EAAA/S,MAAAyF,KAAA7E,YAAA6E,KAsBA,SAAAsmC,EAAAr/B,EAAAs/B,GACA,IAAA5Y,KACAlgB,KACA84B,IACA5Y,EAAAhoB,EAAA6gC,gBACAv/B,EAAAw/B,YACA9Y,EAAA+Y,SAAmBpiC,GAAAqB,EAAAsB,OAAA0/B,QAAAl4B,KAAAxH,EAAA2/B,YAAA,KAEnBjZ,EAqBA,SAAAlgB,EAAAxG,EAAAs/B,GACA,IAAA3vB,EAAA3P,EAAA2P,QAAA,WACA,UAGAnJ,IAAAhN,MAAA,GAEA,QAAA7I,EAAA,EAAiBA,EAAA6V,EAAArT,OAAoBxC,IAAA,CACrC,IAAA8a,EAAAjF,EAAA7V,IACA8a,EAAApO,IAAAiiC,GAAA5gC,EAAAtC,UAAAqP,EAAApO,GAAAiiC,KAAA,IAAA3vB,EAAAlE,EAAApO,GAAAoO,MACAjF,EAAA/M,OAAA9I,EAAA,GACAA,KAGA,OAAA6V,EAnCAo5B,CAAAlZ,EAAA1mB,EAAAs/B,GACAt/B,EAAA0T,MACAgT,EAAAhT,KAAA1T,EAAA0T,OAIA,IADA,IAAAlM,EAAAxH,EAAAijB,UAAAvkB,EAAAwU,UAAA0P,UACAjyB,EAAA,EAAiBA,EAAA+1B,EAAAvzB,OAAkBxC,IAAA,CACnC,IAAA8V,EAAAe,EAAAlU,MAAAoL,GAAAgoB,EAAA/1B,GAAA4a,WAAAmb,EAAA/1B,GAAA0a,SAAAqb,EAAA/1B,UACAmD,IAAA2S,IACAA,EAAA,IAEAD,EAAAvL,MACA/I,IAAAw0B,EAAA/1B,GAAA0M,GACAoJ,UAKA,OAFAzG,EAAAwG,UACAxG,EAAA6K,OAAA7K,EAAA6K,QAAA,SACAnM,EAAAs/B,YAAAnmC,OAAAyG,OAAAhL,MAAAyF,KAAA7E,WAmBA,OA9DAkS,EAAAg5B,EAAA/4B,GAGA+4B,EAAA7sC,UAAA+L,OAAA,SAAAiI,GACA,OAAA84B,EAAA94B,GAAA,IAGA64B,EAAA7sC,UAAAgM,UAAA,SAAA1H,EAAAjF,EAAAkK,EAAAkE,GACA,IAAA6/B,EAAAxqC,SAAAmD,cAAA,OACAqnC,EAAAtlC,UAAA8kC,EAAAr/B,EAAAlE,EAAAuB,IACA,IAAAyiC,EAAAD,EAAA9lC,YAAA8lC,EAAAplC,YAIA,OAHA5D,EAAAkpC,SAAA,KACAlpC,EAAArB,WAAAwqC,aAAAF,EAAAjpC,GAEA6H,EAAAs/B,YAAAnmC,OAAA0G,UAAAjL,MAAAoL,GAAAohC,EAAAluC,EAAAkK,EAAAkE,KAgDAo/B,oBCzEA,IAAAh5B,EAAA7V,EAAA,GAEAG,EAAAD,QAAA,SAAAiO,GACA,IAAA2H,EAAA9V,EAAA,EAAAA,CAAAmO,GAEA,SAAAuhC,IAGA,OAFA55B,EAAA/S,MAAAyF,KAAA7E,YAAA6E,KA+HA,SAAAmnC,EAAArpC,EAAAmJ,GACA,IAAAtN,EAAAmE,EAAA0kC,qBAAA,UACA77B,EAAAM,EAAAmgC,mBACAvqB,EAAA,EACAD,EAAA,EAEA,GAAAjX,EAAAnL,QAAAmM,EAAA,KACA,IAAA9H,EAAAlF,EAAAgN,EAAA,IACAy/B,EAAAjpC,SAAA0B,EAAAhG,MAAA,IACAwF,MAAA+nC,IAAAvnC,EAAAK,aAAA,gBACAknC,EAAAjpC,SAAA0B,EAAAP,aAAA,mBAGAue,EAAArf,KAAAiO,MAAA26B,EAAA,IACAxpB,EAAAwpB,EAAA,GAEA,WAAA9rC,KAAAX,EAAAgN,EAAA,IAAA9N,MAAAc,EAAAgN,EAAA,IAAA9N,MAAAc,EAAAgN,EAAA,IAAA9N,MAAAgkB,EAAAD,GAGA,SAAAyqB,EAAAvpC,GACA,IAAA2U,EAAA3U,EAAA0kC,qBAAA,YAKA,OAHA/vB,EAAAtV,SAAAsV,EAAA5Z,MAAA,OACA8D,OAAA0B,MAAAoU,OAAA,GACAA,EAAA,IAAAA,IAAA,GACAA,EAIA,OAvJApF,EAAA65B,EAAA55B,GAEA45B,EAAA1tC,UAAA+L,OAAA,SAAAiI,GACA,IAAA44B,EAAA,mCAAAzgC,EAAAs/B,YAAAqC,cAAAvvC,KAAAiI,KAAAwN,GAAA,SACAE,EAAA/H,EAAAuU,OAAAK,OAAA5U,EAAAsB,OAAA+W,cAAA,KACAupB,EAAA/5B,EAAAg6B,YAAA,2BACAC,EAAAj6B,EAAAi6B,SAAA,0BAEAh1B,EAAA,+BAAA80B,EAAA,6DACAE,EAAA,6DACAA,EAAA,IAHA9hC,EAAAwO,SAAAuzB,gCAAAl6B,GAGA,6DACAi6B,EAAA,KAAA/5B,EAAA,uBAGA,MADA,uBAAAF,EAAA5P,QAAA,yEAAgGwoC,EAAA,IAAA3zB,EAAA,UAIhGy0B,EAAA1tC,UAAAgM,UAAA,SAAA1H,EAAAjF,EAAAkK,EAAAkE,GACA,IAOAyJ,EACA8B,EACAF,EACAq1B,EAVAloB,EAAAxY,EACAtN,EAAAmE,EAAA0kC,qBAAA,UACAoF,EAAA9pC,EAAA0kC,qBAAA,SACA/vB,EAAAm1B,EAAA,GACAC,GAAAD,EAAA,GAAAA,EAAA,IACAE,EAAAhqC,EAAA0kC,qBAAA,WACA77B,EAAAM,EAAAmgC,mBAMA,SAAAW,IACA,IAAAv1B,EAAA20B,EAAApvC,KAAA4N,EAAA7H,EAAAmJ,GACAwL,EAAA40B,EAAAtvC,KAAA4N,EAAA7H,EAAAmJ,GACAqL,EAAA3M,EAAA4M,kBAA0CC,aAAAC,WAAAC,KAAA3P,IAE1C+kC,EAAAtmC,UAAAmE,EAAAwU,UAAA6tB,UAAA11B,GAGA,SAAA21B,EAAAzqB,GACA,IAAA3kB,EAAA4Z,EAAA5Z,MAEAA,EAAAsE,SAAAtE,EAAA,IACA8D,OAAA0B,MAAAxF,KACAA,EAAA,IACAA,GAAA2kB,GACA,IAAA3kB,EAAA,GACA4Z,EAAA5Z,QACAkvC,IAGAF,EAAA,GAAAK,QAAAviC,EAAAvM,KAAA,WACA6uC,GAAA,EAAAtiC,EAAAsB,OAAAqX,gBACGte,MACH6nC,EAAA,GAAAK,QAAAviC,EAAAvM,KAAA,WACA6uC,EAAA,EAAAtiC,EAAAsB,OAAAqX,gBACGte,MACHrG,EAAA,GAAAiU,SAAAm6B,EACApuC,EAAA,GAAAiU,SAAAm6B,EACApuC,EAAA,GAAAiU,SAAAm6B,EACApuC,EAAA,KAAAA,EAAA,GAAAiU,SAAAm6B,GAEAt1B,EAAA01B,UAAAxiC,EAAAvM,KAAA,SAAAuG,GACA,IAAA4jB,EAKA,OAFAA,GADA5jB,KAAAhD,OAAAvB,OACAgtC,UAAAzoC,EAAA0oC,SAAA1oC,EAAA2oC,QAEA3iC,EAAA4iC,UAAAC,UAAAC,MACAR,GAAA,EAAAtiC,EAAAsB,OAAAqX,gBACA,GAGAiF,GAAA5d,EAAA4iC,UAAAC,UAAAE,IACAT,EAAA,EAAAtiC,EAAAsB,OAAAqX,gBACA,QAEA3hB,OAAA49B,WAAAwN,EAAA,IACG/nC,MAEHyS,EAAA7E,SAAAjI,EAAAvM,KAAA2uC,EAAA/nC,MAGA,iBADA0Q,EAAA/K,EAAA4/B,yBAAAt+B,MACAyJ,GAA+C8B,WAAA9B,IAE/C8B,EAAAzP,EAAA2N,EAAA8B,aAAA,IAAAlY,KACAgY,EAAAvP,EAAA2N,EAAA4B,WAAA3M,EAAA4M,kBACAC,aACAC,SAAA,EACAC,KAAA3P,IAEA4kC,EAAAnqC,KAAAC,MAAAsF,EAAA2N,EAAA+B,YAAA9M,EAAAgjC,mBACAn2B,aACAF,WACAI,KAAA3P,IAGA4C,EAAAs/B,YAAA2D,sBAAAjvC,EAAA,EAAA6Y,EAAA7L,EAAA8Y,GACAhN,EAAA5Z,MAAA8uC,EACAI,KAGAb,EAAA1tC,UAAAiM,UAAA,SAAA3H,EAAAiF,EAAAkE,GACA,IAAA4hC,EAAA1B,EAAArpC,EAAAmJ,GACAwL,EAAA40B,EAAAvpC,GACAgrC,EAAAnjC,EAAA4M,kBAAwCC,WAAAq2B,EAAAp2B,WAAAC,KAAA3P,IAExC,uBAAA4C,EAAA4/B,yBAAAt+B,GACA4hC,GAIAr2B,WAAAq2B,EACAv2B,SAAAw2B,EACAr2B,aAIAy0B,EAAA1tC,UAAAkM,MAAA,SAAA5H,GACA6H,EAAAkI,OAAA/P,EAAA0kC,qBAAA,eAiCA0E,oBClKA,IAAA75B,EAAA7V,EAAA,GAEAG,EAAAD,QAAA,SAAAiO,GACA,IAAA2H,EAAA9V,EAAA,EAAAA,CAAAmO,GAEA,SAAAojC,IAGA,OAFAz7B,EAAA/S,MAAAyF,KAAA7E,YAAA6E,KAiDA,OA5CAqN,EAAA07B,EAAAz7B,GAEAy7B,EAAAvvC,UAAA+L,OAAA,SAAAiI,GACA,IACAzD,EAAA,gDADAyD,EAAA5P,QAAA,YACA,MAEA,GAAA4P,EAAAC,SAAAD,EAAAC,QAAArT,OACA,QAAAxC,EAAA,EAAkBA,EAAA4V,EAAAC,QAAArT,OAAwBxC,IAC1CmS,GAAA,qCAAAyD,EAAAC,QAAA7V,GAAAuB,IAAA,WAAAqU,EAAArV,KAAA,KAAAqV,EAAAC,QAAA7V,GAAA8V,MAAA,WAKA,OADA3D,GAAA,UAIAg/B,EAAAvvC,UAAAgM,UAAA,SAAA1H,EAAAjF,EAAAkK,EAAAyK,GACA,IAAAw7B,EAEAx7B,EAAAC,SAAAD,EAAAC,QAAArT,SAEA4uC,EAAAlrC,EAAAuE,cAAA,4BAAAxJ,EAAA,OACAiF,EAAAuE,cAAA,4BAAAmL,EAAAy7B,cAAA,UAIAnrC,EAAA6P,eAAAH,EAAAI,WACA9P,EAAA8P,SAAAJ,EAAAI,SACA9P,EAAA6P,eAAA,GAGAq7B,EAAAE,SAAA,IAGAH,EAAAvvC,UAAAiM,UAAA,SAAA3H,EAAAiF,GACA,IAAAhJ,EAAA+D,EAAAuE,cAAA,6BAEA,OAAAtI,IAAAlB,MAAA,IAGAkwC,EAAAvvC,UAAAkM,MAAA,SAAA5H,GACA6H,EAAAkI,OAAA/P,EAAAuE,cAAA,uBAGA0mC,oBCvDA,IAAAtX,EAAAj6B,EAAA,GACA6V,EAAA7V,EAAA,GAEAG,EAAAD,QAAA,SAAAiO,GACA,IAAA2H,EAAA9V,EAAA,EAAAA,CAAAmO,GAEA,SAAAwjC,IAGA,OAFA77B,EAAA/S,MAAAyF,KAAA7E,YAAA6E,KA2CA,OAtCAqN,EAAA87B,EAAA77B,GAEA67B,EAAA3vC,UAAA+L,OAAA,SAAAiI,GACA,IACAzD,EAAA,gDADAyD,EAAA5P,QAAA,YACA,MAEA,GAAA4P,EAAAC,SAAAD,EAAAC,QAAArT,OACA,QAAAxC,EAAA,EAAkBA,EAAA4V,EAAAC,QAAArT,OAAwBxC,IAC1CmS,GAAA,wCAAAyD,EAAAC,QAAA7V,GAAAuB,IAAA,WAAAqU,EAAArV,KAAA,KAAAqV,EAAAC,QAAA7V,GAAA8V,MAAA,WAIA,OADA3D,GAAA,UAIAo/B,EAAA3vC,UAAAgM,UAAA,SAAA1H,EAAAjF,EAAAkK,EAAAyK,GACA,IAAA47B,EAAApvC,MAAAR,UAAAiH,MAAA1I,KAAA+F,EAAAwC,iBAAA,0BAEAxC,EAAA6P,eAAAH,EAAAI,WACA9P,EAAA8P,SAAAJ,EAAAI,SACA9P,EAAA6P,eAAA,GAGA8jB,EAAAlrB,QAAA6iC,EAAA,SAAAC,GACAA,EAAAH,UAAArwC,KAAAyG,QAAA+pC,EAAAxwC,QAAA,KAIAswC,EAAA3vC,UAAAiM,UAAA,SAAA3H,GACA,OAAA2zB,EAAA/qB,SAAA1M,MAAAR,UAAAiH,MAAA1I,KAAA+F,EAAAwC,iBAAA,0CAAA+oC,GACA,OAAAA,EAAAxwC,SAIAswC,EAAA3vC,UAAAkM,MAAA,SAAA5H,GACA6H,EAAAkI,OAAA/P,EAAAuE,cAAA,0BAGA8mC,oBClDA,IAAA97B,EAAA7V,EAAA,GAEAG,EAAAD,QAAA,SAAAiO,GACA,IAAA2H,EAAA9V,EAAA,EAAAA,CAAAmO,GAEA,SAAA2jC,IAGA,OAFAh8B,EAAA/S,MAAAyF,KAAA7E,YAAA6E,KAsGA,OAjGAqN,EAAAi8B,EAAAh8B,GAGAg8B,EAAA9vC,UAAA+L,OAAA,SAAAiI,GACA,IAAA44B,EAAAzgC,EAAAs/B,YAAAqC,cAAAvvC,KAAAiI,KAAAwN,GACAzD,EAAA,uBAAAyD,EAAA5P,QAAA,2FAYA,OAXAmM,GAAAq8B,EAEA54B,EAAAg6B,aACApB,EAAAzgC,EAAAs/B,YAAAqC,cAAAvvC,KAAAiI,KAAAwN,GAAA,GACAzD,GAAA,iBAEAA,GAAA,iFAGAA,GAAAq8B,EACAr8B,GAAA,UAIAu/B,EAAA9vC,UAAAgM,UAAA,SAAA1H,EAAAjF,EAAAkK,EAAAkE,GACA,IAAAwY,EAAAxY,EACAtN,EAAAmE,EAAA0kC,qBAAA,UACA77B,EAAAM,EAAAmgC,mBAEA,GAAA3nB,EAAA8pB,cAMA,IALA,IAAAC,EAAA,WACAh3B,EAAA,IAAAlY,KAAAX,EAAAgN,EAAA,IAAA9N,MAAAc,EAAAgN,EAAA,IAAA9N,MAAAc,EAAAgN,EAAA,IAAA9N,MAAA,KACAyZ,EAAA3M,EAAA4M,kBAAuCC,aAAAC,SAAA,EAAAC,KAAA3P,IACvC4C,EAAAs/B,YAAA2D,sBAAAjvC,EAAAgN,EAAA4D,KAAA+H,EAAA3L,EAAA8Y,IAEA7nB,EAAA,EAAkBA,EAAA,EAAOA,IACzB+B,EAAA/B,GAAAgW,SAAA47B,EAIA,IAAA94B,EAAA/K,EAAA4/B,yBAAAt+B,GAEA,qBAAAyJ,GAA+C8B,WAAA9B,IAE/C,IAAA8B,EAAAzP,EAAA2N,EAAA8B,aAAA,IAAAlY,KACAgY,EAAAvP,EAAA2N,EAAA4B,WAAA3M,EAAA4M,kBACAC,aACAC,SAAA,EACAC,KAAA3P,IAGA4C,EAAAs/B,YAAA2D,sBAAAjvC,EAAA,EAAA6Y,EAAA7L,EAAA8Y,GACA9Z,EAAAs/B,YAAA2D,sBAAAjvC,EAAAgN,EAAA4D,KAAA+H,EAAA3L,EAAA8Y,IAGA6pB,EAAA9vC,UAAAiM,UAAA,SAAA3H,EAAAiF,EAAAkE,GACA,IAGA4hC,EAHAY,EAAA3rC,EAAA0kC,qBAAA,UACA77B,EAAAM,EAAAmgC,mBACAsC,EAAA/jC,EAAAnL,QAAAmM,EAAA,IAYA,SAAAgjC,EAAAF,EAAA9iC,EAAA+iC,EAAAE,GACA,IAAAxD,EACAvpB,EAAA,EACAD,EAAA,EASA,OAPAgtB,KAAA,EAEAF,IACAtD,EAAAjpC,SAAAssC,EAAA9iC,EAAA,GAAAijC,GAAA/wC,MAAA,IACAgkB,EAAArf,KAAAiO,MAAA26B,EAAA,IACAxpB,EAAAwpB,EAAA,IAEA,IAAA9rC,KAAAmvC,EAAA9iC,EAAA,GAAAijC,GAAA/wC,MAAA4wC,EAAA9iC,EAAA,GAAAijC,GAAA/wC,MAAA4wC,EAAA9iC,EAAA,GAAAijC,GAAA/wC,MAAAgkB,EAAAD,GAKA,OAFAisB,EAAAc,EAAAF,EAAA9iC,EAAA+iC,GAEA,iBAAA/jC,EAAA4/B,yBAAAt+B,GACA4hC,GAIAr2B,WAAAq2B,EACAv2B,SAhCA,SAAAm3B,EAAA9iC,EAAA+iC,EAAAb,GACA,IAAAC,EAAAa,EAAAF,EAAA9iC,EAAA+iC,EAAA/iC,EAAA4D,MAEA,OAAAu+B,GAAAD,EACAljC,EAAAgJ,KAAAyR,IAAAyoB,EAAAljC,EAAAkkC,uBAAA,UAEAf,EA0BAgB,CAAAL,EAAA9iC,EAAA+iC,EAAAb,KAIAS,EAAA9vC,UAAAkM,MAAA,SAAA5H,GACA6H,EAAAkI,OAAA/P,EAAA0kC,qBAAA,eAGA8G,oBC5GA,IAAAj8B,EAAA7V,EAAA,GAEAG,EAAAD,QAAA,SAAAiO,GACA,IAAA2H,EAAA9V,EAAA,EAAAA,CAAAmO,GAEA,SAAAokC,IAGA,OAFAz8B,EAAA/S,MAAAyF,KAAA7E,YAAA6E,KA6BA,OAxBAqN,EAAA08B,EAAAz8B,GAEAy8B,EAAAvwC,UAAA+L,OAAA,SAAAiI,GAEA,sDADAA,EAAA5P,QAAA,aACA,kCAGAmsC,EAAAvwC,UAAAgM,UAAA,SAAA1H,EAAAjF,GACA8M,EAAAs/B,YAAAlmC,SAAAirC,WAAAlsC,GAAAjF,SAAA,IAGAkxC,EAAAvwC,UAAAiM,UAAA,SAAA3H,GACA,OAAA6H,EAAAs/B,YAAAlmC,SAAAirC,WAAAlsC,GAAAjF,OAGAkxC,EAAAvwC,UAAAkM,MAAA,SAAA5H,GACA,IAAAU,EAAAmH,EAAAs/B,YAAAlmC,SAAAirC,WAAAlsC,GACA6H,EAAAkI,OAAArP,GAAA,IAGAurC,EAAAvwC,UAAAwwC,WAAA,SAAAlsC,GACA,OAAAA,EAAAuE,cAAA,aAGA0nC,oBCnCA,IAAA18B,EAAA7V,EAAA,GAEAG,EAAAD,QAAA,SAAAiO,GACA,IAAA2H,EAAA9V,EAAA,EAAAA,CAAAmO,GAEA,SAAAskC,IAEA,OADA38B,EAAA/S,MAAAyF,KAAA7E,YAAA6E,KAsBA,OAlBAqN,EAAA48B,EAAA38B,GAGA28B,EAAAzwC,UAAA+L,OAAA,SAAAiI,GAEA,yEADAA,EAAA5P,QAAA,YACA,aAGAqsC,EAAAzwC,UAAAgM,UAAA,SAAA1H,EAAAjF,GACAiF,EAAA0D,UAAA3I,GAAA,IAGAoxC,EAAAzwC,UAAAiM,UAAA,SAAA3H,GACA,OAAAA,EAAA0D,WAAA,IAGAyoC,EAAAzwC,UAAAkM,MAAA,aAEAukC,oBC5BAtyC,EAAAD,QAAA,SAAAiO,GACA,IAAAoB,EAAAvP,EAAA,GACAi6B,EAAAj6B,EAAA,GACAyyC,EAAAzyC,EAAA,GAAAA,CAAAmO,GACAokC,EAAAvyC,EAAA,GAAAA,CAAAmO,GACA2jC,EAAA9xC,EAAA,GAAAA,CAAAmO,GACA4H,EAAA/V,EAAA,GAAAA,CAAAmO,GACAwjC,EAAA3xC,EAAA,GAAAA,CAAAmO,GACAojC,EAAAvxC,EAAA,GAAAA,CAAAmO,GACAuhC,EAAA1vC,EAAA,GAAAA,CAAAmO,GACA0gC,EAAA7uC,EAAA,GAAAA,CAAAmO,GAktBA,SAAAukC,EAAAlO,EAAAmO,GACA,IAAAnrC,EAGApH,EADAmS,EAAA,GAGA,IAAAnS,EAAA,EAAaA,EAAAokC,EAAA5hC,OAAoBxC,IAEjCoH,EAAA2G,EAAAsB,OAAAmjC,iBAAApO,EAAApkC,IAAA+N,EAAAsB,OAAAmjC,iBAAApO,EAAApkC,IAAAokC,EAAApkC,GAGAmS,GAAA,QADApE,EAAAwO,SAAAk2B,yBAAArrC,GACA,4CAAAA,EAAA,SAAAmrC,EAAA,wBAAoI,uDAAAnrC,EAAA,gBAAA2G,EAAAuU,OAAAK,OAAAvb,GAAA,eAEpI,OAAA+K,EAoBA,SAAAugC,EAAA98B,EAAAjE,EAAAghC,GACA,IAAArqB,EACA8T,EACAwW,EACAC,EACA7yC,EAGA8yC,EACA3gC,EAAA,GAEA,OAAAwgC,EAAAI,WAAAphC,IACA,SAoBA,IAnBAiE,EAAA45B,mBAAA,GAAA79B,EACAiE,EAAA45B,mBAAA78B,OAGAiD,EAAAo9B,aACAvsC,MAAAmP,EAAAo9B,YAEKp9B,EAAAo9B,WAAA1oC,OAELsoC,EAAAh9B,EAAAo9B,WAAA,GACAH,EAAAj9B,EAAAo9B,WAAA,IAJA1qB,EAAA1S,EAAAo9B,YAQA1qB,KAAA,GACA8T,KAAAx2B,KAAAiO,MAAAyU,EAAA,GACAsqB,KAAAD,EAAA57B,KAAAhD,cAAAqoB,EACAyW,KAAAD,EAAAtqB,EAEAtoB,EAAA4yC,EAAuB5yC,EAAA6yC,EAAc7yC,IACrCmS,GAAA,uCACA,MACA,SAIA,IAHAyD,EAAA45B,mBAAA,GAAA79B,EACAiE,EAAA45B,mBAAA78B,OAEA3S,EAAA,EAAcA,EAAA,GAAQA,IACtBmS,GAAA,kBAAAnS,EAAA,KAAA+N,EAAAuU,OAAAvL,KAAAsM,WAAArjB,GAAA,YACA,MACA,SAIA,IAHA4V,EAAA45B,mBAAA,GAAA79B,EACAiE,EAAA45B,mBAAA78B,OAEA3S,EAAA,EAAcA,EAAA,GAAQA,IACtBmS,GAAA,kBAAAnS,EAAA,KAAAA,EAAA,YACA,MACA,YASA,IAPA4V,EAAA45B,mBAAA,GAAA79B,EACAiE,EAAA45B,mBAAA78B,OAEA3S,EAAA2yC,EAAAM,MACAH,EAAAH,EAAA57B,KAAA9C,UACA2B,EAAAs9B,gBAEAlzC,EAAA2yC,EAAA9vB,MAEA1Q,GAAA,kBAAAnS,EAAA,KADA+N,EAAAwU,UAAA4wB,YAAAR,EAAA57B,MACA,YACAnB,EAAAs9B,aAAA5oC,KAAAtK,GACA2yC,EAAA57B,KAAAq8B,QAAAT,EAAA57B,KAAA1T,UAAA,GAAA0K,EAAAkkC,uBAAA,KAEAjyC,EAAA,IADA2yC,EAAA57B,KAAA9C,WAAA6+B,EAAA,KACA,MAAAH,EAAA57B,KAAAs8B,WAAAV,EAAA57B,KAAAu8B,aAMA,OAAAnhC,EAvzBApE,EAAAwlC,qBACAxlC,EAAAm8B,mBAAA,iLAIAn8B,EAAAoC,UAAAC,WAAA,SACAojC,iBAAA,sBACA,OACArG,SAAAp/B,EAAAigC,gBAIAjgC,EAAAu2B,aAAA,SAAA53B,GACA,GAAAA,IAAAqB,EAAA8jB,WAAAzpB,KAAAiS,QAAA3N,KACAtE,KAAA4E,UAAA,oBAAAN,IAAA,CAEA,IAAAoO,EAAA1S,KAAAiS,QAAA3N,GAEAlI,EAAA4D,KAAAqrC,YAAArrC,KAAAwoB,YAAA9V,EAAAlB,OACAxR,KAAAsrC,iBAAAlvC,GACA4D,KAAAurC,YACAvrC,KAAAwrC,eAAAlnC,EAAAlI,GAEA4D,KAAAmU,SAAAs3B,oBAAArvC,GAEA4D,KAAA4E,UAAA,cAAAN,MAYAqB,EAAAkkC,qBAAA,WACA,GAAA7pC,KAAAiH,OAAAykC,gBAAA,CACA,IAAAluB,EACA,GAZA,SAAA7X,GACA,IAAAgmC,EAAAhmC,EAAA+Q,IAAAiB,QAAA,YACA,SAAAg0B,MAAA9tC,aAUA+tC,CAAA5rC,MAAA,CACA,IAAA+vB,EAAApqB,EAAA0rB,WACA7T,EAAAiU,EAAAprB,iBAAA0pB,EAAAzpB,MAAAypB,EAAAvS,KAAA,GAMA,QAHAA,MAAA,QACAA,EAAAxd,KAAAiH,OAAA4kC,WAEAruB,EAEA,OAAAxd,KAAAiH,OAAA4kC,WAEAlmC,EAAAmmC,SAAA,SAAAvyC,EAAAJ,GAEA,IADA,IAAA4yC,EAAA/rC,KAAAimC,6BACAruC,EAAA,EAAiBA,EAAAm0C,EAAA3xC,OAAqBxC,IACtC,GAAAm0C,EAAAn0C,GAAAka,QAAAvY,EAEA,IADA,IAAAkU,EAAAs+B,EAAAn0C,GAAA6V,QACAu+B,EAAA,EAAmBA,EAAAv+B,EAAArT,OAAoB4xC,IACvC,GAAAv+B,EAAAu+B,GAAA7yC,OACA,OAAAsU,EAAAu+B,GAAAt+B,MAKA,UAGA/H,EAAAsmC,iBAAA,SAAAC,EAAAC,GACAA,IAAA1rC,MAAA,GACA,IAAAwE,EAAAU,EAAAymC,WAAAF,GACA,IAAAjnC,EAAA,SACAA,EAAAvE,OAAA,EAAAuE,EAAA7K,QACA6K,EAAA/C,KAAA3H,MAAA0K,EAAAknC,OACAxmC,EAAA+0B,iBAEA/0B,EAAAg4B,gBAAA,WACA,OAAA39B,KAAAwoB,YAAAxoB,KAAAqsC,iBAEA1mC,EAAA0lC,YAAA,SAAA75B,GACA,IAAA86B,EACAC,EACAxiC,EACAyD,EAEAg/B,EAAA,GA0DA,YAxDAzxC,IAAAyW,IACAA,EAAAxR,KAAA29B,mBAEA39B,KAAAysC,WAAAzsC,KAAA29B,mBAAA39B,KAAAwoB,YAAAhX,KACAxR,KAAAqsC,eAAArsC,KAAAwoB,YAAAhX,GACA86B,EAAAhwC,SAAAmD,cAAA,OACA+sC,EAAA,kBACAD,EAAAvsC,KAAA0sC,2BAEA/mC,EAAAsB,OAAA0lC,WAAAJ,KACAC,GAAA,yBAEAD,IACA5mC,EAAAsB,OAAA0lC,WAAA,EACAH,GAAA,yBAGAF,EAAAltC,UAAAotC,EAEAF,EAAApuC,MAAAF,WAAA,SACA+L,EAAA/J,KAAA8hC,mBAEA/3B,GAAAmgC,EAAAlqC,KAAAiH,OAAAw6B,cACA13B,GAAAmgC,EAAAlqC,KAAAiH,OAAAy6B,eAAA,GAEA4K,EAAA9qC,UAAAuI,EAEApE,EAAAwO,SAAAy4B,aAAAN,GAEA3mC,EAAAsB,OAAA4lC,gBACAP,EAAA5qC,WAAAorC,YAAAnnC,EAAAonC,cACAT,EAAA5qC,WAAAsrC,cAAA,WACA,UAEAV,EAAA5qC,WAAAxD,MAAA+uC,OAAA,UACAtnC,EAAAunC,oBAGA5wC,SAAAD,KAAA06B,aAAAuV,EAAAhwC,SAAAD,KAAAqF,YACA1B,KAAAysC,UAAAH,EAEA9+B,EAAAxN,KAAAimC,2BAAAz0B,GACAzH,EAAA/J,KAAAmtC,iBAAA3/B,GAEA8+B,EAAAjqC,cAAA,uBACAb,UAAAuI,EAijBA,SAAAyD,GACA,IAAA83B,EACA53B,EACA0/B,EACAC,EACAxuC,EACAjH,EAEA,IAAAA,EAAA,EAAaA,EAAA4V,EAAApT,OAAgBxC,IAC7B0tC,EAAA93B,EAAA5V,GACAw1C,EAAA9wC,SAAA8F,eAAAkjC,EAAAhhC,IAEAghC,EAAAhhC,IAAA8oC,IAEA1/B,EAAA0/B,EAAA/qC,cAAA,UACAgrC,EAAAD,EAAAE,eAIAzuC,EAAAwuC,EAAAhrC,cAAA,8BAEAxD,EAAAyF,GAAAzF,EAAAyF,IAAA,SAAAqB,EAAA3K,MACAsqC,EAAAiI,QAAA1uC,EAAAyF,GACAoJ,EAAAgC,aAAA,MAAA41B,EAAAiI,WAtkBAC,CAAAhgC,GAGAxN,KAAA+lC,iBAEA/lC,KAAAytC,sBAAAztC,MACAssC,EAAApuC,MAAAH,QAAA,OACAuuC,EAAApuC,MAAAF,WAAA,WAEAgC,KAAAysC,WAGA9mC,EAAAwnC,iBAAA,SAAA3/B,GAEA,IADA,IAAAzD,EAAA,GACAnS,EAAA,EAAiBA,EAAA4V,EAAApT,OAAgBxC,IAAA,CACjC,IAAA81C,EAAA1tC,KAAAilC,YAAAz3B,EAAA5V,GAAA4Z,MACA,GAAAk8B,EAAA,CACAlgC,EAAA5V,GAAA0M,GAAA,QAAAtE,KAAAhF,MAEA,IAAA+C,EAAAyP,EAAA5V,GAAA8R,OAAA,2BACA1K,EAAA,GACAwO,EAAA5V,GAAAoH,SACAA,EAAA,gDAAApH,EAAA,qCAAA4V,EAAA5V,GAAAoH,OAAA,kDAAAgB,KAAAka,OAAAK,OAAA,UAAA/M,EAAA5V,GAAAoH,QAAA,gBAEAgB,KAAAiH,OAAA0lC,YACA5iC,GAAA,mCAAAhM,EAAA,KAEAgM,GAAA,YAAAyD,EAAA5V,GAAA0M,GAAA,uCAAAtF,EAAAgB,KAAAka,OAAAK,OAAA,WAAA/M,EAAA5V,GAAAO,MAAA,iBAAAu1C,EAAAnoC,OAAAxN,KAAAiI,KAAAwN,EAAA5V,IACAmS,GAAA,UAEA,OAAAA,GAIApE,EAAAogC,eAAA,WACA,GAAA/lC,KAAAysC,UAAA,CAEA,IAAAkB,EAAA3tC,KAAAysC,UAAA1qC,WAAA,GACA4rC,EAAAzvC,MAAAN,OAAA,MACA+vC,EAAAzvC,MAAAN,OAAA+vC,EAAAx3B,aAAA,KACAnW,KAAAysC,UAAAvuC,MAAAN,OAAA+vC,EAAAx3B,aAAAnW,KAAAiH,OAAAm6B,2BAAA,KACAuM,EAAAzvC,MAAAN,OAAA+vC,EAAAx3B,aAAA,OAGAxQ,EAAA2lC,iBAAA,SAAAlvC,GACA,GAAAA,EAAA,CACAA,EAAA8B,MAAAH,QAAA,QAEA,IAAA6vC,EAAAjxC,OAAAC,aAAAN,SAAAD,KAAAK,WAAAJ,SAAAE,gBAAAE,UACAmxC,EAAAlxC,OAAAG,aAAAR,SAAAD,KAAAQ,YAAAP,SAAAE,gBAAAK,WAEAixC,EAAAnxC,OAAA67B,aAAAl8B,SAAAE,gBAAAm7B,aAGAv7B,EAAA8B,MAAAnC,IADA6xC,EACApwC,KAAAC,MAAAmwC,EAAApwC,KAAAkY,KAAAo4B,EAAA1xC,EAAAc,cAAA,WAEAM,KAAAC,MAAAD,KAAAkY,KAAAo4B,EAAA1xC,EAAAc,cAAA,aAGAZ,SAAAE,gBAAA4Z,YAAA9Z,SAAAD,KAAAY,YACAb,EAAA8B,MAAAlC,KAAAwB,KAAAC,MAAAowC,GAAAvxC,SAAAD,KAAAY,YAAAb,EAAAa,aAAA,QAEAb,EAAA8B,MAAAlC,KAAAwB,KAAAC,OAAAnB,SAAAD,KAAAY,YAAAb,EAAAa,aAAA,UAGA0I,EAAA4lC,UAAA,WACA,IAAAvrC,KAAA+tC,OAAA,CAEA/tC,KAAA+tC,OAAAzxC,SAAAmD,cAAA,OACAO,KAAA+tC,OAAA3uC,UAAA,kBACA,IAAA4uC,OAAAjzC,IAAAuB,SAAAsB,OAAAtB,SAAAsB,OAAAtB,SAAAD,KAAAa,aACA+wC,EAAA3xC,SAAA,gBAAAA,SAAAE,gBAAA2Z,aAAA,EACAnW,KAAA+tC,OAAA7vC,MAAAN,OAAAJ,KAAAkY,IAAAs4B,EAAAC,GAAA,KACA3xC,SAAAD,KAAAyE,YAAAd,KAAA+tC,UAIApoC,EAAA8nC,sBAAA,WACA9nC,EAAAuoC,mBAGAvoC,EAAAuoC,gBAAAhM,eAAA,WACAv8B,EAAAwoC,kBAIAxoC,EAAAuoC,gBAAAjM,iBAAA,WACAt8B,EAAAf,UAAA,oBAAAe,EAAAigC,iBAGAjgC,EAAAyZ,aAAAzZ,EAAAigC,cACAjgC,EAAAo2B,OAAAC,QAAA,OAAAr2B,EAAAigC,cAEAjgC,EAAA+2B,iBAMA/2B,EAAAuoC,gBAAAE,iBAAA,WACAzoC,EAAA0oC,oBAIA1oC,EAAAuoC,gBAAA,iBAAAvuC,EAAA2uC,GACA,GAAAA,EAAAhwC,aAAA,mBACAqH,EAAAf,UAAA,oBAAA0pC,EAAAlvC,UAAAkvC,EAAA3uC,QACI,CACJ,IAAA4J,EAAAglC,EAEAnvC,EAAA2H,EAAA5H,aAAAmvC,GACA,OAAAlvC,EAAAE,QAAA,uBACA,OAAAF,EAAAE,QAAA,wBAGA,IAFAiK,EAAA+kC,EAAA7xC,WAAA6B,aAAA,cACAiwC,EAAAD,EACAC,IAAA,GAAAxnC,EAAA5H,aAAAovC,GAAAjvC,QAAA,uBACAivC,IAAA9xC,gBAGA8M,EAAA+kC,EAAAhwC,aAAA,cACAiwC,EAAAD,EAAA7xC,WACA6xC,IAAA5sC,WAIA,IAAAqqC,EAAApmC,EAAAsgC,6BAEA18B,IACAA,GAAA,EACA5D,EAAAs/B,YAAA8G,EAAA,EAAAxiC,GAAAiI,MACAw0B,aAAAz8B,EAAA+kC,EAAAC,IAAAjB,gBAIAttC,KAAA5E,MAAAuK,EAAA0lC,cAAA,iBAAA1rC,GAEA,IAAA2uC,GADA3uC,KAAAhD,OAAAvB,OACAT,OAAAgF,EAAAhF,OAAAgF,EAAAE,WAEAT,EAAA2H,EAAA5H,aAAAmvC,GASA,OARAlvC,IACAkvC,IAAAzI,gBACAzmC,EAAA2H,EAAA5H,aAAAmvC,IAEAA,GAAAlvC,GAAA,IAAAA,EAAAE,QAAA,mBACAgvC,IAAA5sC,WACAtC,EAAA2H,EAAA5H,aAAAmvC,OAEAA,IAAAlvC,KACAuG,EAAAnL,QAAAmL,EAAAuoC,gBAAAI,EAAAlvC,YAAAuG,EAAAuoC,gBAAAI,EAAAlvC,WAAAuG,EAAAuoC,gBAAA,SACAvuC,EAAA2uC,KAKA3oC,EAAA0lC,cAAAlD,UAAA,SAAAxoC,GACA,IAAAvE,EAAAuE,GAAAhD,OAAAvB,MACAT,EAAAgF,EAAAhF,QAAAgF,EAAAE,WACA2uC,EAAAznC,EAAA5H,aAAAxE,GAAA2E,QAAA,oBAEA,QAAAK,GAAAvE,GAAAitC,SACA,KAAA1iC,EAAA4iC,UAAAC,UAAAiG,MACA,IAAA9uC,GAAAvE,GAAAszC,SAAA,OACAF,GAAA7zC,EAAAg0C,OACAh0C,EAAAg0C,QAEA,MAEA,KAAAhpC,EAAAipC,KAAAC,UACA,IAAAlvC,GAAAvE,GAAAszC,SAAA,OACAF,GAAA7zC,EAAAg0C,MACAh0C,EAAAg0C,QAEAhpC,EAAAwoC,iBAEA,MACA,KAAAxoC,EAAAipC,KAAAE,YACAnpC,EAAA0oC,sBAQA1oC,EAAA0oC,iBAAA,WACA,IAAA37B,EAAA1S,KAAA+uC,oBACA/uC,KAAA4E,UAAA,oBAAA5E,KAAA4lC,aAAAlzB,EAAA8pB,OACA72B,EAAAyZ,aAAA1M,EAAApO,KAAAoO,EAAA8pB,MACAx8B,KAAAglB,OAAA,WACArf,EAAA6nB,MAAAC,WAAA/G,WAAAhU,EAAApO,IACAqB,EAAA01B,cAAA3oB,EAAApO,GAAA,QAIAtE,KAAA67B,cACA77B,KAAA08B,gBAGA/2B,EAAAwoC,eAAA,WACA,IAAAz7B,EAAA1S,KAAA+uC,oBACA/uC,KAAA4E,UAAA,kBAAA5E,KAAA4lC,aAAAlzB,MAAA8pB,SAGA9pB,EAAA8pB,aACA9pB,EAAA8pB,KACAx8B,KAAAgvC,QAAAt8B,IACG1S,KAAAof,aAAA1M,EAAApO,MACHtE,KAAAtF,MAAAsF,KAAAiS,QAAAS,EAAApO,IAAAoO,GAAA,GACA1S,KAAA8gC,YAAApuB,EAAApO,IACAtE,KAAAivC,WAAAv8B,EAAApO,KAEAtE,KAAA67B,cAGA77B,KAAA08B,iBAGA/2B,EAAA4/B,yBAAA,SAAAD,GACA,IAAA50B,EAAA40B,EAAAxzB,OAUA,OATuBs0B,MAAA,EAAAD,eAAA,EAAA1zB,UAAA,EAAAyzB,mBAAA,GACvBZ,EAAA9zB,QACA,QAAA8zB,EAAAxzB,OACApB,GAAe8B,WAAA,aAAAF,SAAA,WAAAG,SAAA,YACX,iBAAA6yB,EAAA,SACJ50B,GAAe8B,WAAA8yB,EAAAxzB,UAIfpB,GAGA/K,EAAAopC,kBAAA,WACA,IAAAr8B,KAEA/M,EAAAyZ,aAAApf,KAAA4lC,gBACAlzB,EAAA1S,KAAAtF,SAAuBsF,KAAAiS,QAAAjS,KAAA4lC,gBAIvB,IADA,IAAAp4B,EAAAxN,KAAAimC,6BACAruC,EAAA,EAAiBA,EAAA4V,EAAApT,OAAgBxC,IAAA,CACjC,IAAAkG,EAAAxB,SAAA8F,eAAAoL,EAAA5V,GAAA0M,IACAxG,MAAAwvC,YAAAxvC,EACA,IAAA4vC,EAAA1tC,KAAAilC,YAAAz3B,EAAA5V,GAAA4Z,MACA,GAAAk8B,EAAA,CACA,IAAAxpC,EAAAwpC,EAAAjoC,UAAA1N,KAAAiI,KAAAlC,EAAA4U,EAAAlF,EAAA5V,IACAka,EAAAnM,EAAA4/B,yBAAA/3B,EAAA5V,IACA,oBAAAka,GAAA,QAAAA,EACAY,EAAAZ,GAAA5N,OACI,oBAAA4N,EACJ,QAAAvY,KAAAuY,EACAA,EAAAvY,KACAmZ,EAAAZ,EAAAvY,IAAA2K,EAAA3K,KAIA,OAAAmZ,GAIA/M,EAAA+2B,aAAA,WACA,IAAAtgC,EAAA4D,KAAAqrC,cACAjvC,MAAA8B,MAAAH,QAAA,QAEAiC,KAAAmU,SAAA+6B,mBAAA9yC,GACA4D,KAAA4lC,aAAA,KAEA5lC,KAAAmvC,YACAnvC,KAAA4E,UAAA,uBAEAe,EAAAwpC,UAAA,WACAnvC,KAAA+tC,QACA/tC,KAAA+tC,OAAAtxC,WAAAuE,YAAAhB,KAAA+tC,QACA/tC,KAAA+tC,OAAA,MAGApoC,EAAA+0B,cAAA,WACA/0B,EAAA8mC,YAAA9mC,EAAAypC,kBACAzpC,EAAA8mC,UAAAhwC,WAAAuE,YAAA2E,EAAA8mC,WACA9mC,EAAA8mC,UAAA,MAEA9mC,EAAA0pC,qBAAA,SAAAjtB,EAAAhmB,GACA,IAAAsW,EAAA0P,EACAzoB,EAAAyC,EAAAomC,qBAAA,QACA8M,KACA3pC,EAAAwU,UAAAo1B,iBACAD,EAAAptC,KAAA,IACAotC,EAAAptC,KAAAyD,EAAAwU,UAAAo1B,gBAAA78B,EAAAF,WAAAE,EAAAJ,SAAAI,IACA/Y,EAAA,GAAA6H,UAAA,GACA7H,EAAA,GAAA6H,UAAAmE,EAAAwU,UAAAo1B,gBAAA78B,EAAAF,WAAAE,EAAAJ,SAAAI,KAEA48B,EAAAptC,KAAAlC,KAAAma,UAAAq1B,UAAA98B,EAAAF,WAAAE,EAAAJ,SAAAI,IACA48B,EAAAptC,MAAAlC,KAAAma,UAAA0P,UAAAnX,EAAAF,WAAAE,EAAAJ,SAAAI,IAAA,IAAA+8B,OAAA,OACA91C,EAAA,GAAA6H,UAAAxB,KAAAma,UAAAq1B,UAAA98B,EAAAF,WAAAE,EAAAJ,SAAAI,GACA/Y,EAAA,GAAA6H,WAAAxB,KAAAma,UAAA0P,UAAAnX,EAAAF,WAAAE,EAAAJ,SAAAI,IAAA,IAAA+8B,OAAA,OAEA91C,EAAA,GAAA6H,UAAA8tC,EAAA,GACA31C,EAAA,GAAA6H,UAAA8tC,EAAA,GAEA3pC,EAAAwO,SAAAm7B,eAAAlzC,EAAAkzC,EAAA/uC,KAAA,MAGA,IADA,IAAAiN,EAAAxN,KAAAimC,2BAAAjmC,KAAA29B,mBACA/lC,EAAA,EAAiBA,EAAA4V,EAAApT,OAAgBxC,IAAA,CACjC,IAAA0tC,EAAA93B,EAAA5V,GAEA,GAAAoI,KAAAilC,YAAAK,EAAA9zB,MAAA,CAKA,IAAA1T,EAAAxB,SAAA8F,eAAAkjC,EAAAhhC,IAAAgpC,YACAI,EAAA1tC,KAAAilC,YAAAK,EAAA9zB,MACAM,EAAAnM,EAAA4/B,yBAAA/3B,EAAA5V,IACAiB,EAAAmH,KAAAxF,QAAAkY,EAAAZ,IAAAY,EAAAZ,GAAAwzB,EAAA2D,cACAyE,EAAAloC,UAAAzN,KAAA4N,EAAA7H,EAAAjF,EAAA6Z,EAAA4yB,GAEAA,EAAA5/B,OACAgoC,EAAAhoC,MAAA3N,KAAA4N,EAAA7H,IAEAskB,EAAA9d,KACAqB,EAAAigC,aAAAxjB,EAAA9d,KAEAqB,EAAA6lC,eAAA,SAAAlnC,EAAAlI,GACA,IAAAsW,EAAA1S,KAAAiS,QAAA3N,GACAtE,KAAAqvC,qBAAA38B,EAAAtW,IAIAuJ,EAAA+pC,mBAAA,SAAAv3C,GAGA,IAFA,IAAA8O,EAAAjH,KAAAimC,6BACAruC,EAAA,EACSA,EAAAqP,EAAA7M,QACT6M,EAAArP,GAAAO,QAD4BP,KAG5B,IAAA0tC,EAAAr+B,EAAArP,GACA,IAAA0tC,EACA,YAEAtlC,KAAAysC,WACAzsC,KAAAqrC,cACA,IAAAxhC,EAAAvN,SAAA8F,eAAAkjC,EAAAhhC,IACAxG,EAAA+L,EAAAyjC,YAEAvzC,GACAurC,UACAz7B,SACA/L,OACAiU,SAAA,SAAAhP,GACA,OAAA4C,EAAAs/B,YAAAK,EAAA9zB,MAAA/L,UAAA1N,KAAA4N,EAAA7H,EAAAiF,MAAgFuiC,IAEhFj0B,SAAA,SAAAxY,EAAAkK,GACA,OAAA4C,EAAAs/B,YAAAK,EAAA9zB,MAAAhM,UAAAzN,KAAA4N,EAAA7H,EAAAjF,EAAAkK,MAAuFuiC,KAIvFhqC,EAAA0E,KAAAmrC,kBAAA,OAAA7F,EAAA9zB,KAAA,YACA,OAAAlW,IAAAvB,MAGA4L,EAAAwlC,kBAAAwE,qBAAA,SAAA51C,GAEA,OADAA,EAAA61C,QAAA71C,EAAA+D,KACA/D,GAEA4L,EAAAwlC,kBAAA0E,mBAAA,SAAA91C,GAEA,OADAA,EAAA61C,QAAA71C,EAAA+D,KAAA0kC,qBAAA,aACAzoC,GAEA4L,EAAAwlC,kBAAA2E,qBAAA,SAAA/1C,GAEA,OADAA,EAAA61C,QAAA71C,EAAA+D,KAAA0kC,qBAAA,eACAzoC,GAEA4L,EAAAwlC,kBAAA4E,iBAAA,SAAAh2C,GAEA,OADAA,EAAA61C,QAAA71C,EAAA+D,KAAA0kC,qBAAA,UACAzoC,GAIA4L,EAAAunC,iBAAA,WACAltC,KAAA5E,MAAAkB,SAAAD,KAAA,YAAAsJ,EAAAqqC,iBACAhwC,KAAA5E,MAAAkB,SAAAD,KAAA,UAAAsJ,EAAAsqC,aACAtqC,EAAAunC,iBAAA,cAGAvnC,EAAAqqC,gBAAA,SAAArwC,GACA,GAAAgG,EAAAuqC,cAAA,CACA5zC,SAAA6zC,qBACA7zC,SAAAD,KAAA+C,WAAA,sBACA9C,SAAA6zC,oBAAA,GAEA,IAAAC,EAAAzqC,EAAA0lC,cACArK,EAAArhC,KAAAhF,QAAAgF,EAAAqD,MAAArD,EAAAsD,QAAA7H,MAAA+H,QAAA/H,MAAAgI,SACAgtC,EAAAlyC,MAAAnC,IAAA4J,EAAA0qC,UAAA,GAAArP,EAAA,GAAAr7B,EAAAuqC,cAAA,QACAE,EAAAlyC,MAAAlC,KAAA2J,EAAA0qC,UAAA,GAAArP,EAAA,GAAAr7B,EAAAuqC,cAAA,UAGAvqC,EAAAonC,cAAA,SAAAptC,GACA,IAAAywC,EAAAzqC,EAAA0lC,cACA1lC,EAAA0qC,WAAAlzC,SAAAizC,EAAAlyC,MAAAlC,KAAA,IAAAmB,SAAAizC,EAAAlyC,MAAAnC,IAAA,KACA4J,EAAAuqC,cAAAvwC,KAAAhF,QAAAgF,EAAAqD,MAAArD,EAAAsD,QAAA7H,MAAA+H,QAAA/H,MAAAgI,UAEAuC,EAAAsqC,YAAA,WACAtqC,EAAA0qC,YACA1qC,EAAA0qC,UAAA1qC,EAAAuqC,eAAA,EACA5zC,SAAAD,KAAA+C,UAAA9C,SAAAD,KAAA+C,UAAAa,QAAA,0BACA3D,SAAA6zC,oBAAA,IAKAxqC,EAAAkI,OAAA,SAAA/P,EAAAgB,GACA,GAAAhB,KAAA4H,MACA,GAAAC,EAAAsB,OAAAwlB,YAGA,IACA3tB,GAAAhB,EAAAgB,QAAAhB,EAAAgB,SACAhB,EAAA4H,QACK,MAAA/F,MAQLgG,EAAAs/B,aACAqC,cAAA,SAAA95B,EAAA9D,GACA,IAEA9R,EACA6V,EACA6iC,EAJAvmC,EAAA,GACA0V,EAAAzf,KAAAiH,OAMAsjC,GACAM,MAAA,EACApwB,KAAA,KACA9L,KAAA3O,KAAA2O,KAAA4hC,UAAA,IAAAj2C,KAAAqL,EAAA6a,UAAAvlB,YACA0vC,WAsKA,SAAAn9B,GACA,IAAAuiB,EACAzpB,EACAvM,EAEA,GAAAyT,EAAAgjC,YAAA,OAAAhjC,EAAAgjC,YAGAz2C,GAAA,gBACAg2B,EAAApqB,EAAA0rB,WACA/qB,EAAAypB,IAAAzpB,KAAAX,EAAAsB,OAAA+W,cACAyT,EAAAprB,iBAAAC,GAAAmrB,EAAAprB,iBAAA,QACAtM,EAAAmI,KAAA,SAEA,OAAAnI,EApLA02C,CAAAjjC,IAYA,IARAA,EAAA45B,oBAA6B78B,KAAA,GAE7B5E,EAAAsB,OAAAypC,oBACAnG,EAAAM,MAAA,GAAAprB,EAAAkxB,WACApG,EAAA9vB,KAAA,GAAAgF,EAAAmxB,UAAA,EACArG,EAAA57B,KAAAkiC,SAAApxB,EAAAkxB,aAGA/4C,EAAA,EAAcA,EAAA2yC,EAAAI,WAAAvwC,OAAgCxC,IAE9CA,EAAA,IACAmS,GAAA,MAGA0D,EAAA68B,EAAA98B,EAAA5V,EAAA2yC,MAGA+F,EAAA3qC,EAAAwO,SAAA28B,yBAAAvG,EAAAI,WAAA/yC,IAGAmS,GAAA,YAFAyD,EAAAi6B,SAAA,2BACA/9B,EAAA,6BACA4mC,EAAA,IAAA7iC,EAAA,aAGA,OAAA1D,GAEA6+B,sBAAA,SAAAjvC,EAAA/B,EAAAM,EAAAyO,GAIA,GAHAhN,EAAA/B,EAAA+O,EAAA,IAAA9N,MAAAX,EAAA2T,UACAlS,EAAA/B,EAAA+O,EAAA,IAAA9N,MAAAX,EAAA0T,WACAjS,EAAA/B,EAAA+O,EAAA,IAAA9N,MAAAX,EAAAyT,cACAhG,EAAAnL,QAAAmM,EAAA,KACA,IAAA8S,EAAA,GAAAvhB,EAAA+yC,WAAA/yC,EAAAgzC,aACAzxB,EAAAjc,KAAAC,MAAAgc,EAAA9T,EAAAkkC,wBAAAlkC,EAAAkkC,uBACA,IAAAhrC,EAAAlF,EAAA/B,EAAA+O,EAAA,IACA9H,EAAAhG,MAAA4gB,EAEA5a,EAAA6Q,aAAA,aAAA+J,KAGAyQ,SAAA,IAAA+f,EACAlrC,SAAA,IAAAgrC,EACAjrC,OAAA,IAAAyO,EACA64B,KAAA,IAAAkD,EACA72B,SAAA,IAAAy0B,EACA5jC,OAAA,IAAA+iC,EACA2C,MAAA,IAAAD,EACAgI,SAAA,IAAA5H,GAGAxjC,EAAA+mC,wBAAA,WAEA,IADA,IAAA/yC,EAAAqG,KAAAimC,6BACAruC,EAAA,EAAiBA,EAAA+B,EAAAS,OAAcxC,IAC/B,WAAA+B,EAAA/B,GAAAO,MAAA,QAAAwB,EAAA/B,GAAA4Z,KACA,SACA,UAGA7L,EAAA42B,gBAAA,SAAA1B,EAAAwB,EAAA13B,EAAAqsC,GACA,IAAAnW,EACA,OAAAl2B,IACA,IAAAssC,GAAcxiC,KAAAosB,GACdwB,IACA4U,EAAA5U,SACA2U,IACAC,EAAAD,MAEArsC,IACAssC,EAAAtsC,SAAA,SAAA5K,GACAA,GACA4K,MAGAgB,EAAAurC,QAAAD,IAYAtrC,EAAAsgC,2BAAA,SAAAz0B,QACAzW,IAAAyW,IACAA,EAAAxR,KAAA29B,mBAGA,IAAAnY,EAdA,SAAA2rB,GACA,QAAAv5C,KAAAoI,KAAAiH,OAAAyhB,MACA,GAAA1oB,KAAAiH,OAAAyhB,MAAA9wB,IAAAu5C,EACA,OAAAv5C,EAGA,cAQAG,KAAAiI,KAAAwR,GAEA,OAAA7L,EAAAsB,OAAA89B,SAAAvf,EAAA,aACA7f,EAAAsB,OAAA89B,SAAAvf,EAAA,aAEA7f,EAAAsB,OAAA89B,SAAAgH,UAIApmC,EAAAi4B,wBAAA,SAAApsB,GACA,IAAA4/B,EAAApxC,KAAA29B,kBAEA,GAAA39B,KAAA+Q,WAAAg0B,SAAA,CACA,IAAAthB,EAAAzjB,KAAA+Q,WAAAg0B,SACAsM,EAAArxC,KAAA+uC,oBACAr8B,EAAA1S,KAAAlG,KAAAkG,KAAAiS,QAAAwR,IAEAzjB,KAAA06B,gBAEA,IAAA4W,EAAAtxC,KAAAtF,MAAAgY,EAAA2+B,GAAA,GACAj1C,EAAA4D,KAAAqrC,YAAA75B,QAAAzW,GACAiF,KAAAsrC,iBAAAtrC,KAAAqrC,eACArrC,KAAAqvC,qBAAAiC,EAAAl1C,QAEA4D,KAAA06B,gBACA16B,KAAAqrC,YAAA75B,QAAAzW,GAEAiF,KAAA4E,UAAA,oBAAAwsC,EAAApxC,KAAA29B,uCC7rBA,IAAA9jC,EAAArC,EAAA,GACAA,EAAA,GAEAG,EAAAD,QAAA,SAAAiO,GAEAA,EAAA4rC,kBAAA,SAAA7+B,GACA,QAAAA,EAAA8+B,cAAA9+B,EAAAF,YAGA7M,EAAAyiB,0BAAA,SAAA1V,GACA,SAAAA,EAAA8+B,cAAA7rC,EAAAsB,OAAAwqC,mBAGA9rC,EAAA86B,cAAA,SAAAn8B,GACA,IAAAtE,KAAAof,aAAA9a,GACA,SAEA,IAAAoO,EAAA1S,KAAAiS,QAAA3N,GAGAotC,GAFA1xC,KAAAwoB,YAAA9V,EAAAlB,MAEAkB,EAAAF,WAAAE,EAAAF,WAAAvX,UAAA,MACA02C,EAAAj/B,EAAAJ,SAAAI,EAAAJ,SAAArX,UAAA,KAEA,SAAA0K,EAAAyiB,0BAAA1V,IAAAg/B,GAAAC,GAAAD,GAAA1xC,KAAAygB,UAAAxlB,WAAA02C,GAAA3xC,KAAAwgB,UAAAvlB,eAIA0K,EAAAisC,mBAAAttC,IAAA,IAGAqB,EAAAksC,iBAAA,SAAAjgC,EAAAkgC,GACA,IAAAxuC,KAAAwuC,MAAA9xC,KAAAiH,OAAA0/B,UAAA3mC,KAAAiS,QAAA6/B,GACAjJ,EAAA,GACA,GAAAvlC,EACAulC,EAAAvlC,EAAAkP,eACG,CACH,IAAAq4B,EAAA7qC,KAAA+xC,eAAA,GACAlJ,EAAAgC,IAAAr4B,WAAAq4B,EAAAr4B,WAAAq4B,EAAAv4B,SAAAtS,KAAAuS,kBACAC,WAAAq4B,EAAAv4B,SACAG,UAAAzS,KAAAiH,OAAAqX,gBACI,GAAAte,KAAAiH,OAAAuL,YAAAxS,KAAA+Q,WAAAoc,SAGJ,OADAxnB,EAAA0tB,OAAAwV,EAAA,iBACA,IAAAvuC,KAAAuuC,IAGAljC,EAAAqsC,yBAAA,SAAAt/B,GACAA,EAAAF,WAAAE,EAAAF,YAAA7M,EAAAksC,iBAAAn/B,EAAA1S,KAAAsiB,UAAA5P,IACAA,EAAAD,SAAAC,EAAAD,UAAAzS,KAAAiH,OAAAqX,cACA5L,EAAAJ,SAAAI,EAAAJ,UAAAtS,KAAAuS,iBAAAG,IAGA/M,EAAAssC,WAAA,SAAArgC,EAAAtO,EAAAiG,IACAqI,QACAjM,EAAAnL,QAAAoX,EAAAtN,MACAsN,EAAAtN,GAAAqB,EAAA3K,OAEA4W,EAAAY,aACAZ,EAAAY,WAAA7M,EAAAksC,iBAAAjgC,EAAAtO,SAEAvI,IAAA6W,EAAAnD,OACAmD,EAAAnD,KAAA9I,EAAAuU,OAAAK,OAAAc,eAEAtgB,IAAA6W,EAAAa,WACAb,EAAAa,SAAA,GAGAnP,KACAtD,KAAAqiB,UAAAzQ,EAAAtO,GAAA,GACAtD,KAAAiS,QAAA3O,GACA2e,OAAA,GAGA,OAAAjiB,KAAA4E,UAAA,iBAAAgN,KAGA5R,KAAAiH,OAAAirC,mBACAtgC,EAAA4qB,MAAA,EACAx8B,KAAAglB,OAAA,WACArf,EAAA6nB,MAAAC,WAAA1G,QAAAnV,EAAArI,KAEAvJ,KAAAmyC,WAAAvgC,EAAAtN,IACAtE,KAAA67B,cACA77B,KAAAk8B,aAAAtqB,EAAAtN,KAEAtE,KAAAgvC,QAAAp9B,EAAAtO,EAAAiG,KACAvJ,KAAAoyC,SAAAxgC,EAAAtN,IACAtE,KAAAmyC,WAAAvgC,EAAAtN,KAGAsN,EAAAtN,IAhBA,MAmBAqB,EAAA01B,cAAA,SAAAgX,EAAAC,GAEA,IAAAxiC,EAAAnK,EAAA6nB,MAAAC,gBACA1yB,IAAAs3C,GACAryC,KAAA4lC,aAAA,KAEA91B,EAAAkV,OAAA,WACAlV,EAAAyiC,aAGAvyC,KAAAs+B,YAAAt+B,KAAAs+B,WAAA5U,OACA1pB,KAAAs+B,WAAA5U,KAAAplB,GAAA,QAGAtE,KAAA4lC,cAAAyM,IACAryC,KAAA4lC,aAAA0M,GAGAxiC,EAAA0iC,iBAAAH,GACAviC,EAAAkV,OAAA,WACAlV,EAAAyiC,SAAAF,GACAviC,EAAAhR,OAAAwzC,KAGAtyC,KAAAs+B,YAAAt+B,KAAAs+B,WAAA5U,MAAA1pB,KAAAs+B,WAAA5U,KAAAplB,IAAA+tC,IACAryC,KAAAs+B,WAAA5U,KAAAplB,GAAAguC,KAKA3sC,EAAA8sC,sBAAA,SAAA//B,EAAA7X,GACA,IAAA63C,EAAA1yC,KAAAwoB,YAAA9V,EAAAlB,MAEAG,GACAH,KAAAkhC,EACAC,WAAA,EACAC,SAAA,GAGA,OAAA/3C,GAAA63C,GAAAhgC,EAAAmgC,gBAMAH,GAAA1yC,KAAAiH,OAAAyhB,MAAAyB,QAEAxY,EAAAihC,QAAAjhC,EAAAghC,WAAA,EACGD,GAAA1yC,KAAAiH,OAAAyhB,MAAAC,YAEHhX,EAAAihC,UAAAlgC,EAAAJ,UAAAI,EAAAD,UACAd,EAAAghC,WAAAjgC,EAAAF,WAEAxS,KAAAooB,0BAAA1V,KACAf,EAAAihC,QAAAjhC,EAAAghC,WAAA,IAIAhhC,IAlBAA,EAAAghC,UAAAjgC,EAAAigC,UACAhhC,EAAAihC,QAAAlgC,EAAAkgC,QACAjhC,IAmBAhM,EAAAmtC,kBAAA,SAAApgC,GACA,IAAAqgC,EAAAptC,EAAA8sC,sBAAA//B,GAAA,GAEAsgC,EAAAtgC,EAAAmgC,gBAAAE,EAAAvhC,KAEAkhC,EAAAK,EAAAvhC,KAEAwhC,IACAtgC,EAAAigC,UAAAI,EAAAJ,UACAjgC,EAAAkgC,QAAAG,EAAAH,QACAlgC,EAAAmgC,eAAAE,EAAAvhC,MAGAwhC,GAAAN,GAAA1yC,KAAAiH,OAAAyhB,MAAAC,WACA+pB,GAAA1yC,KAAAiH,OAAAyhB,MAAAyB,SAEAnqB,KAAAgyC,yBAAAt/B,GAIAggC,GAAA1yC,KAAAiH,OAAAyhB,MAAAC,YACAjW,EAAAJ,SAAAI,EAAAF,YAEAE,EAAAF,YAAAE,EAAAJ,WACAI,EAAAD,SAAAzS,KAAA2oC,kBAAAj2B,IAGAA,EAAAJ,WACAI,EAAAJ,SAAAI,EAAAF,YAGAE,EAAAD,SAAAC,EAAAD,UAAA,GAGA9M,EAAAykB,cAAA,SAAA1X,GACA,IAAA3Z,EAAA4M,EAAA8sC,sBAAA//B,GAEA,SAAA3Z,EAAA65C,UAAA75C,EAAA45C,YAIAhtC,EAAAstC,kBAAA,SAAAvgC,GACA,IAAAwgC,EAAAlzC,KAAAyyC,sBAAA//B,GACA,GAAAwgC,EAAAN,SAAAM,EAAAP,UAAA,CACA,IAAAQ,EAAAnzC,KAAAsgB,gBAAA5N,EAAApO,IACAtE,KAAAozC,sBAAA1gC,EAAAygC,EAAA3gC,WAAA2gC,EAAA7gC,YAIA3M,EAAA0tC,mBAAA,SAAAlf,GACA,IAAAjwB,EAAA,EACA9D,OAAArF,IAAAo5B,IAAAxuB,EAAAsB,OAAA0/B,QASA,OAPA3mC,KAAAqf,SAAA,SAAA5d,GACAzB,KAAAwoB,YAAA/mB,EAAA+P,OAAA7L,EAAAsB,OAAAyhB,MAAAyB,SAAAnqB,KAAAuxC,kBAAA9vC,KAGAyC,GAAAzC,EAAAgR,WACGrS,GAEH8D,GAGAyB,EAAA2a,gBAAA,SAAA6T,GACA,IAAA1b,EAAA,KACA/C,EAAA,KACAtV,OAAArF,IAAAo5B,IAAAxuB,EAAAsB,OAAA0/B,QAYA,OAVA3mC,KAAAqf,SAAA,SAAA5d,GACAzB,KAAAwoB,YAAA/mB,EAAA+P,OAAA7L,EAAAsB,OAAAyhB,MAAAyB,SAAAnqB,KAAAuxC,kBAAA9vC,KAGAA,EAAA+Q,aAAA/Q,EAAAkxC,aAAAl6B,KAAAhX,EAAA+Q,WAAAvX,aACAwd,EAAAhX,EAAA+Q,WAAAvX,WACAwG,EAAA6Q,WAAA7Q,EAAAmxC,WAAAl9B,KAAAjU,EAAA6Q,SAAArX,aACAya,EAAAjU,EAAA6Q,SAAArX,aACGmF,IAGHoS,WAAAiG,EAAA,IAAAne,KAAAme,GAAA,KACAnG,SAAAoD,EAAA,IAAApb,KAAAob,GAAA,OAIA/P,EAAAytC,sBAAA,SAAA1gC,EAAAiV,EAAAC,GACA,IAAA0rB,EAAAtzC,KAAAyyC,sBAAA//B,GACA4gC,EAAAX,YAEAjgC,EAAAF,WADAmV,MAAAE,IACA,IAAAvtB,KAAAqtB,GAEA3nB,KAAA6xC,iBAAAn/B,EAAA1S,KAAAsiB,UAAA5P,KAIA4gC,EAAAV,UAEAlgC,EAAAJ,SADAsV,OAAAC,IACA,IAAAvtB,KAAAstB,GAEA5nB,KAAAuS,kBACAC,WAAAE,EAAAF,WACAC,SAAAzS,KAAAiH,OAAAqX,cACA5L,WAIA4gC,EAAAX,WAAAW,EAAAV,UACA5yC,KAAA8yC,kBAAApgC,IAKA/M,EAAA4tC,gBAAA,SAAA9vB,EAAAuB,GACA,GAAAvB,EAAA,CAEA,IAAA/Q,EAAA1S,KAAAiS,QAAAwR,GACAc,EAAAvkB,KAAAsiB,UAAA5P,GAEA4gC,EAAAtzC,KAAAyyC,sBAAA//B,GAEA8gC,GAAA,EAEA,GAAAF,EAAAX,WAAAW,EAAAV,QAAA,CACA,IAAAa,EAAA/gC,EAAAF,WAAAvX,UACAy4C,EAAAhhC,EAAAJ,SAAArX,UAEA0K,EAAAstC,kBAAAvgC,GAGA+gC,GAAA/gC,EAAAF,WAAAvX,WAAAy4C,GAAAhhC,EAAAJ,SAAArX,YACAu4C,GAAA,GAGAA,IAAAxuB,GACAhlB,KAAA8gC,YAAApuB,EAAApO,IAAA,GAKAkvC,GAAAjvB,GAAAvkB,KAAAof,aAAAmF,IACAvkB,KAAAuzC,gBAAAhvB,EAAAS,KAIArf,EAAAguC,UAAA,SAAA1sC,GACA,IAAA8oB,EAAApqB,EAAA0rB,WAEAx3B,EAAAQ,OAAA4M,KACAA,GACA0H,KAAA1H,EACAX,KAAAypB,IAAAzpB,KAAAX,EAAAsB,OAAA+W,cACAR,KAAAuS,IAAAvS,KAAA7X,EAAAsB,OAAAqX,gBAGA,IAQAs1B,EAAAC,EAAAC,EARAnlC,EAAA1H,EAAA0H,KACAolC,EAAA9sC,EAAAuW,KACAlX,EAAAW,EAAAX,KAEA,IAAAypB,EACA,OAAAphB,EAIA,GAAArI,GAAAypB,EAAAzpB,MAAAytC,GAAAhkB,EAAAvS,OACA7O,IAAAohB,EAAA5C,WAAAxe,IAAAohB,EAAA3C,SAEA0mB,EAAAt2C,KAAAiO,MAAA9F,EAAAytB,kBAAAzkB,IAEAohB,EAAA1B,QAAAylB,KACAA,GAAA,EACA/jB,EAAA3V,MACA05B,EAAA,IAGAD,EAAA,IAAAv5C,KAAAy1B,EAAA1B,QAAAylB,IACAF,EAAAjuC,EAAAgJ,KAAAyR,IAAAyzB,EAAAE,EAAAztC,OACG,CAQH,IAPAwtC,EAAAt2C,KAAAiO,MAAA9F,EAAAytB,kBAAAzkB,IAEAilC,EAAAjuC,EAAAgJ,KAAArI,EAAA,cAAAhM,KAAAy1B,EAAA5C,WACA4C,EAAA1B,QAAAylB,KACAF,EAAAjuC,EAAAgJ,KAAArI,EAAA,UAAAypB,EAAA1B,QAAAylB,MAGAF,GAAAjlC,GAAA,CAGA,IAAAqlC,GAFAJ,EAAAjuC,EAAAgJ,KAAArI,EAAA,UAAAX,EAAAgJ,KAAAyR,IAAAwzB,EAAAG,EAAAztC,KAEA63B,oBAEAyV,EAAAjuC,EAAAo4B,oBAAA6V,EAAAI,EAAAJ,EAAAttC,GACAX,EAAAgJ,KAAArI,EAAA,YACAstC,EAAAjuC,EAAAgJ,KAAArI,EAAA,UAAAstC,IAGAC,EAAAluC,EAAAgJ,KAAAyR,IAAAwzB,GAAA,EAAAG,EAAAztC,GAGA,OAAAW,EAAAiM,KAAA,UAAAjM,EAAAiM,IACA0gC,EACA3sC,EAAAiM,KAAA,QAAAjM,EAAAiM,IACA2gC,EAEAr2C,KAAA0iC,IAAAvxB,EAAAklC,GAAAr2C,KAAA0iC,IAAA0T,EAAAjlC,GACAklC,EAEAD,GAKAjuC,EAAAsuC,oBAAA,SAAAvhC,GACA/M,EAAAsB,OAAAitC,WAAAvuC,EAAAsB,OAAAktC,oBACAn0C,KAAAo0C,WAAA1hC,EAAAF,gBAAAzX,EAAA2X,GAGI1S,KAAAo0C,WAAA,IAAA95C,MAAAoY,EAAAJ,SAAA,QAAAvX,EAAA2X,KACJA,EAAAJ,SAAAtS,KAAAuS,iBAAAG,KAHAA,EAAAF,WAAAxS,KAAAq0C,oBAA+C1lC,KAAA+D,EAAAF,WAAAU,IAAA,SAAAR,SAC/CA,EAAAJ,SAAAtS,KAAAuS,iBAAAG,MAOA/M,EAAAlK,YAAA,8BAAA6I,EAAAoO,GAEA,OADA/M,EAAAmtC,kBAAApgC,IACA,IAEA/M,EAAAlK,YAAA,2BAAA6I,EAAAoO,GAEA,OADA/M,EAAAmtC,kBAAApgC,IACA,sBC3XA,IAAA7L,EAAArP,EAAA,GA6CAG,EAAAD,SAAkBwB,OA3ClB,SAAAo7C,EAAAC,GACA,OACAC,aAAA,SAAA7lC,GACA,OAAA4lC,EAAAC,aAAA7lC,IAGA8lC,YAAA,SAAAxtC,GACA,OAAAstC,EAAAE,YAAAxtC,IAGAytC,cAAA,SAAAztC,GACAstC,EAAAG,cAAAztC,IAGAmtC,WAAA,SAAAzlC,EAAArI,EAAAoM,GACA,OAAA6hC,EAAAH,WAAAzlC,EAAArI,EAAAoM,IAGA2hC,mBAAA,SAAAptC,GACA,OAAAstC,EAAAF,mBAAAptC,IAGA0hC,kBAAA,SAAAn2B,EAAAF,EAAAI,GACA,OAAA6hC,EAAA5L,kBAAAn2B,EAAAF,EAAAI,IAEAiiC,aAAA,SAAAniC,EAAAF,EAAAI,GACA,OAAA6hC,EAAAK,YAAApiC,EAAAF,EAAAI,IAGAH,iBAAA,SAAAM,EAAAJ,EAAAnM,EAAAoM,GACA,OAAA6hC,EAAAhiC,iBAAAM,EAAAJ,EAAAnM,EAAAoM,IAGAmiC,eAAAhuC,EAAAzN,KAAAk7C,EAAAO,eAAAP,GACAQ,YAAAjuC,EAAAzN,KAAAk7C,EAAAQ,YAAAR,GACAS,YAAAluC,EAAAzN,KAAAk7C,EAAAS,YAAAT,GACAU,aAAAnuC,EAAAzN,KAAAk7C,EAAAU,aAAAV,GACAW,gBAAApuC,EAAAzN,KAAAk7C,EAAAW,gBAAAX,GACAY,eAAAruC,EAAAzN,KAAAk7C,EAAAY,eAAAZ,qBCzCA,SAAAa,EAAAxvC,EAAAyvC,GACAp1C,KAAAo1C,kBACAp1C,KAAAuH,OAAA5B,EAGAwvC,EAAA37C,WACAg7C,aAAA,WACA,cAEAC,YAAA,WACA,UAEAC,cAAA,WACA,UAEAN,WAAA,WACA,UAEAC,mBAAA,SAAAptC,GAEA,OADAjH,KAAAo1C,gBAAAn3B,4BAAA1jB,MAAAyF,KAAAo1C,gBAAAj6C,WACAwT,MAGAg6B,kBAAA,WACA,IAAA1hC,EAAAjH,KAAAo1C,gBAAA72B,qBAAAhkB,MAAAyF,KAAAo1C,gBAAAj6C,WACAwsB,EAAA1gB,EAAAuL,WACAoV,EAAA3gB,EAAAqL,SACAhM,EAAAW,EAAAX,KACAkX,EAAAvW,EAAAuW,KAEA,OAAAxd,KAAAq1C,mBAAA1tB,EAAAC,EAAAthB,EAAAkX,IAEA63B,mBAAA,SAAAxiC,EAAA6K,EAAApX,EAAAkX,GACA,IAAA3jB,EAAAmG,KAAAuH,OAAAoH,KACA2mC,GACArvC,KAAA,OACAD,IAAA,MACAD,KAAA,KACAD,OAAA,KAGA5B,EAAA,EACA,GAAAoxC,EAAAhvC,GACApC,EAAA1G,KAAAC,OAAAigB,EAAA7K,IAAA2K,EAAA83B,EAAAhvC,SACG,CAGH,IAFA,IAAAqhB,EAAA,IAAArtB,KAAAuY,GACA+U,EAAA,IAAAttB,KAAAojB,GACAiK,EAAA1sB,UAAA2sB,EAAA3sB,WACAiJ,GAAA,EACAyjB,EAAA9tB,EAAAumB,IAAAuH,EAAAnK,EAAAlX,GAGAqhB,EAAA1sB,WAAAyiB,EAAAziB,YACAiJ,IAAA0jB,EAAAD,IAAA9tB,EAAAumB,IAAAuH,EAAAnK,EAAAlX,GAAAqhB,IAIA,OAAAnqB,KAAAC,MAAAyG,IAGA0wC,YAAA,WACA,IAAA3tC,EAAAjH,KAAAo1C,gBAAA72B,qBAAAhkB,MAAAyF,KAAAo1C,gBAAAj6C,WACAwsB,EAAA1gB,EAAAuL,WACAoV,EAAA3gB,EAAAqL,SACAhM,EAAAW,EAAAX,KACAW,EAAAuW,KAEA,QAAAlX,IAGAqhB,EAAA,IAAArtB,KAAAqtB,GACAC,EAAA,IAAAttB,KAAAstB,GAEAD,EAAA1sB,UAAA2sB,EAAA3sB,YAGAsX,iBAAA,WACA,IAAAtL,EAAAjH,KAAAo1C,gBAAA32B,0BAAAlkB,MAAAyF,KAAAo1C,gBAAAj6C,WAEA0X,EAAA5L,EAAAuL,WACAC,EAAAxL,EAAAwL,SACAnM,EAAAW,EAAAX,KACAkX,EAAAvW,EAAAuW,KAEA,OAAAxd,KAAAuH,OAAAoH,KAAAyR,IAAAvN,EAAA2K,EAAA/K,EAAAnM,KAIA3O,EAAAD,QAAAy9C,mBCxFA,IAAAI,EAAA/9C,EAAA,IACAg+C,EAAAh+C,EAAA,IAEA,SAAAi+C,EAAAnB,GAEAt0C,KAAAuH,OAAA+sC,EAAA/sC,OACAvH,KAAAo1C,gBAAAG,EAAAv1C,KAAAuH,QACAvH,KAAAs0C,kBACAt0C,KAAA01C,kBAAA,IAAAF,EAAAx1C,KAAAuH,OAAAvH,KAAAo1C,iBAGAK,EAAAj8C,WACAm8C,aAAA,SAAA1uC,GACA,IAAAoW,EACA,GAAArd,KAAAuH,OAAAQ,UAAAd,SAAAitC,UAEG,CACH,IAAA0B,EAAA51C,KAAAs0C,gBACArtC,EAAAyL,KACA2K,EAAAu4B,EAAAX,gBAAAhuC,EAAAyL,MACIzL,EAAA3C,GACJ+Y,EAAAu4B,EAAAX,gBAAAhuC,GACIA,EAAAoW,WACJA,EAAApW,EAAAoW,UAEAA,IACAA,EAAAu4B,EAAAX,wBAXA53B,EAAArd,KAAA01C,kBAcA,OAAAr4B,GAGAm3B,aAAA,SAAAvtC,GAKA,OAJAA,EAAAjH,KAAAo1C,gBAAAz3B,sBAAApjB,MAAAyF,KAAAo1C,gBAAAj6C,WAEA6E,KAAA21C,aAAA1uC,GAEAutC,aAAAvtC,EAAA0H,OAGA8lC,YAAA,SAAAxtC,EAAAoW,GAKA,OAJApW,EAAAjH,KAAAo1C,gBAAAx3B,qBAAArjB,MAAAyF,KAAAo1C,gBAAAj6C,WAEAkiB,IACAA,EAAArd,KAAAs0C,gBAAAS,eACA13B,EAAAo3B,YAAAxtC,IAGAytC,cAAA,SAAAztC,EAAAoW,GAKA,OAJApW,EAAAjH,KAAAo1C,gBAAAv3B,uBAAAtjB,MAAAyF,KAAAo1C,gBAAAj6C,WAEAkiB,IACAA,EAAArd,KAAAs0C,gBAAAS,eACA13B,EAAAq3B,cAAAztC,IAEAmtC,WAAA,SAAAzlC,EAAArI,EAAAoM,EAAA2K,GACA,IAAApW,EAAAjH,KAAAo1C,gBAAAt3B,oBAAAvjB,MAAAyF,KAAAo1C,gBAAAj6C,WAGA,OADA6E,KAAA21C,aAAA1uC,GACAmtC,WAAAntC,IAEAotC,mBAAA,SAAAptC,GAKA,OAJAA,EAAAjH,KAAAo1C,gBAAAn3B,4BAAA1jB,MAAAyF,KAAAo1C,gBAAAj6C,WAEA6E,KAAA21C,aAAA1uC,GAEAotC,mBAAAptC,IAGA0hC,kBAAA,WACA,IAAA1hC,EAAAjH,KAAAo1C,gBAAA72B,qBAAAhkB,MAAAyF,KAAAo1C,gBAAAj6C,WAIA,OADA6E,KAAA21C,aAAA1uC,GACA0hC,kBAAA1hC,IAEA2tC,YAAA,WACA,IAAA3tC,EAAAjH,KAAAo1C,gBAAA52B,qBAAAjkB,MAAAyF,KAAAo1C,gBAAAj6C,WAIA,OAFA6E,KAAA21C,aAAA1uC,GAEA2tC,YAAA3tC,IAEAsL,iBAAA,SAAAtL,GACAA,EAAAjH,KAAAo1C,gBAAA32B,0BAAAlkB,MAAAyF,KAAAo1C,gBAAAj6C,WAGA,OADA6E,KAAA21C,aAAA1uC,GACAsL,iBAAAtL,KAIAtP,EAAAD,QAAA+9C,iBC3FA,SAAAI,IACA71C,KAAA81C,UAGAD,EAAAr8C,WAEAf,IAAA,SAAA6N,EAAAqI,GACA,IAAA5U,GAAA,EAEAmpC,EAAAljC,KAAA81C,OACA,GAAA5S,KAAA58B,GAAA,CACA,IAAAV,EAAAs9B,EAAA58B,GACA8/B,EAAAz3B,EAAAonC,eACAh7C,IAAA6K,EAAAwgC,KACArsC,EAAA6L,EAAAwgC,IAEA,OAAArsC,GAGAi8C,IAAA,SAAA1vC,EAAAqI,EAAA9V,GACA,IAAAyN,IAAAqI,EAAA,SAEA,IAAAu0B,EAAAljC,KAAA81C,OAEA1P,EAAAz3B,EAAAonC,UAIA,OAFAl9C,QAEAqqC,IACAA,EAAA58B,KAAA48B,EAAA58B,OACA48B,EAAA58B,GAAA8/B,GAAAvtC,GACA,IAGAyP,MAAA,WACAtI,KAAA81C,YAIAn+C,EAAAD,QAAAm+C,mBCvCA,IAAAI,EAAAz+C,EAAA,IACAqP,EAAArP,EAAA,GAEA,SAAA0+C,EAAAvwC,EAAAyvC,GACAp1C,KAAAo1C,kBACAp1C,KAAAuH,OAAA5B,EACA3F,KAAAm2C,mBAAA,IAAAF,EAGAC,EAAA18C,WACAoM,OACA,OACA,QACA,OACA,MACA,OACA,UAGAwwC,cAAA,SAAA9vC,GACA,QAAA1O,EAAA,EAAAoK,EAAAhC,KAAA4F,MAAAxL,OAA0CxC,EAAAoK,EAASpK,IACnD,GAAAoI,KAAA4F,MAAAhO,IAAA0O,EACA,OAAA1O,GAGAy+C,WAAA,SAAA9L,GAEA,IAAA+L,EAAA,KAOA,OANA/L,EAAAvkC,KAAA,IAAAukC,EAAAvkC,IACAswC,EAAA/L,EAAAvkC,IACGukC,EAAA57B,OAEH2nC,EAAAh8C,KAAAi8C,IAAAhM,EAAA57B,KAAAhD,cAAA4+B,EAAA57B,KAAA/C,WAAA2+B,EAAA57B,KAAA9C,YAEAyqC,GAEAE,oBAAA,SAAA7nC,EAAArI,EAAAqgB,GAMA,YALA5rB,IAAA4rB,IACAA,EAAA3mB,KAAAo2C,cAAA9vC,SAIAvL,IAAA4rB,KAGAA,IAGA3mB,KAAAy2C,YAAA9nC,EAAA3O,KAAA4F,MAAA+gB,EAAA,GAAAA,EAAA,OAGA3mB,KAAA,YAAAsG,IAEAtG,KAAA,YAAAsG,GAAAqI,KAIA+nC,aAAA,SAAA/nC,GACA,IAAA6S,EAAAxhB,KAAA22C,cAAAhoC,GAEA,OAAA6S,aAAAxnB,OACAwnB,EAAApnB,OAAA,GAIAw8C,cAAA,SAAAjoC,GAGA,IAFA,IAAAkO,EAAA7c,KAAA22C,cAAAhoC,GACA5I,EAAA4I,EAAAs8B,WACArzC,EAAA,EAAiBA,EAAAilB,EAAAziB,OAAkBxC,GAAA,GACnC,QAAAmD,IAAA8hB,EAAAjlB,EAAA,GACA,OAAAilB,EAAAjlB,IAAAmO,EAEA,GAAAA,GAAA8W,EAAAjlB,IAAAmO,EAAA8W,EAAAjlB,EAAA,GACA,SAGA,UAEAi/C,oBACAC,UAAA,SAAAjkC,EAAAvM,EAAAkX,GAEA,OADAxd,KAAAuH,OAAAoH,KACAyR,IAAAvN,EAAA2K,EAAAlX,IAeAywC,4BAAA,SAAApvB,EAAAC,EAAAthB,EAAAkX,GACA,IAAA3jB,EAAAmG,KAAAuH,OAAAoH,KACAkE,EAAA,IAAAvY,KAAAqtB,GACAjK,EAAA,IAAApjB,KAAAstB,GACApK,KAAA,EACA,IAIAw5B,EACAC,EALArxC,EAAA,EAGAsxC,EAAA,KAOAC,GAAA,GACAH,EAAAn9C,EAAAyM,EAAA,cAAAhM,KAAAuY,KACA5X,WAAA4X,EAAA5X,YACAk8C,GAAA,GAEA,IAAAC,GAAA,GACAH,EAAAp9C,EAAAyM,EAAA,cAAAhM,KAAAstB,KACA3sB,WAAA2sB,EAAA3sB,YACAm8C,GAAA,GAIA,IADA,IAAAC,GAAA,EACAxkC,EAAA5X,UAAAyiB,EAAAziB,WAEAo8C,GADAH,EAAAl3C,KAAA82C,UAAAjkC,EAAAvM,EAAAkX,IACAviB,UAAAyiB,EAAAziB,UAEA+E,KAAAy2C,YAAA5jC,EAAAvM,MACA6wC,GAAAC,GAAAC,KACAL,EAAAn9C,EAAAyM,EAAA,cAAAhM,KAAAuY,IACAokC,EAAAp9C,EAAAumB,IAAA42B,EAAAx5B,EAAAlX,IAGA6wC,GACAA,GAAA,EACAD,EAAAl3C,KAAA82C,UAAAE,EAAA1wC,EAAAkX,GACA5X,IAAAqxC,EAAAh8C,UAAA4X,EAAA5X,YAAAg8C,EAAAh8C,UAAA+7C,EAAA/7C,YACKm8C,GAAAC,GACLD,GAAA,EACAxxC,IAAA8X,EAAAziB,UAAA4X,EAAA5X,YAAAg8C,EAAAh8C,UAAA+7C,EAAA/7C,YAGA2K,KAGAiN,EAAAqkC,EAEA,OAAAtxC,GAEA0xC,gBAAA,SAAA3oC,GAGA,IAFA,IAAAkO,EAAA7c,KAAA22C,cAAAhoC,GACAzK,EAAA,EACAtM,EAAA,EAAiBA,EAAAilB,EAAAziB,OAAkBxC,GAAA,EACnCsM,GAAA2Y,EAAAjlB,EAAA,GAAAilB,EAAAjlB,IAAA,EAEA,OAAAsM,GAEAqzC,sBAAA,SAAA5vB,EAAAC,GAKA,IAJA,IAAA/K,EAAA,EACAhK,EAAA,IAAAvY,KAAAqtB,GACAjK,EAAA,IAAApjB,KAAAstB,GAEA/U,EAAA5X,UAAAyiB,EAAAziB,WACA+E,KAAAy2C,YAAA5jC,EAAA,SACAgK,GAAA7c,KAAAs3C,gBAAAzkC,IACAA,EAAA7S,KAAA82C,UAAAjkC,EAAA,SAEA,OAAAgK,GAEA26B,0BAAA,SAAA7vB,EAAAC,EAAAthB,EAAAkX,GACA,IAAA3K,EAAA,IAAAvY,KAAAqtB,GACAjK,EAAA,IAAApjB,KAAAstB,GACApK,KAAA,EAEA,IAAAi6B,EAAA,IAAAn9C,KAAAuY,GACA6kC,EAAA13C,KAAAuH,OAAAoH,KAAAyR,IAAApgB,KAAAuH,OAAAoH,KAAAgpC,UAAA,IAAAr9C,KAAAuY,IAAA,SAEA,GAAA6K,EAAAziB,WAAAy8C,EAAAz8C,UACA,OAAA+E,KAAA+2C,4BAAApvB,EAAAC,EAAAthB,EAAAkX,GAGA,IAAAo6B,EAAA53C,KAAAuH,OAAAoH,KAAAgpC,UAAA,IAAAr9C,KAAAojB,IACAm6B,EAAAn6B,EAEAo6B,EAAA93C,KAAA+2C,4BAAAU,EAAAC,EAAApxC,EAAAkX,GACAu6B,EAAA/3C,KAAA+2C,4BAAAa,EAAAC,EAAAvxC,EAAAkX,GAEAw6B,EAAAh4C,KAAAu3C,sBAAAG,EAAAE,GAGA,OAFAI,IAAAx6B,EAAAs6B,EAAAC,GAMApC,aAAA,WACA,OAAA31C,KAAAi4C,UAEAC,aAAA,SAAA3N,GACAvqC,KAAAi4C,SAAA1N,GAGA4N,2BAAA,SAAAC,GACA,IAAAC,EAAAC,KAAAC,UAAAv4C,KAAA21C,gBAEA,OADAyC,KACAp4C,KAAAw4C,iBAAAx4C,KAAA21C,kBACA31C,KAAAuH,OAAA8rB,QAAA,sDACArzB,KAAAk4C,aAAAI,KAAA31B,MAAA01B,IACAr4C,KAAAm2C,mBAAA7tC,SACA,IAMAkwC,iBAAA,SAAAjO,GACA,IAAAxwC,GAAA,EACA0+C,KACAC,GAAA,EACA,QAAA9gD,KAAA2yC,EAAA4I,MACAp5C,KAAAwwC,EAAA4I,MAAAv7C,GACA6gD,EAAAv2C,KAAAtK,GAGA,IAAA+gD,KACA,IAAA/gD,EAAA,EAAiBA,EAAA6gD,EAAAr+C,OAAuBxC,IACxC6gD,EAAA7gD,GAAA,IACA+gD,EAAAz2C,KAAAu2C,EAAA7gD,IAGA+gD,EAAAh+B,OAEA,IAAA/iB,EAAA,EAAiBA,EAAA,EAAOA,IACxB+gD,EAAA/gD,QACA8gD,GAAA,GAEA,OAAAA,GACA3+C,IACAA,GAAAwwC,EAAA1tB,QAGA23B,aAAA,WACA,IAAAvtC,EAAAjH,KAAAo1C,gBAAAz3B,sBAAApjB,MAAAyF,KAAAo1C,gBAAAj6C,WACA,OAAA6E,KAAA22C,cAAA1vC,EAAA0H,OAEAgoC,cAAA,SAAAhoC,GACA,IAAA7V,EAAAkH,KAAAq2C,YAA2B1nC,SAC3BkO,GAAA,EACAQ,EAAArd,KAAA21C,eAMA,YALA56C,IAAAsiB,EAAA81B,MAAAr6C,GACA+jB,EAAAQ,EAAA81B,MAAAr6C,QACGiC,IAAAsiB,EAAA81B,MAAAxkC,EAAAiqC,YACH/7B,EAAAQ,EAAA81B,MAAAxkC,EAAAiqC,YAEA,IAAA/7B,EACAQ,EAAAR,MACGA,OAMH43B,YAAA,SAAAlK,GACA,OAAAvqC,KAAAm4C,2BAAAtxC,EAAAzN,KAAA,WACA,IAAAyjB,OAAA9hB,IAAAwvC,EAAA1tB,OAAA0tB,EAAA1tB,MACAy5B,EAAAt2C,KAAAq2C,WAAA9L,GACA,OAAA+L,EACAt2C,KAAA21C,eAAAxC,MAAAmD,GAAAz5B,EAEA7c,KAAA21C,eAAA94B,QAEA7c,KAAAm2C,mBAAA7tC,SACGtI,QAGH00C,cAAA,SAAAnK,GACA,OAAAvqC,KAAAm4C,2BAAAtxC,EAAAzN,KAAA,WACA,GAAAmxC,EAEI,CAEJ,IAAA+L,EAAAt2C,KAAAq2C,WAAA9L,GAEA,OAAA+L,UACAt2C,KAAA21C,eAAAxC,MAAAmD,QANAt2C,KAAA64C,iBAUA74C,KAAAm2C,mBAAA7tC,SACGtI,QAGHy2C,YAAA,SAAA9nC,EAAArI,EAAAqgB,GAEA,IAAAmyB,EAAA94C,KAAAm2C,mBAAA19C,IAAA6N,EAAAqI,GAQA,OANA,GAAAmqC,IAEAA,EAAA94C,KAAAw2C,oBAAA7nC,EAAArI,EAAAqgB,GACA3mB,KAAAm2C,mBAAAH,IAAA1vC,EAAAqI,EAAAmqC,IAGAA,GAGA1E,WAAA,WACA,IAAAntC,EAAAjH,KAAAo1C,gBAAAt3B,oBAAAvjB,MAAAyF,KAAAo1C,gBAAAj6C,WACA,OAAA6E,KAAAy2C,YAAAxvC,EAAA0H,KAAA1H,EAAAX,OAGAqiC,kBAAA,WACA,IAAA1hC,EAAAjH,KAAAo1C,gBAAA72B,qBAAAhkB,MAAAyF,KAAAo1C,gBAAAj6C,WAEA,IAAA8L,EAAAX,KACA,SAGA,IAAApC,EAAA,EAQA,OANAA,EADA,QAAA+C,EAAAX,KACAtG,KAAAw3C,0BAAAvwC,EAAAuL,WAAAvL,EAAAqL,SAAArL,EAAAX,KAAAW,EAAAuW,MAEAxd,KAAA+2C,4BAAA9vC,EAAAuL,WAAAvL,EAAAqL,SAAArL,EAAAX,KAAAW,EAAAuW,MAIAhgB,KAAAC,MAAAyG,IAEA0wC,YAAA,WACA,IAAA3tC,EAAAjH,KAAAo1C,gBAAA72B,qBAAAhkB,MAAAyF,KAAAo1C,gBAAAj6C,WAEAwsB,EAAA1gB,EAAAuL,WACAoV,EAAA3gB,EAAAqL,SACAhM,EAAAW,EAAAX,KACAkX,EAAAvW,EAAAuW,KAEA,IAAAlX,EACA,SAEA,IAAAuM,EAAA,IAAAvY,KAAAqtB,GACAjK,EAAA,IAAApjB,KAAAstB,GAGA,IAFApK,KAAA,EAEA3K,EAAA5X,UAAAyiB,EAAAziB,WAAA,CACA,GAAA+E,KAAAy2C,YAAA5jC,EAAAvM,GACA,SACAuM,EAAA7S,KAAA82C,UAAAjkC,EAAAvM,EAAAkX,GAEA,UAGAjL,iBAAA,WACA,IAAAtL,EAAAjH,KAAAo1C,gBAAA32B,0BAAAlkB,MAAAyF,KAAAo1C,gBAAAj6C,WAEAwsB,EAAA1gB,EAAAuL,WACAC,EAAAxL,EAAAwL,SACAnM,EAAAW,EAAAX,KACAkX,EAAAvW,EAAAuW,KAEAu7B,EAAA9xC,EAAAwL,UAAA,OACA,OAAAzS,KAAAg5C,kBAAArxB,EAAAlV,EAAAnM,EAAAkX,EAAAu7B,IAEAC,kBAAA,SAAArxB,EAAAlV,EAAAnM,EAAAkX,GACA,IAAAlX,EACA,SAEA,IAAAuM,EAAA,IAAAvY,KAAAqtB,GACAsxB,EAAA,EAIA,IAHAz7B,KAAA,EACA/K,EAAAjV,KAAA0iC,IAAA,EAAAztB,GAEAwmC,EAAAxmC,GAAA,CACA,IAAAykC,EAAAl3C,KAAA82C,UAAAjkC,EAAAvM,EAAAkX,GAEAxd,KAAAy2C,YAAAj5B,EAAA,MAAAljB,KAAA48C,EAAAj8C,UAAA,OAAAX,KAAA48C,EAAAj8C,UAAA,GAAAqL,IACA2yC,IACApmC,EAAAqkC,EAEA,OAAArkC,GAGAwhC,mBAAA,WACA,IAAAptC,EAAAjH,KAAAo1C,gBAAAn3B,4BAAA1jB,MAAAyF,KAAAo1C,gBAAAj6C,WACA,OAAA6E,KAAAk5C,oBAAAjyC,IAGAiyC,oBAAA,SAAA3O,GACA,GAAAvqC,KAAAy2C,YAAAlM,EAAA57B,KAAA47B,EAAAjkC,MACA,OAAAikC,EAAA57B,KAEA,IAAArI,EAAAikC,EAAAjkC,KAEA6yC,EAAAn5C,KAAAuH,OAAAoH,KAAArI,EAAA,cAAAhM,KAAAiwC,EAAA57B,OAEAyqC,EAAA,IAAA9+C,KAAA6+C,GACAE,EAAA,IAAA/+C,KAAA6+C,GACAG,GAAA,EAEA9xB,EAAA,EACA+xB,EAAA,OAAAhP,EAAAr3B,MAAAq3B,EAAAr3B,IAEAsmC,EAAA,EACA,QAAAjP,EAAAr3B,MACAsmC,GAAA,GAMA,IAJA,IAAAC,EAAAz5C,KAAAo2C,cAAA9vC,GACAozC,EAAA15C,KAAA4F,MAAA6zC,EAAA,IAGAz5C,KAAAy2C,YAAA0C,EAAA7yC,IAAA,CAEA,GAAAozC,IAAA15C,KAAAy2C,YAAA0C,EAAAO,GAAA,CAEA,IAAAC,EAAA35C,KAAAuH,OAAAzN,KAAAywC,GACAoP,EAAAhrC,KAAAwqC,EACAQ,EAAArzC,KAAAozC,EAEAP,EAAAn5C,KAAAk5C,oBAAAS,GAGAJ,IACAJ,EAAAG,EAAAF,EAAAC,EACAG,IAAA,GAEA,IAAAxF,EAAAmF,EAAAhb,oBAgBA,GAfAgb,EAAAn5C,KAAAuH,OAAAoH,KAAAyR,IAAA+4B,EAAAK,EAAAlzC,GAEA6yC,EAAAn5C,KAAAuH,OAAAw2B,oBAAAob,EAAAnF,EAAAwF,EAAAlzC,GACAtG,KAAAuH,OAAAoH,KAAArI,EAAA,YACA6yC,EAAAn5C,KAAAuH,OAAAoH,KAAArI,EAAA,UAAA6yC,IAEAI,IACAD,EACAF,EAAAD,EAEAE,EAAAF,GAGAG,OACA9xB,EA1CA,IA6CA,OADAxnB,KAAAuH,OAAA8rB,QAAA,iCACA,EAQA,OAJA8lB,GAAAE,GAAA,QAAA9O,EAAAr3B,MACAimC,EAAAn5C,KAAAuH,OAAAoH,KAAAyR,IAAA+4B,EAAA,EAAA7yC,IAGA6yC,IAIAxhD,EAAAD,QAAAw+C,mBCpcA,IAAArvC,EAAArP,EAAA,GACA+9C,EAAA/9C,EAAA,IACAoiD,EAAApiD,EAAA,IAEA,SAAAqiD,EAAAl0C,GACA3F,KAAAuH,OAAA5B,EACA3F,KAAA85C,cAGAD,EAAArgD,WACAsgD,cACAC,wBAAA,SAAAC,EAAArrC,GAMA,IALA,IAAA/I,KACA0zC,GAAA,EACAW,EAAA,EAEApnC,EAAA7S,KAAAuH,OAAAoH,KAAAgpC,UAAA,IAAAr9C,KAAAqU,IACA5I,EAAA,EAAoBA,EAAA,GAAWA,IAC/Bi0C,EAAAE,OAAA,SAAAC,EAAA98B,GACA,OAAA88B,GAAA98B,EAAAu5B,cAAA/jC,KACI,IAEJymC,GACA1zC,EAAAq0C,GAAAl0C,EACAH,EAAAq0C,EAAA,GAAAl0C,EAAA,EACAk0C,GAAA,GAEAr0C,EAAAq0C,EAAA,MAEAX,GAAA,GACIA,IACJA,GAAA,GAEAzmC,EAAA7S,KAAAuH,OAAAoH,KAAAyR,IAAAvN,EAAA,UAIA,OAFAjN,EAAAxL,SACAwL,GAAA,GACAA,GAEAw0C,eAAA,WACA,IACAp0C,EADAq0C,EAAAr6C,KAAA60C,iBAEAjvC,KACAo0C,EAAAhgD,MAAAR,UAAAiH,MAAA1I,KAAAoD,UAAA,GACAk/C,EAAApC,SAAAp7B,OAAA,MACAw9B,EAAApC,SAAA9E,SACA,IAAAtgC,EAAA7S,KAAAuH,OAAAoH,KAAAgpC,UAAA,IAAAr9C,KAAA,SACA,IAAA0L,EAAA,EAAeA,EAAA,EAASA,IACxBJ,EAAA5F,KAAA+5C,wBAAAC,EAAAnnC,GACAwnC,EAAApC,SAAA9E,MAAAntC,GAAAJ,EACAiN,EAAA7S,KAAAuH,OAAAoH,KAAAyR,IAAAvN,EAAA,SAEA,QAAAjb,EAAA,EAAiBA,EAAAoiD,EAAA5/C,OAAsBxC,IACvC,QAAAiB,KAAAmhD,EAAApiD,GAAAqgD,SAAA9E,OAAAt6C,EAAA,MACA+M,EAAA5F,KAAA+5C,wBAAAC,EAAA,IAAA1/C,MAAAzB,IACAwhD,EAAApC,SAAA9E,MAAAt6C,GAAA+M,GAGA,OAAAy0C,GAGAC,yBAAA,SAAA/P,GACA,IAAAztB,EAAAytB,EAAAztB,KACA,GAAAA,EAAA,CACAytB,EAAA4I,MAAA5I,EAAA4I,UACA,QAAAv7C,EAAA,EAAkBA,EAAAklB,EAAA1iB,OAAiBxC,IACnC2yC,EAAA4I,MAAAv7C,GAAAklB,EAAAllB,GACAklB,EAAAllB,aAAAoC,QACAuwC,EAAA4I,MAAAv7C,KAAAklB,EAAAllB,WAGA2yC,EAAAztB,KAEA,OAAAytB,GAGAsK,eAAA,SAAA0F,GACA,IAAAhQ,EAEAgQ,IACAA,MAIAhQ,EADAgQ,EAAAtC,SACApxC,EAAA/M,KAAAygD,EAAAtC,UAEApxC,EAAA/M,KAAAygD,GAGA,IAAAC,EAAA3zC,EAAA/M,KAAAkG,KAAAw6C,SAAAC,SAAAxC,UACApxC,EAAAnM,MAAA6vC,EAAAiQ,GAEA,IACAn9B,GACA/Y,GAFAuC,EAAA7L,MAEA,GACAi9C,SAAAj4C,KAAAs6C,yBAAA/P,IAGAmQ,EAAA,IAAAd,EAAA55C,KAAAuH,OAAAguC,EAAAv1C,KAAAuH,SAIA,OAHAV,EAAAnM,MAAAggD,EAAAr9B,GAGAq9B,EAAAvC,2BAAA,cAIAuC,EAFA,MAMA3F,YAAA,SAAAzwC,GAGA,OAFAA,KAAA,SACAtE,KAAA26C,yBACA36C,KAAA85C,WAAAx1C,IAGA0wC,aAAA,WACA,IAAA9wC,KACA,QAAAtM,KAAAoI,KAAA85C,WACA51C,EAAAhC,KAAAlC,KAAA+0C,YAAAn9C,IAEA,OAAAsM,GAGA+wC,gBAAA,SAAAviC,GACA,IAAAzL,EAAAjH,KAAAuH,OAAAQ,UAAAd,SACA,IAAAyL,EACA,OAAA1S,KAAA+0C,cACG,GAAAriC,EAAAzL,EAAA2zC,mBACH,OAAA56C,KAAA+0C,YAAAriC,EAAAzL,EAAA2zC,oBACG,GAAA3zC,EAAA4zC,mBAEH,QAAAr1B,KAAAve,EAAA4zC,mBAAA,CACA,IAAAC,EAAA7zC,EAAA4zC,mBAAAr1B,GACA,GAAA9S,EAAA8S,GAAA,CACA,IAAAu1B,EAAAD,EAAApoC,EAAA8S,IACA,GAAAu1B,EACA,OAAA/6C,KAAA+0C,YAAAgG,IAMA,OAAA/6C,KAAA+0C,eAGAD,YAAA,SAAAz3B,GACA,KAAAA,aAAAu8B,GAAA,CACA,IAAAt1C,EAAA+Y,EAAA/Y,IACA+Y,EAAArd,KAAA60C,eAAAx3B,IACA/Y,KAEA,IAAA2C,EAAAjH,KAAAuH,OAAAQ,UAAAd,SAOA,OALAoW,EAAA/Y,GAAA+Y,EAAA/Y,IAAAuC,EAAA7L,MACAgF,KAAA85C,WAAAz8B,EAAA/Y,IAAA+Y,EACApW,EAAA+zC,YACA/zC,EAAA+zC,cACA/zC,EAAA+zC,UAAA39B,EAAA/Y,IAAA+Y,EAAA46B,SACA56B,EAAA/Y,IAGA4wC,eAAA,SAAA73B,GACA,IAAApW,EAAAjH,KAAAuH,OAAAQ,UAAAd,SACA,QAAAoW,MACArd,KAAA85C,WAAAz8B,YACArd,KAAA85C,WAAAz8B,GACApW,EAAA+zC,WAAA/zC,EAAA+zC,UAAA39B,WACApW,EAAA+zC,UAAA39B,IACA,KAKA49B,uBAAA,SAAAC,GACA,QAAAtjD,KAAAsjD,EACA,IAAAl7C,KAAA85C,WAAAliD,GAAA,CAGA,IAAA2yC,EAAA2Q,EAAAtjD,GACAylB,EAAArd,KAAA60C,eAAAtK,GACAltB,EAAA/Y,GAAA1M,EACAoI,KAAA80C,YAAAz3B,KAIAm9B,UACAW,QACA72C,GAAA,SACA2zC,UACAp7B,OAAA,MACAC,MAAA,iBAGA29B,UACAn2C,GAAA,WACA2zC,UACAp7B,OAAA,MACAC,MAAA,kBAKA69B,uBAAA,WACA,IAAA1zC,EAAAjH,KAAAuH,OAAAQ,UAAAd,SACAjH,KAAAi7C,uBAAAj7C,KAAAw6C,UACAx6C,KAAAi7C,uBAAAh0C,EAAA+zC,aAIArjD,EAAAD,QAAAmiD,mBClNA,IAAAA,EAAAriD,EAAA,IACAi+C,EAAAj+C,EAAA,IACA4jD,EAAA5jD,EAAA,IACAqP,EAAArP,EAAA,GAEAG,EAAAD,QAAA,SAAAiO,GACA,IAAAiwC,EAAA,IAAAiE,EAAAl0C,GACA4uC,EAAA,IAAAkB,EAAAG,GACAyF,EAAAD,EAAAliD,OAAA08C,EAAArB,GACA1tC,EAAAnM,MAAAiL,EAAA01C,qBCTA7jD,EAAA,OACAqC,EAAArC,EAAA,GAEAG,EAAAD,QAAA,SAAAiO,GAEAA,EAAA21C,KAAA,SAAAC,EAAA/pC,EAAA7M,GACA3E,KAAAw7C,UAAAD,EACAv7C,KAAAqzB,OAAAl4B,UAAAf,OAAA,0BAEA,IAAA8yB,EAAA,OAAAuuB,EAAA,KACAtgD,UAAAf,QAAA,GACA8yB,EAAA1b,EACAiqC,EAAA92C,GAEA,iBAAAxJ,UAAA,GACA+xB,EAAA/xB,UAAA,GACA,mBAAAA,UAAA,KACAsgD,EAAAtgD,UAAA,IAGA6E,KAAA07C,WAAAxuB,EAEAltB,KAAA4E,UAAA,eAAA22C,EAAAruB,IAEAltB,KAAA27C,KAAAljD,IAAA8iD,EAAA51C,EAAAvM,KAAA,SAAAvB,GACAmI,KAAA47C,QAAA/jD,EAAAq1B,GACAltB,KAAA4E,UAAA,aAAA22C,EAAAruB,IACA,mBAAAuuB,GACAA,EAAA1jD,KAAAiI,OACGA,QAEH2F,EAAAgd,MAAA,SAAAP,EAAA5Q,GACAxR,KAAA47C,SAAgBC,QAASC,aAAA15B,IAAoB5Q,IAG7C7L,EAAA8hB,UAAA,SAAAjW,GAEA,OAAAxR,KADAwR,KAAA,QACAiW,aAiCA9hB,EAAAi2C,QAAA,SAAAG,EAAAvqC,GACAxR,KAAA4E,UAAA,oBACA4M,IACAA,EAAA,QACAxR,KAAAqzB,OAAArzB,KAAAwR,GAAA,sBAAAA,EAAA,KAEA,IAAA1H,EAAAiyC,EAAAF,OAAAC,aAEA15B,EAAApiB,KAAAwR,GAAAmR,MAAA7Y,EAAAiyC,GACA/7C,KAAAg8C,iBAAA55B,IAGAzc,EAAAq2C,iBAAA,SAAA55B,GACAA,EAAA65B,aACAj8C,KAAAk8C,kBAAA95B,EAAA65B,aAEAj8C,KAAAwtB,MAAAC,WAAA9K,MAAAP,QACA,IAAAwK,EAAAxK,EAAAwK,QAAAxK,EAAA65B,YAAA75B,EAAA65B,YAAArvB,UAMA,GALA5sB,KAAAwtB,MAAA2uB,WAAAx5B,MAAAiK,GAGA5sB,KAAA4E,UAAA,cACA5E,KAAAuF,SACAvF,KAAAiH,OAAAm1C,eAAA,CACA,IAAAC,EAAAr8C,KAAA+xC,eAAA,GACAztC,EAAA+3C,IAAA/3C,GAAAtE,KAAAiH,OAAA0/B,QACA3mC,KAAAof,aAAA9a,IACAtE,KAAAoyC,SAAA9tC,KAKAqB,EAAAu2C,kBAAA,SAAAD,GACA,IAAAK,GAAA,EACA,QAAAnjD,KAAA8iD,EACA,GAAAA,EAAAxiD,eAAAN,GAAA,CACAmjD,GAAA,EACA,IAAAnQ,EAAA8P,EAAA9iD,GACAqN,EAAAxG,KAAAosC,WAAAjzC,GACA,IAAAqN,EAAA,SACAA,EAAA9F,OAAA,EAAA8F,EAAApM,QACA,QAAA4xC,EAAA,EAAmBA,EAAAG,EAAA/xC,OAAuB4xC,IAAA,CAC1C,IAAAuQ,EAAApQ,EAAAH,GACAvxC,EAAAuF,KAAAlG,KAAAyiD,GAGA,QAAAC,KAFA/hD,EAAAtB,IAAAsB,EAAA5B,MAEA0jD,EACA,GAAAA,EAAA9iD,eAAA+iD,GAAA,CACA,YAAAA,GAAA,SAAAA,EACA,SACA/hD,EAAA+hD,GAAAD,EAAAC,GAGAh2C,EAAAtE,KAAAzH,IAIA6hD,GACAt8C,KAAA4E,UAAA,qBAGAe,EAAAlK,YAAA,+BAAA6I,EAAAoO,GACA,OAAAA,EAAA+pC,UAGA92C,EAAA+2C,MACA/5B,MAAA,SAAAP,GAaA,OAZAzc,EAAA0tB,OAAAjR,EAAA,gBAEA,iBAAAA,IACAzlB,OAAA27C,KACAl2B,EAAAk2B,KAAA31B,MAAAP,GAEAzc,EAAA0tB,QAAA,4BAIAjR,EAAAu6B,eACAh3C,EAAAi3C,aAAAx6B,EAAAu6B,cACAv6B,GAEAy6B,cAAA,SAAAnqC,GACA,OAAA1S,KAAA88C,YAAApqC,IAEAqqC,cAAA,SAAA1gC,GACA,OAAArc,KAAAg9C,UAAA3gC,IAEA2gC,UAAA,SAAAviD,GACA,IAAAX,KACA,QAAAX,KAAAsB,EACAX,EAAAX,GAAAsB,EAAAtB,GACA,OAAAW,GAEAgjD,YAAA,SAAAriD,GACA,IAAAX,KACA,QAAAX,KAAAsB,EACA,KAAAtB,EAAAwJ,OAAA,KAEA7I,EAAAX,GAAAsB,EAAAtB,GAEAU,EAAAQ,OAAAP,EAAAX,MACAW,EAAAX,GAAAwM,EAAAwU,UAAA8iC,WAAAnjD,EAAAX,MAGA,OAAAW,GAEA2tB,UAAA,WACA,IAAAkG,KACAf,KAEAjnB,EAAA0Z,SAAA,SAAA5kB,GACAkL,EAAAstC,kBAAAx4C,GACAkzB,EAAAzrB,KAAAlC,KAAA68C,cAAApiD,KACIkL,EAAAsB,OAAA0/B,QAAA3mC,MAGJ,IADA,IAAAk9C,EAAAv3C,EAAAw3C,WACAvlD,EAAA,EAAkBA,EAAAslD,EAAA9iD,OAAqBxC,IACvCg1B,EAAA1qB,KAAAlC,KAAA+8C,cAAAG,EAAAtlD,KAGA,OACAwqB,KAAAuL,EACAf,WAoBAjnB,EAAAy3C,KACAC,eAAA,SAAAv/C,EAAAw/C,GAEA,IADA,IAAAxkD,KACAlB,EAAA,EAAkBA,EAAAkG,EAAAy/C,WAAAnjD,OAA4BxC,IAC9CkB,EAAAgF,EAAAy/C,WAAA3lD,GAAAO,MAAA2F,EAAAy/C,WAAA3lD,GAAAiB,MAEA,IAAAykD,EAAA,CACA,IAAA1lD,EAAA,EAAmBA,EAAAkG,EAAAiE,WAAA3H,OAA4BxC,IAAA,CAC/C,IAAA6J,EAAA3D,EAAAiE,WAAAnK,GACA,GAAA6J,EAAA+7C,WACA1kD,EAAA2I,EAAA7B,SAAA6B,EAAAC,WAAAD,EAAAC,WAAA+7C,UAAA,IAGA3kD,EAAA2V,OAAA3V,EAAA2V,KAAA3Q,EAAA4D,WAAA5D,EAAA4D,WAAA+7C,UAAA,IAGA,OAAA3kD,GAEA4kD,gBAAA,SAAAC,GAGA,IAFA,IAAAxR,KACA8E,EAAAtrC,EAAAg2C,KAAAiC,MAAA,iBAAAD,GACA/lD,EAAA,EAAkBA,EAAAq5C,EAAA72C,OAAiBxC,IAInC,IAHA,IACA4O,EAAA2lC,EADA8E,EAAAr5C,GAAA0G,aAAA,WAEAu/C,EAAAl4C,EAAAg2C,KAAAiC,MAAA,UAAA3M,EAAAr5C,IACAo0C,EAAA,EAAmBA,EAAA6R,EAAAzjD,OAAiB4xC,IAAA,CAIpC,IAHA,IACA8R,EADAD,EAAA7R,GACAuR,WACA9iD,GAAgBtB,IAAA0kD,EAAA7R,GAAA1tC,aAAA,SAAAoP,MAAAmwC,EAAA7R,GAAA1tC,aAAA,UAChB23B,EAAA,EAAoBA,EAAA6nB,EAAA1jD,OAAkB67B,IAAA,CACtC,IAAAvhB,EAAAopC,EAAA7nB,GACA,SAAAvhB,EAAAhW,UAAA,SAAAgW,EAAAhW,WAEAjE,EAAAia,EAAAhW,UAAAgW,EAAA+oC,WAEAj3C,EAAAtE,KAAAzH,GAGA,OAAA0xC,GAEA4R,QAAA,SAAAtvC,EAAAkvC,EAAAK,GACAA,KAAA,OACAL,EAAAM,gBACAN,EAAAh4C,EAAAg2C,KAAAh5B,MAAAg7B,IAGA,IAAAP,EAAAz3C,EAAAg2C,KAAAuC,OAAAF,EAAAL,EAAA9B,QACA,IAAAuB,KAAAx9C,SAAAo+C,EAAA,wBAEA,IAAAG,EAAAf,EAAA9+C,aAAA,gBAIA,OAHA6/C,IACAx4C,EAAAi3C,aAAAuB,GAEAf,GAEAz6B,MAAA,SAAAlU,EAAAkvC,GACAA,EAAA39C,KAAA+9C,QAAAtvC,EAAAkvC,GAMA,IALA,IAAAv7B,KAEAg8B,EAAAh8B,UACAg7B,EAAAz3C,EAAAg2C,KAAAiC,MAAA,SAAAD,GAEA/lD,EAAA,EAAkBA,EAAAwlD,EAAAhjD,OAAgBxC,IAClCwmD,EAAAxmD,GAAAoI,KAAAq9C,eAAAD,EAAAxlD,IAGA,OADAwqB,EAAA65B,YAAAj8C,KAAA09C,gBAAAC,GACAv7B,GAEA46B,UAAA,SAAAviD,GACA,mBAAAA,EAAA6J,GAAA,aAAA7J,EAAAG,OAAA,aAAAH,EAAAE,OAAA,WAAAF,EAAA+W,KAAA,QAEAsrC,YAAA,SAAAriD,GACA,mBAAAA,EAAA6J,GAAA,cAAA7J,EAAA6I,QAAA,qBAAA7I,EAAA+X,WAAA,eAAA/X,EAAAgY,SAAA,aAAAhY,EAAAwd,KAAA,eAAAxd,EAAAuuB,SAAA,eAAAvuB,EAAA6X,SAAA,cAAA7X,EAAAgU,KAAA,cAEAgZ,UAAA,WAKA,IAJA,IAAAkG,KACAf,KAEA8vB,EAAA/2C,EAAA+2C,KAAAj1B,YACA7vB,EAAA,EAAAoK,EAAA06C,EAAAt6B,KAAAhoB,OAA0CxC,EAAAoK,EAASpK,IACnD+1B,EAAAzrB,KAAAlC,KAAA88C,YAAAJ,EAAAt6B,KAAAxqB,KAEA,IAAAA,EAAA,EAAAoK,EAAA06C,EAAA9vB,MAAAxyB,OAA2CxC,EAAAoK,EAASpK,IACpDg1B,EAAA1qB,KAAAlC,KAAAg9C,UAAAN,EAAA9vB,MAAAh1B,KAEA,eAAA+1B,EAAAptB,KAAA,iCAAAqsB,EAAArsB,KAAA,+BAKAoF,EAAA04C,QACA17B,MAAA,SAAAlU,EAAAkvC,GACAA,EAAAh4C,EAAAy3C,IAAAW,QAAAtvC,EAAAkvC,EAAA,YAMA,IALA,IAAAv7B,GAAe65B,aAAcrvB,WAE7BwxB,EAAAh8B,UACAg7B,EAAAz3C,EAAAg2C,KAAAiC,MAAA,SAAAD,GAEA/lD,EAAA,EAAkBA,EAAAwlD,EAAAhjD,OAAgBxC,IAAA,CAClCwmD,EAAAxmD,GAAA+N,EAAAy3C,IAAAC,eAAAD,EAAAxlD,IACA,IAAA0L,EAAA85C,EAAAxlD,GAAA6E,WAEA,WAAA6G,EAAA1D,QACAw+C,EAAAxmD,GAAA0L,OAAA,WAAAA,EAAAhF,aAAA,MAEA8/C,EAAAxmD,GAAA0L,SAAA7G,WAAA6B,aAAA,MAGA8+C,EAAAz3C,EAAAg2C,KAAAiC,MAAA,YAAAD,GACA,IAAA/lD,EAAA,EAAkBA,EAAAwlD,EAAAhjD,OAAgBxC,IAAA,EAClCmL,EAAA4C,EAAAy3C,IAAAC,eAAAD,EAAAxlD,IAAA,IACA0M,GAAA,WAAAvB,EAAAuB,GACA85C,EAAAl8C,KAAAa,GAGA,IAAAnL,EAAA,EAAkBA,EAAAwmD,EAAAhkD,OAAgBxC,IAAA,CAClC,IAAAmL,KAAAq7C,EAAAxmD,IACA4a,WAAAzP,EAAAu7C,WAAAv7C,EAAAw7C,IACAx7C,EAAAuP,SAAAvP,EAAAy7C,QACAz7C,EAAA0L,KAAA1L,EAAA5K,KACA4K,EAAA0P,SAAA1P,EAAA0P,SAAA,EACA1P,EAAAkV,KAAA,EACAlV,EAAA0P,UAAA1P,EAAAuP,WAAAvP,EAAA0P,SAAA,GACA1P,EAAA07C,kBACAr8B,EAAA65B,YAAArvB,MAAA1qB,MACAvH,OAAAoI,EAAAuB,GACA1J,OAAAmI,EAAA07C,iBACAjtC,KAAA7L,EAAAsB,OAAA2lB,MAAAE,kBAIA,OAAA1K,GAEAqF,UAAA,WACA9hB,EAAAk1B,QAAA,mDAIAl1B,EAAAymC,WAAA,SAAAj0C,EAAA6tB,GAMA,OALAA,EACAhmB,KAAAosC,WAAAj0C,GAAA6tB,EAAAvlB,MAAA,GACGT,KAAAosC,WAAAj0C,KACH6H,KAAAosC,WAAAj0C,OAEA6H,KAAAosC,WAAAj0C,oBCpWAR,EAAAD,QAAA,SAAAiO,GACAA,EAAA8jB,WAAA,SAAA7X,GACA,QAAAA,MAAA5R,KAAAiH,OAAAy3C,sBAGA9sC,KAAA5R,KAAAiH,OAAA03C,oBAAA3+C,KAAAiH,OAAAwgC,2BCLA9vC,EAAAD,QAAA,SAAAiO,GAEA,IAAAi5C,EAAA,IAAAv9C,OAAA,qBACAw9C,EAAA,IAAAx9C,OAAA,WAEA,SAAAy9C,EAAAC,GACA,OAAAA,EAAA,IACA9+C,QAAA2+C,EAAA,KACA3+C,QAAA4+C,EAAA,KAGA,IAAAG,EAAA,IAAA39C,OAAA,UACA,SAAA49C,EAAAxwC,GACA,OAAAA,EAAA,IAAAxO,QAAA++C,EAAA,SA4OA,QAAApnD,KAzOA+N,EAAAwO,UACA+qC,mBAAA,SAAAxqC,GACA,IAAA6oC,GAAA,KACA,QAAA3lD,KAAA8c,EAAA,CACA,IAAAjG,EAAAwwC,EAAAH,EAAApqC,EAAA9c,KACA2lD,EAAAr7C,KAAAtK,EAAA,KAAA6W,EAAA,KAGA,OADA8uC,EAAAr7C,KAAA,KACAq7C,EAAAh9C,KAAA,MAIAuyB,oBAAA,SAAAqsB,GAEA,OAAAx5C,EAAAwO,SAAA+qC,oBAA6CE,aAAAD,KAI7CE,gBAAA,SAAA3sC,EAAA9R,GAEA8R,EAAAF,YAAAE,EAAAJ,WAGA1R,EAAA8O,aAAA,aAAAovC,EAAAn5C,EAAAwU,UAAAmlC,aAAA5sC,EAAAF,WAAAE,EAAAJ,SAAAI,KAEA/M,EAAA8jB,WAAA/W,IACA9R,EAAA8O,aAAA,oBAKAgD,EAAA6sC,sBACA3+C,EAAA8O,aAAA,gBAIA9O,EAAA8O,aAAA,gBACA/J,EAAAoL,WAAAuZ,eAAA5X,EAAApO,IAAAqB,EAAA65C,gBAAA75C,EAAA65C,eAAA9sC,EAAApO,IAAA,kBAGA2nB,eAAA,SAAAvZ,EAAA9R,GACAZ,KAAAq/C,gBAAA3sC,EAAA9R,IAEA+E,EAAA8jB,WAAA/W,IAAA/M,EAAAsB,OAAAw4C,YACA/sC,EAAApO,IAAAqB,EAAAoL,WAAAwZ,QACA3pB,EAAA8O,aAAA,mBAEA9O,EAAA8O,aAAA,qBAKAgwC,YAAA,SAAAhtC,EAAA9R,GAEAZ,KAAAq/C,gBAAA3sC,EAAA9R,IAEA+E,EAAA8jB,WAAA/W,IAAA/M,EAAAsB,OAAA04C,cACA/+C,EAAA8O,aAAA,mBAGA9O,EAAA8O,aAAA,cAEA9O,EAAA8O,aAAA,aAAAgD,EAAA8P,QAEA7c,EAAAye,SAAA1R,EAAApO,KACA1D,EAAA8O,aAAA,gBAAAgD,EAAAuP,MAAA,iBAIA29B,SAAA,SAAAvjC,EAAAzb,GAEA,IAAAi/C,EAAAl6C,EAAAsB,OAAA2lB,MAEAkzB,EAAAzjC,EAAA7K,MAAAquC,EAAA/yB,iBAAAzQ,EAAA7K,MAAAquC,EAAAhzB,eACAkzB,EAAA1jC,EAAA7K,MAAAquC,EAAAhzB,gBAAAxQ,EAAA7K,MAAAquC,EAAA/hB,gBAEAl0B,EAAAjE,EAAAuU,OAAAK,OAAA8B,KAAA,IAAA1W,EAAAwU,UAAA6lC,UAAA3jC,EAAAzhB,OAAAmlD,EAAA1jC,EAAA1hB,OAAAmlD,GAEAl/C,EAAA8O,aAAA,aAAAovC,EAAAl1C,IACAjE,EAAA8jB,WAAApN,IACAzb,EAAA8O,aAAA,qBAIAuwC,kBAAA,SAAAr/C,GACAA,EAAA8O,aAAA,qBAGAw/B,mBAAA,SAAAtuC,GACAA,EAAA8O,aAAA,uBAGA+7B,oBAAA,SAAA7qC,GACAA,EAAA8O,aAAA,wBAGAk9B,aAAA,SAAAhsC,GACAA,EAAA8O,aAAA,iBACA9O,EAAA8O,aAAA,sBACA9O,EAAAc,WAAAgO,aAAA,mBAGA26B,yBAAA,SAAA6V,GACA,OAAAlgD,KAAAk/C,oBAAmCiB,KAAA,SAAAf,aAAAz5C,EAAAuU,OAAAK,OAAA2lC,GAAAE,SAAA,OAGnC9Q,eAAA,SAAA1uC,EAAAy/C,GACAz/C,EAAA8O,aAAA,aAAA2wC,IAGAvP,yBAAA,SAAAwP,GACA,IAAA5yC,EAAA,GAEA,OAAA4yC,GACA,SACA5yC,EAAA/H,EAAAuU,OAAAK,OAAA0C,MACA,MACA,SACAvP,EAAA/H,EAAAuU,OAAAK,OAAAyC,OACA,MACA,SACAtP,EAAA/H,EAAAuU,OAAAK,OAAAuC,KACA,MACA,YACApP,EAAA/H,EAAAuU,OAAAK,OAAAsC,MAAAlX,EAAAuU,OAAAK,OAAAqC,QAMA,OAAAjX,EAAAwO,SAAA+qC,oBAA6CE,aAAA1xC,KAG7Cg6B,gCAAA,SAAApC,GACA,OAAAtlC,KAAAk/C,oBAAmCE,aAAAz5C,EAAAuU,OAAAK,OAAA4B,gBAAAokC,gBAAA,OAGnCnsC,eAAA,WACA,0BAAAzO,EAAAsB,OAAAu5C,YAAA,kEAAAjgD,KAAA,MAIAiU,uBAAA,WACA,oBAGAuG,wBAAA,SAAAhP,EAAA2B,GACA,IAAAowC,EAAA,GACA,UAAA/xC,EAAA5T,KACA2lD,EAAA99C,KAAAk/C,oBAAqCiB,KAAA,SAAAf,aAAAz5C,EAAAuU,OAAAK,OAAAc,eACjC,CAEJ,IAAAkiC,GACA4C,KAAA,eACAf,aAAA1xC,GAGA/H,EAAAiV,OAAAjV,EAAAiV,MAAAziB,MAAA4T,EAAA5T,OACA,OAAAwN,EAAAiV,MAAA9H,UACAyqC,EAAA,yBAEAA,EAAA,2BAIAO,EAAA99C,KAAAk/C,mBAAA3B,GAEA,OAAAO,GAGAxpC,mBAAA,WACA,yBAGAmsC,mBAAA,SAAA10C,EAAA20C,GACA,OAAA1gD,KAAAk/C,oBAAmCiB,KAAA,WAAAf,aAAAsB,KAGnCC,wBAAA,SAAA50C,GACA,OAAA/L,KAAAk/C,oBAAmCiB,KAAA,SAAAf,aAAAz5C,EAAAuU,OAAAK,OAAAc,YAGnCulC,wBAAA,SAAAC,GACA,gDAAAA,EAAA,KAGAC,gBAAA,SAAAlgD,GACAA,EAAA8O,aAAA,iBAIAqxC,iBAAA,SAAAngD,EAAA5F,GACA4F,EAAA8O,aAAA,iBACA1U,GACA4F,EAAA8O,aAAA,kBAAA1U,IAMAgmD,cAAA,SAAApgD,GACAA,EAAA8O,aAAA,kBAGAuxC,0BAAA,WACA,0BAGAC,gBAAA,SAAAtgD,EAAAiJ,GACAjJ,EAAA8O,aAAA,aAAA7F,IAGAs3C,0BAAA,SAAAzzC,GACA,OAAA/H,EAAAwO,SAAA+qC,oBAA6CiB,KAAA,SAAAf,aAAA1xC,EAAA0yC,SAAA,OAG7CgB,YAAA,SAAAxgD,GACAA,EAAA8O,aAAA,mBAGA2xC,mBAAA,SAAAzgD,GACAA,EAAA8O,aAAA,wBAGA4xC,kBAAA,SAAA1gD,GACAA,EAAA8O,aAAA,wBAQA/J,EAAAwO,SACAxO,EAAAwO,SAAAvc,GAAA,SAAAwgD,GACA,kBACA,OANAzyC,EAAAsB,OAAAs6C,oBASAnJ,EAAA79C,MAAAyF,KAAA7E,WAFA,IAHA,CAOGwK,EAAAwO,SAAAvc,oBCjQHD,EAAAD,QAAA,SAAAiO,GACAA,EAAA67C,cAAA,SAAArpD,GAGA,IAFA,IAAAid,EAAAzP,EAAAsB,OAAAmO,QAEAxd,EAAA,EAAiBA,EAAAwd,EAAAhb,OAAoBxC,IACrC,GAAAwd,EAAAxd,GAAAO,QACA,OAAAid,EAAAxd,GAGA,+BCTA,IAAAmc,EAAAvc,EAAA,IAEAG,EAAAD,QAAA,SAAAiO,GACAnO,EAAA,GAAAA,CAAAmO,GACAoO,EAAAva,UAAAgW,eAAA,WAKA,IAJA,IACA4F,EADApV,KAAAuR,aACA6D,QACAqsC,KAEA7pD,EAAA,EAAiBA,EAAAwd,EAAAhb,OAAoBxC,IACrCwd,EAAAxd,GAAAwR,MACAq4C,EAAAv/C,KAAAkT,EAAAxd,IAGA,OAAA6pD,qBCdA9pD,EAAAD,QAAA,SAAAiO,GACA,IAEA+7C,EAFAlqD,EAAA,IAEAgC,UAAA4qB,SACAze,EAAA6nB,MAAAC,WAAArJ,SAAA,SAAA9f,GACA,QAAAo9C,EAAAnnD,MAAAyF,KAAA7E,cAEA6E,KAAAmR,OAAA7M,IACAtE,KAAA6R,QAAAvN,GAAAqB,EAAAsB,OAAA06C,0BAgBAh8C,EAAAlK,YAAA,wBAAA6I,GACA,GAAAqB,EAAAsB,OAAA26C,gBAAAj8C,EAAA61C,WAZA,SAAAl3C,GACA,SAAAqB,EAAAsB,OAAA26C,iBAAAj8C,EAAA61C,WACA71C,EAAAk8C,YAAAv9C,EAAA,iBAEAqB,EAAAyd,YAAA9e,GAAAlK,SAAAuL,EAAAye,SAAA9f,IAUAw9C,CAAAx9C,GAAA,CACA,IAAAi3C,EAAA51C,EAAA61C,UAEAp9B,GADAm9B,IAAAt7C,QAAA,6BACAX,QAAA,gBACA/B,EAAAoI,EAAAiS,iBAAAra,GAAA,EAEAoI,EAAA21C,KAAAC,EAAAn9B,EAAA,aAAA2jC,mBAAAz9C,GAAAtE,KAAA07C,WAAA,WACAn+C,GACAoI,EAAA0C,SAAA,KAAA9K,KAIAoI,EAAAq8C,YAAA19C,EAAA,sCCvCA3M,EAAAD,QAAA,SAAAiO,GAMA,SAAAs8C,EAAAt9C,GACA,kBACA,OANAgB,EAAAsB,OAAAi7C,YACAv8C,EAAA6iB,YAAA7iB,EAAAsB,OAAAyhB,MAAAyB,UAAAxkB,EAAAsB,OAAAyhB,MAAAyB,SAQAxlB,EAAApK,MAAAyF,KAAA7E,YAIA,SAAAgnD,EAAA99B,GACA1e,EAAAy8C,YAAA,YAOA,SAAAC,EAAA/9C,GACAg+C,EAAAh+C,GACA,IAAAhB,EAAAqC,EAAA2c,UAAAhe,GACAhB,GAAAqC,EAAAsB,OAAA0/B,SACA0b,EAAA/+C,GAVA++C,CAAAh+B,KAIA,IAAAk+B,EAmDAC,EAUAC,EAnDA,SAAAH,EAAAh+C,GACAA,cACA,IAAAoO,EAAA/M,EAAAsM,QAAA3N,GACAo+C,EAAA/8C,EAAAsB,OAAAyhB,MACAi6B,EAAAh9C,EAAAye,SAAA1R,EAAApO,IAAAo+C,EAAAv4B,QAAAu4B,EAAAhwC,KACA6V,EAAA5iB,EAAA6iB,YAAA9V,EAAAlB,OACA+W,GAAAm6B,EAAAhwC,MAAAiwC,GAAAD,EAAAv4B,SACA5B,GAAAm6B,EAAAv4B,SAAAw4B,GAAAD,EAAAhwC,QAEAA,EAAAlB,KAAAmxC,EACAh9C,EAAAspC,WAAA3qC,IAeA,SAAAs+C,EAAAt+C,GACAA,GAAAqB,EAAAsB,OAAA0/B,SAAAhhC,EAAAyZ,aAAA9a,IACA69C,EAAA79C,GAbAqB,EAAAlK,YAAA,UAAAwmD,EAAA,WACAt8C,EAAA0Z,SAAA,SAAA3M,GACA4vC,EAAA5vC,QAIA/M,EAAAlK,YAAA,iBAAAwmD,EAAAE,IAEAx8C,EAAAlK,YAAA,oBAAAwmD,EAAAE,IASAx8C,EAAAlK,YAAA,qBAAAwmD,EAAA,SAAA39C,EAAAoO,GAEA,OADA6vC,EAAA58C,EAAA2c,UAAAhe,IACA,KAGAqB,EAAAlK,YAAA,oBAAAwmD,EAAA,SAAA39C,EAAAoO,GACAkwC,EAAAL,MAKA58C,EAAAlK,YAAA,iBAAAwmD,EAAA,SAAA39C,EAAA3J,EAAAgF,GAEA,OADA6iD,EAAA78C,EAAA2c,UAAAhe,IACA,KAEAqB,EAAAlK,YAAA,eAAAwmD,EAAA,SAAA39C,EAAA3J,GACAioD,EAAAJ,GACAL,EAAA79C,MAIAqB,EAAAlK,YAAA,mBAAAwmD,EAAA,SAAAn+B,EAAAxgB,EAAAygB,GAEA,OADA0+B,EAAA98C,EAAA2c,UAAAwB,IACA,KAEAne,EAAAlK,YAAA,kBAAAwmD,EAAA,SAAA39C,EAAAhB,EAAAygB,GACAznB,SAAA+F,cAAA,wBAIAugD,EAAAH,GACAN,EAAA79C,uBC7FA3M,EAAAD,QAAA,SAAAiO,GAKA,SAAAs8C,EAAAt9C,GACA,kBACA,OALAgB,EAAAsB,OAAA47C,kBAQAl+C,EAAApK,MAAAyF,KAAA7E,YAIA,SAAA2nD,IACA,IAAAC,EAAAp9C,EAAAg1B,IAEAooB,MAAAC,uBACAD,EAAAC,sBAAA,EACAD,EAAAtnD,YAAA,iBAAAwmD,EAAA,SAAA39C,EAAAqN,EAAAyQ,GACA,OAAAA,EAAA5Q,MAAA7L,EAAAsB,OAAAyhB,MAAA1c,cACA+2C,EAAAE,WAAA3+C,GAAA,IACA,OAOA,SAAA4+C,IACA,IAAAC,EAAAx9C,EAAAy9C,UAAA,OAAAz9C,EAAAsB,OAAAyhB,MAAA1c,aACA,IAAAm3C,EAAA/oD,SAAAuL,EAAAyZ,aAAA+jC,EAAA,GAAA7+C,IAAA,CACA,IAAA0H,GACAwlC,aAAA,EACAhgC,KAAA7L,EAAAsB,OAAAyhB,MAAA1c,YACAyG,SAAA,EACAhE,KAAA9I,EAAAuU,OAAAK,OAAAc,UAEA,QAAA1V,EAAAf,UAAA,iBAAAoH,IACA,OAGArG,EAAAqpC,QAAAhjC,IAIA,SAAAq3C,EAAA/+C,GACA,IAAAsN,EAAAjM,EAAAsM,QAAA3N,GACAsN,EAAAJ,MAAA7L,EAAAsB,OAAAyhB,MAAA1c,cACA4F,EAAAY,YAAAZ,EAAAU,UAAAV,EAAA4/B,cACA5/B,EAAA4/B,aAAA,GAGA7rC,EAAAy8C,YAAA,WACA,IAAAkB,EAAA39C,EAAA7L,KAAA8X,GACAjM,EAAAqf,OAAA,WACArf,EAAA82B,WAAA7qB,EAAAtN,aAGAg/C,EAAA,wBACAA,EAAA9xC,KAAA7L,EAAAsB,OAAAyhB,MAAAhW,KACA4wC,EAAAh/C,GAAAqB,EAAA3K,MACA2K,EAAAqpC,QAAAsU,MAQA39C,EAAAsB,OAAAyhB,MAAA1c,YAAA,cAEArG,EAAAlK,YAAA,0BACAkK,EAAAlK,YAAA,qBAAAwmD,EAAAa,IACAn9C,EAAAlK,YAAA,oBAAAwmD,EAAAoB,IACA19C,EAAAlK,YAAA,iBAAAwmD,EAAA,SAAA39C,EAAAoO,GACAA,EAAAlB,MAAA7L,EAAAsB,OAAAyhB,MAAA1c,cACArG,EAAAy9C,UAAA,OAAAz9C,EAAAsB,OAAAyhB,MAAA1c,aACAzF,QAAA,SAAA7M,GACAiM,EAAAqf,OAAA,WACArf,EAAAyZ,aAAA1lB,EAAA4K,KACAqB,EAAA82B,WAAA/iC,EAAA4K,QAGA4+C,QAGAv9C,EAAAlK,YAAA,UAAAwmD,EAAAiB,sBCvFA,SAAAK,EAAA59C,GAEA,IAAA69C,KAQA,SAAAJ,EAAAK,EAAAC,GACA,yBAAAD,EAWA,SAAA7sC,GACA,IAAA1S,KAMA,OALAyB,EAAA0Z,SAAA,SAAA3M,GACAkE,EAAAlE,IACAxO,EAAAhC,KAAAwQ,KAGAxO,EAjBAy/C,CAAAF,GAEAC,aAAA1pD,MACA4pD,EAAAH,EAAAC,GAEAE,EAAAH,GAAAC,IAeA,SAAAE,EAAArqD,EAAAsqD,GAMA,IALA,IAAA3/C,EAEA4/C,EAAAD,EAAAtjD,KAAA,SAAAhH,EAEAwqD,KACAnsD,EAAA,EAAgBA,EAAAisD,EAAAzpD,OAAwBxC,IACxCmsD,EAAAF,EAAAjsD,KAAA,EAcA,OAXA4rD,EAAAM,GAQA5/C,EAAAs/C,EAAAM,IAPA5/C,EAAAs/C,EAAAM,MACAn+C,EAAA0Z,SAAA,SAAA3M,GACAqxC,EAAArxC,EAAAnZ,KAAAmZ,EAAAlB,MAAA7L,EAAAsB,OAAAyhB,MAAAyB,SACAjmB,EAAAhC,KAAAwQ,MAOAxO,EAGA,SAAA8/C,EAAAC,EAAAC,EAAAn0B,EAAA4b,GACA,IAAAmY,GAAAG,EAAAC,EAAAn0B,EAAAzpB,KAAAypB,EAAAvS,MAAAjd,KAAA,KAQA,OANAijD,EAAAM,GAIAN,EAAAM,GAHAN,EAAAM,GAQA,SAAAI,EAAAD,EAAAl0B,EAAA4b,GAMA,IAJA,IAAAhe,EAAAy1B,EAAAc,EAAAD,GACAzmC,EAAAuS,EAAAzpB,KACA69C,KAEAvsD,EAAA,EAAiBA,EAAA+1B,EAAAvzB,OAAkBxC,IAKnC,IAJA,IAAA8a,EAAAib,EAAA/1B,GAEAwsD,EAAAz+C,EAAAgJ,KAAA6O,EAAA,cAAAljB,KAAAoY,EAAAF,aAEA4xC,EAAA1xC,EAAAJ,UAAA,CAEA,IAAA3D,EAAAy1C,EAGA,GAFAA,EAAAz+C,EAAAgJ,KAAAyR,IAAAgkC,EAAA,EAAA5mC,GAEA7X,EAAAyuC,YAA2BzlC,OAAA+D,OAAApM,KAAAkX,IAA3B,CAIA,IAAA84B,EAAA3nC,EAAA1T,UACAkpD,EAAA7N,KACA6N,EAAA7N,OAGA6N,EAAA7N,GAAAp0C,KAAAwQ,IAQA,IAJA,IACAG,EAAA6K,EADA2mC,KAEAp9C,EAAA0kC,EAAAp6B,aAEA3Z,EAAA,EAAgBA,EAAAm4B,EAAA1B,QAAAj0B,OAA0BxC,IAC1Cib,EAAA,IAAAvY,KAAAy1B,EAAA1B,QAAAz2B,IACA8lB,EAAA/X,EAAAgJ,KAAAyR,IAAAvN,EAAA,EAAA2K,KACAmQ,EAAAw2B,EAAAtxC,EAAA5X,gBACAb,QAAA6M,EAAAq9C,8BACAD,EAAAniD,MACAsQ,WAAAK,EACAP,SAAAoL,EACAiQ,UAMA,OAAA02B,EAvDAE,CAAAN,EAAAC,EAAAn0B,EAAA4b,GAsGA,OA7JAhmC,EAAA6nB,MAAAC,WAAAhyB,YAAA,4BACA+nD,WA6JAgB,WA7CA,SAAA1J,EAAAnP,GAMA,IALA,IAAA1kC,EAAA0kC,EAAAp6B,aACA4I,EAAAwxB,EAAArjB,gBACA+7B,EAAAL,EAAA/8C,EAAAw9C,kBAAA3J,EAAAx2C,GAAAqnC,EAAAta,WAAAsa,GAEArxB,KACA1iB,EAAA,EAAiBA,EAAAysD,EAAAjqD,OAAsBxC,IAAA,CAEvC,IAAAoO,EAAAq+C,EAAAzsD,GAEAiK,EAAAsY,EAAAuqC,oBAAA1+C,EAAAwM,WAAAxM,EAAAsM,SAAAwoC,EAAA90C,EAAA2nB,OACA/jB,EAAAuQ,EAAAwqC,oBAAA3+C,EAAAwM,WAAAxM,EAAAsM,SAAAwoC,EAAA90C,EAAA2nB,OAEA,GAAA9rB,GAAA+H,EAAA,CACA,IAAAg7C,EAAAjZ,EAAAtjB,gBAAAyyB,EAAA90C,EAAAwM,WAAAxM,EAAAsM,UACAjX,EAAAiB,SAAAmD,cAAA,OACApE,EAAA+D,WAAA,wBAAAyC,GAAAtB,KAAA,KAEAlF,EAAA6C,MAAA2C,SACA,QAAA+jD,EAAA5oD,KAAA,KACA,SAAA4oD,EAAAjnD,MAAA,KACA,WAAAsJ,EAAA8O,WAAA,QACA,gBAAA9O,EAAA8O,WAAA,QACA,OAAA6uC,EAAA7oD,IAAA,MACAwE,KAAA,KAEAqJ,IACAvO,EAAAmG,UAAAoI,GAEA0Q,EAAApY,KAAA7G,IAKA,IAAAiV,EAAA,KACA,GAAAgK,EAAAlgB,OAEA,IADAkW,EAAAhU,SAAAmD,cAAA,OACA7H,EAAA,EAAiBA,EAAA0iB,EAAAlgB,OAAkBxC,IACnC0Y,EAAAxP,YAAAwZ,EAAA1iB,IAIA,OAAA0Y,GAIAu0C,YAAAzB,GAIAzrD,EAAAD,QAAA,SAAAiO,GACA,IAAA09B,EAAAkgB,EAAA59C,GAEAA,EAAAy9C,UAAA/f,EAAAwhB,YACAl/C,EAAA+Q,IAAA/B,OAAAmwC,YAAAzhB,EAAAmhB,WACA7+C,EAAAsB,OAAAw9C,kBAAA,WACA9+C,EAAAsB,OAAA89C,eAAA,WACAp/C,EAAAsB,OAAAq9C,6BAAA,EAEA3+C,EAAAwU,UAAAuqC,oBAAA,SAAA7xC,EAAA6K,EAAAo9B,EAAAntB,GAOA,OALAA,EAAAvzB,QAAA,EACA,2BAEA,kCAKAuL,EAAAwU,UAAAwqC,oBAAA,SAAA9xC,EAAA6K,EAAAo9B,EAAAntB,GACA,SAAAA,EAAAvzB,wBC5LAuC,OAAAqoD,SAEAA,OAAAC,WACAD,OAAAC,aAEAD,OAAAC,SAAAC,YAAA,SAAAryC,EAAA6K,EAAA/X,GACA,IAAAlL,EAAA6B,SAAAmD,cAAA,OAEAkG,KAAAhJ,OAAAgJ,MAEAlL,EAAA6J,GAAA,SAAAqB,EAAA3K,MACAP,EAAAyD,MAAAP,MAAA,OACAlD,EAAAyD,MAAAN,OAAA,OACAnD,EAAA0qD,IAAA,OAEA7oD,SAAAD,KAAAyE,YAAArG,GACAuF,KAAAolD,aAAA3qD,EAAA6J,IACAtE,KAAAqlD,SAAA,QACArlD,KAAAslD,QAAA3/C,EAEA,IAAA4/C,EAAAvlD,KAAAwlD,GAAAxlD,KAAAylD,IACAF,EAAAt2C,KAAAtJ,EAEAA,EAAAuE,KAAAzP,EAAA6J,GAAAuO,EAAA6K,GACAjjB,EAAAiH,WAAAxD,MAAAwnD,OAAA,OAEAH,EAAAI,OAAAlrD,EAAA6J,GACAihD,EAAAK,QAAAnrD,EAGA,OAAAuF,KAAAwlD,GAAAxlD,KAAA,gBAAAiP,YAIA,IAAAtS,OAAA,mBAEAkpD,iBAAArsD,UAAA0rD,YAAA,SAAAryC,EAAA6K,EAAA/X,GACAA,KAAAhJ,OAAAgJ,MAEA,IAAAlL,EAAA6B,SAAAmD,cAAA,OACAhF,EAAA6J,GAAA,SAAAqB,EAAA3K,MACAP,EAAAyD,MAAAP,MAAA,OACAlD,EAAAyD,MAAAN,OAAA,OACAnD,EAAA0qD,IAAA,OAEA7oD,SAAAD,KAAAyE,YAAArG,GACAuF,KAAAolD,aAAA3qD,EAAA6J,IAEAtE,KAAAqlD,SAAA,QACArlD,KAAAslD,QAAA3/C,EAEAA,EAAAuE,KAAAzP,EAAA6J,GAAAuO,EAAA6K,GACAjjB,EAAAiH,WAAAxD,MAAAwnD,OAAA,OAKA,OAHAjrD,EAAA,KACAuF,KAAA4E,UAAA,uBAEA5E,KAAAslD,UAIA3tD,EAAAD,QAAA,oBC7DAiF,OAAAmpD,QAEA,SAAAC,GAEA,IAAA1iB,KACA0iB,EAAAC,GAAAC,UAAA,SAAAh/C,GAEA,oBADAA,SAOI,CACJ,IAAAgwB,KAqBA,OApBAj3B,KAAAkmD,KAAA,WACA,GAAAlmD,WAAA1B,aACA,GAAA0B,KAAA2F,OAAAhJ,OAAAgJ,MAAA2uB,OAAAt0B,KAaAi3B,EAAA/0B,KAAA,iBAAAlC,KAAA2F,MAAA3F,KAAA2F,MAAAhJ,OAAAgJ,WAbA,CAEA,IAAAwgD,EAAAxpD,OAAAgJ,MAAAwB,YAAAxK,OAAAypD,MAAAzpD,OAAAypD,MAAAC,mBAAA1pD,OAAAgJ,MACA,QAAAxM,KAAA8N,EACA,QAAA9N,IACAgtD,EAAAl/C,OAAA9N,GAAA8N,EAAA9N,IAEAgtD,EAAAj8C,KAAAlK,MACAiH,EAAAmb,MACA+jC,EAAAxjC,MAAA1b,EAAAmb,MAEA6U,EAAA/0B,KAAAikD,MAOA,IAAAlvB,EAAA78B,OAAA68B,EAAA,GACAA,EA5BA,GAAAoM,EAAAp8B,GACA,OAAAo8B,EAAAp8B,GAAA1M,MAAAyF,SAEA+lD,EAAAO,MAAA,UAAAr/C,EAAA,wCATA,CAsCE6+C,QAKFnuD,EAAAD,QAAA,oBCoCAC,EAAAD,QAAA,SAAAiO,GACA,IAAA4gD,EAlFA,SAAA5gD,GACA,OACA6gD,aAAA,EACA/qB,MAAA,WACAz7B,KAAAwmD,aAAA,GAEAC,gBAAA,WACA,OAAAzmD,KAAA0mD,gBAAA1mD,KAAAwmD,aAEAE,aAAA,WACA,SAAA/gD,EAAAghD,UAAAhhD,EAAAghD,QAAAC,cAEAC,YAAA,SAAAn0C,GACA,OAAAA,GAEA1S,KAAAymD,mBACAzmD,KAAA8mD,WAGAp0C,EAAAq0C,SAAA,GACA/mD,KAAA0mD,eAAAh0C,EAAAs0C,MAAA,IAEAt0C,EAAAs0C,OACAhnD,KAAAy7B,QACAz7B,KAAA8mD,YAEAp0C,EAAAs0C,OAbA,IAeAC,YAAA,SAAAv0C,EAAA7Z,GACA6Z,EAAAs0C,KAAAnuD,GAEAquD,WAAA,SAAAx0C,GACA,OAAA1S,KAAA6mD,YAAAn0C,IAEAy0C,aAAA,SAAA5jC,GAGA,IAFA,IAAA6jC,EAAA7jC,EAAApiB,MAAA,KACAkmD,EAAA1hD,EAAAsB,OAAA0/B,QACA/uC,EAAA,EAAgBA,EAAAwvD,EAAAhtD,OAAkBxC,IAAA,CAClC,IAAAurB,EAAAxd,EAAAyd,YAAAikC,GACA99C,EAAA,EAAA69C,EAAAxvD,GAAA,EACA,IAAA+N,EAAAyZ,aAAA+D,EAAA5Z,IAGA,YAFA89C,EAAAlkC,EAAA5Z,GAKA,OAAA5D,EAAAyZ,aAAAioC,GACA1hD,EAAAsM,QAAAo1C,GAEA,MAGAP,SAAA,WACA,GAAA9mD,KAAAymD,kBAAA,CAEA,IAAAa,GAAA,EACA3hD,EAAA0Z,SAAA,SAAAvd,GACA,GAAAwlD,EAGA,OAFAA,GAAA,OACAtnD,KAAAinD,YAAAnlD,EAAA,KAGA,IAAAylD,EAAA5hD,EAAAgf,eAAA7iB,EAAAwC,IACA,UAAAijD,EAAA,CACA,IAAAC,EAAA7hD,EAAAsM,QAAAs1C,GAAAP,KACAQ,KACAA,IAAArmD,MAAA,MACAqmD,EAAAptD,OAAA,KACA4F,KAAAinD,YAAAnlD,EAAA0lD,EAAAjnD,KAAA,WAEI,CACJ,IAAAknD,EAAA9hD,EAAA2c,UAAAxgB,EAAAwC,IACAtE,KAAAinD,YAAAnlD,EAAA6D,EAAAsM,QAAAw1C,GAAAT,KAAA,QAEGrhD,EAAAsB,OAAA0/B,QAAA3mC,MAEHA,KAAAwmD,aAAA,KAMAkB,CAAA/hD,GACAA,EAAAuhD,WAAA,SAAAx0C,GACA,OAAA6zC,EAAAW,WAAAx0C,IAGA/M,EAAAgiD,iBAAA,SAAApkC,GACA,OAAAgjC,EAAAY,aAAA5jC,IAGA5d,EAAAlK,YAAA,6BAEA,OADA8qD,EAAA9qB,SACA,IAGA91B,EAAAlK,YAAA,2BAEA,OADA8qD,EAAA9qB,SACA,IAGA91B,EAAAlK,YAAA,+BAEA,OADA8qD,EAAA9qB,SACA,IAGA91B,EAAAlK,YAAA,4BAEA,OADA8qD,EAAA9qB,SACA,oBC5GA,SAAAmsB,EAAAjiD,GACA,IAAA09B,KACAwkB,GAAA,EACA,SAAAC,EAAAC,EAAAC,GACAA,EAAA,mBAAAA,IAAA,aAEA3kB,EAAA0kB,KACA1kB,EAAA0kB,GAAA/nD,KAAA+nD,GACA/nD,KAAA+nD,GAAAC,GAGA,SAAAC,EAAAF,GACA1kB,EAAA0kB,KACA/nD,KAAA+nD,GAAA1kB,EAAA0kB,GACA1kB,EAAA0kB,GAAA,MAQA,SAAAG,IACA,QAAAtwD,KAAAyrC,EACA4kB,EAAAlwD,KAAAiI,KAAApI,GAIA,SAAAuwD,EAAAxjD,GACA,IACAA,IACG,MAAAhF,GACHhD,OAAAyI,QAAAkhD,MAAA3mD,IAWA,OAPAgG,EAAAoC,UAAAC,WAAA,SACAojC,iBAAA,yBACA,OACAp6B,aAAA62C,KAEE,GAEF,SAAAljD,EAAAyjD,GACA,GAAAP,EAEAM,EAAAxjD,OAFA,CAMA,IACA0jD,EADAC,EAAAtoD,KAAA26B,KAAA,OAAA36B,KAAA26B,IAAA4tB,WAEAD,IACAD,EAAAroD,KAAA26B,IAAA4tB,WACAvoD,KAAA26B,IAAA6tB,cAAA,QAIA,IAAAC,KACAplB,GACA99B,QAAA,EACAs2B,aAAA,EACAiF,aAAA,EACA4nB,aAAA,EACAzV,kBAAA,SAAAvgC,GACA+1C,EAAA/1C,EAAApO,IAAAoO,IAgBA,QAAA9a,KAhEA,SAAA+wD,GACA,QAAA/wD,KAAA+wD,EACAb,EAAA/vD,KAAAiI,KAAApI,EAAA+wD,EAAA/wD,KAkDAG,KAAAiI,KAAAqjC,GAEAwkB,GAAA,EACA7nD,KAAA4E,UAAA,0BAEAujD,EAAAxjD,GAEA3E,KAAA4E,UAAA,yBAEAsjD,EAAAnwD,KAAAiI,MAGAyoD,EACAzoD,KAAAizC,kBAAAwV,EAAA7wD,IAGAiwD,GAAA,EAEAO,GACApoD,KAAAuF,SAGA+iD,IACAtoD,KAAA26B,IAAA6tB,cAAAH,GACAroD,KAAA26B,IAAAiuB,aAAA,SACA5oD,KAAA26B,IAAAkuB,WACA7oD,KAAA26B,IAAAiuB,aAAA,SACA5oD,KAAA26B,IAAAkuB,cAQAlxD,EAAAD,QAAA,SAAAiO,GACAA,EAAAy8C,YAAAwF,EAAAjiD,qBCzGA,IAAAoB,EAAAvP,EAAA,GAEAG,EAAAD,QAAA,SAAAiO,GAEA,IAAAmjD,EAAA,GACAC,EAAA,GACAC,EAAA,GACAC,EAAA,GAEAC,EAAA,KACAC,GAAA,EACAC,EAAA,KAEAC,GACAC,SAAA,GAEAC,KAEA,SAAAC,IACA,OAAA7jD,EAAAopB,OAAAppB,EAAA4O,OAAA5O,EAAA2uB,MAGA,SAAAm1B,IACA,IAAAC,IAAAptD,SAAA+F,cAAA,sBACAsnD,IAAArtD,SAAA+F,cAAA,6CACAunD,IAAAttD,SAAA+F,cAAA,yBAEA,OADA8mD,EAAAO,IAAAC,IAAAC,KACAjkD,EAAAoL,WAAAyZ,YAAAk/B,GAAAC,GAGA,SAAAE,EAAAl4C,GAKA,GAJAy3C,IACAjuB,aAAAiuB,GACAA,EAAA,MAEAz3C,EAAA,CACA,IAAAm4C,EAAAnkD,EAAAsB,OAAA8iD,iBACAD,KAAA,KACAA,EAAA,IAEAV,EAAA7uB,WAAA,WACA2uB,EAAAc,YAAA1Q,EAAAwQ,GAAAb,GACAliD,EAAA7G,gBAAAspD,MACI7jD,EAAAsB,OAAAgjD,kBAAAjB,IAIJ,SAAAkB,EAAAv4C,GACAA,GACAk4C,GAAA,GACAR,EAAAC,UACAD,EAAA3rD,EAAA6rD,EAAA7rD,EACA2rD,EAAA9rD,EAAAgsD,EAAAhsD,EACA8rD,EAAAC,SAAA,KAGAJ,IACAiB,cAAAjB,GACAA,EAAA,MAEAW,GAAA,GACAR,EAAAC,SAAA,GAIA,SAAAc,EAAAhvD,GAEA,IAAAivD,EAAAZ,IAMA,IAJAP,IAAAE,GAAAiB,GACAH,GAAA,IAGAvkD,EAAAsB,OAAAqjD,aAAAD,EACA,SAGAd,GACA7rD,EAAAtC,EAAA+H,QACA5F,EAAAnC,EAAAgI,UAGA8lD,GAAAmB,GACAH,GAAA,GAIA,SAAA5Q,IAEA,IAAAmQ,IAEA,OADAS,GAAA,IACA,EAGA,IAAA9tD,EAAA2K,EAAA7G,gBAAAspD,KACA7sB,EAAA4sB,EAAA7rD,EAAAtB,EAAAsB,EACA6sD,EAAAhB,EAAAhsD,EAAAnB,EAAAmB,EAEAV,EAAAssD,EAAA,EAAAqB,EAAA7tB,EAAAvgC,EAAAuB,MAAA0rD,EAAA3rD,EAAAtB,EAAAsB,GACAhB,EAAA8tD,EAAAD,EAAAnuD,EAAAwB,OAAAyrD,EAAA9rD,EAAAnB,EAAAmB,GAEAktD,EAAA9kD,EAAAiS,iBAEA8yC,EAAAD,EAAAltD,EACAotD,EAAAF,EAAAG,aACAC,EAAAJ,EAAA7sD,OACAktD,EAAAL,EAAA/sD,EACAqtD,EAAAN,EAAAO,YACAC,EAAAR,EAAA9sD,MAGAjB,IAAAiuD,EACAjuD,EAAA,EACGA,EAAA,IAAAguD,EACHhuD,EAAA,EACGA,EAAA,GAAAguD,EAAAC,GAAAE,EAAA,IACHnuD,EAAA,GAGAG,IAAAkuD,EACAluD,EAAA,EACGA,EAAA,IAAAiuD,EACHjuD,EAAA,EACGA,EAAA,GAAAiuD,EAAAC,GAAAE,IACHpuD,EAAA,GAGA,IAAA2gB,EAAA7X,EAAAsB,OAAAikD,gBAEA1tC,KAAA,IACAA,EAAA,GAEA3gB,GAAA2gB,GAAAurC,EACArsD,GAAA8gB,GAAAurC,GAEAlsD,GAAAH,IAcA,SAAAV,EAAAD,GACA,IAAA0uD,EAAA9kD,EAAAiS,iBAEA/a,EAAA,KACAH,EAAA,KAEAV,IACAa,EAAA4tD,EAAA/sD,EAAA1B,EACAa,EAAAW,KAAAib,IAAAgyC,EAAA9sD,MAAAd,GACAA,EAAAW,KAAAkY,IAAA,EAAA7Y,IAGAd,IACAW,EAAA+tD,EAAAltD,EAAAxB,EACAW,EAAAc,KAAAib,IAAAgyC,EAAA7sD,OAAAlB,GACAA,EAAAc,KAAAkY,IAAA,EAAAhZ,IAGAiJ,EAAA0C,SAAAxL,EAAAH,GA/BAgb,CAAA7a,EAAAH,GAKA,SAAA8tD,EAAAtnD,EAAAioD,EAAAC,GACA,OAAAloD,EAAA4lD,EAAA,GAAA5lD,EAAAkoD,GACA,EACAloD,EAAAioD,EAAArC,GAAA5lD,EAAAkoD,EACA,EACA,EAwBAzlD,EAAAlK,YAAA,0BACAkK,EAAAjK,YAAAY,SAAAD,KAAA,YAAA+tD,GACAzkD,EAAAvK,MAAAkB,SAAAD,KAAA,YAAA+tD,uBC5KAzyD,EAAAD,QAAA,SAAAiO,GAYA,IAXA,IAAA7N,GACAN,EAAA,IACAA,EAAA,IACAA,EAAA,IACAA,EAAA,IACAA,EAAA,IACAA,EAAA,IACAA,EAAA,IACAA,EAAA,KAGAI,EAAA,EAAeA,EAAAE,EAAAsC,OAAoBxC,IACnCE,EAAAF,IACAE,EAAAF,GAAA+N,qBCdA,IAAAkB,EAAArP,EAAA,GACAsP,EAAAtP,EAAA,GAOAurD,EAAA,SAAAsI,GAiCA,OAhCArrD,KAAAsrD,gBAAAD,EACArrD,KAAAurD,aAAA,uBAEAvrD,KAAA1G,OAAA,KACA0G,KAAAwrD,eAEAxrD,KAAAyrD,YAAA,EACAzrD,KAAAuoD,WAAA,OACAvoD,KAAA0rD,OAAA,MACA1rD,KAAA2rD,SAAA,KACA3rD,KAAA4rD,SAAA,KACA5rD,KAAA6rD,WAAA,IAEA7rD,KAAA8rD,UAAA,EACA9rD,KAAA+rD,gBACA/rD,KAAAgsD,YACAhsD,KAAAisD,mBACAjsD,KAAAksD,YAEAlsD,KAAAyrB,QACA0gC,QAAA,oBACAC,SAAA,oBACAC,QAAA,kCACAC,QAAA,2BACAC,aAAA,+BACAjG,MAAA,aACAh+C,MAAA,4CAGAtI,KAAAwsD,mBAAA,GACA1lD,EAAA9G,MAEAA,MAGA+iD,EAAAvpD,WACAizD,mBAAA,SAAA1zD,EAAA2zD,GACA,iBAAA3zD,GACAiH,KAAA0rD,OAAA3yD,QAAAiH,KAAA0rD,OAEA7kD,EAAArM,QAAAzB,EAAA4zD,WACA3sD,KAAA2rD,SAAA5yD,EAAA4zD,SAGA9lD,EAAArM,QAAAzB,EAAAq/C,WACAp4C,KAAA4rD,SAAA7yD,EAAAq/C,WAIAp4C,KAAA0rD,OAAA3yD,EACAiH,KAAA4sD,OAAAF,GAGA,QAAA1sD,KAAA0rD,SACA1rD,KAAA4sD,QAAA,EACA5sD,KAAA6sD,QAAA,GAGA,QAAA7sD,KAAA0rD,SACA1rD,KAAA4sD,QAAA,EACA5sD,KAAA6sD,QAAA,EACA7sD,KAAA2rD,SAAA3rD,KAAA2rD,aACA3rD,KAAA2rD,SAAA,qCAGAmB,OAAA,SAAA1qC,GACA,OAAApiB,KAAA+sD,KACAhL,mBAAA3/B,GAEA0qC,OAAA1qC,IAOAoqC,kBAAA,SAAAzzD,GACAiH,KAAA+sD,OAAAh0D,GAOAi0D,eAAA,SAAAxrC,GACAxhB,KAAAitD,SAAA,iBAAAzrC,IAAArgB,MAAA,KAAAqgB,GAOA0rC,aAAA,WACA,OAAAltD,KAAAwrD,YAAApxD,QAOA+yD,gBAAA,SAAAp0D,GACAiH,KAAA6sD,SAAA9zD,GAOAq0D,sBAAA,SAAAr0D,GACAiH,KAAAqtD,WAAAt0D,GAOAyvD,cAAA,SAAAzvD,EAAAu0D,GACAttD,KAAAyrD,WAAA,QAAA1yD,EACAiH,KAAAuoD,WAAAxvD,EACAiH,KAAAstD,OAEAl/B,OAAA,SAAA7K,EAAA+C,GACAtmB,KAAA4D,cAAA,EACA2f,EAAAxrB,KAAAuuB,GAAA3pB,QACAqD,KAAA4D,cAAA,GASAq/C,WAAA,SAAAsK,EAAA57C,EAAA5Y,GACA,IAAAiH,KAAA4D,aAAA,CACA,IAAAlB,EAAA1C,KAAAwtD,QAAAD,GAEAx0D,KAAA,UACA,IAAA00D,EAAAztD,KAAAvF,IAAAonD,YAAA0L,EAAAvtD,KAAAurD,cACAkC,GAAA,WAAA10D,MAAA00D,GACA97C,GACA3R,KAAA0tD,YAAAH,GAAA,GACAvtD,KAAAwrD,YAAA9oD,GAAA6qD,EACAvtD,KAAAvF,IAAAunD,YAAAuL,EAAAvtD,KAAAurD,aAAAxyD,GACAiH,KAAA+rD,aAAAwB,KACAvtD,KAAA+rD,aAAAwB,GAAA,SAEAvtD,KAAA2tD,WAAAJ,KACAvtD,KAAAwrD,YAAA9qD,OAAAgC,EAAA,GACA1C,KAAAvF,IAAAunD,YAAAuL,EAAAvtD,KAAAurD,aAAA,KAKA55C,GACA3R,KAAA4tD,iBAAAL,GAEAvtD,KAAA6tD,QAAAN,EAAA57C,EAAA5Y,GACA4Y,GAAA3R,KAAAyrD,YAAAzrD,KAAA6oD,SAAA0E,KAEAK,iBAAA,SAAAtpD,KACAupD,QAAA,SAAAvpD,EAAAqN,EAAA5Y,GACA,IAAA+G,EAAA,GACAwsD,EAAAtsD,KAAA2tD,WAAArpD,GAKA,GAJAgoD,IACAxsD,EAAAE,KAAAyrB,OAAA6gC,GACA36C,GAAA,GAEA3R,KAAA4E,UAAA,aAAAN,EAAAqN,EAAA5Y,EAAAuzD,MAEAxsD,EAAAE,KAAAyrB,OAAA9Z,EAAA5Y,EAAA,SAAA+G,EAEAE,KAAAvF,IAAAuF,KAAA8tD,SAAA,IAAAxpD,EAAAxE,GAEAwsD,KAAAyB,SAAA,CACAjuD,GAAAE,KAAAyrB,OAAA6gC,EAAA,SACA,QAAA10D,EAAA,EAAiBA,EAAA00D,EAAAyB,QAAA3zD,OAA4BxC,IAC7C00D,EAAAyB,QAAAn2D,IACAoI,KAAAvF,IAAAuF,KAAA8tD,SAAA,IAAAxpD,EAAA1M,EAAAkI,KAIAiR,SAAA,SAAAzM,GACA,OAAAtE,KAAAvF,IAAAonD,YAAAv9C,EAAAtE,KAAAurD,eAEAoC,WAAA,SAAArpD,GACA,OAAAtE,KAAAgsD,SAAA1nD,IAEAopD,YAAA,SAAAppD,EAAAvL,EAAAg1D,GACAA,IAAAh1D,GAAqBF,MAAAE,EAAAg1D,UAAAz2B,SAAA,WAAiD,OAAAt3B,KAAAnH,MAAAy+B,cACtEt3B,KAAAgsD,SAAA1nD,GAAAvL,GAOAi1D,kBAAA,SAAAT,GACA,UAOA1E,SAAA,SAAA0E,GACA,IAAAvtD,KAAA8rD,WAAA,QAAA9rD,KAAAvF,IAAAwzD,SAAAjuD,KAAAvF,IAAAyzD,IAAA,CAIA,GAHAluD,KAAAvF,IAAA0zD,UAAAnuD,KAAAvF,IAAA0zD,gBAGA,IAAAZ,GAAAvtD,KAAA4sD,OAAA,OAAA5sD,KAAAouD,cACA,GAAApuD,KAAA+rD,aAAAwB,GAAA,SAGA,GADAvtD,KAAAksD,aACAlsD,KAAAguD,kBAAAT,IAAAvtD,KAAA4E,UAAA,qBAAA2oD,EAAAvtD,KAAAksD,WAAA,SACAlsD,KAAAquD,gBAAAruD,KAAAsuD,YAAAf,QAEAc,gBAAA,SAAAjsC,EAAAmrC,GACA,IAAAvtD,KAAA4E,UAAA,kBAAA2oD,EAAAvtD,KAAA+Q,SAAAw8C,GAAAnrC,IAAA,SACApiB,KAAAuuD,UAAAnsC,EAAAmrC,IAEA9lC,UAAA,SAAArF,EAAA9d,GACA,oBAAA8d,EACA,OAAAA,EACA,YAAA9d,EACA,OAAAtE,KAAAwuD,cAAApsC,EAAA,IAEA,IAAAqsC,KACA7f,KACA,QAAAz1C,KAAAipB,EACAA,EAAA3oB,eAAAN,KACAs1D,EAAAvsD,KAAAlC,KAAAwuD,cAAApsC,EAAAjpB,KAAA6G,KAAA6rD,aACAjd,EAAA1sC,KAAA/I,IAKA,OAHAs1D,EAAAvsD,KAAA,OAAAlC,KAAA8sD,OAAAle,EAAAruC,KAAA,OACAP,KAAAuH,OAAAq1C,cACA6R,EAAAvsD,KAAA,gBAAAlC,KAAAuH,OAAAq1C,cACA6R,EAAAluD,KAAA,MAGAiuD,cAAA,SAAApsC,EAAAssC,GACA,oBAAAtsC,EACA,OAAAA,EACA,IAAAqsC,KACA,QAAAt1D,KAAAipB,EACA,GAAAA,EAAA3oB,eAAAN,GAAA,CACA,UAAAA,MAAA6G,KAAAurD,eAAA,QAAAvrD,KAAA0rD,OAAA,SACA+C,EAAAvsD,KAAAlC,KAAA8sD,QAAA4B,GAAA,IAAAv1D,GAAA,IAAA6G,KAAA8sD,OAAA1qC,EAAAjpB,KAEA,OAAAs1D,EAAAluD,KAAA,MAEAouD,cAAA,SAAApT,GACA,IAAAI,EAAA37C,KAAAuH,OAAAo0C,KACA,GAAA37C,KAAA4rD,SACA,QAAAzyD,KAAA6G,KAAA4rD,SACArQ,IAAAI,EAAAiT,aAAArT,GAAAv7C,KAAA8sD,OAAA3zD,GAAA,IAAA6G,KAAA8sD,OAAA9sD,KAAA4rD,SAAAzyD,IACA,OAAAoiD,GAEAgT,UAAA,SAAAM,EAAAtB,GACA,GAAAsB,EAAA,CACA,IAAA7uD,KAAA4E,UAAA,sBAAA2oD,KAAAvtD,KAAA+Q,SAAAw8C,GAAAsB,IAAA,UAAAA,IAAA,SAEAtB,IACAvtD,KAAA+rD,aAAAwB,IAAA,IAAAjzD,MAAAW,WAEA,IAAAsqD,EAAAvlD,KACA8uD,EAAA,SAAA1R,GACA,IAAA2R,KACA,GAAAxB,EACAwB,EAAA7sD,KAAAqrD,QACA,GAAAsB,EACA,QAAA11D,KAAA01D,EACAE,EAAA7sD,KAAA/I,GAEA,OAAAosD,EAAAyJ,YAAAzJ,EAAAnI,EAAA2R,IAEApT,EAAA37C,KAAAuH,OAAAo0C,KAEAsT,EAAAjvD,KAAAsrD,iBAAAtrD,KAAAkvD,MAAAvT,EAAAiT,aAAA5uD,KAAAsrD,kBAAA,YAAAtrD,KAAAkvD,MAAA,eAAAlvD,KAAAvF,IAAAonD,YAAA,cAAAthD,KAAA,SACA4uD,EAAAnvD,KAAA2uD,cAAAM,GAEA,UAAAjvD,KAAA0rD,OACA/P,EAAAyT,OACA7T,IAAA4T,EAAAxT,EAAAiT,aAAAO,GAAAnvD,KAAAynB,UAAAonC,EAAAtB,GACA8B,OAAA,MACA1qD,SAAAmqD,EACAnC,QAAA3sD,KAAA2rD,gBAEG,WAAA3rD,KAAA0rD,OACH/P,EAAAyT,OACA7T,IAAA4T,EACAE,OAAA,OACA1C,QAAA3sD,KAAA2rD,SACAvpC,KAAApiB,KAAAynB,UAAAonC,EAAAtB,GACA5oD,SAAAmqD,SAEG,WAAA9uD,KAAA0rD,OAAA,CACH,IAAA4D,EAAAT,EAAA7uD,KAAAurD,cACAnpC,KACA,QAAAjpB,KAAA01D,EAAAzsC,EAAAjpB,GAAA01D,EAAA11D,UACAipB,EAAApiB,KAAAurD,qBACAnpC,EAAA9d,UACA8d,EAAAmtC,MAEA5T,EAAAyT,OACA7T,IAAA4T,EACAE,OAAA,OACA1C,QAAA3sD,KAAA2rD,SACAhnD,SAAAmqD,EACA1sC,KAAAk2B,KAAAC,WACAj0C,GAAAipD,EACA+B,SACAltC,gBAIA,WAAApiB,KAAA0rD,OAAA,CACA,IAAA/5C,EAAA3R,KAAA+Q,SAAAw8C,GACAhS,EAAA0T,EAAAhvD,QAAA,2BAEAovD,GADAjtC,EAAA,GACA,QAEA,YAAAzQ,EACAyQ,EAAApiB,KAAAynB,UAAAonC,EAAAtB,GACU,WAAA57C,GACV09C,EAAA,SACA9T,KAAA,KAAAA,EAAA96C,OAAA,WAAA8sD,IAEA8B,EAAA,MACAjtC,EAAApiB,KAAAynB,UAAAonC,EAAAtB,GACAhS,KAAA,KAAAA,EAAA96C,OAAA,WAAA8sD,GAIAhS,EAAAv7C,KAAA2uD,cAAApT,GACAI,EAAAyT,OACA7T,MACA8T,SACA1C,QAAA3sD,KAAA2rD,SACAvpC,OACAzd,SAAAmqD,IAIA9uD,KAAA8rD,cAEAsC,YAAA,WACA,GAAApuD,KAAAwrD,YAAApxD,OAAA,CAEA4F,KAAAksD,YACA,IADmB,IAAAsD,GAAA,EACnB53D,EAAA,EAAeA,EAAAoI,KAAAwrD,YAAApxD,OAA2BxC,IAC1C43D,GAAAxvD,KAAAguD,kBAAAhuD,KAAAwrD,YAAA5zD,IACA,IAAA43D,IAAAxvD,KAAA4E,UAAA,wBAAA5E,KAAAksD,WAAA,SAEA,GAAAlsD,KAAA4sD,OACA5sD,KAAAuuD,UAAAvuD,KAAAyvD,oBAEA,IAAA73D,EAAA,EAAgBA,EAAAoI,KAAAwrD,YAAApxD,OAA2BxC,IAC3C,IAAAoI,KAAA+rD,aAAA/rD,KAAAwrD,YAAA5zD,IAAA,CACA,GAAAoI,KAAA2tD,WAAA3tD,KAAAwrD,YAAA5zD,IAAA,SAEA,GADAoI,KAAAquD,gBAAAruD,KAAAsuD,YAAAtuD,KAAAwrD,YAAA5zD,IAAAoI,KAAAwrD,YAAA5zD,IACAoI,KAAA8rD,YAAA,QAAA9rD,KAAAvF,IAAAwzD,QAAAjuD,KAAAvF,IAAAyzD,KAAA,UAIAuB,YAAA,SAAAlC,GAGA,IAFA,IAAAtrD,KACAytD,GAAA,EACA93D,EAAA,EAAcA,EAAAoI,KAAAwrD,YAAApxD,OAA0BxC,IAAA,CACxC,IAAA0M,EAAAtE,KAAAwrD,YAAA5zD,GACA,IAAAoI,KAAA+rD,aAAAznD,KAAAtE,KAAA2tD,WAAArpD,GAAA,CACA,IAAAgM,EAAAtQ,KAAAsuD,YAAAhqD,GACAtE,KAAA4E,UAAA,kBAAAN,EAAAtE,KAAA+Q,SAAAzM,GAAAgM,MACArO,EAAAqC,GAAAgM,EACAo/C,GAAA,EACA1vD,KAAA+rD,aAAAznD,IAAA,IAAAhK,MAAAW,YAEA,OAAAy0D,EAAAztD,EAAA,MAUA0tD,eAAA,SAAAjtD,EAAAktD,GACA5vD,KAAAisD,gBAAAvpD,GAAAktD,GAAA,SAAA/2D,GAA8D,WAAAA,IAO9Dg3D,iBAAA,SAAAntD,GACA1C,KAAAisD,gBAAAvpD,IAAA,GAOA8qD,QAAA,SAAAsC,GACA,IAAAl4D,EAAA,EACA,IAAAA,EAAA,EAAaA,EAAAoI,KAAAwrD,YAAApxD,QACb01D,GAAA9vD,KAAAwrD,YAAA5zD,GADuCA,KAEvC,OAAAA,GAmBAm4D,aAAA,SAAA53D,EAAAmD,GACA0E,KAAAgwD,YAAAhwD,KAAAgwD,cACAhwD,KAAAgwD,UAAA73D,GAAAmD,GAcA20D,oBAAA,SAAAnsC,EAAAosC,EAAAZ,EAAAa,GACA,IAAAC,EAAAtsC,EACAusC,EAAA,SAAAf,GAAA,WAAAA,EAEA,GADAe,GAAArwD,KAAA0tD,YAAA5pC,EAAAwrC,GACAtvD,KAAA,WAAAA,KAAAgwD,UAAAV,KAAAtvD,KAAAgwD,UAAAV,GAAAa,GACA,cAAAnwD,KAAA+rD,aAAAqE,GAEA,QAAApwD,KAAA+rD,aAAAqE,IACApwD,KAAAijD,WAAAn/B,GAAA,GAEA,IAAAwsC,EAAAxsC,EAEA,OAAAwrC,GACA,eACA,aACAY,GAAApsC,IACA9jB,KAAAijD,WAAAn/B,GAAA,GACA9jB,KAAAvF,IAAAuF,KAAA8tD,SAAA,IAAAhqC,EAAAosC,GACApsC,EAAAosC,GAEA,MACA,aACA,cAIA,OAHAlwD,KAAAvF,IAAAunD,YAAAl+B,EAAA9jB,KAAAurD,aAAA,gBACAvrD,KAAAvF,IAAAuF,KAAA8tD,SAAA,IAAAhqC,UACA9jB,KAAA+rD,aAAAqE,GACApwD,KAAA4E,UAAA,iBAAAkf,EAAAwrC,EAAAY,EAAAC,IAGA,QAAAnwD,KAAA+rD,aAAAqE,IACAC,GAAArwD,KAAAvF,IAAAunD,YAAAl+B,EAAA9jB,KAAAurD,aAAA,WACAvrD,KAAA+rD,aAAAqE,YAEApwD,KAAA+rD,aAAAqE,GACApwD,KAAAijD,WAAAiN,GAAA,EAAAlwD,KAAAvF,IAAAonD,YAAA/9B,EAAA9jB,KAAAurD,gBAGAvrD,KAAA4E,UAAA,iBAAA0rD,EAAAhB,EAAAY,EAAAC,KAQAnB,YAAA,SAAAzJ,EAAAnI,EAAA94C,GACA,IAAAq3C,EAAA37C,KAAAuH,OAAAo0C,KAEA,GAAAh/C,OAAA27C,KAAA,CACA,IAAAiY,EAEA,IACAA,EAAAjY,KAAA31B,MAAAy6B,EAAAvB,OAAAC,cACI,MAAAn8C,GAGJy9C,EAAAvB,OAAAC,aAAA1hD,SACAm2D,MAIA,GAAAA,EAAA,CACA,IAAAjB,EAAAiB,EAAAjB,QAAAtvD,KAAA+Q,SAAAzM,IAAA,UACAwf,EAAAysC,EAAAzsC,KAAAxf,EAAA,GACA4rD,EAAAK,EAAAL,KAAA5rD,EAAA,GAGA,OAFAihD,EAAA0K,oBAAAnsC,EAAAosC,EAAAZ,EAAAiB,QACAhL,EAAAiL,kBAKA,IAAAz0D,EAAA4/C,EAAAuC,OAAA,OAAAd,EAAAvB,QACA,IAAA9/C,EAAA,OAAAiE,KAAAywD,YAAAnsD,GACA,IAAAosD,EAAA/U,EAAAiC,MAAA,gBAAA7hD,GACA,IAAA20D,EAAAt2D,OAAA,OAAA4F,KAAAywD,YAAAnsD,GAEA,QAAA1M,EAAA,EAAeA,EAAA84D,EAAAt2D,OAAexC,IAAA,CAC9B,IAAAu4D,EAAAO,EAAA94D,GACA03D,EAAAa,EAAA7xD,aAAA,QACAwlB,EAAAqsC,EAAA7xD,aAAA,OACA4xD,EAAAC,EAAA7xD,aAAA,OAEAinD,EAAA0K,oBAAAnsC,EAAAosC,EAAAZ,EAAAa,GAEA5K,EAAAiL,kBAEAC,YAAA,SAAAnsD,GACA,GAAAA,EACA,QAAA1M,EAAA,EAAkBA,EAAA0M,EAAAlK,OAAexC,WACjCoI,KAAA+rD,aAAAznD,EAAA1M,KAEA44D,eAAA,WACAxwD,KAAA8rD,WAAA9rD,KAAA8rD,aAEA,QAAA9rD,KAAAvF,IAAAwzD,QAAAjuD,KAAAvF,IAAAyzD,MAAAluD,KAAAwrD,YAAApxD,QACA4F,KAAA6oD,WACA7oD,KAAA4E,UAAA,0BACA5E,KAAAwrD,YAAApxD,QACA4F,KAAA4E,UAAA,kBAYAsF,KAAA,SAAAymD,GACA3wD,KAAAvF,IAAAk2D,EACA3wD,KAAAvF,IAAAm2D,UACA5wD,KAAAvF,IAAAm2D,SAAA5wD,OAIA6wD,iBAAA,SAAA9tD,GACA/C,KAAAvE,YAAA,gBAAAsH,IAEA+tD,YAAA,SAAA/3D,KAEAg4D,yBAAA,SAAAC,GACAhxD,KAAAvE,YAAA,sBAAAu1D,IASAC,cAAA,SAAA/H,EAAAgI,GACAhI,KAAA,IAEAlpD,KAAAkvD,MAAAgC,IAAA,IAAA52D,MAAAW,UACA+E,KAAAmxD,cAAA,EAEAnxD,KAAAoxD,cAAA,EAEApxD,KAAAvE,YAAA,yBAAAqoB,EAAAwrC,EAAAY,EAAAmB,GACArxD,KAAAsxD,gBAAAxtC,EAAAwrC,EAAAY,EAAAmB,KAEArxD,KAAAvE,YAAA,wBACAuE,KAAAuxD,aAGA,IAAApnD,EAAAnK,KACArD,OAAAqtD,YAAA,WACA7/C,EAAAqnD,cACGtI,IAQHoI,gBAAA,SAAAxtC,EAAAwrC,EAAAY,EAAAmB,GACA,mBAAA/B,IACAtvD,KAAAmxD,cAAA,GACA,IAUAI,SAAA,WAKA,OAJAvxD,KAAAmxD,eACAnxD,KAAAmxD,cAAA,EACAnxD,KAAAwxD,eAEA,GAMAC,WAAA,SAAAlW,EAAA52C,GACA,IAAAg3C,EAAA37C,KAAAuH,OAAAo0C,KACA,GAAA37C,KAAAoxD,aACA,SAEApxD,KAAAoxD,cAAA,EAOAzV,EAAAljD,IAAA8iD,EAAA52C,IASA+sD,GAAA,SAAA5zD,GACA,OAAAA,EAAA4D,WAAA5D,EAAA4D,WAAA+7C,UACA,IAQAkU,GAAA,SAAAnrD,GAEA,IADA,IAAAtC,KACAtM,EAAA,EAAeA,EAAA4O,EAAApM,OAAgBxC,IAC/BsM,EAAAtM,GAAAoI,KAAA0xD,GAAAlrD,EAAA5O,IAEA,OAAAsM,GAMAstD,WAAA,WACA,IAAA7V,EAAA37C,KAAAuH,OAAAo0C,KACAxxC,EAAAnK,KACA4xD,EAAA5xD,KAAAvF,IAAAonD,YAAA,aACAtG,EAAAv7C,KAAAsrD,gBAAA3P,EAAAiT,aAAA5uD,KAAAsrD,kBAAA,YAAAtrD,KAAAkvD,MAAA,eAAA0C,GAAArxD,KAAA,KACAg7C,IAAAt7C,QAAA,oBACAD,KAAAyxD,WAAAlW,EAAA,SAAA6B,GACA,IAAAyU,EAAAlW,EAAAiC,MAAA,aAAAR,GACAjzC,EAAA1P,IAAAunD,YAAA,YAAA73C,EAAAunD,GAAAG,EAAA,KAEA,IAAAC,EAAAnW,EAAAiC,MAAA,WAAAR,GACA,GAAA0U,EAAA13D,OAAA,CACA+P,EAAAvG,cAAA,EAEA,QAAAhM,EAAA,EAAiBA,EAAAk6D,EAAA13D,OAAexC,IAAA,CAChC,IAAAm6D,EAAAD,EAAAl6D,GAAA0G,aAAA,UACAgG,EAAAwtD,EAAAl6D,GAAA0G,aAAA,MACAgF,EAAAwuD,EAAAl6D,GAAA0G,aAAA,UACA,OAAAyzD,GACA,eACA5nD,EAAAvF,UAAA,kBAAAktD,EAAAl6D,GAAA0M,EAAAhB,IACA,MACA,cACA6G,EAAAvF,UAAA,kBAAAktD,EAAAl6D,GAAA0M,EAAAhB,IACA,MACA,cACA6G,EAAAvF,UAAA,kBAAAktD,EAAAl6D,GAAA0M,EAAAhB,KAKA6G,EAAAvG,cAAA,EAGAuG,EAAAinD,cAAA,EACAjnD,EAAA,QAIAtC,WAAA,WACA7H,KAAA4E,UAAA,gBACA5E,KAAAkF,kBAEAlF,KAAAwrD,eACAxrD,KAAA+rD,gBACA/rD,KAAAgsD,YACAhsD,KAAA2rD,SAAA,KACA3rD,KAAA4rD,SAAA,KACA5rD,KAAAvF,IAAA,OAOA9C,EAAAD,QAAAqrD,mBC1tBA,IAAAl8C,EAAArP,EAAA,GA0BA,SAAAw6D,EAAAC,EAAA3tD,EAAAhB,EAAAvK,GACA,IAAAqpB,EAAA6vC,EAAA7vC,MAAApiB,KAAAo9C,IAAAC,eAAA4U,EAAAvwD,YACA2hC,GACAjjB,IAAApgB,KAAAgvC,QACAkjB,QAAAlyD,KAAAof,cAEA,SAAArmB,IACAsqC,EAAAjjB,IAAApgB,KAAAmyD,QACA9uB,EAAA6uB,QAAAlyD,KAAA6e,cAEAwkB,EAAA6uB,QAAAn6D,KAAAiI,KAAAsE,KAEA8d,EAAA9d,KACA++B,EAAAjjB,IAAAroB,KAAAiI,KAAAoiB,IAGA,SAAAgwC,EAAAH,EAAA3tD,EAAAhB,EAAAvK,GACA,IAAAsqC,GACAlH,OAAAn8B,KAAAy8B,WACAy1B,QAAAlyD,KAAAof,cAEA,SAAArmB,IACAsqC,EAAA,OAAArjC,KAAAqyD,WACAhvB,EAAA6uB,QAAAlyD,KAAA6e,cAEAwkB,EAAA6uB,QAAAn6D,KAAAiI,KAAAsE,IACA++B,EAAA,OAAAtrC,KAAAiI,KAAAsE,GASA3M,EAAAD,QANA,SAAAiO,EAAA2sD,GACAA,EAAA72D,YAAA,iBAAAoL,EAAAzN,KAAA44D,EAAArsD,IACA2sD,EAAA72D,YAAA,iBAAAoL,EAAAzN,KAAAg5D,EAAAzsD,IACA2sD,EAAA72D,YAAA,iBAAAoL,EAAAzN,KAAAg5D,EAAAzsD,sBC1DA,IAAA4sD,EAAA/6D,EAAA,IACAqC,EAAArC,EAAA,GACAi6B,EAAAj6B,EAAA,GAyXAG,EAAAD,QAvXA,SAAAiO,GAsBA,IAAA6sD,EApBA7sD,EAAAo9C,cAAAvrD,EAAA,IA0UA,IAAAi7D,KAEA9sD,EAAAirD,SAAA,SAAA8B,GACA/sD,EAAA0tB,QAAArzB,KAAA26B,IAAA,gEAEA+3B,EAAAjG,mBAAA,WACAiG,EAAApH,mBAAA,GAAAoH,EAAApH,gBAAAhsD,QAAA,6BACAozD,EAAAC,iBAAAD,EAAApH,gBACAoH,EAAAnrD,OAAAvH,KACA0yD,EAAAjnC,QACA0gC,QAAA,gBACAxlC,MAAA,gBACAylC,SAAA,iBACAC,QAAA,gBACAC,QAAA,gBACAhG,MAAA,cACAh+C,MAAA,IAGAoqD,EAAA5E,UAAA,6DAxUA,SAAAnoD,EAAA+sD,GACAA,EAAA9J,aAAA,SAAA7vD,GACA,IAAA65D,EAAAF,EAAAE,UACAF,EAAAG,aACAD,EAAAF,EAAAG,aACA9G,aAAA2G,EAAA3G,aACAC,SAAA0G,EAAA1G,SACAR,YAAAkH,EAAAlH,cAIA,IAAAsH,EAAAF,EAAA75D,GACA+5D,IACAA,EAAAF,EAAA75D,IACAgzD,gBACAC,YACAR,iBAGAkH,EAAA3G,aAAA+G,EAAA/G,aACA2G,EAAA1G,SAAA8G,EAAA9G,SACA0G,EAAAlH,YAAAsH,EAAAtH,YACAkH,EAAAE,QACAF,EAAAG,WAAA95D,GAGAy5D,EAAAE,EAAA1D,YACA0D,EAAA1D,YAAA,WACA,IAAA5R,EAEAA,EADA,GAAAjiD,UAAAf,OACAe,UAAA,GAGAA,UAAA,GAEA,IAAApC,EAAA25D,EAAAG,WACAE,EAAA3V,EAAA4V,SAIAj6D,EAFA,QAAAiH,KAAA0rD,QACA,GAAAqH,EAAAzzD,QAAA,oBACA,QAEA,QAGAyzD,EAAAzzD,QAAA,SAAAyzD,EAAAzzD,QAAA,SACA,QAEA,QAGAozD,EAAA9J,aAAA7vD,GAEA,IAAAmL,EAAAsuD,EAAAj4D,MAAAm4D,EAAAv3D,WAEA,OADAu3D,EAAA9J,aAAA7vD,GACAmL,GAGAwuD,EAAApE,YAAA3oD,EAAAvM,KAAA,SAAAkL,EAAAoqD,GACA,IAAAh8C,EAEAA,EADA,SAAAggD,EAAAG,WACA7yD,KAAAof,aAAA9a,GAAAtE,KAAAiS,QAAA3N,IAAuDA,MAEvDtE,KAAA6e,aAAAva,GAAAtE,KAAA8e,QAAAxa,IAAuDA,MAEvDoO,EAAA/M,EAAA7L,KAAA4Y,GAEA,IAAA0P,KACA,QAAAjpB,KAAAuZ,EACA,QAAAvZ,EAAAs2C,OAAA,MACA,IAAA52C,EAAA6Z,EAAAvZ,GACAU,EAAAQ,OAAAxB,GACAupB,EAAAjpB,GAAA6G,KAAAma,UAAA8iC,WAAApkD,GAEAupB,EAAAjpB,GADA,OAAAN,EACA,GAEAA,EAGA,IAAAy6C,EAAAtzC,KAAAyyC,sBAAA//B,GAUA,OATA4gC,EAAAX,YACAjgC,EAAAF,WAAA,GACAE,EAAAD,SAAA,IAEA6gC,EAAAV,UACAlgC,EAAAJ,SAAA,GACAI,EAAAD,SAAA,IAEA2P,EAAAswC,EAAAnH,cAAAvrD,KAAA6hD,YAAAv9C,EAAAouD,EAAAnH,cACAnpC,GACGzc,IAgPH5N,KAAAiI,KAAA2F,EAAA+sD,GA7OA,SAAA/sD,EAAA+sD,GACA/sD,EAAAstD,WAAAttD,EAAAvM,KAAA,SAAAi5C,EAAAC,GACA,SAAAogB,EAAAG,WACA7yD,KAAAkzD,aAAA7gB,EAAAC,GAEAtyC,KAAAmzD,aAAA9gB,EAAAC,IACGtyC,MAEH2F,EAAAytD,WAAA,SAAAC,EAAA9wD,GACA,SAAAmwD,EAAAG,YACAltD,EAAAyZ,aAAAi0C,KAGA1tD,EAAAsM,QAAAohD,GACA9T,qBAAAh9C,EACAoD,EAAAm7B,YAAAuyB,KAIA1tD,EAAA2tD,aAAA,SAAAD,EAAAv1D,KAEA6H,EAAA4tD,eAAA,SAAAjvD,EAAAsN,GACAA,EAAA4hD,eACAd,EAAA9J,aAAA,SACA5oD,KAAAiS,QAAA3N,GAAA3J,OAAAiX,EAAA4hD,aACAd,EAAAzP,WAAA3+C,GAAA,kBACAtE,KAAAiS,QAAA3N,GAAAkvD,eAIAxzD,KAAA26B,IAAA+3B,GAgNA36D,KAAAiI,KAAA2F,EAAA+sD,GA7MA,SAAA/sD,EAAA+sD,GACA,SAAAe,EAAAnvD,GAIA,IAHA,IAAA6nD,EAAAuG,EAAAlH,YAAA/qD,QACAizD,GAAA,EAEA97D,EAAA,EAAiBA,EAAAu0D,EAAA/xD,SAAAs4D,EAAA3G,aAAAznD,GAA4C1M,IAC7Du0D,EAAAv0D,IAAA0M,IACA,YAAAqB,EAAAk8C,YAAAv9C,EAAA,0BACAovD,GAAA,GAEAhB,EAAAzP,WAAA3+C,GAAA,IAGA,OAAAovD,EAgBAjB,EAAAvwD,KAAAlC,KAAAvE,YAAA,0BAAA6I,EAAAsN,GACA8gD,EAAA9J,aAAA,SACA8J,EAAAzP,WAAA3+C,GAAA,iBAEAmuD,EAAAvwD,KAAAlC,KAAAvE,YAAA,6BAAA6I,EAAAsN,GACA8gD,EAAA9J,aAAA,SACA8J,EAAAzP,WAAA3+C,GAAA,GAEAqB,EAAA4tD,eAAAjvD,EAAAsN,MAGA,IAAA+hD,EAAAn8D,EAAA,IACAo8D,KAEAnB,EAAAvwD,KAAAlC,KAAAvE,YAAA,8BAAA6I,EAAAsN,GACA,OAAAjM,EAAAsB,OAAA4sD,iBAIAD,EAAAtvD,IACAqpB,MAAAgmC,EAAAr0C,gBAAA3Z,EAAArB,GACAsoB,MAAA+mC,EAAAz0C,gBAAAvZ,EAAArB,KAEA,MAGAmuD,EAAAvwD,KAAAlC,KAAAvE,YAAA,6BAAA6I,EAAAsN,GAKA,GAJA8gD,EAAA9J,aAAA,UAGA6K,EAAAnvD,GACA,CAGA,GAAAqB,EAAAsB,OAAA4sD,gBAAAD,EAAAtvD,GAAA,CACA,IAAAwvD,EAAApB,EAAAnK,WACAmK,EAAAlK,cAAA,OAEA,IAAAuL,EAAAH,EAAAtvD,GACA,QAAA1M,KAAAm8D,EAAApmC,MACA8lC,EAAA77D,IACA86D,EAAAzP,WAAArrD,GAAA,aAIA,QAAAA,KADA86D,EAAA9J,aAAA,SACAmL,EAAAnnC,MACA6mC,EAAA77D,IACA86D,EAAAzP,WAAArrD,GAAA,aAGAg8D,EAAAtvD,GAAA,KAEA,OAAAwvD,GACApB,EAAAtE,cAEAsE,EAAA9J,aAAA,SAEA8J,EAAAlK,cAAAsL,GAIApB,EAAAzP,WAAA3+C,GAAA,aAEA,OAAAouD,EAAAnK,YAAAmK,EAAA9F,QACA8F,EAAAtE,kBAIAqE,EAAAvwD,KAAAlC,KAAAvE,YAAA,6BAAA6I,EAAAsN,GACA8gD,EAAA9J,aAAA,SACA8J,EAAAzP,WAAA3+C,GAAA,MAEAmuD,EAAAvwD,KAAAlC,KAAAvE,YAAA,0BAAA6I,EAAAsN,GACA8gD,EAAA9J,aAAA,SACA8J,EAAAzP,WAAA3+C,GAAA,iBAEAmuD,EAAAvwD,KAAAlC,KAAAvE,YAAA,6BAAA6I,EAAAsN,GACA8gD,EAAA9J,aAAA,UAEA6K,EAAAnvD,IAIAouD,EAAAzP,WAAA3+C,GAAA,gBAEAmuD,EAAAvwD,KAAAlC,KAAAvE,YAAA,wBAAA6I,EAAA3J,GACAgL,EAAA4tD,eAAAjvD,EAAAqB,EAAAsM,QAAA3N,OAGA,IAAAqpB,EAAA,KACAf,EAAA,KACA6lC,EAAAvwD,KAAAlC,KAAAvE,YAAA,0BAAAoV,EAAAC,GACA,GAAA4hD,EAAA5G,UAAA,CAEA,IAAA3oC,EAAAxd,EAAAyd,YAAAtS,GACA,GAAAqS,EAAA/oB,OAAA,CACAuzB,QAEA,QAAA/1B,EAAA,EAAmBA,EAAAurB,EAAA/oB,OAAqBxC,IAAA,CACxC,IAAAkK,EAAA9B,KAAAiS,QAAAkR,EAAAvrB,IACA+1B,EAAA7rB,EAAAwC,IAAAxC,GAIA,IACAkyD,EAtHA,SAAAthD,GACA,IAAAka,KASA,OAPAla,EAAAsM,UACA4N,IAAA7nB,OAAA2N,EAAAsM,UAEAtM,EAAAuM,UACA2N,IAAA7nB,OAAA2N,EAAAuM,UAGA2N,EA4GAqnC,CADAj0D,KAAAiS,QAAAnB,IAGA,GAAAkjD,EAAA55D,OAGA,IAFAwyB,QAEAh1B,EAAA,EAAmBA,EAAAo8D,EAAA55D,OAAsBxC,IAAA,CACzC,IAAAykB,EAAArc,KAAA8e,QAAAk1C,EAAAp8D,IACAg1B,EAAAvQ,EAAA/X,IAAA+X,OAKAq2C,EAAAj3D,YAAA,kCACAkyB,GAAAf,KACAjnB,EAAAy8C,YAAA,WACA,QAAA99C,KAAAqpB,EACAhoB,EAAAspC,WAAAthB,EAAArpB,OAGA,QAAAA,KAAAsoB,EACAjnB,EAAAuuD,WAAAtnC,EAAAtoB,OAEAqpB,EAAA,KACAf,EAAA,OAEAe,EACAhoB,EAAAg1B,IAAAiuB,aAAA,SAEAjjD,EAAAg1B,IAAAiuB,aAAA,YAKA8J,EAAAj3D,YAAA,iCACA,IAAA8/C,EAAAv7C,KAAA2yD,iBACA,WAAA3yD,KAAA0rD,OAAA,CACA,IAAA3yD,EAAAiH,KAAA6yD,WAAApjB,OAAA,EAAAzvC,KAAA6yD,WAAAz4D,OAAA,GAEAmhD,IAAA4Y,UAAA,EAAA5Y,EAAAj8C,QAAA,QAAAi8C,EAAAj8C,QAAA,KAAAi8C,EAAAnhD,QAEA4F,KAAAsrD,gBAAA/P,GAAA,KAAAA,EAAA96C,OAAA,WAAA1H,OAEAiH,KAAAsrD,gBAAA/P,EAAA51C,EAAAg2C,KAAAiT,aAAArT,GAAA,cAAAv7C,KAAA6yD,WAGA,YA2BA96D,KAAAiI,KAAA2F,EAAA+sD,GAEAA,EAAAj3D,YAAA,wBAjWA,SAAAkK,EAAA+sD,UACAA,EAAAnrD,cACAmrD,EAAA9J,oBACA8J,EAAApE,YACAoE,EAAA1D,YAAAwD,SAEA7sD,EAAAg1B,WACAh1B,EAAAstD,kBACAttD,EAAAytD,kBACAztD,EAAA2tD,oBACA3tD,EAAA4tD,eAEA9hC,EAAAlrB,QAAAksD,EAAA,SAAA9yD,GACAgG,EAAA/J,YAAA+D,KAEA8yD,KAmVA2B,CAAAzuD,EAAA+sD,KAEAH,EAAA5sD,EAAA+sD,IAGA/sD,EAAAk8C,YAAA,SAAAv9C,EAAAnM,GAEA,OADA6H,KAAAq0D,WAAAr0D,KAAAq0D,aACAr0D,KAAAq0D,SAAA/vD,IAAAtE,KAAAq0D,SAAA/vD,GAAAnM,GAAA6H,KAAAq0D,SAAA/vD,GAAAnM,GACA,IAEAwN,EAAAq8C,YAAA,SAAA19C,EAAAnM,EAAAU,GACAmH,KAAAq0D,WAAAr0D,KAAAq0D,aACAr0D,KAAAq0D,SAAA/vD,KAAAtE,KAAAq0D,SAAA/vD,OACAtE,KAAAq0D,SAAA/vD,GAAAnM,GAAAU,mBC7RAlB,EAAAD,SACA48D,cA3FA,SAAAn8D,EAAAwN,GACA,IAAAmK,EAAAnK,EAAAiL,aAAAzY,GAEAo8D,EACA,SAAAjwD,EAAAmS,GAEA,IAAA8pB,EAAA9pB,EAAA+9C,YAEA5iD,EAAA9B,EAAA+B,QAAAvN,GACA,GAAAsN,GAAA9B,EAAAjS,UAAAyG,GACA,QAAA1M,EAAA,EAAmBA,EAAA2oC,EAAAnmC,OAAoBxC,IACvC2oC,EAAA3oC,GAAA68D,YAAA7iD,IARA2iD,EAWA,SAAA99C,GAEA,IADA,IAAAi+C,EAAAj+C,EAAA+9C,YACA58D,EAAA,EAAkBA,EAAA88D,EAAAt6D,OAAsBxC,IACxC88D,EAAA98D,GAAA0Q,QAGA,IAAA8Z,EAAAtS,EAAA+W,kBAEA,IAAAjvB,EAAA,EAAkBA,EAAA88D,EAAAt6D,OAAsBxC,IACxC88D,EAAA98D,GAAA+8D,aAAAvyC,IAKA,SAAAwyC,EAAAjvD,GAEA,QADAA,EAAAoC,UAAAC,WAAA,SACA+I,SAAA,eAAAC,aAOAlB,EAAArU,YAAA,0BAAA6I,EAAAsN,EAAA09C,GACA,IAAAsF,EAAAjvD,GAAA,CAIA,IAAA8Q,EAAA9Q,EAAAoC,UAAAC,WAAA,UAAA+O,cAAA5e,GAEAse,IACAnS,GAAA,QAAAgrD,GAAA,UAAAA,GAKAx/C,EAAAlL,UAAA,uBAAAgN,EAAAtN,KACAiwD,EAAA3iD,EAAAtN,GAAAmS,GACA3G,EAAAlL,UAAA,sBAAAgN,EAAAtN,OANAwL,EAAAlL,UAAA,yBACA2vD,EAAA99C,GACA3G,EAAAlL,UAAA,6BAWAkL,EAAArU,YAAA,wBACAkK,EAAAJ,WAGAuK,EAAArU,YAAA,yBACAkK,EAAAJ,WASAuK,EAAArU,YAAA,sBAAAoV,EAAAC,GAOA,GAFAhB,EAAAlL,UAAA,oBAAAiM,EAAAC,KAEA8jD,EAAAjvD,GAAA,CAGA,IAAA8Q,EAAA9Q,EAAAoC,UAAAC,WAAA,UAAA+O,cAAA5e,IAhBA,SAAAooC,EAAA1vB,EAAAC,EAAAc,GACA,QAAAha,EAAA,EAAiBA,EAAA2oC,EAAAnmC,OAAoBxC,IACrC2oC,EAAA3oC,GAAAi9D,UAAAhkD,EAAAC,GAeAgkD,CAAAr+C,EAAA+9C,YAAA3jD,EAAAC,EAAAhB,EAAA+B,QAAAf,IACAyjD,EAAAzjD,EAAA2F,uBCvBA9e,EAAAD,QA7DA,SAAAoY,GACA,IAAAilD,EAAA,KAEAC,EAAAllD,EAAA4T,iBAkBA,OAjBA5T,EAAA4T,iBAAA,SAAApf,GAIA,OAHAywD,GAAAzwD,IACAywD,EAAA,MAEAC,EAAAz6D,MAAAyF,KAAA7E,YAIA2U,EAAArU,YAAA,sBAAAoV,EAAAC,GACAhB,EAAA0iC,iBAAA3hC,GACAf,EAAAkV,OAAA,WACAlV,EAAAyiC,SAAA1hC,GACAf,EAAAhR,OAAAgS,QAMAhS,OAAA,SAAAwF,GACA,GAAAA,EAAA,CAEA,GAAAywD,GAAAzwD,EACA,OAAAywD,EAEA,IAAA/0D,KAAA+hB,gBACA/hB,KAAA4E,UAAA,kBAAAN,IACA,SAIAtE,KAAAuyC,WAEAwiB,EAAAzwD,EAEAtE,KAAA+hB,gBACA/hB,KAAA4V,QAAAtR,GACAtE,KAAA4E,UAAA,iBAAAN,KAGA,OAAAywD,GAEAviB,cAAA,WACA,OAAAuiB,GAEAxiB,SAAA,SAAAjuC,IACAA,KAAAywD,KAGAA,EAAA,KACA/0D,KAAA+hB,gBACA/hB,KAAA4V,QAAAtR,GACAtE,KAAA4E,UAAA,mBAAAN,0BCxDA,IAAAuC,EAAArP,EAAA,GAyCAG,EAAAD,QAtCA,WACA,OACAu9D,aAAA,WACA,OAAAj1D,KAAAwtB,MAAA2uB,WAAA30B,SAGA1I,QAAA,SAAAxa,GACA,OAAAtE,KAAAwtB,MAAA2uB,WAAAtqC,QAAAvN,IAGA64C,SAAA,WACA,OAAAn9C,KAAAwtB,MAAA2uB,WAAAp0B,YAGAlJ,aAAA,SAAAva,GACA,OAAAtE,KAAAwtB,MAAA2uB,WAAAhrC,OAAA7M,IAGA6tD,QAAA,SAAA91C,GACA,OAAArc,KAAAwtB,MAAA2uB,WAAAp1B,QAAA1K,IAGA63C,WAAA,SAAA5vD,EAAA8d,GACAvb,EAAArM,QAAA4nB,KACAA,EAAApiB,KAAA8e,QAAAxa,IACAtE,KAAAwtB,MAAA2uB,WAAAxpC,WAAArO,EAAA8d,IAGAiwC,WAAA,SAAA/tD,GACA,OAAAtE,KAAAwtB,MAAA2uB,WAAAz1B,WAAApiB,IAGA4uD,aAAA,SAAA7gB,EAAAC,GACA,OAAAtyC,KAAAwtB,MAAA2uB,WAAAn1B,SAAAqrB,EAAAC,uBCpCA,IAAAzrC,EAAArP,EAAA,GAyJAG,EAAAD,QAvJA,WACA,OACAua,QAAA,SAAA3N,GACAtE,KAAAqzB,OAAA/uB,EAAA,sCACA,IAAAoO,EAAA1S,KAAAwtB,MAAAC,WAAA5b,QAAAvN,GAEA,OADAtE,KAAAqzB,OAAA3gB,EAAA,qBAAApO,GACAoO,GAEA8zB,cAAA,SAAA7e,EAAAC,GACA,IAAAluB,EAAAsG,KAAAwtB,MAAAC,WAAA1F,WAEA7jB,KAEA,GAAAyjB,GAAAC,EAEG,CACHD,OAAA,IACAC,MAAAC,IACA,QAAA/uB,EAAA,EAAkBA,EAAAY,EAAAU,OAActB,IAAA,CAChC,IAAA4Z,EAAAhZ,EAAAZ,IACA4Z,EAAAF,WAAAoV,IAAAlV,EAAAJ,SAAAqV,GACAzjB,EAAAhC,KAAAwQ,SAPAxO,EAAAxK,EAUA,OAAAwK,GAEAkb,aAAA,SAAA9a,GACA,OAAAtE,KAAAwtB,MAAAC,WAAAtc,OAAA7M,IAEA2qC,WAAA,SAAA3qC,EAAAsN,GACA/K,EAAArM,QAAAoX,OAAA5R,KAAAiS,QAAA3N,IACAtE,KAAAwtB,MAAAC,WAAA9a,WAAArO,EAAAsN,GACA5R,KAAAof,aAAA9a,IACAtE,KAAA8gC,YAAAx8B,IAEA0qC,QAAA,SAAAp9B,EAAAtO,EAAAiG,GAQA,OAPA1C,EAAArM,QAAAoX,EAAAtN,MACAsN,EAAAtN,GAAAuC,EAAA7L,OAEA6L,EAAArM,QAAA8I,OAAAtD,KAAAsiB,UAAA1Q,IAAA,GACA5R,KAAAof,aAAA9b,OAAA,GACAtD,KAAAqiB,UAAAzQ,EAAAtO,GAEAtD,KAAAwtB,MAAAC,WAAA1G,QAAAnV,EAAArI,EAAAjG,IAEAm5B,WAAA,SAAAn4B,GACA,OAAAtE,KAAAwtB,MAAAC,WAAA/G,WAAApiB,IAEA4wD,aAAA,WACA,OAAAl1D,KAAAwtB,MAAAC,WAAAjG,SAEA2tC,oBAAA,WACA,OAAAn1D,KAAAwtB,MAAAC,WAAAzX,gBAEAo/C,aAAA,SAAA9wD,GACA,OAAAtE,KAAAwtB,MAAAC,WAAAzJ,eAAA1f,IAEAstC,mBAAA,SAAAttC,GAEA,OADAtE,KAAAqzB,OAAA/uB,EAAA,oBACAtE,KAAAwtB,MAAAC,WAAAjX,aAAAlS,IAEA+a,SAAA,SAAAkE,EAAAjgB,EAAAgjB,GACA,OAAAtmB,KAAAwtB,MAAAC,WAAA7J,SAAA/c,EAAAzN,KAAAmqB,EAAA+C,GAAAtmB,MAAAsD,IAEA0e,WAAA,SAAArd,EAAA0wD,EAAA/uC,GACA,OAAAtmB,KAAAwtB,MAAAC,WAAAzL,WAAAnb,EAAAzN,KAAAuL,EAAA2hB,GAAAtmB,MAAAq1D,IAEAlC,aAAA,SAAA9gB,EAAAC,GACAtyC,KAAAwtB,MAAAC,WAAAzG,SAAAqrB,EAAAC,GACA,IAAA5/B,EAAA1S,KAAAwtB,MAAAC,WAAA5b,QAAAygC,GAEA1lB,KAEAla,EAAAsM,UACA4N,IAAA7nB,OAAA2N,EAAAsM,UAEAtM,EAAAuM,UACA2N,IAAA7nB,OAAA2N,EAAAuM,UAGA,QAAArnB,EAAA,EAAiBA,EAAAg1B,EAAAxyB,OAAkBxC,IAAA,CACnC,IAAAykB,EAAArc,KAAA8e,QAAA8N,EAAAh1B,IACAykB,EAAAzhB,QAAAy3C,IACAh2B,EAAAzhB,OAAA03C,GAEAj2B,EAAA1hB,QAAA03C,IACAh2B,EAAA1hB,OAAA23C,KAIAgjB,mBAAA,SAAA1jD,GACA,OAAA5R,KAAAwtB,MAAAC,WAAAhL,mBAAA7Q,IAEA6B,QAAA,SAAAnP,GACA,OAAAtE,KAAAwtB,MAAAC,WAAAha,QAAAnP,IAEAoP,QAAA,SAAApP,GACA,OAAAtE,KAAAwtB,MAAAC,WAAA/Z,QAAApP,IAEAge,UAAA,SAAAhe,GACA,OAAAtE,KAAAwtB,MAAAC,WAAAnL,UAAAhe,IAEA+d,UAAA,SAAA3P,EAAAqS,EAAAC,GACA,OAAAhlB,KAAAwtB,MAAAC,WAAApL,UAAA3P,EAAAqS,EAAAC,IAEAR,YAAA,SAAAlgB,GACA,OAAAtE,KAAAwtB,MAAAC,WAAAjJ,YAAAlgB,GAAA7D,SAEAgkB,eAAA,SAAAngB,GACA,OAAAtE,KAAAwtB,MAAAC,WAAAhJ,eAAAngB,IAEAqgB,eAAA,SAAArgB,GACA,OAAAtE,KAAAwtB,MAAAC,WAAA9I,eAAArgB,IAEAytC,eAAA,SAAAxoC,GACA,IAAAjF,EAAAtE,KAAAwtB,MAAAC,WAAAvG,aAAA3d,GACA,OAAAvJ,KAAAof,aAAA9a,GACAtE,KAAAiS,QAAA3N,GAEA,MAGA8e,YAAA,SAAA9e,GACA,OAAAtE,KAAAokB,SAAA9f,GAGAtE,KAAAwtB,MAAAC,WAAArK,YAAA9e,GAAA7D,YAGA2jB,SAAA,SAAA9f,GACA,OAAAtE,KAAAwtB,MAAAC,WAAArJ,SAAA9f,IAEA2T,KAAA,SAAA3T,GACAtE,KAAAwtB,MAAAC,WAAAxV,KAAA3T,IAEA0T,MAAA,SAAA1T,GACAtE,KAAAwtB,MAAAC,WAAAzV,MAAA1T,IAEAixD,SAAA,SAAAzxC,EAAAC,EAAAzgB,GACAtD,KAAAwtB,MAAAC,WAAA5J,KAAAtpB,MAAAyF,KAAAwtB,MAAAC,WAAAtyB,YAEAwf,KAAA,SAAA6K,EAAAC,EAAAniB,EAAA0hB,GACA,IAAAzf,GAAAyf,EACAhlB,KAAAwtB,MAAAC,WAAA9S,KAAA6K,EAAAC,EAAAniB,GACAiC,GACAvF,KAAAuF,6BCnJA,IAAAsB,EAAArP,EAAA,GACAg+D,EAAAh+D,EAAA,IACAi+D,EAAAj+D,EAAA,IACAupB,EAAAvpB,EAAA,IACAwpB,EAAAxpB,EAAA,IACAk+D,EAAAl+D,EAAA,IACAm+D,EAAAn+D,EAAA,IAEA,SAAAo+D,IAGA,IAFA,IAAAh6B,EAAA57B,KAAA+H,UAAAC,WAAA,cACA9D,KACAtM,EAAA,EAAeA,EAAAgkC,EAAAxhC,OAAuBxC,IACtCsM,EAAAhC,KAAAlC,KAAA4Q,aAAAgrB,EAAAhkC,KAEA,OAAAsM,EAGA,IAAA2xD,EAAA,WACA,OACAC,gBAAA,SAAA7uD,GAEA,IAAA8uD,EAAA,kBAAA9uD,EAAAuK,MAAA,IAAAvS,cAAA+hB,EAAAD,EAEA,GAAA9Z,EAAA,CACA,IAAAkD,EAAAnK,KACAiH,EAAAya,cAAA,WAAqC,OAAAvX,EAAAlD,OAAA+uD,qBAGrC,IAAAlmD,EAAA,IAAAimD,EAAA9uD,GAGA,GAFAjH,KAAAtF,MAAAoV,EAAA4lD,EAAA5lD,IAEA7I,EAAA9O,KAAA,CAEA6H,KAAA+H,UAAAkuD,WAAA,aAAAhvD,EAAA9O,KAAA,WAAoE,OAAA2X,IACpE,IAAAomD,EAAAl2D,KAAA+H,UAAAC,WAAA,cACAkuD,IACAA,KACAl2D,KAAA+H,UAAAkuD,WAAA,wBAAuD,OAAAC,KAEvDA,EAAAh0D,KAAA+E,EAAA9O,MAEAw9D,EAAArB,cAAArtD,EAAA9O,KAAA6H,MAGA,OAAA8P,GAEAc,aAAA,SAAAzY,GACA,OAAA6H,KAAA+H,UAAAC,WAAA,aAAA7P,IAGA0jC,YAAA,WACA,IAAA4uB,EAAAzqD,KAAA4X,iBACA5X,KAAA4E,UAAA,yBAGA,IADA,IAAAuxD,EAAAP,EAAA79D,KAAAiI,MACApI,EAAA,EAAgBA,EAAAu+D,EAAA/7D,OAAmBxC,IACnCu+D,EAAAv+D,GAAAge,WAGA60C,EAAA/sD,GAAA+sD,EAAAltD,IACAyC,KAAAqI,SAAAoiD,EAAA/sD,EAAA+sD,EAAAltD,GAEAyC,KAAA4E,UAAA,oBAGAvB,UAAA,SAAAghB,EAAAC,GACA,OAAAtkB,KAAAwtB,MAAAC,WAAApqB,UAAAghB,EAAAC,IAGAwc,YAAA,SAAArd,EAAA2yC,GACA,IAAA1jD,EAAA1S,KAAAiS,QAAAwR,GACA,GAAA/Q,GAAA1S,KAAAygC,cAAAhd,GAAA,CAIA,GAFAzjB,KAAAwtB,MAAAC,WAAA7X,QAAA6N,IAAAzjB,KAAA+Q,WAAAwZ,cAEAxvB,IAAAq7D,MACA,OACA,QAAAx+D,EAAA,EAAkBA,EAAA8a,EAAAsM,QAAA5kB,OAAyBxC,IAC3CoI,KAAA0oD,YAAAh2C,EAAAsM,QAAApnB,IAEA,IAAAA,EAAA,EAAkBA,EAAA8a,EAAAuM,QAAA7kB,OAAyBxC,IAC3CoI,KAAA0oD,YAAAh2C,EAAAuM,QAAArnB,SAEG+N,MAAAyZ,aAAAqE,IAAA9d,MAAAyZ,aAAAzZ,MAAA2c,UAAAmB,KACH9d,MAAAm7B,YAAAn7B,MAAA2c,UAAAmB,KAIAilC,YAAA,SAAA2N,GACAr2D,KAAAwtB,MAAA2uB,WAAAvmC,QAAAygD,IAAAr2D,KAAA+Q,WAAAwZ,UAGAvF,OAAA,SAAAzB,GACA,IAAA5d,EAAA3F,KACA2F,EAAA6nB,MAAAC,WAAAzI,OAAA,WACArf,EAAA6nB,MAAA2uB,WAAAn3B,OAAA,WACAzB,SAKAqB,SAAA,WAEA,IADA,IAAAuxC,EAAAP,EAAA79D,KAAAiI,MACApI,EAAA,EAAgBA,EAAAu+D,EAAA/7D,OAAmBxC,IACnCu+D,EAAAv+D,GAAAgtB,WAGA5kB,KAAAq7B,gBACAr7B,KAAAq0D,YACAr0D,KAAA4E,UAAA,cACA5E,KAAAuF,UAEA+wD,YAAA,WACAt2D,KAAAwtB,MAAAC,WAAA7I,WACA5kB,KAAAwtB,MAAA2uB,WAAAv3B,WACA5kB,KAAAq7B,gBACAr7B,KAAAq0D,aAGAliB,WAAA,SAAA7tC,GACA,IAAAwL,EAAA9P,KAAAwtB,MAAAC,WACA,QAAAztB,KAAAiH,OAAAojB,cAEA/lB,GAEAwL,EAAAhR,OAAAwF,GAEAwL,EAAA0iC,kBAEA+jB,aAAA,SAAAjyD,GACAtE,KAAAwtB,MAAAC,WACA8kB,SAAAjuC,IAEAkuC,cAAA,WACA,OAAAxyC,KAAAwtB,MAAAC,WAAA+kB,mBAeA76C,EAAAD,SAAkBwB,OAVlB,WACA,IAAAgL,EAAA2C,EAAAnM,SAAyBm7D,KAGzB,OAFAhvD,EAAAnM,MAAAwJ,EAAAsxD,KACA3uD,EAAAnM,MAAAwJ,EAAAuxD,KACAvxD,qBC/IA,IAAA2C,EAAArP,EAAA,GACAg/D,EAAAh/D,EAAA,IACAwjC,EAAAxjC,EAAA,IAiVAG,EAAAD,QAhVA,SAAAiO,GAEA,IAAA01C,EAAAmb,EAAAt9D,SACA2N,EAAAnM,MAAAiL,EAAA01C,GACA,IAAA5tB,EAAA9nB,EAAAmwD,iBACA39D,KAAA,OACAqZ,KAAA,gBACA2N,OAAA,WAAqB,OAAAxZ,EAAAsB,OAAA0/B,SACrBvlB,SAAAva,EAAAzN,KAoRA,SAAAsZ,GACA1S,KAAAxF,QAAAkY,EAAApO,MACAoO,EAAApO,GAAAtE,KAAAhF,OAEA0X,EAAAF,aACAE,EAAAF,WAAA7M,EAAAgJ,KAAA8nD,UAAA/jD,EAAAF,WAAA,aACAE,EAAAJ,WACAI,EAAAJ,SAAA3M,EAAAgJ,KAAA8nD,UAAA/jD,EAAAJ,SAAA,aAGA,IAAAG,EAAA,KA+BA,OA9BAC,EAAAD,UAAA,IAAAC,EAAAD,YACAC,EAAAD,WAAA,EAAAC,EAAAD,UAGAA,IACAC,EAAAF,aAAAE,EAAAJ,SACAI,EAAAJ,SAAAtS,KAAAuS,iBAAAG,IACIA,EAAAF,YAAAE,EAAAJ,WACJI,EAAAF,WAAAxS,KAAAuS,kBACAC,WAAAE,EAAAJ,SACAG,UAAAC,EAAAD,SACAC,WAMA1S,KAAAooB,0BAAA1V,IACA1S,KAAAgyC,yBAAAt/B,GAEA1S,KAAA8yC,kBAAApgC,GACAA,EAAAF,YAAAE,EAAAJ,UACAtS,KAAAi0C,oBAAAvhC,GAEAA,EAAAsM,WACAtM,EAAAuM,gBACAlkB,IAAA2X,EAAApP,QACAtD,KAAAqiB,UAAA3P,EAAA1S,KAAAiH,OAAA0/B,SAGAj0B,GA7TA/M,KAGAw2C,EAAAx2C,EAAAmwD,iBACA39D,KAAA,OACAipB,SAAAva,EAAAzN,KA2TA,SAAAijB,GAGA,OAFArc,KAAAxF,QAAA6hB,EAAA/X,MACA+X,EAAA/X,GAAAtE,KAAAhF,OACAqhB,GA9TA1W,KAuGA,SAAA+wD,EAAAjzC,GACA,IAAA5lB,EAAA8H,EAAA86B,cAAAhd,GACA,IAAA5lB,GAAA8H,EAAAyZ,aAAAqE,GAAA,CACA,IAAAngB,EAAAqC,EAAA2c,UAAAmB,GACA9d,EAAAyZ,aAAA9b,IAAAqC,EAAA86B,cAAAn9B,KACAA,EAAAqC,EAAAsM,QAAA3O,GACAqC,EAAAuc,YAAA5e,KACAzF,GAAA,IAIA,OAAAA,EA6FA,SAAA84D,EAAAt6C,GACA,GAAA1W,EAAAyZ,aAAA/C,EAAAzhB,QAAA,CACA,IAAAg8D,EAAAjxD,EAAAsM,QAAAoK,EAAAzhB,QACAg8D,EAAA53C,QAAA43C,EAAA53C,YACA43C,EAAA53C,QAAA9c,KAAAma,EAAA/X,IAEA,GAAAqB,EAAAyZ,aAAA/C,EAAA1hB,QAAA,CACA,IAAAk8D,EAAAlxD,EAAAsM,QAAAoK,EAAA1hB,QACAk8D,EAAA53C,QAAA43C,EAAA53C,YACA43C,EAAA53C,QAAA/c,KAAAma,EAAA/X,KAIA,SAAAwyD,EAAAz6C,GACA,GAAA1W,EAAAyZ,aAAA/C,EAAAzhB,QAEA,IADA,IAAAg8D,EAAAjxD,EAAAsM,QAAAoK,EAAAzhB,QACAhD,EAAA,EAAiBA,EAAAg/D,EAAA53C,QAAA5kB,OAA+BxC,IAChD,GAAAg/D,EAAA53C,QAAApnB,IAAAykB,EAAA/X,GAAA,CACAsyD,EAAA53C,QAAAte,OAAA9I,EAAA,GACA,MAIA,GAAA+N,EAAAyZ,aAAA/C,EAAA1hB,QACA,KAAAk8D,EAAAlxD,EAAAsM,QAAAoK,EAAA1hB,QACA,IAAA/C,EAAA,EAAiBA,EAAAi/D,EAAA53C,QAAA7kB,OAA+BxC,IAChD,GAAAi/D,EAAA53C,QAAArnB,IAAAykB,EAAA/X,GAAA,CACAuyD,EAAA53C,QAAAve,OAAA9I,EAAA,GACA,QAMA,SAAAm/D,IAIA,IAHA,IAAArkD,EAAA,KACAib,EAAAhoB,EAAA6nB,MAAAC,WAAA1F,WAEAnwB,EAAA,EAAAoK,EAAA2rB,EAAAvzB,OAAoCxC,EAAAoK,EAASpK,KAC7C8a,EAAAib,EAAA/1B,IACAonB,WACAtM,EAAAuM,WAGA,IAAA2N,EAAAjnB,EAAA6nB,MAAA2uB,WAAAp0B,WACA,IAAAnwB,EAAA,EAAAoK,EAAA4qB,EAAAxyB,OAAqCxC,EAAAoK,EAASpK,IAG9C++D,EADA/pC,EAAAh1B,IAKA,SAAAo/D,EAAAC,GACA,IAAAC,EAAAD,EAAAr8D,OACAu8D,EAAAF,EAAAt8D,OACA,QAAA/C,KAAAq/D,EAAAnpD,QACA,SAAAspD,EAAAC,GACAH,EAAAz7D,YAAA27D,EAAA,WACA,OAAAD,EAAAvyD,UAAAyyD,EAAAr9D,MAAAR,UAAAiH,MAAA1I,KAAAoD,aACKk8D,GAHL,CAIIz/D,EAAAq/D,EAAAnpD,OAAAlW,IAxQJ61B,EAAAhyB,YAAA,gCAIA,IAFA,IAAAkrB,EAAA8G,EAAA5G,kBAEAjvB,EAAA,EAAcA,EAAA+uB,EAAAvsB,OAAkBxC,IAAA,CAChC,IAAAga,EAAA+U,EAAA/uB,GACAga,EAAA0lD,OAAA1/D,EACA+N,EAAAstC,kBAAArhC,MAKA6b,EAAAhyB,YAAA,wBAAA6I,EAAAoO,GACA,IAAA+F,EAAA,KAAA/C,EAAA,KACA,GAAA/P,EAAAsB,OAAAuL,YAAA7M,EAAAsB,OAAAqL,SAAA,CACA,GAAA3M,EAAAyiB,0BAAA1V,GAAA,SAIA,GAHA+F,EAAA9S,EAAAsB,OAAAuL,WAAAvX,UACAya,EAAA/P,EAAAsB,OAAAqL,SAAArX,WAEAyX,EAAAF,WAAAkD,IAAAhD,EAAAJ,UAAAmG,EACA,SAEA,WAGAgV,EAAAhyB,YAAA,sBAAAoV,EAAAC,GACAnL,EAAA01B,cAAAxqB,EAAAC,KAGA2c,EAAAhyB,YAAA,yBAAA6I,GACAqB,EAAA4tC,gBAAAjvC,GAEA,IADA,IAAAoO,EAAA+a,EAAA5b,QAAAvN,GACA1M,EAAA,EAAiBA,EAAA8a,EAAAsM,QAAA5kB,OAAyBxC,IAC1CukD,EAAAvmC,QAAAlD,EAAAsM,QAAApnB,IAEA,IAAAA,EAAA,EAAiBA,EAAA8a,EAAAuM,QAAA7kB,OAAyBxC,IAC1CukD,EAAAvmC,QAAAlD,EAAAuM,QAAArnB,MAIA61B,EAAAhyB,YAAA,2BAAAqoB,EAAAxgB,EAAAygB,GACA,IAAAnpB,EAAA+K,EAAAsM,QAAA6R,GAEA,OAAA9jB,KAAAykB,eAAAX,GACAlpB,EAAA44D,aAAAxzD,KAAAykB,eAAAX,GACG,OAAA9jB,KAAA2kB,eAAAb,GACHlpB,EAAA44D,aAAA,QAAAxzD,KAAA2kB,eAAAb,GAEAlpB,EAAA44D,aAAA,cAKA/lC,EAAAhyB,YAAA,0BAAA6I,EAAAsN,EAAA09C,GAMA,GALA,UAAAA,GACA3pD,EAAA01B,cAAA/2B,EAAA,OAGAqB,EAAAoC,UAAAC,WAAA,SACA+I,SAAA,eAAAC,aAAA,CAIA,GAAArL,EAAAsB,OAAAyZ,WAAA,UAAA4uC,EAAA,CACA,IAAAiI,EAAA5xD,EAAAoL,WACAiqB,EAAAr1B,GACA,IAAAmtD,EAAAntD,EAAAoL,WAGA,IAAAwmD,EAAApqC,WAAA2lC,EAAA3lC,WAAAoqC,EAAAnqC,WAAA0lC,EAAA1lC,SAIA,OAHAznB,EAAAJ,SAEAI,EAAAf,UAAA,uBACA,EAKA,OAAA0qD,GAAA,QAAAA,GAAA,UAAAA,EACA3pD,EAAA80B,QAAAhyB,SACGnE,GACH63C,EAAAvmC,aAKAumC,EAAA1gD,YAAA,sBAAA6I,EAAA+X,GACAs6C,EAAAt6C,KAEA8/B,EAAA1gD,YAAA,yBAAA6I,EAAA+X,GACA06C,MAEA5a,EAAA1gD,YAAA,yBAAA6I,EAAA+X,GACAy6C,EAAAz6C,KAEA8/B,EAAA1gD,YAAA,4BAAAoV,EAAAC,GACAgmD,EAAAnxD,EAAAjL,OAAgC4J,GAAAuM,GAASlL,EAAA6nB,MAAA2uB,WAAAtqC,QAAAf,KACzC6lD,EAAAhxD,EAAA6nB,MAAA2uB,WAAAtqC,QAAAf,MAiBAqrC,EAAA1gD,YAAA,wBAAA6I,EAAA+X,GACA,IAAA1W,EAAAsB,OAAAolB,WACA,SAGA,IAAAmrC,EAAAd,EAAAr6C,EAAAzhB,QACA68D,EAAAf,EAAAr6C,EAAA1hB,QAEA,SAAA68D,IAAAC,GACA9xD,EAAAyiB,0BAAAziB,EAAAsM,QAAAoK,EAAAzhB,UAAA+K,EAAAyiB,0BAAAziB,EAAAsM,QAAAoK,EAAA1hB,WAGAgL,EAAAf,UAAA,uBAAAN,EAAA+X,MAIA,WAEA,IAAAs3C,EAAAn8D,EAAA,IACAkgE,KAEA/xD,EAAAlK,YAAA,8BAAA6I,EAAAsN,GAEA,OADA8lD,EAAApzD,GAAAqvD,EAAAz0C,gBAAAvZ,EAAArB,IACA,IAGAqB,EAAAlK,YAAA,6BAAA6I,EAAAsN,GACA8lD,EAAApzD,IACAqB,EAAA6nB,MAAA2uB,WAAAn3B,OAAA,WACA,QAAAptB,KAAA8/D,EAAApzD,GACAqB,EAAA6nB,MAAA2uB,WAAAz1B,WAAA9uB,GACAk/D,EAAAY,EAAApzD,GAAA1M,IAGA8/D,EAAApzD,GAAA,SAlBA,GAwBAqB,EAAAlK,YAAA,6BAAA6I,EAAA+X,GACA1W,EAAAm7B,YAAAzkB,EAAAzhB,QACA+K,EAAAm7B,YAAAzkB,EAAA1hB,UAGAgL,EAAAlK,YAAA,UAAAs7D,GAEAC,GACAp8D,OAAAuhD,EACAxhD,OAAAgL,EACAmI,QACA6pD,cAAA,gBACAC,YAAA,kBACAC,WAAA,iBACAC,eAAA,qBACAC,cAAA,oBACAC,eAAA,qBACAC,cAAA,oBACAC,WAAA,oBAIAlB,GACAp8D,OAAA6yB,EACA9yB,OAAAgL,EACAmI,QACA6pD,cAAA,gBACAC,YAAA,kBACAC,WAAA,iBACAC,eAAA,qBACAC,cAAA,oBACAC,eAAA,qBACAC,cAAA,oBACAC,WAAA,iBACAC,iBAAA,mBACAC,gBAAA,kBACAC,aAAA,sBACAC,WAAA,eACAC,YAAA,eACAC,eAAA,uBACAC,cAAA,iBACAC,gBAAA,sBAIA/yD,EAAA6nB,OACAC,aACA0uB,8BCsCAxkD,EAAAD,QAlQA,WAEA,SAAAihE,EAAAhzD,GACA,OAAAA,EAAA+Q,IAAAiB,QAAA,YAGA,SAAAihD,EAAAjzD,GACA,OAAAA,EAAA+Q,IAAAiB,QAAA,QAGA,SAAAkhD,EAAAlzD,GACA,OAAAA,EAAA+Q,IAAAiB,QAAA,aAGA,SAAAmhD,EAAAnzD,GACA,OAAAA,EAAA+Q,IAAAiB,QAAA,aAGA,IAAAohD,EAAA,gBAEA,SAAAC,EAAArhD,EAAA03C,EAAAzrB,EAAAq1B,GACA,IAAA3tD,EAAAqM,EAAA3X,MACA,OAAAsL,KAAAzN,YAOAyN,EAAA+jD,GAAA90D,MAAA+Q,EAAAs4B,GANAq1B,EACAA,IAEAF,EAOA,OAEAnpD,eAAA,SAAAzX,GACA,IAAA+L,EAAA80D,EAAAjhE,KAAAiI,KAAA44D,EAAA,kBAAAzgE,IACA,OAAA+L,IAAA60D,EACA,EAEA70D,GAIA6uB,YAAA,SAAAr1B,GACA,IAAAwG,EAAA80D,EAAAjhE,KAAAiI,KAAA24D,EAAA,cAAA3+D,MAAAR,UAAAiH,MAAA1I,KAAAoD,YACA,OAAA+I,IAAA60D,EACA/4D,KAAA+Q,WAAAoc,SAEAjpB,GAIAivB,YAAA,SAAAxkB,GACA,IAAAzK,EAAA80D,EAAAjhE,KAAAiI,KAAA24D,EAAA,eAAAhqD,IACA,OAAAzK,IAAA60D,EACA,EAEA70D,GAIAgwB,UAAA,SAAA3qB,GACA,IAAAY,EAAAnK,KACAkE,EAAA80D,EAAAjhE,KAAAoS,EAAAwuD,EAAA,aAAApvD,GACA,WAAe,OAAAyvD,EAAAjhE,KAAAoS,EAAAyuD,EAAA,aAAArvD,MAGf,OAAArF,IAAA60D,EACA,EAEA70D,GAIAg1D,WAAA,SAAA50D,GACA,IAAA6F,EAAAnK,KACAkE,EAAA80D,EAAAjhE,KAAAoS,EAAAwuD,EAAA,cAAAr0D,GACA,WAAe,OAAA00D,EAAAjhE,KAAAoS,EAAAyuD,EAAA,cAAAt0D,MAGf,OAAAJ,IAAA60D,EACA,EAEA70D,GAKAi1D,gBAAA,SAAAzmD,EAAAF,EAAAF,GACA,IAAApO,EAAA80D,EAAAjhE,KAAAiI,KAAA24D,EAAA,mBAAAjmD,EAAAF,EAAAF,IAEA,OAAApO,IAAA60D,GAKA/8D,KAAA,EACAD,IALAiE,KAAAk5D,WAAAxmD,EAAApO,IAMA1G,OALAoC,KAAAo5D,gBAMAz7D,MAAA,GAGAuG,GAIAk1D,cAAA,WACA,IAAAjvD,EAAAnK,KACAkE,EAAA80D,EAAAjhE,KAAAoS,EAAAwuD,EAAA,mBACA,WAAe,OAAAK,EAAAjhE,KAAAoS,EAAAyuD,EAAA,sBAGf,OAAA10D,IAAA60D,EACA,EAEA70D,GAKAkvB,kBAAA,SAAAzkB,GACA,IAAAzK,EAAA80D,EAAAjhE,KAAAiI,KAAA24D,EAAA,qBAAAhqD,IACA,OAAAzK,IAAA60D,EACA,EAEA70D,GAIAm1D,eAAA,WACAL,EAAAjhE,KAAAiI,KAAA24D,EAAA,sBAGAtnC,SAAA,WACA,IAAAntB,EAAA80D,EAAAjhE,KAAAiI,KAAA24D,EAAA,eACA,OAAAz0D,IAAA60D,EACA,KAEA70D,GAIAy9B,YAAA,SAAAr9B,GACA,IAAAqnC,EAAAgtB,EAAA34D,MACA,OAAA2rC,KAAA9tC,YAGA8tC,EAAA9a,cAAArB,SAAAlrB,GAFA,MAOAg1D,YAAA,SAAAh1D,GACA,IAAAqnC,EAAAgtB,EAAA34D,MACA,OAAA2rC,EAAA9tC,YAGA8tC,EAAAxa,cAAA3B,SAAAlrB,GAFA,MAMA+D,SAAA,SAAArM,EAAAD,GACA,IAAAiP,EAAA6tD,EAAA74D,MACA+K,EAAA+tD,EAAA94D,MAEAu5D,GAAejwC,SAAA,GACfkwC,GAAYlwC,SAAA,GAEZte,IACAwuD,EAAAxuD,EAAA4M,kBAEA7M,IACAwuD,EAAAxuD,EAAA6M,kBAGA7M,GAAA,EAAA/O,MACA+O,EAAA2M,OAAA1b,GAEAgP,GAAA,EAAAjP,MACAiP,EAAA0M,OAAA3b,GAGA,IAAA09D,GAAenwC,SAAA,GACfowC,GAAYpwC,SAAA,GACZte,IACAyuD,EAAAzuD,EAAA4M,kBAEA7M,IACA2uD,EAAA3uD,EAAA6M,kBAGA5X,KAAA4E,UAAA,iBAAA20D,EAAAjwC,SAAAkwC,EAAAlwC,SAAAowC,EAAApwC,SAAAmwC,EAAAnwC,YAGA4T,SAAA,SAAAvuB,GACA,IAAAgrD,EAAA35D,KAAAmzB,YAAAxkB,GACAirD,EAAAp8D,KAAAkY,IAAAikD,EAAA35D,KAAAiH,OAAA81B,mBAAA,GACA/8B,KAAAqI,SAAAuxD,IAEAxnB,SAAA,SAAA9tC,GACA,IAKAvI,EALAmH,EAAAlD,KAAAm5D,gBAAAn5D,KAAAiS,QAAA3N,IAEAtI,EAAAwB,KAAAkY,IAAAxS,EAAAlH,KAAAgE,KAAAiH,OAAA81B,mBAAA,GAEAtnB,EAAAzV,KAAA65D,gBAAAt8D,EAKAxB,EAHA0Z,EAGAvS,EAAAnH,KAAA0Z,EAAAzV,KAAAiH,OAAA8O,YAAA,EAFA7S,EAAAnH,IAKAiE,KAAAqI,SAAArM,EAAAD,IAEA89D,cAAA,WACA,IAAA9/D,GACA2D,GAAA,EACAH,GAAA,EACAu8D,MAAA,EACAC,MAAA,EACA7+B,YAAAl7B,KAAAiH,OAAAi0B,YAAA,EACA8+B,QAAA,EACAC,QAAA,GAGAC,EAAArB,EAAA74D,MACAm6D,EAAArB,EAAA94D,MACA,GAAAm6D,EAAA,CACA,IAAAC,EAAAD,EAAAviD,iBACAwiD,EAAAC,UACAtgE,EAAA2D,EAAA08D,EAAA7vD,KACAxQ,EAAAigE,QAAAI,EAAAviD,YAEA9d,EAAA+/D,MAAAM,EAAA9wC,UAAA,EAGA,GAAA4wC,EAAA,CACA,IAAAI,EAAAJ,EAAAtiD,iBACA0iD,EAAAD,UACAtgE,EAAAwD,EAAA+8D,EAAA/vD,KAEAxQ,EAAAkgE,QAAAK,EAAAziD,YAEA9d,EAAAggE,MAAAO,EAAAhxC,UAAA,EAGA,OAAAvvB,GAEA6d,eAAA,WACA,IAAAjG,EAAA3R,KAAA65D,gBACA,OAAWn8D,EAAAiU,EAAAmoD,MAAAv8D,EAAAoU,EAAAooD,MAAA/O,YAAAr5C,EAAAjU,EAAAktD,aAAAj5C,EAAApU,EAAAI,MAAAgU,EAAAqoD,QAAAp8D,OAAA+T,EAAAsoD,2BC3PXtiE,EAAAD,QAAA,SAAAiO,sBCAA,IAAAoB,EAAAvP,EAAA,GAEA+iE,EACA,SAAA50D,GACA,OAEAkzD,qBAAA,WACA,OAAAlzD,EAAA+Q,IAAAiB,QAAA,cAEAmhD,uBAAA,WACA,OAAAnzD,EAAA+Q,IAAAiB,QAAA,cAGA6iD,wBAAA,SAAA9+B,GAEA,IADA,IAAA++B,EAAA/+B,EAAAlF,eAAA,WACA5+B,EAAA,EAAkBA,EAAA6iE,EAAArgE,OAAqBxC,IAAA,CACvC,IAAAc,EAAA+hE,EAAA7iE,GACA8iE,GAAA,EAEA9rC,EAAAl2B,EAAA0O,QAAAud,eAAAjsB,EAAAgP,KACA,GAAAknB,KAAAvnB,SAAA,SAAAunB,EAAAvnB,QAAA/C,GACAo2D,GAAA,MACM,CACN,IAAAxjB,EAAAx+C,EAAA0O,QAAAqd,eAAA/rB,EAAAgP,KACAwvC,KAAA7vC,SAAA,SAAA6vC,EAAA7vC,QAAA/C,KACAo2D,GAAA,GAIAA,IACAhiE,EAAA2O,QAAAxF,KAAAnJ,EAAA2O,QAAAxF,IAAAnJ,EAAA2O,QAAAxF,IAAA,oCAKA84D,UAAA,SAAAj/B,GACA,IAAAmP,GAAA,EAEA7qC,KAAAw6D,wBAAA9+B,GAEAA,EAAAjgC,YAAA,4BACA,IAAAm/D,EAAAj1D,EAAA+Q,IAAAiB,QAAA,YACAijD,IACAA,EAAAvzD,QAAAqC,OAAAkxD,EAAAxzD,QAAAC,QAAAqC,QAAA/D,EAAAsB,OAAA4zD,YAEA,IAAA3kC,EAAAvwB,EAAA+Q,IAAAiB,QAAA,QACA,GAAAue,EAAA,CAGA,IAAA4kC,EAAAn1D,EAAAsB,OAAA8zD,UACA,GAAAlwB,EAAA,CACA,IAAAmwB,EAAA9kC,EAAA3c,sBACA,IAAAyhD,IACAr1D,EAAAsB,OAAAuO,WAAAwlD,GAEAF,OAAAn1D,EAAAsB,OAAAuO,WACA7P,EAAAsB,OAAA8zD,UAAAD,EAIA,GAFA5kC,EAAA7uB,QAAAqC,OAAAwsB,EAAA9uB,QAAAC,QAAAqC,QAAAoxD,GAEA5kC,EAAA7uB,QAAAqC,OAAA,CAEA,IAAAuxD,EAAA/kC,EAAAxd,sBAKA,GAJAuiD,EAAA,IAAAt1D,EAAAsB,OAAAuO,WAAAylD,EAAA,KACAt1D,EAAAsB,OAAAuO,WAAAylD,EAAA,IACAA,EAAA,IAAAt1D,EAAAsB,OAAAuO,WAAAylD,EAAA,KACAt1D,EAAAsB,OAAAuO,WAAAylD,EAAA,IACAL,GAAAj1D,EAAAsB,OAAA4zD,WAGA,GADA3kC,EAAA7uB,QAAA1J,MAAAgI,EAAAsB,OAAAuO,WAAA,EACAq1B,EAkBA3U,EAAA9uB,QAAAC,QAAA1J,MAAAgI,EAAAsB,OAAAuO,WACA0gB,EAAA9uB,QAAAC,QAAA+tB,OACAzvB,EAAA80B,QAAApF,eAAAa,EAAA9uB,QAAAC,QAAA+tB,MAAAc,EAAA9uB,QAAAC,QAAA1J,YAlBA,GAAAi9D,IAAA7zD,EAAA1D,UAAAu3D,EAAA7rC,MAAA2M,EAAA5zB,OAAA,CAEA,IAAAouB,EAAA7uB,QAAA6zD,oBAAA,CACA,IAAAC,EAAAx1D,EAAAu7B,MAAAv7B,EAAA48B,MACA44B,KAAAl0D,QAAAk0D,EAAAl0D,OAAAuO,WACA0gB,EAAA7uB,QAAA6zD,oBAAAC,EAAAl0D,OAAAuO,WAEA0gB,EAAA7uB,QAAA6zD,oBAAA,EAGAv1D,EAAAsB,OAAAuO,WAAA0gB,EAAA7uB,QAAA6zD,oBACAhlC,EAAA9uB,QAAAC,QAAA1J,MAAAgI,EAAAsB,OAAAuO,gBAEA0gB,EAAA9uB,QAAA6S,gBAAAic,EAAA7uB,QAAA1J,MAAAu4B,EAAA7uB,QAAAzJ,aASAg9D,GAAA7zD,EAAA1D,UAAAu3D,EAAA7rC,MAAA2M,EAAA5zB,SAEAouB,EAAA7uB,QAAA6zD,oBAAAv1D,EAAAsB,OAAAuO,YAEAq1B,IACA3U,EAAA9uB,QAAAC,QAAA1J,MAAA,GAKAktC,GAAA,KAIAllC,EAAAy1D,sBAAAp7D,KAAA64D,qBACAlzD,EAAAi3B,wBAAA58B,KAAA84D,uBAEA,IAAA9tD,EAAAhL,KAAA64D,uBACA9tD,EAAA/K,KAAA84D,yBACA9tD,GACAA,EAAAvP,YAAA,oBAAA4/D,EAAAC,EAAApoD,GACA,IAAAu3C,EAAA9kD,EAAAiS,iBACAjS,EAAAf,UAAA,iBAAA6lD,EAAA/sD,EAAA29D,EAAA5Q,EAAA/sD,EAAA49D,MAGAvwD,GACAA,EAAAtP,YAAA,oBAAA4/D,EAAAC,EAAApoD,GACA,IAAAu3C,EAAA9kD,EAAAiS,iBACAjS,EAAAf,UAAA,iBAAAy2D,EAAA5Q,EAAAltD,EAAA+9D,EAAA7Q,EAAAltD,MAIAm+B,EAAAjgC,YAAA,sBACAuP,IAAArF,EAAA41D,cACA51D,EAAA41D,YAAAvwD,EAAAuwD,aAGAxwD,IAAApF,EAAA61D,cACA71D,EAAA61D,YAAAzwD,EAAAywD,gBAMAC,iBAAA,SAAA//B,EAAAzsB,GAKA,IAJA,IAGAyrD,EAHAD,EAAA/+B,EAAAlF,eAAA,WAEAklC,GAAA,EAEA9jE,EAAA,EAAkBA,EAAA6iE,EAAArgE,OAAqBxC,IAAA,CACvC,IAAAsM,EAAAu2D,EAAA7iE,GACAsM,EAAAy3D,eACA,IAAA/sC,EAAA1qB,EAAA03D,QACA1kB,EAAAhzC,EAAA23D,OACA,GAAAjtC,KAAAuH,WAAAlnB,GAAA2f,EAAA+H,SAAA/H,EAAA+H,QAAA1nB,GAAA,CACAyrD,EAAAx2D,EACAw3D,GAAA,EACA,MACM,GAAAxkB,KAAA/gB,WAAAlnB,GAAAioC,EAAAvgB,SAAAugB,EAAAvgB,QAAA1nB,GAAA,CACNyrD,EAAAx2D,EACAw3D,GAAA,EACA,OAGA,OACA7mD,QAAA6lD,EACAgB,cAIAI,cAAA,SAAApgC,GACA,IAAAzsB,EAAAtJ,EAAA+Q,IAAAiB,QAAA,QAEAokD,EAAA/7D,KAAAy7D,iBAAA//B,EAAAzsB,GAGA,GAAA8sD,EAAAlnD,QAAA,CACA,IAEAmnD,EAFAN,EAAAK,EAAAL,UACAxkB,EAAA6kB,EAAAlnD,QAEAqiC,EAAAz7C,YAAA,yBAAAwgE,EAAAC,GAEA,IAAAjtD,EAAAtJ,EAAA+Q,IAAAiB,QAAA,QACAwkD,EAAAltD,IAAA7H,QAAA,KACA,GAAA+0D,EAAA,CACA,IAAAC,EAAAntD,EAAAyJ,sBAGAzJ,EAAA5H,QAAAiO,aACA6mD,EAAA90D,QAAA0B,SAAAqzD,EAAA,IAEAD,EAAA90D,QAAA2B,SAAAozD,EAAA,GAGA,OADAJ,EAAAN,EAAAO,EAAAC,EACAv2D,EAAAf,UAAA,qBAAAo3D,MAEA9kB,EAAAz7C,YAAA,oBAAA4gE,EAAAC,GACA,IAAA/mC,EAAAmmC,EAAAW,EAAAC,EACA,OAAA32D,EAAAf,UAAA,gBAAAo3D,EAAAzmC,MAEA2hB,EAAAz7C,YAAA,uBAAA8gE,EAAAC,EAAAC,EAAAH,GAEA,IAAAI,EAAAhB,EAAAa,EAAAC,EACAjnC,EAAAmmC,EAAAe,EAAAH,EACArtD,EAAAtJ,EAAA+Q,IAAAiB,QAAA,QACAwkD,EAAAltD,IAAA7H,QAAA,KACA+0D,IACAA,EAAA90D,QAAA0B,cAAAhO,GAEA,IAAAmJ,EAAAyB,EAAAf,UAAA,mBAAA83D,EAAAnnC,IAKA,OAJArxB,IACAyB,EAAAsB,OAAAuO,WAAA+f,GAGArxB,MAKAy4D,YAAA,SAAAhxB,OAOAh0C,EAAAD,QAAA6iE,mBC5NA,IAAAxzD,EAAAvP,EAAA,GAEAolE,EAAA,SAAAjxB,EAAAhmC,GACA,IAAAk3D,EACAC,EACAC,EACAC,EACAC,EAYA,SAAAC,IACA,OACAxyC,eAAAsyC,EACAryC,eAAAmyC,EACA7xC,gBAAAgyC,EACA9xC,cAAA4xC,EACAjyC,kBAAA+xC,GAIA,IAAAM,EAAAx3D,EAAAoC,UAEA4J,EAAAwrD,EAAAn1D,WAAA,SACAo1D,EAAAD,EAAAn1D,WAAA,OAEA2J,EAAAy5B,iBAAA,WAAA8xB,GAEA,IAAA5P,EAAA,IAAA8P,EAAAzxB,EAAAvc,YAAyCiuC,YAAA,EAAAC,mBAAA,KA0CzC,SAAAC,EAAA7qD,EAAAwY,EAAAsyC,EAAA/9C,EAAAg+C,GACA,IAAAC,EAoBA,SAAAhrD,EAAAymD,EAAA15C,GACA,IAAAvc,EAAAi2D,EAAAzmD,GAEAxO,GACAxG,EAAAwF,EAAAlH,KACAuB,EAAA2F,EAAAnH,IACA4B,MAAAuF,EAAAvF,MACAC,OAAAsF,EAAAtF,QAGA6hB,EAAArF,KACAlW,EAAAy5D,KAAAz5D,EAAAxG,EACAwG,EAAAxG,EAAAwG,EAAAy5D,KAAAz5D,EAAAvG,OAEAuG,EAAAy5D,KAAAz5D,EAAAxG,EAAAwG,EAAAvG,MAIA,GAFAuG,EAAA05D,KAAA15D,EAAA3G,EAAA2G,EAAAtG,OAEA+H,EAAA6iB,YAAA9V,EAAAlB,OAAA7L,EAAAsB,OAAAyhB,MAAAC,UAAA,CACA,IAAAk1C,EA5GA,WACA,IAAAC,EAAAnyB,EAAAr8B,gBACA,OAAA9R,KAAAC,MAAAD,KAAAugE,KAAA,EAAAD,MAAA,EA0GAE,GAEA95D,EAAAxG,IAAA+hB,EAAArF,IAAA,OAAAyjD,EAAA,GACA35D,EAAAy5D,OAAAl+C,EAAArF,KAAA,MAAAyjD,EAAA,GAIA35D,EAAAvG,MAAAuF,EAAAy6D,KAAAz6D,EAAAxF,EAIA,OAAAwG,EAlDA+5D,CAAAvrD,EAAA,SAAAA,GAA0D,OAAA/M,EAAAwzD,gBAAAzmD,IAAqC+M,GAE/Fvc,GAAaxF,EAAAggE,EAAAhgE,EAAAH,EAAAmgE,EAAAngE,GACb2tB,IACAhoB,EAAAxF,EAAAggE,EAAAC,MAIAz6D,EAAA3F,GAAAoI,EAAAsB,OAAA8O,WAAA,EAEA,IAAAie,EA1EA,SAAAthB,GACA,OAAA/M,EAAA6iB,YAAA9V,EAAAlB,OAAA7L,EAAAsB,OAAAyhB,MAAAC,UAyEAu1C,CAAAxrD,IAAA+qD,EAAA,IAOA,OALAD,KAAA,EACA/9C,EAAArF,MACAojD,IAAA,GAEAt6D,EAAAxF,IAAAwtB,GAAA,KAAAsyC,EAAAxpC,EACA9wB,EAoHA,SAAAi7D,EAAA/N,GACA,IAAA/zC,EAAA6gD,IAEAr7D,GAAA,sBACAwa,EAAAqO,gBAAArO,EAAAsO,iBACAhlB,EAAA0lB,cAAAhP,EAAAqO,eAAArO,EAAAsO,eAAAtO,EAAA4O,gBAAA5O,EAAA8O,eACAtpB,EAAAK,KAAA,sBAEAL,EAAAK,KAAA,uBAIA,IAAA9C,EAAAuG,EAAAwU,UAAAikD,gBAAA/hD,EAAAqO,eAAArO,EAAA4O,gBAAA5O,EAAAsO,eAAAtO,EAAA8O,eACA/rB,GACAyC,EAAAK,KAAA9C,GAEA,IAAA2K,EAAA,eAAA3K,EAAA,KACAuG,EAAAwU,UAAA6lC,UAAA3jC,EAAAqO,eAAArO,EAAA4O,gBAAA5O,EAAAsO,eAAAtO,EAAA8O,eACA,SACAilC,EAAA5uD,UAAAuI,EAQA,SAAAs0D,IACArB,EACAC,EACAH,EAAA,KACAC,GAAA,EAmFA,SAAAuB,EAAAC,EAAAC,EAAAC,EAAAC,GACA,OAAAF,GAAAD,EACAG,GAAAD,EACA,EAEA,EAGAC,GAAAD,EACA,EAEA,EAvSAnR,EAAA7xD,YAAA,oBAAAkK,EAAAvM,KAAA,SAAAqB,EAAAkF,GACA,IAAAhF,EAAAgF,EAAAhF,QAAAgF,EAAAE,WAEA,GADAw+D,IACA14D,EAAAoL,WAAAwZ,QACA,SAEA,GAAAxjB,EAAAzE,gBAAA3H,EATA,oBASA,CACAoM,EAAAzE,gBAAA3H,EAZA,qBAaAsiE,GAAA,GAEA,IAAAn5C,EAAAne,EAAAy3B,OAAAz9B,GACAq9D,EAAAl5C,EAEA,IAAAhrB,EAAA6M,EAAAsM,QAAA6R,GACA,GAAAne,EAAA8jB,WAAA3wB,GAEA,OADAulE,KACA,EAMA,OADAr+D,KAAA2+D,WAAApB,EAAAzkE,IAAAmkE,EAFA,EAEAtxB,EAAAp6B,cAAA,IACA,EAEA,UAGEvR,OAEFstD,EAAA7xD,YAAA,mBAAAkK,EAAAvM,KAAA,SAAAqB,EAAAkF,GACAgG,EAAAsB,OAAAwlB,OACA9mB,EAAAk2B,cAEAsiC,EAAA7Q,EAAArmD,OAAAmpD,SACEpwD,OAwDFstD,EAAA7xD,YAAA,aAAAkK,EAAAvM,KAAA,SAAAqB,EAAAkF,GACA,IAAAi/D,EAAAtR,EAAArmD,OACA/D,EAAAoqD,EAAAuR,YAAAl/D,IAoGA,SAAAywD,EAAAltD,GACAktD,EAAAlyD,MAAAlC,KAAAkH,EAAAxF,EAAA,OACA0yD,EAAAlyD,MAAAnC,IAAAmH,EAAA3F,EAAA,OArGAuhE,CAAAF,EAAAxO,OAAAltD,GACA,IAAA67D,IAAAh4D,EAAAzE,gBAAA3C,EAhGA,sBAkGAq/D,EAAAlC,EACAmC,EAAApC,EACAqC,EAAAnC,EAEAoC,EAAAx5D,EAAAy3B,OAAAz9B,GACAurB,GAAA,EAWA,GAVA6zC,IAEA7zC,GAAAnkB,EAAAzE,gBAAA3C,EA5GA,iBA6GAo/D,IAAAI,GAGArC,EAAAqC,EACAtC,EAAAkC,EACAhC,EAAA7xC,EAEA6zC,EAAA,CACA,IAAAjmE,EAAA6M,EAAAsM,QAAAktD,GAEAl4D,EAAA0kC,EAAAp6B,aACAzT,EAAAiJ,EAAAzE,gBAAA3C,EAtHA,sBAuHA69D,EAAA,EACA1/D,IACA0/D,EAAAhgE,KAAAiO,MAAA3N,EAAAb,YAAA,IAGA+C,KAAAo/D,SAAA7B,EAAAzkE,IAAAikE,EAAAS,EAAAv2D,QAEAjH,KAAAo/D,SAAAr4D,EAAAjE,yBAAAnD,EAAAgsC,EAAA1c,YAGA,IAAAowC,IAAAJ,GAAAF,GAAAC,GAAAG,GAAAD,GAAAh0C,GAcA,OAbAm0C,IACAL,GACAr5D,EAAAm7B,YAAAk+B,GAAA,GACAG,GACAx5D,EAAAm7B,YAAAq+B,GAAA,IAGAE,GACAlB,EAAAS,EAAAxO,QAmEA,SAAAkP,EAAAC,EAAAC,EAAAC,GACA,IAAA7+D,EAgGA,WACA0sD,EAAAoS,aACApS,EAAAoS,WAAApjE,SAAAmD,cAAA,OACAksC,EAAAxc,YAAAruB,YAAAwsD,EAAAoS,aAEA,OAAApS,EAAAoS,WArGAC,GAEAtjD,EAAA6gD,IAEAr7D,GAAA,wBACA8D,EAAAwU,UAAAylD,sBACA/9D,EAAAK,KAAAyD,EAAAwU,UAAAylD,qBAAAvjD,EAAAqO,eAAArO,EAAA4O,gBAAA5O,EAAAsO,eAAAtO,EAAA8O,gBAGA,IAAA00C,EAAAriE,KAAAugE,KAAAvgE,KAAAsiE,IAAAN,EAAAF,EAAA,GAAA9hE,KAAAsiE,IAAAL,EAAAF,EAAA,IAEA,KADAM,EAAAriE,KAAAkY,IAAA,EAAAmqD,EAAA,IAEA,OAEAj/D,EAAAxB,UAAAyC,EAAAtB,KAAA,KACA,IAAAw/D,GAAAN,EAAAF,IAAAC,EAAAF,GACAU,EAAAxiE,KAAAyiE,KAAAF,GAEA,GAAAzB,EAAAgB,EAAAE,EAAAD,EAAAE,GACAO,GAAAxiE,KAAA0iE,GACG,GAAA5B,EAAAgB,EAAAE,EAAAD,EAAAE,KACHO,GAAAxiE,KAAA0iE,IAKA,IAAAC,EAAA3iE,KAAA2iE,IAAAH,GACAI,EAAA5iE,KAAA4iE,IAAAJ,GACAjkE,EAAAyB,KAAAC,MAAA8hE,GACAvjE,EAAAwB,KAAAC,MAAA6hE,GAGAphE,GACA,6BAAA8hE,EAAA,OACA,0BAAAA,EAAA,OACA,yBAAAA,EAAA,OACA,wBAAAA,EAAA,OACA,qBAAAA,EAAA,OACA,SAAAxiE,KAAAC,MAAAoiE,GAAA,MAGA,OAAAljE,OAAA6P,UAAAC,UAAAnN,QAAA,aAEApB,EAAAgE,KAAA,gBA4BA,SAAAi+D,EAAAC,GACA,wDACAA,EAAA,WACAD,EAAA,UACAA,EAAA,UACAC,EAAA,iCAjCAC,CAAAF,EAAAC,GAAA,KAEA,IAAAE,EAAA9iE,KAAA0iC,IAAA1iC,KAAAC,MAAA6hE,EAAAE,IACAe,EAAA/iE,KAAA0iC,IAAA1iC,KAAAC,MAAAgiE,EAAAF,IAEA,OAAAjB,EAAAgB,EAAAE,EAAAD,EAAAE,IACA,OACA1jE,GAAAwkE,EACA,MACA,OACAvkE,GAAAskE,EACAvkE,GAAAwkE,EACA,MACA,OACAvkE,GAAAskE,GAQApiE,EAAAgE,KAAA,OAAAnG,EAAA,MACAmC,EAAAgE,KAAA,QAAAlG,EAAA,MAEA4E,EAAA1C,MAAA2C,QAAA3C,EAAAqC,KAAA,KArIAigE,CAAAxgE,KAAA2+D,WAAAjhE,EAAAsC,KAAA2+D,WAAAphE,EAAAyC,KAAAo/D,SAAA1hE,EAAAsC,KAAAo/D,SAAA7hE,IAEA,GACEyC,OAGFstD,EAAA7xD,YAAA,YAAAkK,EAAAvM,KAAA,WACA,IAAAswB,EAAAwzC,IAEA,GAAAxzC,EAAAgB,gBAAAhB,EAAAiB,gBAAAjB,EAAAgB,gBAAAhB,EAAAiB,eAAA,CACA,IAAAnZ,EAAA7L,EAAAk4B,eAAAnU,EAAAuB,gBAAAvB,EAAAyB,eAEA9O,GAAezhB,OAAA8uB,EAAAgB,eAAA/vB,OAAA+uB,EAAAiB,eAAAnZ,QACf6K,EAAA7K,MAAA7L,EAAA0lB,cAAAhP,IACA1W,EAAAwsD,QAAA91C,GAGAgiD,IAEA14D,EAAAsB,OAAAwlB,MACA9mB,EAAAk2B,eAGAnS,EAAAgB,gBACA/kB,EAAAm7B,YAAApX,EAAAgB,gBAAA,GACAhB,EAAAiB,gBACAhlB,EAAAm7B,YAAApX,EAAAiB,gBAAA,IA+IA2iC,EAAAoS,aACApS,EAAAoS,WAAAjjE,YACA6wD,EAAAoS,WAAAjjE,WAAAuE,YAAAssD,EAAAoS,YAEApS,EAAAoS,WAAA,OAhJE1/D,QAqJFrI,EAAAD,SACA+oE,cAAA,WACA,OACAv2D,KAAA0yD,sBC1WA,IAAA71D,EAAAvP,EAAA,GACAqP,EAAArP,EAAA,GACA6iC,EAAA7iC,EAAA,IAihBAG,EAAAD,SACAgpE,cAvBA,WACA,IAAApiC,EACA,OACApE,OAAA,SAAAyR,GACAA,EAAA0tB,eAAA,SAAA3mD,GACA4rB,EAAAqiC,iBAAAjuD,KAIAxI,KAAA,SAAAyhC,EAAAhmC,GAIA,OAHA24B,EAngBA,SAAAqN,EAAAhmC,GACA,IAAAw3D,EAAAx3D,EAAAoC,UACA,OACA2hB,KAAA,KACAk3C,gBACAC,SACAC,gBACAC,iBACAC,iBAEAC,aACA/2D,KAAA,WACAlK,KAAAkhE,WAAAv7D,EAAA8B,uBACAzH,KAAAmhE,mBACA,IAAAz3C,EAAA/jB,EAAAsB,OAAAujB,UACAxqB,KAAAohE,cAEAjE,EAAAn1D,WAAA,SACAojC,iBAAA,WAAAvkC,EAAAzN,KAAA,WACA,OACAmxB,QAAAvqB,KAAA0pB,KAAA1pB,KAAA0pB,KAAAplB,QAAAvJ,EACAyvB,UAAAxqB,KAAA0pB,KAAA1pB,KAAA0pB,KAAA3wB,UAAAgC,EACAsmE,gBAAArhE,KAAA0pB,KAAA1pB,KAAA0pB,KAAA1tB,UAAAjB,IAEIiF,OAEJ,IAAAo+C,GACA0iB,aAAA,mBACAC,cAAA,sBACAC,aAAA,mBAGA,QAAAM,KAAAthE,KAAA6gE,QACA,QAAA9nE,KAAA2wB,EACA1pB,KAAA6gE,QAAAS,GAAAvoE,GAAAqlD,EAAAkjB,GAIAthE,KAAAihE,UAAAv3C,EAAA7F,MAAA7jB,KAAAuhE,MACAvhE,KAAAihE,UAAAv3C,EAAAjhB,QAAAzI,KAAAwhE,QACAxhE,KAAAihE,UAAAv3C,EAAAV,UAAAhpB,KAAAyhE,kBAEAL,YAAA,WACA,IAAAh/C,EAAAupB,EAAA1c,WACAjvB,KAAAkhE,WAAAjnC,OAAA7X,EAAA,YAAAzc,EAAAvM,KAAA,SAAAuG,GACAK,KAAA+/B,cAAApgC,GAAAvE,QACI4E,OACJA,KAAAkhE,WAAAjnC,OAAA7X,EAAA,YAAAzc,EAAAvM,KAAA,SAAAuG,GACAK,KAAAsgC,cAAA3gC,GAAAvE,QACI4E,OACJA,KAAAkhE,WAAAjnC,OAAA7X,EAAA,UAAAzc,EAAAvM,KAAA,SAAAuG,GACAK,KAAA+gC,YAAAphC,GAAAvE,QACI4E,QAGJmhE,iBAAA,WACAnhE,KAAA0pB,MACAplB,GAAA,KACAvL,KAAA,KACAmK,IAAA,KACAw+D,QAAA,KACAC,QAAA,KACAlnE,IAAA,KACAuB,KAAA,MAEAgE,KAAA4gE,iBAEAY,QAAA,SAAAz+D,EAAAy6D,EAAA9zC,GACA,IAAAjK,EAAAksB,EAAAp6B,aACAqwD,EAAA5hE,KAAA6hE,kBAAA9+D,EAAA2mB,GACAA,EAAA1tB,MACA+G,EAAAyP,WAAA7M,EAAAotB,YAAA6uC,EAAA/uD,MAAA2qD,GACAz6D,EAAAyP,aACAzP,EAAAyP,WAAA,IAAAlY,KAAAqL,EAAAoL,WAAAoc,aAGApqB,EAAAuP,SAAA3M,EAAAotB,YAAA6uC,EAAAlkD,IAAA8/C,GACAz6D,EAAAuP,WACAvP,EAAAuP,SAAA,IAAAhY,KAAAqL,EAAAoL,WAAAqc,YAIArqB,EAAAuP,SAAAvP,EAAAyP,WAAAiN,EAAAqiD,eACAp4C,EAAA1tB,KACA+G,EAAAyP,WAAA7M,EAAA4M,kBAA6CC,WAAAzP,EAAAuP,SAAAG,UAAA,EAAAC,KAAA3P,IAE7CA,EAAAuP,SAAA3M,EAAA4M,kBAA2CC,WAAAzP,EAAAyP,WAAAC,SAAA,EAAAC,KAAA3P,KAE3C4C,EAAAmtC,kBAAA/vC,IAEA0+D,iBAAA,SAAA1+D,EAAAy6D,EAAA9zC,GACA,IAAAk4C,EAAA5hE,KAAA6hE,kBAAA9+D,EAAA2mB,GAGAq4C,EADAp2B,EAAAp6B,aACA6I,IAAAwnD,EAAA/uD,MAAA6W,EAAAxmB,IAAAxF,EAAAgsB,EAAAxmB,IAAAxF,EAAAkkE,EAAA/uD,MAEAiH,EAAAtc,KAAAkY,IAAA,EAAAqsD,GACAh/D,EAAAimB,SAAAxrB,KAAAib,IAAA,EAAAqB,EAAAtc,KAAA0iC,IAAA0hC,EAAAlkD,IAAAkkD,EAAA/uD,SAGAmvD,gBAAA,SAAAC,EAAAzE,GACA,IAAA0E,EACA,QAAAtqE,KAAAqqE,EAAA,CACA,IAAAv4C,EAAAu4C,EAAArqE,GACAmL,EAAA4C,EAAAsM,QAAAyX,EAAAplB,IAEAs9D,EAAA5hE,KAAA6hE,kBAAA9+D,EAAA2mB,GACAy4C,EAAAx8D,EAAAwtB,YAAA,IAAA74B,KAAAqL,EAAAoL,WAAAoc,WACAi1C,EAAAz8D,EAAAwtB,YAAA,IAAA74B,KAAAqL,EAAAoL,WAAAqc,WAEA,GAAAw0C,EAAAlkD,IAAA8/C,EAAA4E,EAAA,CACA,IAAAC,EAAAD,EAAAR,EAAAlkD,KACA2kD,EAAAH,QAAAnnE,IAAAmnE,KACAA,EAAAG,QAEK,GAAAT,EAAA/uD,MAAA2qD,EAAA2E,EAAA,CACL,IAAAG,EAAAH,EAAAP,EAAA/uD,OACAyvD,EAAAJ,QAAAnnE,IAAAmnE,KACAA,EAAAI,IAIA,OAAAJ,GAEAX,MAAA,SAAAx+D,EAAAy6D,EAAA9zC,GACA,IAAAk4C,EAAA5hE,KAAA6hE,kBAAA9+D,EAAA2mB,GACA64C,EAAA58D,EAAAotB,YAAA6uC,EAAA/uD,MAAA2qD,GACAgF,EAAA78D,EAAAotB,YAAA6uC,EAAAlkD,IAAA8/C,GACA+E,EAGIC,GAIJz/D,EAAAyP,WAAA+vD,EACAx/D,EAAAuP,SAAAkwD,IAJAz/D,EAAAuP,SAAA,IAAAhY,KAAAqL,EAAAoL,WAAAqc,UACArqB,EAAAyP,WAAA7M,EAAAotB,YAAAptB,EAAAwtB,YAAApwB,EAAAuP,WAAAsvD,EAAAlkD,IAAAkkD,EAAA/uD,UAJA9P,EAAAyP,WAAA,IAAAlY,KAAAqL,EAAAoL,WAAAoc,UACApqB,EAAAuP,SAAA3M,EAAAotB,YAAAptB,EAAAwtB,YAAApwB,EAAAyP,aAAAovD,EAAAlkD,IAAAkkD,EAAA/uD,UASAgvD,kBAAA,SAAA/oE,EAAA4wB,GAGA,OACA7W,MAHA6W,EAAA+4C,QAAA/4C,EAAA+4C,SAAA98D,EAAAwtB,YAAAr6B,EAAA0Z,YAIAkL,IAHAgM,EAAAg5C,QAAAh5C,EAAAg5C,SAAA/8D,EAAAwtB,YAAAr6B,EAAAwZ,YAMAqwD,uBAAA,SAAAtH,EAAAC,GACA,IAAAxhC,EAAAuhC,EAAA39D,EAAA49D,EAAA59D,EACAq8B,EAAAshC,EAAA99D,EAAA+9D,EAAA/9D,EACA,OAAAC,KAAAugE,KAAAjkC,IAAAC,MAEA6oC,WAAA,SAAAvpE,GACA,OAAAgF,MAAAqb,WAAArgB,KAAAwpE,SAAAxpE,IAGA0mC,cAAA,SAAApgC,GACA,GAAAK,KAAA0pB,KAAAoW,WAAA,CACA,IAAA58B,EAAA6D,EAAAjE,yBAAAnD,EAAAgG,EAAAspB,YAEAsvC,EAAAv+D,KAAA0pB,KAAAoW,WAAA4hC,QACAjD,EAAAz+D,KAAA0pB,KAAAoW,WAAA6hC,SAEArnE,KAAA0mC,MAAAhhC,KAAA0pB,KAAA4sB,UAAA,IACAt2C,KAAA4iE,WAAArE,IAAAv+D,KAAA4iE,WAAAnE,IAAAz+D,KAAA2iE,wBACAjlE,EAAA6gE,EACAhhE,EAAAkhE,GACMv7D,GAAA,KACNlD,KAAA4gC,WAAAjhC,GAMA,GAFAK,KAAA0pB,KAEA3wB,KAAA,CACA,IAAAshC,EAAAr6B,KAAA,IACA,OAEAA,KAAA8iE,gBAAAnjE,KAKAojE,qBAAA,SAAAvF,EAAAl5D,EAAAvL,EAAA2wB,EAAA/pB,GACA,IAAAoD,EAAA4C,EAAAsM,QAAA3N,GACAm/B,EAAA99B,EAAAjL,SAAgCqI,GAChCjJ,EAAA6L,EAAAjL,SAA4BqI,GAC5B/C,KAAAihE,UAAAloE,GAAAwB,MAAAyF,MAAAlG,EAAA0jE,EAAA9zC,IACA/jB,EAAAjL,MAAAqI,EAAAjJ,GAAA,GAEA6L,EAAAf,UAAA,cAAA7B,EAAAuB,GAAAvL,EAAAe,EAAA2pC,EAAA9jC,IACAgG,EAAAjL,MAAAqI,EAAAjJ,GAAA,GACA6L,EAAAm7B,YAAAx8B,IAGAw+D,gBAAA,SAAAnjE,GACA,IAAA+pB,EAAA1pB,KAAA0pB,KACAziB,EAAA0kC,EAAAp6B,aACA,GAAAmY,EAAA3wB,KAAA,CACA,IAAAmK,EAAA6D,EAAAjE,yBAAAnD,EAAAgsC,EAAA1c,YACA,GAAAvF,EAAAxmB,KAAAwmB,EAAAxmB,IAAAxF,GAAAwF,EAAAxF,EACA,OAEAgsB,EAAAxmB,MAEA,IAAA8/D,EAAAr9D,EAAAotB,YAAA7vB,EAAAxF,GACA,IAAAslE,GAAA3kE,MAAA2kE,EAAAjtB,WACA,OAGA,IAAAynB,EAAAt6D,EAAAxF,EAAAgsB,EAAAg4C,QACA3+D,EAAA4C,EAAAsM,QAAAyX,EAAAplB,IAEA,GAAAtE,KAAAihE,UAAAv3C,EAAA3wB,MAAA,CAEA,GAAA4M,EAAAykB,cAAArnB,IAAA4C,EAAAsB,OAAAg8D,cAAAv5C,EAAA3wB,MAAAkO,EAAAujB,UAAA3G,KAAA,CAEA,IAAAq/C,KACAA,EAAAx5C,EAAAplB,IAAAuC,EAAA/M,KAAA4vB,GACA,IAAA24C,EAAAriE,KAAAgiE,gBAAAn7D,EAAAnM,MAAAwoE,EAAAljE,KAAA4gE,cAAApD,GAMA,QAAA5lE,UALAmD,IAAAsnE,IACA7E,EAAA6E,GAGAriE,KAAA+iE,qBAAAvF,EAAA9zC,EAAAplB,GAAAolB,EAAA3wB,KAAA2wB,EAAA/pB,GACAK,KAAA4gE,aAAA,CACA,IAAAuC,EAAAnjE,KAAA4gE,aAAAhpE,GACAoI,KAAA+iE,qBAAAvF,EAAA2F,EAAA7+D,GAAA6+D,EAAApqE,KAAAoqE,EAAAxjE,SAGAK,KAAA+iE,qBAAAvF,EAAA9zC,EAAAplB,GAAAolB,EAAA3wB,KAAA2wB,EAAA/pB,GAEAgG,EAAA4tC,gBAAA7pB,EAAAplB,OAMAg8B,cAAA,SAAA3gC,EAAA2uC,GAGA,MAAA3uC,EAAAX,aAAAjE,IAAA4E,EAAAX,OAAA,CAGA,IAAAiI,EAAA0kC,EAAAp6B,aACAjN,EAAAqB,EAAAy3B,OAAAz9B,GACA+S,EAAA,KAKA,GAJA/M,EAAAyZ,aAAA9a,KACAoO,EAAA/M,EAAAsM,QAAA3N,KAGAqB,EAAA8jB,WAAA/W,KAAA1S,KAAA0pB,KAAA3wB,KAAA,CAEAiH,KAAAmhE,mBAEA7yB,KAAA3uC,EAAAhF,QAAAgF,EAAAE,WAEA,IAAAT,EAAA2H,EAAA5H,aAAAmvC,GACA5kB,EAAA1pB,KAAAojE,eAAAhkE,EAAAkvC,GAEA,IAAAlvC,IAAAsqB,EACA,OAAA4kB,EAAA7xC,WACAuD,KAAAsgC,cAAA3gC,EAAA2uC,EAAA7xC,iBAEA,EAGA,GAAAitB,EAOA,GAAAA,EAAA3wB,MAAA2wB,EAAA3wB,MAAAkO,EAAAujB,UAAA4D,QAAAnnB,EAAA,QAAAyiB,EAAA3wB,MAAA,CAIA,GAHAuL,EAAAqB,EAAAy3B,OAAAkR,GACA57B,EAAA/M,EAAA7L,KAAA6L,EAAAsM,QAAA3N,QAEAqB,EAAA8jB,WAAA/W,GAEA,OADA1S,KAAAmhE,oBACA,EAGA,GAAAx7D,EAAAykB,cAAA1X,KAAAzL,EAAAg8D,cAAAv5C,EAAA3wB,MAAAkO,EAAAujB,UAAAxB,SAEA,YADAhpB,KAAAmhE,mBAIAz3C,EAAAplB,KACA,IAAApB,EAAA6D,EAAAjE,yBAAAnD,EAAAgG,EAAAspB,YAEAvF,EAAAg4C,QAAAx+D,EAAAxF,EACAgsB,EAAAi4C,QAAAz+D,EAAA3F,EACAmsB,EAAAjvB,IAAAiY,EACA1S,KAAA0pB,KAAAoW,WAAApW,EACA1pB,KAAA0pB,KAAA4sB,UAAAh8C,KAAA0mC,WAGAhhC,KAAAmhE,wBA9BA,GAAAx7D,EAAAX,WAAA,gBAAAW,EAAAf,UAAA,eAAAxF,EAAA+B,MAAA,WACAmtC,EAAA7xC,WACA,OAAAuD,KAAAsgC,cAAA3gC,EAAA2uC,EAAA7xC,eA+BA4mE,oBAAA,SAAA3wD,EAAAgX,GACA,IAAAziB,EAAA0kC,EAAAp6B,aACAjL,EAAAX,EAAA0rB,WAAA/qB,KACAkX,EAAA7X,EAAA0rB,WAAA7T,KAMA,SAAA8lD,EAAA5wD,GACA,GAAA/M,EAAAsB,OAAAktC,kBAAA,CAEA,IAAAltC,EAAA0kC,EAAAp6B,aACA5L,EAAAyuC,WAAA1hC,EAAAF,gBAAAzX,EAAA2X,KACAA,EAAAF,WAAA7M,EAAA4M,kBACAC,WAAAE,EAAAF,WACAC,UAAA,EACAnM,KAAAW,EAAA+W,cACAtL,WAdAzL,EAAAykC,kBACAplC,EAAA,SACAkX,EAAAvW,EAAA4kC,WA6BAniB,EAAA3wB,MAAAkO,EAAAujB,UAAA/hB,OACAihB,EAAA1tB,MACA0W,EAAAF,WAAA7M,EAAAguC,WAAwChlC,KAAA+D,EAAAF,WAAAlM,OAAAkX,SACxC8lD,EAAA5wD,KAEAA,EAAAJ,SAAA3M,EAAAguC,WAAsChlC,KAAA+D,EAAAJ,SAAAhM,OAAAkX,SAlBtC,SAAA9K,GACA,GAAA/M,EAAAsB,OAAAktC,kBAAA,CAEA,IAAAltC,EAAA0kC,EAAAp6B,aACA5L,EAAAyuC,WAAA,IAAA95C,KAAAoY,EAAAJ,SAAA,QAAAvX,EAAA2X,KACAA,EAAAJ,SAAA3M,EAAA4M,kBACAC,WAAAE,EAAAJ,SACAG,SAAA,EACAnM,KAAAW,EAAA+W,cACAtL,WAUA6wD,CAAA7wD,IAEIgX,EAAA3wB,MAAAkO,EAAAujB,UAAA3G,OACJnR,EAAAF,WAAA7M,EAAAguC,WAAuChlC,KAAA+D,EAAAF,WAAAlM,OAAAkX,SACvC8lD,EAAA5wD,GACAA,EAAAJ,SAAA3M,EAAA4M,iBAAAG,KAGA8wD,mBAAA,SAAA9wD,EAAAgX,GACA,IAAAziB,EAAA0kC,EAAAp6B,cACAmY,MAAuB3wB,KAAAkO,EAAAujB,UAAA3G,OAEvB9qB,MAAAkO,EAAAujB,UAAA/hB,OACAihB,EAAA1tB,KACA0W,EAAAF,WAAA7M,EAAA0uC,oBAAiD1lC,KAAA+D,EAAAF,WAAAU,IAAA,SAAAR,SAEjDA,EAAAJ,SAAA3M,EAAA0uC,oBAA+C1lC,KAAA+D,EAAAJ,SAAAY,IAAA,OAAAR,SAE3CgX,EAAA3wB,MAAAkO,EAAAujB,UAAA3G,MACJle,EAAAsuC,oBAAAvhC,IAIA+wD,mBAAA,SAAAhgD,EAAAxc,EAAAyiB,EAAA/pB,GACA,IAAAoD,EAAA4C,EAAAsM,QAAAwR,GAQA,GANAxc,EAAAitC,WAAAjtC,EAAAktC,mBACAn0C,KAAAwjE,mBAAAzgE,EAAA2mB,GAGA1pB,KAAAqjE,oBAAAtgE,EAAA2mB,GAEA1pB,KAAA0jE,WAAA,gBAAAh6C,EAAA3wB,MAAA0qB,EAAAiG,EAAA3wB,KAAA4M,EAAA7L,KAAA4vB,EAAAjvB,KAAAkF,IAUI,CACJ,IAAA4qB,EAAA9G,EAEA9d,EAAAmtC,kBAAA/vC,GAEA/C,KAAAmhE,mBACAx7D,EAAAspC,WAAAlsC,EAAAuB,IACAtE,KAAA0jE,WAAA,eAAAh6C,EAAA3wB,MAAAwxB,EAAAb,EAAA3wB,KAAA4G,SAfAK,KAAAmhE,mBACA19C,GAAAiG,EAAAplB,KACAolB,EAAAjvB,IAAAkpE,cAAA,EACAh+D,EAAAjL,MAAAqI,EAAA2mB,EAAAjvB,KAAA,IAIAkL,EAAAm7B,YAAA/9B,EAAAuB,KAaAy8B,YAAA,SAAAphC,GAEA,IAAA+pB,EAAA1pB,KAAA0pB,KACA,GAAAA,EAAA3wB,MAAA2wB,EAAAplB,GAAA,CACA,IAAA2C,EAAA0kC,EAAAp6B,aAEAxO,EAAA4C,EAAAsM,QAAAyX,EAAAplB,IAEAs8D,EAAA5gE,KAAA4gE,aAEA,GADA5gE,KAAAyjE,mBAAA/5C,EAAAplB,GAAA2C,EAAAyiB,EAAA/pB,GACAgG,EAAAykB,cAAArnB,IAAAkE,EAAAg8D,cAAAv5C,EAAA3wB,MAAAkO,EAAAujB,UAAA3G,KACA,QAAAjsB,KAAAgpE,EACA5gE,KAAAyjE,mBAAA7C,EAAAhpE,GAAA0M,GAAA2C,EAAA25D,EAAAhpE,GAAA+H,GAIAK,KAAAmhE,oBAEAiC,eAAA,SAAAhkE,EAAA/D,GACA,IACAu3D,EADAjnB,EAAAp6B,aACAiZ,UAGAd,GAAe3wB,KAAA,KAAAiD,KAAA,MACf,QAHAoD,GAAA,IAAA+B,MAAA,KACA,IAGA,sBACA,yBACAuoB,EAAA3wB,KAAA65D,EAAA/uC,KACA,MACA,sBACA6F,EAAA3wB,KAAA65D,EAAAnqD,OAEA,IAAAm7D,EAAAvoE,EAAAiD,aAAA,sBAGAorB,EAAA1tB,KADA,cAAA4nE,EAKA,MACA,+BACAl6C,EAAA3wB,KAAA65D,EAAA5pC,SACA,MACA,yBACA,uBACAU,EAAA3wB,KAAA65D,EAAAxkC,OACA,MACA,QACA1E,EAAA,KAGA,OAAAA,GAIAkX,WAAA,SAAAjhC,GACA,IAAA+pB,EAAA1pB,KAAA0pB,KAAA1pB,KAAA0pB,KAAAoW,kBACApW,EAAAoW,WAEA,IAAArgB,EAAAksB,EAAAp6B,aACAjN,EAAAolB,EAAAplB,GACA,GAAAmb,EAAA,QAAAiK,EAAA3wB,OAAA4M,EAAAf,UAAA,gBAAAN,EAAAolB,EAAA3wB,KAAA4G,KAAAK,KAAA0jE,WAAA,eAAAh6C,EAAA3wB,MAAAuL,EAAAolB,EAAA3wB,KAAA4G,IAEI,QACJ+pB,EAAAoW,WAEA,IAAAptB,EAAA/M,EAAAsM,QAAA3N,GACAqB,EAAAykB,cAAA1X,IAAA/M,EAAAsB,OAAAg8D,cAAAv5C,EAAA3wB,MAAA0mB,EAAA+K,UAAA3G,MACAle,EAAA0Z,SAAA,SAAA5d,GACAzB,KAAA4gE,aAAAn/D,EAAA6C,IAAAqB,EAAAjL,OACA4J,GAAA7C,EAAA6C,GACA7J,IAAAgH,GACOzB,KAAA0pB,OACDhX,EAAApO,GAAAtE,MAGN2F,EAAAf,UAAA,2BAdA5E,KAAAmhE,oBAkBAuC,WAAA,SAAApC,EAAAvoE,EAAA8qE,GACAl+D,EAAA0tB,OAAArzB,KAAA6gE,QAAAS,GAAA,kBAAqDA,EAAA,KAErD,IAAAwC,EAAA9jE,KAAA6gE,QAAAS,GAAAvoE,GAMA,OAJA4M,EAAA0tB,OAAAywC,EAAA,4BAAmD/qE,EAAA,KACnD4M,EAAA0tB,OAAAwwC,EAAA,4BAGAl+D,EAAAX,WAAA8+D,IAGAn+D,EAAAf,UAAAk/D,EAAAD,IAGAlD,iBAAA,SAAAjuD,GACA,IAAAqxD,EAAA/jE,KAAA0pB,KACAziB,EAAA0kC,EAAAp6B,aACAwyD,IACAA,GAAkBhrE,KAAAkO,EAAAujB,UAAA3G,OAElB7jB,KAAAqjE,oBAAA3wD,EAAAqxD,IAEAl8D,WAAA,WACA7H,KAAAkhE,WAAA/4D,cAeAu4D,CAAA/0B,EAAAhmC,GAEAgmC,EAAArN,aACAA,EAAAp0B,KAAAvE,IAEAkC,WAAA,WACAy2B,EAAAz2B,aACAy2B,EAAA,0BC9gBA,IAAAz3B,EAAArP,EAAA,GACAwsE,EAAAxsE,EAAA,IACAysE,EAAAzsE,EAAA,IACAuP,EAAAvP,EAAA,GAEA+iE,EACA,SAAA50D,GACA,IAAAw3D,EAAAx3D,EAAAoC,UACA,OACA4yD,UAAA,SAAAhvB,GACA,IAAA1kC,EAAA0kC,EAAAtkC,QACAJ,EAAA7N,KAAAyN,EAAArM,QAAAyM,EAAA7N,MAAA6N,EAAA7N,KAAA,OACA6N,EAAAyoB,UAAA7oB,EAAArM,QAAAyM,EAAAyoB,WAAAzoB,EAAAyoB,UAAA,OAEAic,EAAAu4B,UAAAD,EAAAxD,gBACA90B,EAAAw4B,UAAAH,EAAAtD,gBACA/0B,EAAAw4B,UAAAjqC,OAAAyR,GAEA3rC,KAAAgV,gBAAAxd,EAAA,GAAAA,CAAAmO,IAEAm2D,cAAA,SAAAnwB,GACA3rC,KAAAokE,iBAAAz+D,GAEA3F,KAAAqkE,qBAAA1+D,EAAAgmC,GAEAA,EAAAw4B,UAAAj6D,KAAAyhC,EAAAhmC,GACAgmC,EAAAu4B,UAAAh6D,KAAAyhC,EAAAhmC,GAEA,YAAAgmC,EAAAtkC,QAAA/C,IACAtE,KAAAskE,UAAA34B,IAIAgxB,YAAA,SAAAhxB,GACA3rC,KAAAukE,gBAAA5+D,GACA3F,KAAAwkE,oBAAA7+D,IAEA2+D,UAAA,SAAA34B,GACAhmC,EAAAopB,MAAA4c,EAAA5c,MACAppB,EAAAqpB,YAAA2c,EAAA3c,YACArpB,EAAAspB,WAAA0c,EAAA1c,WACAtpB,EAAAupB,SAAAyc,EAAAzc,SACAvpB,EAAAwpB,YAAAwc,EAAAxc,YACAxpB,EAAAypB,WAAAuc,EAAAvc,YAGAm1C,gBAAA,WACAvkE,KAAAgV,gBAAAnN,aACA7H,KAAAgV,gBAAA,MAGAovD,iBAAA,SAAAz+D,GACA,SAAA8+D,EAAAngE,EAAA3E,GACA,GAAA2E,GAAAtE,KAAA4E,UAAA,kBAAAN,EAAA3E,IAAA,CAEA,IAAA0c,EAAArc,KAAA8e,QAAAxa,GACA,GAAAtE,KAAAypB,WAAApN,GAAA,OAEA,IACA+f,EAAAp8B,KAAAka,OAAAK,OAAA8B,KAAA,IAAArc,KAAAma,UAAAuqD,iBAAA1kE,KAAA8e,QAAAxa,IAAA,IAAAtE,KAAAka,OAAAK,OAAA+B,sBAEA3f,OAAA49B,WAAA,WACA50B,EAAA42B,gBAAAH,EAJA,GAIA,WACAz2B,EAAA0sD,WAAA/tD,MAEOtE,KAAAiH,OAAAwlB,MAAA,QAIPzsB,KAAAgV,gBAAA3K,SAAA,0BAAA1E,EAAAvM,KAAA,SAAAuG,EAAA8C,GACA,IAAA6B,EAAAtE,KAAAo9B,OAAAz9B,EAAAK,KAAAiH,OAAA0oB,gBACArrB,GACAtE,KAAA4E,UAAA,eAAAN,EAAA3E,KAEKgG,GAAA3F,KAAA+uB,OAEL/uB,KAAAgV,gBAAA3K,SAAA,2BAAA1E,EAAAvM,KAAA,SAAAuG,EAAA8C,GACA,IAAAS,EAAA6D,EAAAjE,yBAAAnD,EAAAgG,EAAAspB,YACAtgB,EAAAhJ,EAAAotB,YAAA7vB,EAAAxF,GACAinE,EAAAnnE,KAAAiO,MAAA9F,EAAAytB,kBAAAzkB,IAEAi2D,EAAAj/D,EAAA0rB,WAAAhD,QAAAs2C,GAEAh/D,EAAAf,UAAA,gBAAAjF,EAAAilE,KACKj/D,GAAA3F,KAAA+uB,OAEL/uB,KAAAgV,gBAAA3K,SAAA,gCAAA1E,EAAAvM,KAAA,SAAAuG,EAAA2E,EAAA7B,GACA6B,EAAAtE,KAAAo9B,OAAAz9B,EAAAgG,EAAAsB,OAAA0oB,gBACA80C,EAAA1sE,KAAAiI,KAAAsE,EAAA3E,IACKgG,GAAA3F,KAAA+uB,OAEL/uB,KAAAgV,gBAAA3K,SAAA,iCAAA1E,EAAAvM,KAAA,SAAAuG,EAAA2E,EAAA7B,GACA6B,EAAAtE,KAAAo9B,OAAAz9B,GAAA,IACA+S,EAAA1S,KAAAiS,QAAA3N,GAEA+X,EAAA,KAUA,OATA5Z,EAAAhG,YAAAsK,EAAA5H,aAAAsD,EAAAhG,cAEA4f,EADAtV,EAAA5H,aAAAsD,EAAAhG,YAAA6C,QAAA,YACAoT,EAAAuM,QAAA,GAEAvM,EAAAsM,QAAA,IAGA3C,GACAooD,EAAA1sE,KAAAiI,KAAAqc,EAAA1c,IACA,GACKgG,GAAA3F,KAAA+uB,QAGLs1C,qBAAA,SAAA1+D,EAAAgmC,GACA,IAAAxhC,EAAAwhC,EACAwxB,EAAAn1D,WAAA,SACAojC,iBAAA,2BACA,OACA1rB,WAAAvV,EAAAklB,OAAAllB,EAAAklB,OAAA/oB,UAAAvL,EACA8pE,WAAA16D,EAAAklB,OAAAllB,EAAAklB,OAAA7R,UAAAziB,MAKAypE,oBAAA,WACArH,EAAAn1D,WAAA,SACA88D,mBAAA,oBAOAntE,EAAAD,QAAA6iE,mBCjIA,IAAAxzD,EAAAvP,EAAA,GA0OAG,EAAAD,SACAwS,KAzOA,SAAAvE,EAAAsJ,GACA,IAAAmuD,EAAAz3D,EAAAoC,UAAAC,WAAA,OAEA,GAAAiH,EAAA5H,QAAAjO,MAAAuM,EAAAiL,aAAA3B,EAAA5H,QAAAjO,MAAA,CAYA,IAAAk0D,EAAA,IAAA8P,EAAAnuD,EAAAwC,YAAqC6rD,mBAAA,KACrC33D,EAAAnL,QAAAyU,EAAAsC,aAAAwzD,mBACAzX,EAAArmD,OAAAo2D,YAAApuD,EAAAsC,aAAAwzD,iBAEAzX,EAAA7xD,YAAA,oBAAAkK,EAAAvM,KAAA,SAAAqB,EAAAkF,GACA,IAAAtE,EAAA+hC,EAAAz9B,GACA,IAAAtE,EAAA,SACAsK,EAAAq/D,eAAAr/D,EAAAs/D,iBAEA,IAAA3gE,EAAAjJ,EAAAiD,aAAA2Q,EAAA5H,QAAAsI,gBAIA+C,EAFAwyD,IAEArzD,QAAAvN,GAEA,OAAAqB,EAAA8jB,WAAA/W,KAGA46C,EAAArmD,OAAAk+D,mBAAAzyD,EAAAuP,QACAtc,EAAAf,UAAA,kBAAAN,EAAA3E,EAAAhF,QAAAgF,EAAAE,WAAAF,UAAA,IAIEgG,IAEF2nD,EAAA7xD,YAAA,mBAAAkK,EAAAvM,KAAA,SAAAqB,EAAAkF,GACA,IAAAtE,EAAA+hC,EAAAz9B,GACA2tD,EAAArmD,OAAAmpD,OAAA5uD,UAAAnG,EAAA+pE,UACA,IAAAt8C,EAAAwkC,EAAArmD,OAAAmpD,OAAA1uD,WACAonB,IACAA,EAAA5qB,MAAAorB,SAAA,UAGAgkC,EAAArmD,OAAA3C,GAAAjJ,EAAAiD,aAAA2Q,EAAA5H,QAAAsI,gBAEA,IAAAG,EAAAo1D,IAEAxyD,EAAA5C,EAAA+B,QAAAy7C,EAAArmD,OAAA3C,IACAgpD,EAAArmD,OAAAsC,MAAAuG,EAAAkU,eAAAspC,EAAArmD,OAAA3C,IACAgpD,EAAArmD,OAAA3D,OAAAoP,EAAApP,OACAoP,EAAAuP,OAAA,EACAvP,EAAA2yD,cAAA,EACArlE,KAAA67B,eACEl2B,IAEF2nD,EAAAgY,gBAAA,SAAAzgD,GAIA,IAHA,IAAA0gD,EAAA,KAEA53C,EADAu3C,IACAn9C,WACAnwB,EAAA,EAAAoK,EAAA2rB,EAAAvzB,OAAqCxC,EAAAoK,EAASpK,IAC9C+1B,EAAA/1B,GAAA4qB,QAAAqC,IACA0gD,EAAA53C,EAAA/1B,IAGA,OAAA2tE,IAAAjhE,GAAA,MAEAgpD,EAAAkY,YAAA7/D,EAAAvM,KAAA,SAAAuG,GACA,IAAAuD,EAAA6D,EAAA7G,gBAAA+O,EAAAwC,YACA3B,EAAAo1D,IAEAxnE,EAAAwF,EAAAxF,EACAH,EAAAoC,EAAAuD,IAAA3F,EAAA,GAEA0J,EAAAgI,EAAAsC,aAEAhU,EAAA2F,EAAA3F,MAAA2F,EAAA3F,GACA,IAAAkoE,EAAA31D,EAAAkG,eAAA/O,EAAA8O,WAKA,OAJAxY,EAAA2F,EAAA3F,EAAAkoE,EAAAx+D,EAAA8O,aAAAxY,EAAA2F,EAAA3F,EAAAkoE,EAAAx+D,EAAA8O,YAEA7S,EAAAxF,IACAwF,EAAA3F,IACA2F,GACEyC,GACF2nD,EAAAoY,YAAA//D,EAAAvM,KAAA,SAAAuG,GACA,IAAAuD,EAAA6D,EAAA7G,gBAAA+O,EAAAwC,YAEAlU,EAAAoC,EAAAsD,MAAAC,EAAA3F,GAAA0R,EAAA+E,OAAAtX,WAAA,GAGA,OAFAa,EAAA,IACAA,EAAA,GACAA,GACEoI,GACF2nD,EAAAqY,YAAAhgE,EAAAvM,KAAA,SAAAmE,EAAAqoE,GAEA,IAAA3+D,EAAAgI,EAAAsC,aACAzB,EAAAo1D,IAEA3nE,KAAA,EAEA,IAAAgM,EAAA/L,KAAAiO,MAAAlO,EAAA0J,EAAA8O,YAGA,OAFAxM,EAAAq8D,EAAAr8D,IAAA,EAAAA,GAEAuG,EAAAkG,eAAA,EACA,KAEAlG,EAAAoX,aAAA3d,IACE5D,GACF2nD,EAAA7xD,YAAA,aAAAkK,EAAAvM,KAAA,SAAAqB,EAAAkF,GACA,IAAAi/D,EAAAtR,EAAArmD,OACA/D,EAAAoqD,EAAAkY,YAAA7lE,GAEAsH,EAAAgI,EAAAsC,aACAzB,EAAAo1D,IAGAtG,EAAAxO,OAAAlyD,MAAAlC,KAAAkH,EAAAxF,EAAA,QACAkhE,EAAAxO,OAAAlyD,MAAAnC,IAAAmH,EAAA3F,EAAA,KAGA,IAAAqU,EAAA9B,EAAA+B,QAAAy7C,EAAArmD,OAAA3C,IACAuhE,EAAAvY,EAAAoY,YAAA/lE,GACAtE,EAAAiyD,EAAAqY,YAAAE,EAAA/1D,EAAA0G,aAAA5E,EAAAtN,KASA,SAAAwhE,EAAA5uB,EAAAtlC,GACA,OAAA9B,EAAAzM,UAAA0iE,EAAAzhE,GAAAsN,EAAAtN,MAAA4yC,EAAA10B,QAAA5Q,EAAA4Q,QAAAvb,EAAA++D,mBAGA,GAXAl2D,EAAAqB,OAAA9V,KACAA,EAAAiyD,EAAAgY,gBAAAr+D,EAAA++D,kBAAAp0D,EAAA4Q,OAAA,KACA8qC,EAAArmD,OAAA3C,KACAjJ,EAAA,MAQAyU,EAAAqB,OAAA9V,GAAA,CACA,IAAA0qE,EAAAj2D,EAAA+B,QAAAxW,GAEA,GAAAyU,EAAA0G,aAAAuvD,EAAAzhE,IAAA2C,EAAA8O,WAAA9O,EAAA8O,WAAA,EAAA8vD,EAAA,CAEA,IAAAt8D,EAAAuG,EAAA0G,aAAAuvD,EAAAzhE,IACA2hE,EAAAn2D,EAAA2D,QAAAsyD,EAAAzhE,IACA4yC,EAAApnC,EAAA+B,QAAAo0D,GACA,GAAA/uB,EAAA,CACA,GAAAA,EAAA5yC,IAAAsN,EAAAtN,GAIA,OAAA2C,EAAA++D,mBACAl2D,EAAAzM,UAAAuO,EAAAtN,GAAAyhE,EAAAzhE,KAAA,GAAAwL,EAAAsT,YAAA2iD,EAAAzhE,IAAAlK,YAGA0V,EAAA+T,KAAAjS,EAAAtN,GAAAwL,EAAAkU,eAAA+hD,EAAAzhE,IAAA,EAAAwL,EAAAwS,UAAAyjD,EAAAzhE,UAKA,EAZAyhE,EAAA7uB,OAoBA,GAHA+uB,EAAAn2D,EAAAoX,aAAA3d,GAGAu8D,EAFA5uB,EAAApnC,EAAA+B,QAAAo0D,GAEAr0D,IAAAslC,EAAA5yC,IAAAsN,EAAAtN,GAEA,YADAwL,EAAA+T,KAAAjS,EAAAtN,IAAA,EAAAwL,EAAAwS,UAAA40B,EAAA5yC,UAKA,GAAA2C,EAAA++D,mBACAD,EAAAzhE,IAAAsN,EAAAtN,IAAAwhE,EAAAC,EAAAn0D,GAAA,CACA,IAAA9B,EAAAsU,SAAA2hD,EAAAzhE,IAGA,OAFAyhE,EAAA9jD,OAAA,OACAnS,EAAA+T,KAAAjS,EAAAtN,IAAA,EAAAyhE,EAAAzhE,IAGA,GAAAwL,EAAA0G,aAAAuvD,EAAAzhE,KAAA2C,EAAA8O,WAAA,EAAA8vD,EAAA,OAIAt8D,EAAAuG,EAAA0G,aAAAuvD,EAAAzhE,IAMA,IANA,IACA4hE,EAAAp2D,EAAAoX,aAAA3d,EAAA,GAEAqlB,EAAA9e,EAAA+B,QAAAq0D,GAEA1I,EAAA,IACA5uC,KAAAtqB,IAAAyhE,EAAAzhE,KAAAiF,EAAAi0D,GAAA,GAEA0I,EAAAp2D,EAAAoX,aAAA3d,EAAAi0D,GACA5uC,EAAA9e,EAAA+B,QAAAq0D,GACA1I,IAGA,GAAA5rD,EAAAtN,IAAAyhE,EAAAzhE,GAAA,OAEAwhE,EAAAC,EAAAn0D,MAAAtN,IAAAyhE,EAAAzhE,GACAwL,EAAA+T,KAAAjS,EAAAtN,GAAA,IAAAyhE,EAAAzhE,IAEIyhE,EAAAvjD,QAAA5Q,EAAA4Q,OAAA,GAAA1S,EAAAsT,YAAA2iD,EAAAzhE,IAAAlK,OAGAw0B,GAAAk3C,EAAAl3C,EAAAhd,MAAAtN,IAAAsqB,EAAAtqB,IACJwL,EAAA+T,KAAAjS,EAAAtN,IAAA,EAAAwL,EAAAwS,UAAAsM,EAAAtqB,KAHAwL,EAAA+T,KAAAjS,EAAAtN,GAAA,EAAAyhE,EAAAzhE,IAOA,UACEqB,IAEF2nD,EAAA7xD,YAAA,YAAAkK,EAAAvM,KAAA,WACA,IAAA0W,EAAAo1D,IACAxyD,EAAA5C,EAAA+B,QAAAy7C,EAAArmD,OAAA3C,IACAoO,EAAA2yD,cAAA,EACA3yD,EAAAuP,MAAAqrC,EAAArmD,OAAAk+D,oBAEA,IAAAnlE,KAAA4E,UAAA,sBAAA0oD,EAAArmD,OAAA3C,GAAAgpD,EAAArmD,OAAA3D,OAAAgqD,EAAArmD,OAAAsC,SACAuG,EAAA+T,KAAAypC,EAAArmD,OAAA3C,GAAAgpD,EAAArmD,OAAAsC,MAAA+jD,EAAArmD,OAAA3D,QACAoP,EAAA8gD,aAAA,MAEAxzD,KAAA4E,UAAA,gBAAA0oD,EAAArmD,OAAA3C,GAAAoO,EAAA8gD,eAGA1jD,EAAA8F,QAAAlD,EAAApO,KAEEqB,IA9NF,SAAAy3B,EAAAz9B,GACA,OAAAoH,EAAAnE,gBAAAjD,EAAAsP,EAAA5H,QAAAsI,gBAGA,SAAAu1D,IACA,OAAAv/D,EAAAiL,aAAA3B,EAAA5H,QAAAjO,0BCdA,IAAAyN,EAAArP,EAAA,GACA2uE,EAAA3uE,EAAA,IAEA+iE,GADA/iE,EAAA,IAEA,SAAAmO,GACA,OACAg1D,UAAA,SAAA1rD,GACAA,EAAA5H,QAAAR,EAAAnM,MAAAuU,EAAA5H,SACAjO,KAAA,SAEA,QAAA6V,EAAA5H,QAAA/C,KACAtE,KAAAomE,YAAAn3D,GACAtJ,EAAA0gE,IAAAC,cAAA3gE,EAAA0gE,IAAAE,eAAAv3D,cAAAC,GACAtJ,EAAA0gE,IAAAC,cAAAp8D,QAKAlK,KAAAgV,gBAAAxd,EAAA,GAAAA,CAAAmO,IAEAm2D,cAAA,SAAA7sD,GACAA,EAAAsC,aACAouC,cACAwmB,EAAAj8D,KAAA+E,EAAA1H,OAAA0H,GAGAjP,KAAAwmE,WAAAv3D,EAAAtJ,GACA,QAAAsJ,EAAA5H,QAAA/C,IACAtE,KAAAskE,UAAAr1D,IAGA0tD,YAAA,SAAA1tD,GACAtJ,EAAA0gE,IAAAC,cAAAz+D,aACA7H,KAAAymE,YAAAx3D,EAAAtJ,IAGA6gE,WAAA,SAAAv3D,EAAAtJ,GACA3F,KAAAgV,gBAAA3K,SAAA,oBAAA1E,EAAAvM,KAAA,SAAAuG,EAAA2E,EAAA7B,GACA,IAAAwE,EAAAgI,EAAAsC,aACA,UAAAjN,EAAA,CACA,IAAAoO,EAAA1S,KAAAiS,QAAA3N,GACA2C,EAAAy/D,kBAAA/gE,EAAAy4B,oBAAAz+B,IACAK,KAAAk9B,SAAAxqB,EAAAF,YACA7M,EAAAf,UAAA,kBAAAN,EAAA7B,MAEKkD,GAAAsJ,EAAAsF,OAELvU,KAAAgV,gBAAA3K,SAAA,+BAAA1E,EAAAvM,KAAA,SAAAuG,EAAA2E,EAAA7B,GACA,IAAAsJ,EAAAtJ,EAAAnE,aAAA,kBAEA,GAAAqH,EAAAf,UAAA,qBAAAmH,EAAApM,IAAA,CAGA,IAAAsH,EAAAgI,EAAAsC,aAEA,UAAAxF,GAMA,GAAA9E,EAAA0T,KAAA,CAIA,IAHA,IACAs8C,EADA0P,EAAA56D,EAGAnU,EAAA,EAAqBA,EAAAqP,EAAAmO,QAAAhb,OAA2BxC,IAChD,GAAAqP,EAAAmO,QAAAxd,GAAAO,MAAA4T,EAAA,CACAkrD,EAAAhwD,EAAAmO,QAAAxd,GACA,MAIA,GAAAq/D,QAAAl8D,IAAAk8D,EAAAt8C,OAAA,IAAAs8C,EAAAt8C,QACAgsD,EAAA1P,EAAAt8C,MAGA,OAIA,IAAAA,EAAA3a,KAAA4a,OAAA5a,KAAA4a,MAAA9H,WAAA9S,KAAA4a,MAAAziB,MAAA4T,EAAA/L,KAAA4a,MAAA9H,UAAA,OAEA6H,EAAA,QAAAA,EAAA,aACA3a,KAAA4a,OACAziB,KAAA4T,EACA+G,UAAA6H,GAEA3a,KAAA2a,KAAAgsD,EAAA,QAAAhsD,SA/BAhV,EAAAoC,UAAAC,WAAA,eACA4+D,YAAA,oBAAA33D,EAAAsF,OAAA5U,EAAAsH,EAAA0/B,YAgCKhhC,GAAAsJ,EAAAsF,OAELvU,KAAAgV,gBAAA3K,SAAA,oBAAA1E,EAAAvM,KAAA,SAAAuG,EAAA2E,EAAA7B,GAEA,IADAwM,EAAAsC,aACAk2B,SAKA,OAFAznC,KAAAiyC,cAAA3tC,GAAAqB,EAAAsB,OAAA0/B,UAEA,GACKhhC,GAAAsJ,EAAAsF,QAILkyD,YAAA,SAAAx3D,EAAAtJ,GACA3F,KAAAgV,gBAAAnN,aACA7H,KAAAgV,gBAAA,MAGAsvD,UAAA,SAAAr1D,GACAtJ,EAAA4O,MAAAtF,EAAAsF,MACA5O,EAAA8O,YAAAxF,EAAAwF,YACA9O,EAAA8L,WAAAxC,EAAAwC,YAEA20D,YAAA,SAAAn3D,GACAtJ,EAAA6J,eAAA7J,EAAAvM,KAAA6V,EAAAO,eAAAP,GAEAA,EAAAxT,YAAA,iCACA,OAAAkK,EAAAf,UAAA,sBAAAzJ,aAEA8T,EAAAxT,YAAA,4BACA,OAAAkK,EAAAf,UAAA,iBAAAzJ,aAEA8T,EAAAxT,YAAA,+BACA,OAAAkK,EAAAf,UAAA,oBAAAzJ,aAGA8T,EAAAxT,YAAA,kCAAA2Z,EAAAyxD,GACAlhE,EAAAsB,OAAAuO,WAAAqxD,QAOAlvE,EAAAD,QAAA6iE,mBCtIA,IAAA1gE,EAAArC,EAAA,GAgHAG,EAAAD,QA9GA,SAAAiO,GA2GA,OA1GA,SAAAiM,EAAAtG,GAIA,IAAA8J,EAAA9J,EAAAkE,iBACAvI,EAAAqE,EAAAiG,aACA4I,EAAA7O,EAAAgd,gBAEAxY,EAAAxE,EAAAjE,QAAAwO,SAEA5O,EAAAmT,MACAhF,IAAAiF,WAMA,IAHA,IAAAC,KAGA1iB,EAAA,EAAiBA,EAAAwd,EAAAhb,OAAoBxC,IAAA,CACrC,IAEAwQ,EAEAvP,EACA6nD,EALAjmC,EAAA7iB,GAAAwd,EAAAhb,OAAA,EACA+e,EAAA/D,EAAAxd,GAKA,OAAAuhB,EAAAhhB,MAGAU,EAAA,SAFAiuE,EAAAnhE,EAAAwO,SAAAwsC,wBAAAxnC,IAEA,4BACAunC,EAAA,KAGA7nD,EADAsgB,EAAA+Q,SACA/Q,EAAA+Q,SAAAtY,GAEAA,EAAAuH,EAAAhhB,MAEA0B,EAAAQ,OAAAxB,KACAA,EAAAshB,EAAA4sD,UAAAluE,EAAA+Y,IACA8uC,EAAA7nD,EACAA,EAAA,mCAAAA,EAAA,UAEA,IAAAgJ,EAAA,cAAA4Y,EAAA,uBAEAusD,KACA,GAAA7tD,EAAA6tD,KAAA,CACA,QAAAh7B,EAAA,EAAmBA,EAAAp6B,EAAA4Q,OAAiBwpB,IACpCg7B,EAAA9kE,KAAAiY,EAAA8sD,YAAAr1D,IAEA9B,EAAAsU,SAAAxS,EAAAtN,MAAAqB,EAAAuc,YAAAtQ,IAEAo1D,EAAA9kE,KAAAiY,EAAA+sD,UAAAt1D,IACAo1D,EAAA9kE,KAAAiY,EAAAgtD,YAAAv1D,MAEAo1D,EAAA9kE,KAAAiY,EAAAitD,WAAAx1D,IACAo1D,EAAA9kE,KAAAiY,EAAAktD,UAAAz1D,KAGA,IAAA1T,EAAA,UAAAib,EAAAxb,OAAA8c,EAAA,YACAza,KAAAxF,QAAA2e,EAAAmuD,SACAppE,GAAA,cAAAib,EAAAmuD,MAAA,KAEA,IAAAR,EAAAnhE,EAAAwO,SAAAssC,mBAAAtnC,EAAAunC,GAEAsmB,EAAA9kE,KAAArJ,GACAoO,EAAAmT,MACA4sD,IAAA3sD,WAEAjS,EAAA,eAAAvG,EAAA,wBAAAjK,EAAA,uBAAAuhB,EAAAhhB,KAAA,YAAA+F,EAAA,KAAA4oE,EAAA,IAAAE,EAAAzmE,KAAA,aACA+Z,EAAApY,KAAAkG,GAOA,GALAvG,EAAA8D,EAAAisC,mBAAAhgC,EAAAtN,IAAA,eACAzC,GAAA+P,EAAA,qCAEA/P,GAAA+P,EAAA2tC,qBAAA,IAAA3tC,EAAA2tC,qBAAA,GAEAplC,EAAAotD,eAAA,CACA,IAAAC,EAAArtD,EAAAotD,eAAAxvE,KAAA4N,EAAAiM,EAAAY,WAAAZ,EAAAU,SAAAV,GACA41D,IACA3lE,GAAA,IAAA2lE,GAGA13D,EAAA0iC,iBAAA5gC,EAAAtN,KACAzC,GAAA,mBAGA,IAAAxG,EAAAiB,SAAAmD,cAAA,OACApE,EAAA+D,UAAA,YAAAyC,EAAA,cAAA8D,EAAA6iB,YAAA5W,EAAAJ,MACA,IAAA5T,EAAA0N,EAAAgE,gBAiBA,OAhBAjU,EAAA6C,MAAAN,SAAA,KACAvC,EAAA6C,MAAA8c,WAAApd,EAAA,KAEAqJ,EAAAuQ,kBACAnc,EAAA6C,MAAAorB,SAAA,WACAjuB,EAAA6C,MAAAlC,KAAA,MACAX,EAAA6C,MAAAnC,IAAAuP,EAAA+D,WAAAuC,EAAAtN,IAAA,MAGAgH,EAAAjE,QAAAsI,gBACAtU,EAAAqU,aAAApE,EAAAjE,QAAAsI,eAAAiC,EAAAtN,IAGAqB,EAAAwO,SAAAurC,YAAA9tC,EAAAvW,GAEAA,EAAAmG,UAAA8Y,EAAA/Z,KAAA,IACAlF,mBCmVA1D,EAAAD,QA5bA,SAAAiO,GAkGA,IAAA8hE,GACAC,YAAA,KACAC,MAAQ3rE,KAAA,OAAAC,MAAA,QAAA2rE,GAAA,KAAAC,KAAA,QACRC,QACAx/D,MAAA,WACAtI,KAAA0nE,YAAA,KACA1nE,KAAA8nE,SAEAC,MAAA,SAAA7kE,GACAlD,KAAA0nE,YAAA/hE,EAAA7L,KAAAoJ,IAEA8kE,UAAA,SAAAC,GACAjoE,KAAAsI,QACAtI,KAAA+nE,MAAAE,EAAA,IACA,QAAArwE,EAAA,EAAiBA,EAAAqwE,EAAA7tE,OAAiBxC,IAClCoI,KAAAkoE,QAAAD,EAAArwE,IAEA,OAAAoI,KAAAmoE,YAEAD,QAAA,SAAAhlE,GACA,IAAAg0C,EAAAvxC,EAAA7L,KAAAoJ,GACA0rB,EAAA5uB,KAAA0nE,YAEAU,EAAApoE,KAAAqoE,UAAAz5C,EAAAsoB,GACAl3C,KAAA8nE,KAAA5lE,KAAAkmE,GACApoE,KAAA0nE,YAAAxwB,GAEAixB,SAAA,WACA,OAAAnoE,KAAA8nE,MAEAQ,kBAAA,SAAA7uD,EAAAnO,GACA,IACApH,EADA+C,EAAAqE,EAAAiG,aAEAg3D,EAAAthE,EAAAuhE,mBAEAjrE,GADA0J,EAAA2hB,gBACAnP,EAAAlc,GAAA0J,EAAA8O,WAAAwyD,GAAA,GACA,OAAA9uD,EAAA3G,WACA,KAAA9S,KAAA2nE,KAAA3rE,KACAkI,GACAnI,IAAAwB,EACAK,OAAA2qE,EACAvtD,WAAAutD,EACAvsE,KAAAyd,EAAA/b,EAAA+b,EAAAlP,KAAAg+D,EAAA,EACA5qE,MAAA8b,EAAAlP,KAAAg+D,GAEA,MACA,KAAAvoE,KAAA2nE,KAAA1rE,MACAiI,GACAnI,IAAAwB,EACAyd,WAAAutD,EACA3qE,OAAA2qE,EACAvsE,KAAAyd,EAAA/b,EAAA6qE,EAAA,EACA5qE,MAAA8b,EAAAlP,KAAAg+D,GAEA,MACA,KAAAvoE,KAAA2nE,KAAAC,GACA1jE,GACAnI,IAAAwB,EAAAkc,EAAAlP,KACAyQ,WAAAvB,EAAAlP,KAAAg+D,EACA3qE,OAAA6b,EAAAlP,KAAAg+D,EACAvsE,KAAAyd,EAAA/b,EAAA6qE,EAAA,EACA5qE,MAAA4qE,GAEA,MACA,KAAAvoE,KAAA2nE,KAAAE,KACA3jE,GACAnI,IAAAwB,EACAyd,WAAAvB,EAAAlP,KAAAg+D,EACA3qE,OAAA6b,EAAAlP,KAAAg+D,EACAvsE,KAAAyd,EAAA/b,EAAA6qE,EAAA,EACA5qE,MAAA4qE,GAOA,OAAArkE,GAEAukE,eAAA,SAAAhvD,EAAAnO,GACA,IACApH,EADA+C,EAAAqE,EAAAiG,aAEAm3D,EAAAzhE,EAAA2hB,gBACA2/C,EAAAthE,EAAAuhE,mBACAj+D,EAAAkP,EAAAlP,KAAAm+D,EACA,OAAAjvD,EAAA3G,WACA,KAAA9S,KAAA2nE,KAAA3rE,KACA,KAAAgE,KAAA2nE,KAAA1rE,MACAiI,GACAtG,OAAA8qE,EACA/qE,MAAA4M,EACAo+D,WAAAJ,EAAAG,GAAA,EACAE,YAAAL,EAAAG,GAAA,GAEA,MACA,KAAA1oE,KAAA2nE,KAAAC,GACA,KAAA5nE,KAAA2nE,KAAAE,KACA3jE,GACAtG,OAAA2M,EACA5M,MAAA+qE,EACAC,WAAAJ,EAAAG,GAAA,EACAE,YAAAL,EAAAG,GAAA,GAQA,OAAAxkE,GAEA2kE,YAAA,SAAApvD,EAAAiE,EAAApS,GACA,IAAApI,EAAAlD,KAAAsoE,kBAAA7uD,EAAAnO,GACAie,EAAAjtB,SAAAmD,cAAA,OACA8pB,EAAArrB,MAAA2C,SACA,OAAAqC,EAAAnH,IAAA,KACA,QAAAmH,EAAAlH,KAAA,KACA,UAAAkH,EAAAtF,OAAA,KACA,SAAAsF,EAAAvF,MAAA,MACA4C,KAAA,KACAgpB,EAAAnqB,UAAA,qBAEA,IAAA0pE,EAAA9oE,KAAAyoE,eAAAhvD,EAAAnO,GACAihB,EAAAjwB,SAAAmD,cAAA,OAWA,OAVA8sB,EAAAruB,MAAA2C,SACA,UAAAioE,EAAAlrE,OAAA,KACA,SAAAkrE,EAAAnrE,MAAA,KACA,cAAAmrE,EAAAH,UAAA,KACA,eAAAG,EAAAF,WAAA,MACAroE,KAAA,KAEAgsB,EAAAntB,UAAA,mBAAAqa,EAAA3G,UACAyW,EAAAzoB,YAAAyrB,GAEAhD,GAEA8+C,UAAA,SAAA1gD,EAAAC,GACA,IAAA9U,EAAA9S,KAAA+oE,cAAAphD,EAAAC,GACAohD,GACAtrE,EAAAiqB,EAAAjqB,EACAH,EAAAoqB,EAAApqB,EACAuV,UAAA9S,KAAA+oE,cAAAphD,EAAAC,IAOA,OALA9U,GAAA9S,KAAA2nE,KAAA3rE,MAAA8W,GAAA9S,KAAA2nE,KAAA1rE,MACA+sE,EAAAz+D,KAAA/M,KAAA0iC,IAAAvY,EAAAjqB,EAAAkqB,EAAAlqB,GAEAsrE,EAAAz+D,KAAA/M,KAAA0iC,IAAAvY,EAAApqB,EAAAqqB,EAAArqB,GAEAyrE,GAEAD,cAAA,SAAAphD,EAAAC,GAWA,OATAA,EAAAlqB,EAAAiqB,EAAAjqB,EACAsC,KAAA2nE,KAAA3rE,KACG4rB,EAAAlqB,EAAAiqB,EAAAjqB,EACHsC,KAAA2nE,KAAA1rE,MACG2rB,EAAArqB,EAAAoqB,EAAApqB,EACHyC,KAAA2nE,KAAAE,KAEA7nE,KAAA2nE,KAAAC,KAOAqB,GAEAnB,QACAx/D,MAAA,WACAtI,KAAA8nE,SAEAoB,QAAA,WACA,OAAAlpE,KAAA8nE,KAAA9nE,KAAA8nE,KAAA1tE,OAAA,IAEA2tE,MAAA,SAAA7wB,GACA,OAAAA,GAGAl3C,KAAA8nE,KAAA5lE,KAAAyD,EAAA7L,KAAAo9C,IACAA,GAHAl3C,KAAAkpE,WAKAC,SAAA,SAAAr2D,EAAAgH,EAAAiuD,GAIAA,EAHAA,GAGYrqE,EAAAqqE,EAAArqE,EAAAH,EAAAwqE,EAAAxqE,GAFZoI,EAAA7L,KAAAkG,KAAA+nE,SAGA,IAAA70D,EAAAu0D,EAAAE,KACA,OAAA70D,GACA,KAAAI,EAAA,KACA60D,EAAArqE,GAAAoc,EACA,MACA,KAAA5G,EAAA,MACA60D,EAAArqE,GAAAoc,EACA,MACA,KAAA5G,EAAA,GACA60D,EAAAxqE,GAAAuc,EACA,MACA,KAAA5G,EAAA,KACA60D,EAAAxqE,GAAAuc,EAKA,OAAA9Z,KAAA+nE,UAEAqB,WAAA,SAAA/sD,EAAA/Q,GACA,IAAA+9D,EAAArpE,KAAAspE,aAAAjtD,EAAA/Q,GACAi+D,EAAA5jE,EAAAsB,OAEA8yB,EAAAsvC,EAAA5J,IAAA4J,EAAA9rE,EACAu8B,EAAAuvC,EAAA7J,IAAA6J,EAAA3rE,EAEAwV,EAAAu0D,EAAAE,KAEA3nE,KAAAsI,QACAtI,KAAA+nE,OAAcrqE,EAAA2rE,EAAA3rE,EAAAH,EAAA8rE,EAAA9rE,IAEd,IAAAisE,EAAA,EAAAD,EAAApoC,gBACAsoC,EAAAzpE,KAAA0pE,cAAArtD,EAAA/Q,EAAAiG,cAEAo4D,EAAAN,EAAA7J,IAAA6J,EAAA3rE,EACA,GAAA+rE,EAAAz+C,YAAAy+C,EAAAv+C,SACAlrB,KAAAmpE,SAAAj2D,EAAAlX,KAAAwtE,GACAG,GACA3pE,KAAAmpE,SAAAj2D,EAAA20D,KAAA9tC,GACA/5B,KAAAmpE,SAAAj2D,EAAAjX,MAAA69B,KAEA95B,KAAAmpE,SAAAj2D,EAAAjX,MAAA69B,GACA95B,KAAAmpE,SAAAj2D,EAAA20D,KAAA9tC,IAEA/5B,KAAAmpE,SAAAj2D,EAAAjX,MAAAutE,QAEG,IAAAC,EAAAz+C,YAAAy+C,EAAAv+C,SAGH,GAFAy+C,EAAAN,EAAA7J,IAAA6J,EAAA3rE,EAAA,EAAA8rE,EACAxpE,KAAAmpE,SAAAj2D,EAAAjX,MAAAutE,GACAG,EACA7vC,GAAA0vC,EACAxpE,KAAAmpE,SAAAj2D,EAAA20D,KAAA9tC,GACA/5B,KAAAmpE,SAAAj2D,EAAAjX,MAAA69B,OACI,CACJA,GAAA,EAAA0vC,EACA,IAAAI,EAAA7vC,EAAA,OAEA/5B,KAAAmpE,SAAAj2D,EAAA20D,KAAA+B,GAAAL,EAAAxzD,WAAA,IACA/V,KAAAmpE,SAAAj2D,EAAAjX,MAAA69B,GACA95B,KAAAmpE,SAAAj2D,EAAA20D,KAAA+B,GAAApsE,KAAA0iC,IAAAnG,GAAAwvC,EAAAxzD,WAAA,IACA/V,KAAAmpE,SAAAj2D,EAAAjX,MAAAutE,QAGGC,EAAAz+C,YAAAy+C,EAAAv+C,SAUAu+C,EAAAz+C,aAAAy+C,EAAAv+C,WAEHy+C,EAAAN,EAAA7J,IAAA6J,EAAA3rE,EAAA,EAAA8rE,EACAxpE,KAAAmpE,SAAAj2D,EAAAlX,KAAAwtE,GAEAG,GAKA7vC,GAAA,EAAA0vC,EACAI,EAAA7vC,EAAA,OACA/5B,KAAAmpE,SAAAj2D,EAAA20D,KAAA+B,GAAAL,EAAAxzD,WAAA,IACA/V,KAAAmpE,SAAAj2D,EAAAjX,MAAA69B,GACA95B,KAAAmpE,SAAAj2D,EAAA20D,KAAA+B,GAAApsE,KAAA0iC,IAAAnG,GAAAwvC,EAAAxzD,WAAA,IACA/V,KAAAmpE,SAAAj2D,EAAAlX,KAAAwtE,KATA1vC,GAAA0vC,EACAxpE,KAAAmpE,SAAAj2D,EAAA20D,KAAA9tC,GACA/5B,KAAAmpE,SAAAj2D,EAAAjX,MAAA69B,MAjBA95B,KAAAmpE,SAAAj2D,EAAAjX,MAAAutE,GACAG,GACA3pE,KAAAmpE,SAAAj2D,EAAAjX,MAAA69B,GACA95B,KAAAmpE,SAAAj2D,EAAA20D,KAAA9tC,KAEA/5B,KAAAmpE,SAAAj2D,EAAA20D,KAAA9tC,GACA/5B,KAAAmpE,SAAAj2D,EAAAjX,MAAA69B,IAEA95B,KAAAmpE,SAAAj2D,EAAAlX,KAAAwtE,IAqBA,OAAAxpE,KAAA8nE,MAEA4B,cAAA,SAAArtD,EAAApV,GACA,IAAAyhB,EAAAzhB,EAAA2lB,MACA5B,GAAA,EAAAE,GAAA,EAoBA,OAnBA7O,EAAA7K,MAAAkX,EAAAmE,eACA7B,EAAAE,GAAA,EACG7O,EAAA7K,MAAAkX,EAAAqE,iBACH/B,EAAAE,GAAA,EACG7O,EAAA7K,MAAAkX,EAAAoE,iBACH9B,GAAA,EACAE,GAAA,GACG7O,EAAA7K,MAAAkX,EAAAoV,iBACH9S,GAAA,EACAE,GAAA,GAEAvlB,EAAA0tB,QAAA,uBAGApsB,EAAAmT,MACA4Q,KACAE,OAGUF,aAAAE,aAGVo+C,aAAA,SAAAjtD,EAAA/Q,GACA,IAAArE,EAAAqE,EAAAiG,aAGAk4D,GAFAxiE,EAAA2lB,MAEA5sB,KAAA0pE,cAAArtD,EAAApV,IACA+jB,EAAAy+C,EAAAz+C,WACAE,EAAAu+C,EAAAv+C,SAEAtwB,EAAA+K,EAAAsM,QAAAoK,EAAAzhB,QACAD,EAAAgL,EAAAsM,QAAAoK,EAAA1hB,QAEAgtB,EAAAs2C,EAAArjE,EAAA0Q,GACAsc,EAAAq2C,EAAAtjE,EAAA2Q,GAEA,OACA5N,EAAAstB,EAAArD,EAAA3rB,KAAA2rB,EAAA3rB,KAAA2rB,EAAAhqB,MACA6hE,IAAAt0C,EAAAtD,EAAA5rB,KAAA4rB,EAAA5rB,KAAA4rB,EAAAjqB,MACAJ,EAAAoqB,EAAA5rB,IACA0jE,IAAA73C,EAAA7rB,OAKA,SAAAkiE,EAAAvrD,EAAApH,GACA,IAAArE,EAAAqE,EAAAiG,aACArO,EAAAoI,EAAA+c,gBAAA3V,GACA,GAAA/M,EAAA6iB,YAAA9V,EAAAlB,OAAAvK,EAAAyhB,MAAAC,UAAA,CACA,IAAAkhD,EAAAlkE,EAAAyzD,gBACAyE,EAAArgE,KAAAugE,KAAA,EAAA8L,KACA3mE,EAAAlH,MAAA6hE,EAAA,EACA36D,EAAAvF,MAAAkgE,EAEA,OAAA36D,EAGA,OAtbA,SAAAmZ,EAAA/Q,GACA,IAAArE,EAAAqE,EAAAiG,aAEA83D,EAAAJ,EAAAK,aAAAjtD,EAAA/Q,GACAyuB,EAAAsvC,EAAA5J,IAAA4J,EAAA9rE,EAEA,KADA8rE,EAAA7J,IAAA6J,EAAA3rE,GACAq8B,GACA,YAIA,IAAAkuC,EAAAgB,EAAAG,WAAA/sD,EAAA/Q,GACAw+D,EAAArC,EAAAO,UAAAC,EAAA38D,GAEA1K,EAAAtE,SAAAmD,cAAA,OAEAoC,EAAA,kBAEAwa,EAAA2N,QACAnoB,GAAA,4BAEA,IAAAkoE,EAAApkE,EAAAwU,UAAA6vD,WAAArkE,EAAAwU,UAAA6vD,WAAA3tD,GAAA,GACA0tD,IACAloE,GAAA,IAAAkoE,GAGA9iE,EAAA2jB,yBAAAjlB,EAAAskE,gBACAtkE,EAAAskE,eAAA5tD,KACAxa,GAAA,wBAGAjB,EAAAxB,UAAAyC,EAEAyJ,EAAAjE,QAAAsoB,gBACA/uB,EAAA8O,aAAApE,EAAAjE,QAAAsoB,eAAAtT,EAAA/X,IAGA,QAAA1M,EAAA,EAAgBA,EAAAkyE,EAAA1vE,OAAkBxC,IAAA,CAClCA,GAAAkyE,EAAA1vE,OAAA,IACA0vE,EAAAlyE,GAAA2S,MAAAtD,EAAAk6B,iBAEA,IAAA9lC,EAAAosE,EAAAoB,YAAAiB,EAAAlyE,GAAAkyE,EAAAlyE,EAAA,GAAA0T,GACA+Q,EAAA2N,QACA3uB,EAAAqG,WAAAxD,MAAAirB,gBAAA9M,EAAA2N,OAEAppB,EAAAE,YAAAzF,GAGA,IAAAyX,EAAAg3D,IAAA1vE,OAAA,GAAA0Y,UACAo3D,EAWA,SAAAnC,EAAAj1D,EAAAxH,GACA,IAAArE,EAAAqE,EAAAiG,aACA3Q,EAAAtE,SAAAmD,cAAA,OACA1D,EAAAgsE,EAAAxqE,EACAvB,EAAA+rE,EAAArqE,EAEA6M,EAAAtD,EAAAk6B,gBACAgpC,EAAAljE,EAAA8O,WACA3W,EAAA,qCAAA0T,EACA,OAAAA,GACA,KAAA20D,EAAAE,KAAA1rE,MACAF,IAAAwO,EAAA4/D,GAAA,EACAnuE,GAAAuO,EACA,MACA,KAAAk9D,EAAAE,KAAA3rE,KACAD,IAAAwO,EAAA4/D,GAAA,EACA,MACA,KAAA1C,EAAAE,KAAAC,GACA5rE,GAAAuO,EACA,MACA,KAAAk9D,EAAAE,KAAAE,KACA9rE,GAAA,EAAAwO,EACAvO,GAAAuO,EAUA,OALA3J,EAAA1C,MAAA2C,SACA,OAAA9E,EAAA,KACA,QAAAC,EAAA,MAAAuE,KAAA,KACAK,EAAAxB,YAEAwB,EA3CAwpE,CAAAnC,IAAA7tE,OAAA,GAAA0Y,EAAAxH,GAQA,OAPA+Q,EAAA2N,QACAkgD,EAAAhsE,MAAAmsE,YAAAhuD,EAAA2N,OAEAppB,EAAAE,YAAAopE,GAEAvkE,EAAAwO,SAAAyrC,SAAAvjC,EAAAzb,GAEAA,mBCFAjJ,EAAAD,QA1DA,SAAAiO,GAuDA,OArDA,SAAAiM,EAAAtG,GACA,IAAArE,EAAAqE,EAAAiG,aACA4I,EAAA7O,EAAAgd,gBACA7I,EAAAnU,EAAA+lB,WACA7J,EAAA/H,EAAA+H,MACAlX,EAAAhU,SAAAmD,cAAA,OACA,GAAAwH,EAAAqjE,gBACA,QAAAt+B,EAAA,EAAkBA,EAAAxkB,EAAWwkB,IAAA,CAC7B,IAAAruC,EAAA8hB,EAAA9hB,MAAAquC,GACAnZ,EAAA,GAEA,GAAAl1B,EAAA,GACA,IAAAyK,EAAA9L,SAAAmD,cAAA,OACA2I,EAAAlK,MAAAP,MAAA,OAEAk1B,EAAA,mBAAAmZ,GAAAxkB,EAAA,0BACAuiD,EAAA5vD,EAAAowD,gBAAA34D,EAAA6N,EAAA4O,QAAA2d,OAEAnZ,GAAA,IAAAk3C,GACA3hE,EAAAhJ,UAAAyzB,EAEAviB,EAAAxP,YAAAsH,IAKA,IAAAoiE,EAAA7kE,EAAAisC,mBAAAhgC,EAAAtN,IAAA,KACAylE,EAAA5vD,EAAAswD,eAAA74D,EAAAY,WAAAZ,EAAAU,SAAAV,GACA/P,EAAA,kBAAA2oE,EAAA,YAAAT,EAAA,IAAAA,EAAA,IAsBA,OApBAz+D,EAAAjE,QAAAwO,SACA28B,iBAAA5gC,EAAAtN,KACAzC,GAAA,mBAKAyO,EAAAlR,UAAAyC,EAEAoF,EAAAuQ,kBACAlH,EAAApS,MAAAorB,SAAA,WACAhZ,EAAApS,MAAAnC,IAAAuP,EAAA+D,WAAAuC,EAAAtN,IAAA,KACAgM,EAAApS,MAAAP,MAAA,QAEA2S,EAAApS,MAAAN,OAAAqJ,EAAA,gBAEAqE,EAAAjE,QAAAsI,gBACAW,EAAAZ,aAAApE,EAAAjE,QAAAsI,eAAAiC,EAAAtN,IAGAgM,qBCpBA3Y,EAAAD,QAhCA,SAAAiO,GACA,IAAA+kE,EAAAlzE,EAAA,GAAAA,CAAAmO,GAEA,gBAAA+M,EAAAi5B,GACA,GAAAhmC,EAAAuc,YAAAxP,GAAA,CACA/M,EAAAsB,OAAA8O,WAOA,IAPA,IACA1a,EAAAiB,SAAAmD,cAAA,OACAmlD,EAAAj/C,EAAAwzD,gBAAAzmD,GAEAi4D,EAAAhlE,EAAAyd,YAAA1Q,EAAApO,IAGA1M,EAAA,EAAkBA,EAAA+yE,EAAAvwE,OAAsBxC,IAAA,CACxC,IAAA6J,EAAAkE,EAAAsM,QAAA04D,EAAA/yE,IAEAkxB,EAAA4hD,EAAAjpE,EAAAkqC,GACA,GAAA7iB,EAAA,CAGA,IAAAtgB,EAAAhL,KAAAiO,OAAA9F,EAAAsB,OAAA8O,WAAA6uC,EAAAhnD,QAAA,GAEAkrB,EAAA5qB,MAAAnC,IAAA6oD,EAAA7oD,IAAAyM,EAAA,KACAsgB,EAAA1pB,WAAA,qBAEA/D,EAAAyF,YAAAgoB,IAEA,OAAAztB,EAEA,4BC5BA,IAAAwL,EAAArP,EAAA,GACAi3B,EAAAj3B,EAAA,IACAozE,EAAApzE,EAAA,IACA6V,EAAA7V,EAAA,GAEAqzE,EAAA,SAAAv9D,GAEA,SAAAu9D,EAAAvnE,EAAA2D,EAAAC,EAAAvB,GACA,IAAAwE,EAAAmD,EAAA/S,MAAAyF,KAAA7E,YAAA6E,KAEA,OADAmK,EAAA9C,QAAAqoB,UAAA,KACAvlB,EA2CA,OAxCAkD,EAAAw9D,EAAAv9D,GAEAzG,EAAAnM,MAAAmwE,EAAArxE,WACA0Q,KAAA,gBACAnP,IAAAiF,KAAAqH,QAAAjO,OACA4G,KAAAqH,QAAAjO,KAAA4G,KAAAuR,aAAAwzC,gBAEAz3C,EAAA9T,UAAA0Q,KAAA3P,MAAAyF,KAAA7E,YAEAyZ,mBAAA,WACA,IAAAzK,EAAAnK,KACAqwB,EAAA,WACA,OAAAlmB,EAAAtM,aAkBA,OACA8vB,QAdAlX,SAAAzW,KAAAuH,OAAAmP,IAAA/B,OAAAmwC,YACA7wC,UAAAjU,KAAAovB,WACAxY,QAAAyZ,KAGA5Z,SAAAzW,KAAAuH,OAAAmP,IAAA/B,OAAA+b,OACAzc,UAAAjU,KAAAkvB,SACAtY,QAAAyZ,KAQAzD,aAIE,GAEF/lB,EAAAnM,MAAAmwE,EAAArxE,UAAAoxE,EAAAt9D,IAAA,GAEAu9D,EAhDA,CAiDCp8C,GAGD92B,EAAAD,QAAAmzE,mBCzDA,IAAA9jE,EAAAvP,EAAA,GACAqP,EAAArP,EAAA,GACAozE,EAAApzE,EAAA,IACAuc,EAAAvc,EAAA,IACA6V,EAAA7V,EAAA,GAEAszE,EAAA,SAAAx9D,GAEA,SAAAw9D,EAAAxnE,EAAA2D,EAAAC,EAAAvB,GACA,OAAA2H,EAAA/S,MAAAyF,KAAA7E,YAAA6E,KAiCA,OA9BAqN,EAAAy9D,EAAAx9D,GAEAzG,EAAAnM,MAAAowE,EAAAtxE,WACA0Q,KAAA,gBACAnP,IAAAiF,KAAAqH,QAAAjO,OACA4G,KAAAqH,QAAAjO,KAAA4G,KAAAuR,aAAAwzC,gBAEAz3C,EAAA9T,UAAA0Q,KAAA3P,MAAAyF,KAAA7E,YAGA+Z,YAAA,WACA5H,EAAA9T,UAAA0b,YAAA3a,MAAAyF,KAAA7E,WACA6E,KAAAgV,gBAAA3K,SAAA,oBAAA1E,MAAAvM,KAAA,SAAAuG,EAAA2E,EAAA7B,GACA,IAAAqN,EAAA9P,KAAAqH,QAAAwO,SACA,IAAA/F,EAAA,SAEA,IAAAnV,EAAAoM,EAAAnE,gBAAAjD,EAAAK,KAAAqH,QAAAsI,gBAKA,OAJAhV,GACAmV,EAAAhR,OAAAnE,EAAA2D,aAAA0B,KAAAqH,QAAAsI,kBAGA,GACI3P,WAAAuU,UAIF,GAEF1N,EAAAnM,MAAAowE,EAAAtxE,UAAAoxE,EAAAt9D,IAAA,GAEAw9D,EApCA,CAqCC/2D,GAEDpc,EAAAD,QAAAozE,mBC7CAnzE,EAAAD,QAAA,SAAAiO,GAEA,IAAAmG,EAAAtU,EAAA,EAAAA,CAAAmO,GACAkB,EAAArP,EAAA,GAGA,SAAAuzE,IAEA,OADAj/D,EAAAvR,MAAAyF,KAAA7E,YAAA6E,KAMA,SAAAgrE,EAAAnyE,EAAAoO,GAEA,IADA,IAAAgkE,GAAApyE,GAAA,IAAAsI,MAAA8F,EAAAikE,WAAA,KACAtzE,EAAA,EAAiBA,EAAAqzE,EAAA7wE,OAAyBxC,IAAA,CAC1C,IAAA4pB,EAAAypD,EAAArzE,GAAAmI,OACAyhB,EACAypD,EAAArzE,GAAA4pB,GAEAypD,EAAAvqE,OAAA9I,EAAA,GACAA,KAIA,OADAqzE,EAAAtwD,OACAswD,EAGA,SAAAE,EAAAz4D,EAAAzL,EAAAtB,GAGA,IAFA,IAAAinB,EAAAla,EAAAuM,QACA1E,KACA3iB,EAAA,EAAiBA,EAAAg1B,EAAAxyB,OAAkBxC,IAAA,CACnC,IAAAykB,EAAA1W,EAAAmZ,QAAA8N,EAAAh1B,IACAwzE,EAAAzlE,EAAAsM,QAAAoK,EAAAzhB,QACA2f,EAAArY,KAAAyD,EAAAuhD,WAAAkkB,IAEA,OAAA7wD,EAAAha,MAAA0G,EAAAikE,WAAA,UAsBA,SAAAG,EAAA34D,EAAA44D,GACA,IAAAC,EApBA,SAAA9nD,EAAA6nD,GACA,IAAA1+C,KAeA,OAdA0+C,EAAA/kE,QAAA,SAAAgd,GACA,IAAA3U,EAAAjJ,EAAAgiD,iBAAApkC,GACA,GAAA3U,EAAA,CACA,IAAAyN,GACAzhB,OAAAgU,EAAAtK,GACA3J,OAAA8oB,EACAjS,KAAA7L,EAAAsB,OAAA2lB,MAAAE,gBACA0+C,IAAA,GAEA7lE,EAAA0lB,cAAAhP,IACAuQ,EAAA1qB,KAAAma,MAIAuQ,EAIA6+C,CAAA/4D,EAAApO,GAAAgnE,GACAI,KACAh5D,EAAAuM,QAAA1Y,QAAA,SAAA8vD,GACA,IAAAh6C,EAAA1W,EAAAmZ,QAAAu3C,GACAqV,EAAArvD,EAAAzhB,OAAA,IAAAyhB,EAAA1hB,QAAA0hB,EAAA/X,KAGA,IAAAqnE,KACAJ,EAAAhlE,QAAA,SAAA8V,GACA,IAAAuvD,EAAAvvD,EAAAzhB,OAAA,IAAAyhB,EAAA1hB,OACA+wE,EAAAE,UAGAF,EAAAE,GAFAD,EAAAzpE,KAAAma,KAMA,IAAAwvD,KACA,QAAAj0E,KAAA8zE,EACAG,EAAA3pE,KAAAwpE,EAAA9zE,IAGA,OACAwoB,IAAAurD,EACAG,OAAAD,GA4CA,OA3HAr0E,EAAA,EAOA6V,CAAA09D,EAAAj/D,GA4EAjF,EAAAnM,MAAAqwE,EAAAvxE,WACA8P,KAAA,SAAAhF,EAAAyH,EAAA9E,EAAA+E,GACA,IAAAjC,EAAA,iCAAAgC,EAAA5T,KAAA,WACA6T,EAAAxK,UAAAuI,GAEAX,KAAA,aAEA5D,UAAA,SAAA3M,EAAAyL,EAAAyH,EAAAjO,GACAkC,KAAAiM,UAAAnO,GAAAjF,MAAAsyE,EAAAtyE,EAAAkT,EAAA0E,OAAA9K,IAEAF,UAAA,SAAAnB,EAAAyH,EAAAjO,GACA,OAAAktE,EAAAhrE,KAAAiM,UAAAnO,GAAAjF,OAAA,GAAAkT,EAAA0E,SAEApE,KAAA,SAAA/H,EAAAyH,EAAAjO,GACA,IAEAiuE,EAAAV,EAFA1lE,EAAAsM,QAAA3N,GAEAtE,KAAAyF,UAAAnB,EAAAyH,EAAAjO,KAEAiuE,EAAA3rD,IAAAhmB,QAAA2xE,EAAAD,OAAA1xE,SACAuL,EAAAy8C,YAAA,WACA2pB,EAAA3rD,IAAA7Z,QAAA,SAAA8V,GACA1W,EAAAwsD,QAAA91C,KAEA0vD,EAAAD,OAAAvlE,QAAA,SAAA8vD,GACA1wD,EAAA0sD,WAAAgE,KAGA1wD,EAAAqmE,cACArmE,EAAAqmE,kBAIA9/D,WAAA,SAAArT,EAAAyL,EAAAyH,EAAAjO,GACA,IAAAmuE,EAAAjsE,KAAAyF,UAAAnB,EAAAyH,EAAAjO,GACAouE,EAAAlB,EAAAG,EAAAtyE,EAAAkT,EAAA0E,OAAA9K,GAAAoG,EAAA0E,QAEA,OAAAw7D,EAAA1rE,SAAA2rE,EAAA3rE,UAEE,GAEFwqE,oBC/HApzE,EAAAD,QAAA,SAAAiO,GACA,IAAAmG,EAAAtU,EAAA,EAAAA,CAAAmO,GACAkB,EAAArP,EAAA,GAGA20E,EAAA,WAEAC,EAAA,KACAC,EAAA,KAWA,SAAAC,IAGA,OAFAxgE,EAAAvR,MAAAyF,KAAA7E,YAAA6E,KAoCA,OArDAxI,EAAA,EAsBA6V,CAAAi/D,EAAAxgE,GAEAjF,EAAAnM,MAAA4xE,EAAA9yE,WACA8P,KAAA,SAAAhF,EAAAyH,EAAA9E,EAAA+E,GAjBAogE,IACAA,EAAAzmE,EAAAgJ,KAAA6jB,YAAA25C,IAEAE,IACAA,EAAA1mE,EAAAgJ,KAAA49D,YAAAJ,IAgBA,IAGApiE,EAAA,oDAHAqiE,EAAAnlE,EAAAwR,KAAA9S,EAAAoL,WAAAoc,UAGA,UAFAi/C,EAAAnlE,EAAAyO,KAAA/P,EAAAoL,WAAAqc,UAEA,WAAArhB,EAAA5T,KAAA,WACA6T,EAAAxK,UAAAuI,GAEAvE,UAAA,SAAA3M,EAAAyL,EAAAyH,EAAAjO,GACAkC,KAAAiM,UAAAnO,GAAAjF,MAAAuzE,EAAAvzE,IAEAuT,SAAA,SAAAvT,EAAAyL,EAAAyH,EAAAjO,GACA,SAAAjF,GAAAwF,MAAAxF,EAAAk9C,aAIAtwC,UAAA,SAAAnB,EAAAyH,EAAAjO,GACA,IAAA0uE,EAAA,KACA,IACAA,EAAAH,EAAArsE,KAAAiM,UAAAnO,GAAAjF,OAAA,IACI,MAAA8G,IAGJ,OAAA6sE,KAEE,GAEFF,oBCxDA30E,EAAAD,QAAA,SAAAiO,GACA,IAAAmG,EAAAtU,EAAA,EAAAA,CAAAmO,GACAkB,EAAArP,EAAA,GAGA,SAAAi1E,IAEA,OADA3gE,EAAAvR,MAAAyF,KAAA7E,YAAA6E,KAwBA,OA3BAxI,EAAA,EAOA6V,CAAAo/D,EAAA3gE,GAEAjF,EAAAnM,MAAA+xE,EAAAjzE,WACA8P,KAAA,SAAAhF,EAAAyH,EAAA9E,EAAA+E,GAKA,IAJA,IAAAjC,EAAA,sBAAAgC,EAAA5T,KAAA,KACAu0E,KACAj/D,EAAAxG,EAAAwG,YAEA7V,EAAA,EAAkBA,EAAA6V,EAAArT,OAAoBxC,IACtC80E,EAAAxqE,KAAA,kBAAA+E,EAAAwG,QAAA7V,GAAAuB,IAAA,KAAAsU,EAAA7V,GAAA8V,MAAA,aAGA3D,GAAA2iE,EAAAnsE,KAAA,sBACAyL,EAAAxK,UAAAuI,GAEAkC,UAAA,SAAAnO,GACA,OAAAA,EAAAuE,cAAA,aAEE,GAEFoqE,oBC9BA90E,EAAAD,QAAA,SAAAiO,GAEA,IAAAmG,EAAAtU,EAAA,EAAAA,CAAAmO,GACAkB,EAAArP,EAAA,GAGA,SAAAm1E,IAEA,OADA7gE,EAAAvR,MAAAyF,KAAA7E,YAAA6E,KAuBA,OA1BAxI,EAAA,EAOA6V,CAAAs/D,EAAA7gE,GAEAjF,EAAAnM,MAAAiyE,EAAAnzE,WACA8P,KAAA,SAAAhF,EAAAyH,EAAA9E,EAAA+E,GACA,IAGAjC,EAAA,mCAHA9C,EAAAwR,KAAA,GAGA,WAFAxR,EAAAyO,KAAA,KAEA,WAAA3J,EAAA5T,KAAA,WACA6T,EAAAxK,UAAAuI,GAEAtE,UAAA,SAAAnB,EAAAyH,EAAAjO,GACAgO,EAAAtS,UAAAiM,UAAAnB,EAAAyH,EAAAjO,GACA,OAAAkC,KAAAiM,UAAAnO,GAAAjF,OAAA,IAEAuT,SAAA,SAAAvT,EAAAyL,EAAAyH,EAAAjO,GACA,OAAAO,MAAAlB,SAAAtE,EAAA,QAEE,GAEF8zE,oBC9BAh1E,EAAAD,QAAA,SAAAiO,GAEA,IAAAmG,EAAAtU,EAAA,EAAAA,CAAAmO,GACAkB,EAAArP,EAAA,GAGA,SAAAo1E,IAEA,OADA9gE,EAAAvR,MAAAyF,KAAA7E,YAAA6E,KAaA,OAhBAxI,EAAA,EAOA6V,CAAAu/D,EAAA9gE,GAEAjF,EAAAnM,MAAAkyE,EAAApzE,WACA8P,KAAA,SAAAhF,EAAAyH,EAAA9E,EAAA+E,GACA,IAAAjC,EAAA,iCAAAgC,EAAA5T,KAAA,WACA6T,EAAAxK,UAAAuI,KAEE,GAEF6iE,kBCpBAj1E,EAAAD,SACAwS,KAAA,SAAA6F,EAAAd,GACA,IAAA9E,EAAA4F,EACApK,EAAAsJ,EAAA1H,OAEAslE,EAAA,KACAC,EAAAnnE,EAAA0gE,IAAA0G,mBACAD,EAAArxE,YAAA,yBAAAqC,GACA,IAAAkvE,EAAAj9D,EAAAM,WAAAvS,GAEA,GADAq9B,aAAA0xC,GACAG,EAAA,CACA,IAAA59D,EAAA49D,EAAA59D,WACA9K,EAAA0oE,EAAA1oE,GAEA8M,EAAAjH,EAAA4G,WACA,GAAA5G,EAAAtM,aACAuT,EAAA9M,OAAA8M,EAAAhC,eACA,SAIA,WAGA09D,EAAArxE,YAAA,mBAAAqC,GACA,IAAAkvE,EAAAj9D,EAAAM,WAAAvS,GACA6T,EAAA5B,EAAAgB,WAOA,OANAoqB,aAAA0xC,IACAG,KAAA1oE,IAAAqN,EAAArN,IAAA0oE,EAAA59D,YAAAuC,EAAAvC,YACAjF,EAAAtM,aACAsM,EAAAkC,QAGA,IAGA0D,EAAAtU,YAAA,oBACA0/B,aAAA0xC,KAGAC,EAAArxE,YAAA,oBAKA,OAJAoxE,EAAAtyC,WAAA,WACApwB,EAAAkC,UAGA,IAGA1G,EAAAlK,YAAA,0BAAA6I,EAAA3E,GAEA,IAAAgS,EAAA5B,EAAAgB,WACA3I,EAAA2H,EAAAM,WAAA1Q,EAAAhF,QACA,OAAAyN,IAAA2H,EAAAlS,aAAAuK,EAAAgH,YAAAuC,EAAAvC,aAMAzJ,EAAAlK,YAAA,uBAAA6I,EAAA3E,GACA,GAAAgG,EAAAy4B,oBAAAz+B,GACA,SAEA,IAAAgS,EAAA5B,EAAAgB,WACA3I,EAAA2H,EAAAM,WAAA1Q,EAAAhF,QAEA,OAAAyN,IAAA2H,EAAAQ,gBAAAnI,EAAAgH,cACAW,EAAAlS,aAAA8T,EAAArN,IAAA8D,EAAA9D,IAAAqN,EAAAvC,YAAAhH,EAAAgH,YAEAW,EAAAmB,UAAA9I,EAAA9D,GAAA8D,EAAAgH,aAEA,KAIAzJ,EAAAlK,YAAA,0BAEA,OADA0O,EAAAkC,QACA,IAGAygE,EAAArxE,YAAA,qBAAAwxE,EAAAttE,GACA,IAAAqtE,EAAAj9D,EAAAM,WAAA1Q,EAAAhF,QACAuyE,IAAAF,GAAAj9D,EAAAQ,gBAAAy8D,EAAA59D,YAEAuC,EAAA5B,EAAAgB,WACAo8D,EAAAxnE,EAAA4iC,UAAAC,UACAH,EAAA1oC,EAAA0oC,QACA+kC,GAAA,EAEA,OAAA/kC,GACA,KAAA8kC,EAAAE,MACAt9D,EAAAlS,aACAkS,EAAA1D,OACA1M,EAAAqgC,iBACAotC,GAAA,GACMF,KAAAvtE,EAAA2tE,SAAA3tE,EAAA4tE,SAAA5tE,EAAA+uC,YACNvkC,EAAA+G,UAAA87D,EAAA1oE,GAAA0oE,EAAA59D,YACAzP,EAAAqgC,iBACAotC,GAAA,GAEA,MACA,KAAAD,EAAAK,IACAz9D,EAAAlS,cACAkS,EAAA3G,OACAzJ,EAAAqgC,iBACAotC,GAAA,GAEA,MACA,KAAAD,EAAAzkC,GACA,KAAAykC,EAAA1kC,KACA,MACA,KAAA0kC,EAAAM,KACA,KAAAN,EAAAO,MACA,SAAA/7D,EAAAV,aACAm8D,GAAA,GAEA,MACA,KAAAD,EAAA1+B,MACA1+B,EAAAlS,cACAuvE,GAAA,GAGAF,IAAAn9D,EAAAlS,cACAsM,EAAA+G,UAAA87D,EAAA1oE,GAAA0oE,EAAA59D,YACAzP,EAAAqgC,iBACAotC,GAAA,GAEA,MACA,KAAAD,EAAAQ,OACAT,IAAAn9D,EAAAlS,cACAsM,EAAA+G,UAAA87D,EAAA1oE,GAAA0oE,EAAA59D,YACAg+D,GAAA,GAEA,MACA,KAAAD,EAAAS,IACA,GAAA79D,EAAAlS,YAAA,CAEA8B,EAAA+uC,SACA3+B,EAAAyD,cAAA,GAEAzD,EAAAsD,cAAA,GAEA,IAAAy/C,EAAA/iD,EAAAgB,WACA+hD,EAAAxuD,IACAwoE,EAAApnE,OAAqB8L,KAAA,WAAAlN,GAAAwuD,EAAAxuD,GAAAyH,OAAA+mD,EAAA1jD,aAErBzP,EAAAqgC,iBACAotC,GAAA,EAEA,MACA,QACAr9D,EAAAlS,YACAuvE,GAAA,GAIA/kC,GAAA,IAAAA,GAAA,IACAA,EAAA,IAAAA,EAAA,KACAA,GAAA,IAAAA,GAAA,IACAA,EAAA,KAAAA,EAAA,KACAA,EAAA,KAAAA,EAAA,MAEA6kC,IAAAn9D,EAAAlS,cACAsM,EAAAb,KAAA0jE,EAAA1oE,GAAA0oE,EAAA59D,YACAjF,EAAAkH,WACA+7D,GAAA,GAQA,OAAAA,KAQA17D,OAAA,SAAA3B,EAAA/D,EAAAiD,KACAkD,OAAA,SAAApC,EAAA/D,EAAAiD,GACAA,EAAA1H,OACA7B,SAGAmoE,QAAA,6BC1LAl2E,EAAAD,SACAwS,KAAA,SAAA6F,EAAAd,GACA,IAAAtJ,EAAAsJ,EAAA1H,OAEA5B,EAAAlK,YAAA,uBAAA6I,EAAA3E,GACA,GAAAgG,EAAAy4B,oBAAAz+B,GACA,SACA,IAAAgS,EAAA5B,EAAAgB,WACA3I,EAAA2H,EAAAM,WAAA1Q,EAAAhF,QAEA,OAAAyN,IAAA2H,EAAAQ,gBAAAnI,EAAAgH,cACAW,EAAAlS,aAAA8T,EAAArN,IAAA8D,EAAA9D,IAAAqN,EAAAvC,YAAAhH,EAAAgH,YAEAW,EAAAmB,UAAA9I,EAAA9D,GAAA8D,EAAAgH,aAEA,KAIAzJ,EAAAlK,YAAA,0BAEA,OADAsU,EAAA3G,QACA,IAGAzD,EAAAlK,YAAA,0BAAA6I,EAAA3E,GACA,IAAAgS,EAAA5B,EAAAgB,WACA3I,EAAA2H,EAAAM,WAAA1Q,EAAAhF,QACA,OAAAyN,IAAA2H,EAAAlS,aAAAuK,EAAAgH,YAAAuC,EAAAvC,cAOAsC,OAAA,SAAA3B,EAAA/D,EAAAiD,GACA,IAAAA,EAAAsC,aAAAu8D,oBAAA,CAIA,IAAAnoE,EAAAsJ,EAAA1H,OACAyE,EAAAm8B,UAAA,SAAAxoC,GACAA,KAAAhD,OAAAvB,MAEA,IAAA+xE,EAAAxnE,EAAA4iC,UAAAC,UACA,KAAA7oC,EAAAouE,kBAAApuE,EAAA+uC,UAAA/uC,EAAA0oC,SAAA8kC,EAAAS,KAAA,CAIA,IAAAI,GAAA,EACA,OAAAruE,EAAA0oC,SACA,KAAA1iC,EAAAipC,KAAAC,UACA9+B,EAAA1D,OACA,MACA,KAAA1G,EAAAipC,KAAAE,YACA/+B,EAAA3G,OACA,MACA,KAAA+jE,EAAAS,IACAjuE,EAAA+uC,SACA3+B,EAAAyD,cAAA,GAEAzD,EAAAsD,cAAA,GAEA,MACA,QACA26D,GAAA,EAIAA,GACAruE,EAAAqgC,qBAIA7tB,OAAA,aAIA07D,QAAA,+BC7EA,IAAAI,EAAAz2E,EAAA,KACA02E,EAAA12E,EAAA,KAEAG,EAAAD,QAAA,WACA,IAAAgZ,EAAA,KAEA,OACAy9D,WAAA,SAAAxnE,GACA+J,EAAA/J,GAEAgK,WAAA,WAEA,OAAAD,IAEI/K,MAAAsB,OAAAmnE,0BACJF,EAEAD,uBCjBA,IAAAlnE,EAAAvP,EAAA,GA+OAG,EAAAD,QA7OA,SAAAiO,EAAAsJ,GAEA,IAoCAo/D,GACAC,oBAAA3oE,EAAAvM,KAAA,SAAAk0D,EAAA7yD,EAAAkF,GACA,IAAAsH,EAAAgI,EAAAsC,aAGA,IADAxK,EAAAnE,gBAAAjD,EAAAsH,EAAAsnE,+BACA,SAEA,IAAAC,EAAAxuE,KAAAo9B,OAAAz9B,EAAAsH,EAAAsnE,+BACAxiE,EAAAkD,EAAAO,iBAAAg/D,GAEA,WAAAv/D,EAAArK,UAAA,uBAAA4pE,EAAAziE,UAAA,GAEGpG,GAEH8oE,mBAAA9oE,EAAAvM,KAAA,SAAAk0D,EAAA7yD,EAAAkF,GACA,IAAAsH,EAAAgI,EAAAsC,aAEAi9D,EAAAxuE,KAAAo9B,OAAAz9B,EAAAsH,EAAAsnE,+BACAjhB,EAAArmD,OAAAmpD,OAAA5uD,UAAA,GACA8rD,EAAArmD,OAAAmpD,OAAAhxD,WAAA,0BACAkuD,EAAArmD,OAAAmpD,OAAAlyD,MAAAN,OAAAqR,EAAAsF,MAAArX,aAAA,KACAowD,EAAArmD,OAAAmpD,OAAAlyD,MAAAnC,IAAA,MACAuxD,EAAArmD,OAAAynE,WAAAF,GAEG7oE,GAEHgpE,iBAAAhpE,EAAAvM,KAAA,SAAAk0D,EAAA7yD,EAAAkF,GACA,IAAAsH,EAAAgI,EAAAsC,aAEAqtD,EAAAtR,EAAArmD,OACAmO,EAAAnG,EAAAO,iBACAjG,EAAApM,SAAAyhE,EAAA8P,WAAA,IACAE,EAAAx5D,EAAA7L,GACArG,EAAA6D,EAAA7G,gBAAA+O,EAAAwF,aACAo6D,EAAA1xE,SAAAyhE,EAAAxO,OAAAlyD,MAAAlC,KAAA,IACA8yE,EAAAF,EAAAv2D,UAAAu2D,EAAAv2D,UAAApR,EAAAqR,sBACAy2D,EAAA9/D,EAAAwC,WAAAxU,YACA+xE,EAAA,EACAC,EAAA,EAQAhoE,EAAAmT,IAGAy0D,EAAA3rE,EAAAxF,EAAAwF,EAAAvF,MAAA,EAAAkxE,EAFAA,GAAA3rE,EAAAxF,EAAA,EAMA,QAAA9F,EAAA,EAAkBA,EAAA2R,EAAW3R,IAC7Bk3E,GAAA15D,EAAAxd,GAAA+F,MACAqxE,GAAA55D,EAAAxd,GAAA+F,MAOA,GAJAkxE,EAAAC,IACAD,EAAAC,GAGA7nE,EAAAioE,gBAAA,CACA,IAAAC,EAAA,EACA,IAAAv3E,EAAA2R,EAAA,EAAuB3R,EAAAwd,EAAAhb,OAAkBxC,IACzCwd,EAAAxd,GAAAygB,UACA02D,GAAA35D,EAAAxd,GAAAygB,UACApR,EAAAqR,wBACAy2D,GAAA9nE,EAAAqR,uBAEAlD,EAAAxd,GAAA4gB,YAAA,IAAA22D,EACAA,GAAA/5D,EAAAxd,GAAA4gB,UAEA22D,GAAA,EAIAA,IACAL,EAAA7/D,EAAAwC,WAAAxU,YAAAkyE,GAEAN,EAAAC,IACAD,EAAAC,GAGAD,EAAAE,IACAF,EAAAE,QACI,IAAA9/D,EAAA5H,QAAAiO,WAAA,CACJ,IAAA85D,EAAAP,EACAQ,EAAA,EACA,IAAAz3E,EAAA2R,EAAA,EAAuB3R,EAAAwd,EAAAhb,OAAkBxC,IACzCy3E,GAAAj6D,EAAAxd,GAAA+F,MAGAyxE,EAAAC,EAAA1pE,EAAAwB,WAAAlK,cACA4xE,EAAAlpE,EAAAwB,WAAAlK,YAAAoyE,GAoBA,OAhBAzQ,EAAA5iE,KAAA6yE,EAAA,EAEAI,EAAAzxE,KAAA0iC,IAAA2uC,EAAAG,GAGAJ,EAAAp2D,WAAAy2D,EAAAL,EAAAp2D,YACAy2D,EAAAL,EAAAp2D,WAEAvR,EAAAmT,MACA40D,EAAA9rE,EAAAvF,MAAAqxE,EAAA,EAAAC,GAEArQ,EAAAxO,OAAAlyD,MAAAnC,IAAAmH,EAAA3F,EAAA,KACAqhE,EAAAxO,OAAAlyD,MAAAlC,KAAAkH,EAAAxF,EAAA,EAAAsxE,EAAA,KACApQ,EAAAxO,OAAAlyD,MAAAP,MAAAsxE,EAAA,KAEAhgE,EAAArK,UAAA,kBAAA2E,EAAA6L,EAAA7L,GAAA0lE,EAAA,KACA,GACGtpE,GAEH2pE,gBAAA3pE,EAAAvM,KAAA,SAAAk0D,EAAA7yD,EAAAkF,GAaA,IAZA,IAAAsH,EAAAgI,EAAAsC,aACA6D,EAAAnG,EAAAO,iBACAuJ,EAAA,EACAxP,EAAApM,SAAAmwD,EAAArmD,OAAAynE,WAAA,IACAE,EAAAx5D,EAAA7L,GAQA3R,EAAA,EAAkBA,EAAA2R,EAAW3R,IAC7BmhB,GAAA3D,EAAAxd,GAAA+F,MAGA,IAAAqb,EAAA41D,EAAAv2D,WAAAi1C,EAAArmD,OAAAjL,KAAA+c,EAAA61D,EAAAv2D,UACAu2D,EAAAv2D,UAAAi1C,EAAArmD,OAAAjL,KAAA+c,EAKA,GAHA61D,EAAAp2D,WAAAo2D,EAAAp2D,UAAAQ,IACAA,EAAA41D,EAAAp2D,YAEA,IAAAvJ,EAAArK,UAAA,qBAAA2E,EAAAqlE,EAAA51D,KAGA41D,EAAAjxE,OAAAqb,EAAA,CAKA,GAFA41D,EAAAjxE,MAAAqb,EAEA/R,EAAAioE,gBACAn2D,EAAA9R,EAAAuO,eAGA,CAAA5d,EAAA2R,EAAA,QAAA1R,EAAAud,EAAAhb,OAA2CxC,EAAAC,EAAOD,IAClDmhB,GAAA3D,EAAAxd,GAAA+F,MAIAsR,EAAArK,UAAA,0BAAAwQ,EAAAnG,EAAAsG,iBAAAwD,EAAAxP,KAEA0F,EAAA5H,QAAAiO,YACA3P,EAAA80B,QAAApF,eAAApmB,EAAA5H,QAAA+tB,MAAAnuB,EAAAuO,YAIAxV,KAAAuF,WACGI,IA4BH,OACAuE,KAzBA,WACA,IAAAkzD,EAAAz3D,EAAAoC,UAAAC,WAAA,OAEAf,EAAAgI,EAAAsC,aAEA+7C,EAAA,IAAA8P,EAAAnuD,EAAAwF,aAAuC6oD,mBAAA,KACvC33D,EAAAnL,QAAAyM,EAAA89D,mBACAzX,EAAArmD,OAAAo2D,YAAAp2D,EAAA89D,iBAEAzX,EAAA7xD,YAAA,6BAAAhB,EAAAkF,GACA,OAAA0uE,EAAAC,oBAAAhhB,EAAA7yD,EAAAkF,KAEA2tD,EAAA7xD,YAAA,4BAAAhB,EAAAkF,GACA,OAAA0uE,EAAAI,mBAAAnhB,EAAA7yD,EAAAkF,KAEA2tD,EAAA7xD,YAAA,sBAAAhB,EAAAkF,GACA,OAAA0uE,EAAAM,iBAAArhB,EAAA7yD,EAAAkF,KAEA2tD,EAAA7xD,YAAA,qBAAAhB,EAAAkF,GACA,OAAA0uE,EAAAiB,gBAAAhiB,EAAA7yD,EAAAkF,MAOAoV,WAvOA,WAOA,IANA,IAAAK,EAAAnG,EAAAO,iBACAvI,EAAAgI,EAAAsC,aACA5T,EAAA,EACAkpE,EAAA53D,EAAA5H,QAAA1J,MACA6c,EAAAvT,EAAA0O,aAEA/d,EAAA,EAAiBA,EAAAwd,EAAAhb,OAAoBxC,IAAA,CACrCwd,EAAAhb,OAAA,IAGA8I,EAFAiW,EAAA/D,EAAAxd,GAUA,GAPA+F,GAAAwb,EAAAxb,MAEAuF,EADA+D,EAAAmT,IACAysD,EAAAlpE,EAEAA,EAGAwb,EAAA1Q,OAAA,CACA,IAAA8mE,EAAAjzE,SAAAmD,cAAA,OACA8vE,EAAAnwE,UAAA,gCACAmwE,EAAArxE,MAAAnC,IAAA,MACAwzE,EAAArxE,MAAAN,OAAA4c,EAAA,KACA+0D,EAAA/tE,UAAA,+CACA+tE,EAAA7/D,aAAAzI,EAAAsnE,8BAAA32E,GAEA+N,EAAAwO,SAAA8rC,kBAAAsvB,GAEAtgE,EAAAwF,YAAA3T,YAAAyuE,GAEAA,EAAArxE,MAAAlC,KAAAwB,KAAAkY,IAAA,EAAAxS,GAAA,2BCnCA,IAAA2D,EAAArP,EAAA,GACA8U,EAAA9U,EAAA,GAEAg4E,EAAA,SAAA3oE,EAAAyF,GAEA,IAAAmjE,KACAC,EAAA,0BAAA7oE,EAAA7L,MAkCA,SAAA20E,EAAAC,GACA,IAAA71E,EAAA,yEAA8D81E,KAAAD,GAC9D,OAAA71E,GACArB,EAAA,EAAAqB,EAAA,GACA+1E,EAAA,EAAA/1E,EAAA,GACAwJ,EAAA,EAAAxJ,EAAA,GACAyE,EAAA,IAAAzE,EAAA,SACG,KAGH,SAAAg2E,EAAA52E,GACA,OAAAs2E,EAAAt2E,IAAA,KAGA,SAAA62E,EAAAryE,EAAAC,EAAAqyE,GACA,OAAAtyE,EAAA,GAAAC,EAAAqyE,EAAAC,kBAAAD,EAAAE,kBAAAlwE,QAAA,eAcA,SAAAmwE,EAAAj3E,EAAAoiD,GACAk0B,EAAAt2E,GAAAoiD,EAGA,SAAA80B,EAAA1yE,EAAAC,EAAAqyE,GAEA,IAAA1gE,EAAA/R,KAAAiO,MAAA,IAAA9N,IAAA,EACAq5B,EAAAx5B,KAAAiO,MAAA,IAAA7N,IAAA,EAEA0yE,EAAAh0E,SAAAmD,cAAA,UACA6wE,EAAA1yE,SAAAo5B,EACAs5C,EAAA3yE,QAAA4R,EAEA,IAAAghE,EAAAD,EAAAE,WAAA,MAIA,OAEA,SAAAC,EAAA/1D,EAAAsc,EAAAznB,EAAAghE,EAAA9kD,GAEA,IAAAilD,EAAAH,EAAAI,gBAAAj2D,EAAAnL,EAAAkhE,EAAAz5C,GACA05C,EAAAE,uBAAA,EASA,IAPA,IAAAC,EAAA,EAAAplD,EAAAqlD,iBACAC,EAAApB,EAAAlkD,EAAA0kD,kBAEAzyE,EAAA,EACAH,EAAA,EACAyzE,EAAA,EAEA73D,EAAA,EAAoBA,GAAA5J,EAAa4J,IAEjC,IADAzb,EAAAyb,EAAAuB,EAAA,EACAs2D,EAAA,EAAeA,EAAAH,EAAuBG,IACtC,IAAAzzE,EAAA,EAAgBA,EAAAkzE,EAAAz5C,EAAsBz5B,IACtC0zE,EAAAvzE,EAAAszE,EAAAzzE,EAAAwzE,EAAAL,GAKA,IAAAQ,EAAA,EAAAzlD,EAAA0lD,kBACAC,EAAAzB,EAAAlkD,EAAAykD,mBAEA3yE,EAAA,EACA,QAAA+S,EAAA,EAAoBA,GAAA0mB,EAAa1mB,IAEjC,IADA/S,EAAA+S,EAAAmgE,EAAA,EACAO,EAAA,EAAeA,EAAAE,EAAyBF,IACxC,IAAAtzE,EAAA,EAAgBA,EAAAgd,EAAAnL,EAAqB7R,IACrCuzE,EAAAvzE,EAAAH,EAAAyzE,EAAAI,EAAAV,GAIAH,EAAAc,aAAAX,EAAA,KArCAY,CAAA1zE,EAAAD,EAAAq5B,EAAAznB,EAAAghE,EAAAN,GAEAK,EAAAiB,YAsCA,SAAAN,EAAAvzE,EAAAH,EAAAysB,EAAAwnD,GACA,IAEAjoE,EAAA,GAAAhM,GAFAI,EAAA4R,GAEA7R,GAEA8zE,EAAApvD,KAAA7Y,GAAAygB,EAAAtxB,EACA84E,EAAApvD,KAAA7Y,EAAA,GAAAygB,EAAA8lD,EACA0B,EAAApvD,KAAA7Y,EAAA,GAAAygB,EAAAzmB,EACAiuE,EAAApvD,KAAA7Y,EAAA,GAAAygB,EAAAxrB,GAIA,SAAAizE,EAAAt4E,GACA,yBAAAA,EAqIA,OACAoM,OAvQA,SAAAmsE,EAAAzqE,EAAA8oB,EAAA4hD,GACA,GAAA1qE,EAAA0pB,mBAEAr0B,SAAAmD,cAAA,UACA+wE,WAAA,CAGAkB,EAAAlwE,UAAA,GAEA,IAEAowE,EAsJA,SAAAC,EAAA5qE,EAAA8oB,EAAAta,GACA,IACAq8D,EAEAC,EAHAC,KAEAC,EAAA,EAGAC,EAAAniD,EAAApyB,MAAAiZ,OAAA,SAAAhf,GACA,QAAAA,IAGAu6E,EAAA,EAKAC,EAAA,IACA,GAAA9lE,EAAAC,KAAA,CAEA,IAAA8lE,EAAA7lE,UAAA6lE,YAAA,IACA,GAAAA,EAAA/yE,QAAA,oBACA,GAAA+yE,EAAA/yE,QAAA,oBACA,GAAA+yE,EAAA/yE,QAAA,oBAEA8yE,EAAA,KAIA,QAAAx6E,EAAA,EAAiBA,EAAAs6E,EAAA93E,OAAmBxC,IAAA,CAEpC,IAAAwQ,EAAA8pE,EAAAt6E,GAEA,GAAAwQ,GAAA2pE,QAAAh3E,IAAAg3E,GAAAn6E,GAAAs6E,EAAA93E,OAAA,GAAA63E,EAAAG,EAAA,CAQA,IANA,IAAAT,EAAAl8D,EACA68D,EAAA,EACA7B,EAAAjzE,KAAAiO,MAAA2mE,EAAAnrE,EAAA8O,YAAA9O,EAAA8O,WAEAw8D,EAAAN,EAEAN,EAAA,IACA,IAAAa,EAAAh1E,KAAAib,IAAAk5D,EAAAlB,GACAkB,GAAAlB,GAEAqB,EAAAx1E,SAAAmD,cAAA,QAEAvB,MAAAN,OAAA40E,EAAA,KACAV,EAAA5zE,MAAAorB,SAAA,WACAwoD,EAAA5zE,MAAAnC,IAAAu2E,EAAA,KACAR,EAAA5zE,MAAAlC,KAAAm2E,EAAA,KAEAL,EAAA5zE,MAAAu0E,WAAA,UACAX,EAAA1yE,UAAAyyE,EAAAE,GAAA3pE,GAGAxQ,GAAAs6E,EAAA93E,OAAA,IACAm4E,EAAAnqE,EAAAmqE,EAAA,GAEAT,EAAA5zE,MAAAP,MAAA40E,EAAA,KAEAP,EAAA9vE,KAAA4vE,GACAQ,GAAAE,EAEAP,EAAA,EACAE,GAAAI,EAIAnqE,IACA6pE,GAAA7pE,EACA2pE,EAAA3pE,GAKA,OAAA4pE,EAhOAU,CAyHA,SAAAzC,EAAAhpE,EAAA8oB,GACA,IAAA3N,KACA8vD,EAhHA,SAAAniD,GAGA,IAFA,IAAAmiD,EAAAniD,EAAApyB,MACAg1E,KACA/6E,EAAA,EAAiBA,EAAAs6E,EAAA93E,OAAmBxC,IACpC,EAAAs6E,EAAAt6E,KACA+6E,EAAAT,EAAAt6E,KAAA,GAEA,OAAA+6E,EAyGAC,CAAA7iD,GACAnyB,EAAAqJ,EAAA8O,WAEA88D,EAAA,GACA,QAAAj7E,KAAAs6E,EAAA,CAEA,IAAAv0E,EAAA,EAAA/F,EACAuB,EAAA62E,EAAAryE,EAAAC,EAAAqyE,GACA6C,EAAA/C,EAAA52E,GAEA,IAAA25E,EAAA,CACA,IAAAC,EAAA1C,EAAA1yE,EAAAC,EAAAqyE,GACAG,EAAAj3E,EAAA45E,GACAF,GAAA,IAAApB,EAAAt4E,GAAA,4BAA4C45E,EAAA,OAG5C3wD,EAAAxqB,GAAA65E,EAAAt4E,GAGA,GAAA05E,EAAA,CACA,IAAA30E,EAxGA,WACA,IAAAA,EAAA5B,SAAA8F,eAAAstE,GAOA,OALAxxE,KACAA,EAAA5B,SAAAmD,cAAA,UACA6E,GAAAorE,EACApzE,SAAAD,KAAAyE,YAAA5C,IAEAA,EAgGA80E,GACA90E,EAAAsD,WAAAqxE,EAGA,OAAAzwD,EApJA6wD,CAoOA,SAAAvB,GAEA,IAAAtpE,EAAA9L,SAAAmD,cAAA,OACA2I,EAAAhJ,UAAA,kBACA,IAAAkR,EAAAhU,SAAAmD,cAAA,OACA6Q,EAAAlR,UAAA,iBACAkR,EAAAxP,YAAAsH,GACAspE,EAAA5wE,YAAAwP,GAEA,IAAA4iE,EAAAj1E,iBAAAqS,GACA2/D,EAAAhyE,iBAAAmK,GAEAy7D,GACAsN,kBAAA+B,EAAAC,iBAAA,uBAAAlzE,QAAA,SACA6wE,iBAAAb,EAAAkD,iBAAA,sBAAAlzE,QAAA,SACAiwE,kBAAAgD,EAAAC,iBAAA,uBACAhD,iBAAAF,EAAAkD,iBAAA,uBAKA,OAFAzB,EAAA1wE,YAAAsP,GAEAuzD,EA1PAuP,CAAA1B,GACAzqE,EAAA8oB,GACA9oB,EAAA8oB,EAAA4hD,GAEA0B,EAAA/2E,SAAAg3E,yBAEA1B,EAAArrE,QAAA,SAAA3F,GACAyyE,EAAAvyE,YAAAF,KAGA8wE,EAAA5wE,YAAAuyE,OAwPA17E,EAAAD,SACAwB,OAAA,WACA,OAAAs2E,EAAA3oE,EAAAyF,sBCrRA,IAAAzF,EAAArP,EAAA,GAkVAG,EAAAD,QAhVA,SAAAiO,GACA,IAAA9L,EAAA8L,EAAAgJ,KACAwuD,EAAAx3D,EAAAoC,UAEA,OACAwrE,OAAA,SAAA3uB,EAAAj9B,EAAAC,QACA7sB,IAAA6sB,IACAA,EAAAg9B,EAAAxqD,OAAA,QACAW,IAAA4sB,IACAA,EAAA,GAGA,IADA,IAAAqL,EAAA,EACAp7B,EAAA+vB,EAAqB/vB,GAAAgwB,EAAShwB,IAC9Bo7B,GAAA4xB,EAAAhtD,GAEA,OAAAo7B,GAEAwgD,YAAA,SAAAC,EAAA1jD,EAAApI,EAAAC,GACA,IAAAw/B,EAAAr3B,EAAApyB,WAEA5C,IAAA6sB,IACAA,EAAAw/B,EAAAhtD,OAAA,QACAW,IAAA4sB,IACAA,EAAA,GACA,IAAAvtB,EAAAwtB,EAAAD,EAAA,EAEA,KAAAA,EAAAy/B,EAAAhtD,OAAA,GAAAA,GAAA,GAAAwtB,EAAAw/B,EAAAhtD,OAAA,IAGA,IAEA0f,EAAA25D,EAFAzzE,KAAAuzE,OAAAnsB,EAAAz/B,EAAAC,GAIA5nB,KAAA0zE,WAAA55D,EAAAstC,EAAAz/B,EAAAC,GACA5nB,KAAA0zE,YAAA55D,EAAAstC,EAAAx/B,EAAA,GAEAmI,EAAAR,WAAAvvB,KAAAuzE,OAAAnsB,KAEAusB,UAAA,SAAAh2E,EAAA6pB,GAEA,IADA,IAAAhhB,KACA5O,EAAA,EAAkBA,EAAA4vB,EAAW5vB,IAAA4O,EAAA5O,GAAA,EAG7B,OADAoI,KAAA0zE,WAAA/1E,EAAA6I,GACAA,GAGAktE,WAAA,SAAA/1E,EAAAypD,EAAAz/B,EAAAC,GACAD,IACAA,EAAA,QACA5sB,IAAA6sB,IACAA,EAAAw/B,EAAAhtD,OAAA,GAQA,IANA,IAAAA,EAAAwtB,EAAAD,EAAA,EAEAisD,EAAA5zE,KAAAuzE,OAAAnsB,EAAAz/B,EAAAC,GAIAhwB,EAAA+vB,EAAqB/vB,GAAAgwB,EAAShwB,IAAA,CAC9B,IAAAwhB,EAAA5b,KAAAiO,MAAA9N,GAAAi2E,EAAAxsB,EAAAxvD,GAAAg8E,EAAA,EAAAx5E,IAEAw5E,GAAAxsB,EAAAxvD,GACA+F,GAAAyb,EACAhf,IAEAgtD,EAAAxvD,IAAAwhB,EAGAguC,IAAAhtD,OAAA,IAAAuD,GAGAqiB,WAAA,SAAAH,GACA,SAAAuX,EAAA9wB,EAAAkX,GACA,IAAAtlB,EAAA,IAAAoC,KAAA,UACA,OAAAT,EAAAumB,IAAAloB,EAAAslB,EAAAlX,GAAApO,EAGA2nB,EAAAlF,KAAA,SAAAnc,EAAA+E,GACA,OAAA6zB,EAAA54B,EAAA8H,KAAA9H,EAAAgf,MAAA4Z,EAAA7zB,EAAA+C,KAAA/C,EAAAia,MACA,EACK4Z,EAAA54B,EAAA8H,KAAA9H,EAAAgf,MAAA4Z,EAAA7zB,EAAA+C,KAAA/C,EAAAia,OACL,EAEA,IAIA,QAAA5lB,EAAA,EAAkBA,EAAAioB,EAAAzlB,OAAmBxC,IACrCioB,EAAAjoB,GAAA2R,MAAA3R,GAGAkoB,aAAA,WAKA,OAHAq9C,EAAAn1D,WAAA,kBACA6rE,aAAA,kBAAA94E,SAAAoiE,EAAAl2D,SAAAk2D,EAAAhjD,cAGA7T,KAAA62D,EAAAl2D,SAAAyY,WACAlC,KAAA2/C,EAAAl2D,SAAAuW,KACA0M,SAAAizC,EAAAhjD,YAAA25D,WACAnlE,KAAAwuD,EAAAl2D,SAAA6sE,WACAjyE,IAAAs7D,EAAAhjD,YAAAyY,mBAIAb,eAAA,SAAAlS,EAAAk0D,EAAAC,EAAAr+D,EAAAs+D,EAAAC,EAAA95D,GAKA,IAJA,IAAA+5D,EAAAn0E,KAAA2zE,UAAAh+D,EAAAkK,EAAAzlB,QACAm1B,EAAAykD,EAEA94B,KACAtjD,EAAAioB,EAAAzlB,OAAA,EAAkCxC,GAAA,EAAQA,IAAA,CAC1C,IAAAw8E,EAAAx8E,GAAAioB,EAAAzlB,OAAA,EACAqlB,EAAAzf,KAAAq0E,gBAAAx0D,EAAAjoB,GAAAq8E,EAAAC,GACAE,GACAp0E,KAAA+tB,eAAAtO,GAGAzf,KAAAs0E,aAAA70D,EAAAs0D,EAAAxkD,EAAA4kD,EAAAv8E,IACAoI,KAAAu0E,kBAAA90D,GAEA20D,IACA7kD,EAAA9P,EAAA8P,YAGA2rB,EAAAxU,QAAAjnB,GAIA,IAAA7nB,EAAA,EAAkBA,EAAAsjD,EAAA9gD,OAAA,EAAwBxC,IAC1CoI,KAAAw0E,kBAAAt5B,IAAA9gD,OAAA,GAAA8gD,EAAAtjD,IAEA,IAAAA,EAAA,EAAkBA,EAAAsjD,EAAA9gD,OAAoBxC,IAEtCwiB,GACApa,KAAAy0E,aAAAv5B,EAAAtjD,IAEAoI,KAAA00E,eAAAx5B,EAAAtjD,IAEA,OAAAsjD,GAIAu5B,aAAA,SAAA1kD,GACAA,EAAApyB,MAAAoyB,EAAApyB,MAAA0c,UACA0V,EAAA1B,QAAA0B,EAAA1B,QAAAhU,UAEA,IAAAs6D,EAAA5kD,EAAA6kD,cACA7kD,EAAA6kD,iBACA7kD,EAAA6D,0BACA7D,EAAA3V,KAAA,EACA,QAAAxiB,EAAA,EAAiBA,EAAAm4B,EAAA1B,QAAAj0B,OAA0BxC,IAC3Cm4B,EAAA6kD,cAAA7kD,EAAA1B,QAAAz2B,GAAAqD,WAAArD,EACAm4B,EAAA6D,uBAAA+gD,EAAA5kD,EAAA1B,QAAAz2B,GAAAqD,YAAArD,EAEA,OAAAm4B,GAGA2kD,eAAA,SAAAztE,GACA,QAAArP,EAAA,EAAAoK,EAAAiF,EAAAonB,QAAAj0B,OAA+CxC,EAAAoK,EAASpK,IACxDqP,EAAAjL,KAAAkG,MAAA+E,EAAAtJ,MAAA/F,EAAA,QAAAqP,EAAAjL,KAAApE,EAAA,SAIA02B,oBAAA,SAAA3f,EAAAohB,GAEA,GAAAotC,EAAAl2D,SAAAknB,cAAA,CAKA,IAJA,IAAA0mD,GAAA,EACAC,EAAAnmE,EAGA/W,EAAA,EAAmBA,EAAAm4B,EAAAvS,KAAgB5lB,IACnCA,IACAk9E,EAAAj7E,EAAAumB,IAAAzR,EAAA/W,EAAAm4B,EAAAzpB,OAGAuuE,MAAA70E,KAAAo0C,WAAA0gC,EAAA/kD,EAAAzpB,MAGA,OAAAuuE,EAEA,UAGA9mD,eAAA,SAAA9mB,GACAA,EAAAgnB,YACAhnB,EAAA+mB,cAAA/mB,EAAAugB,OAEA8sD,aAAA,SAAArtE,EAAA8tE,EAAAxlD,EAAAylD,GACA,IAAAC,EAAA1lD,EAEAtoB,EAAArJ,OAAAo3E,EAEA,IAAAE,OAAAn6E,IAAAkM,EAAA+mB,cAAA/mB,EAAAugB,MAAAvgB,EAAA+mB,cAEAknD,IACAA,EAAA,GAEAjuE,EAAAqoB,UAAA9xB,KAAAiO,MAAAwpE,EAAAC,GAEAH,GACA9tE,EAAAqoB,UAAAylD,IACA9tE,EAAAqoB,UAAAylD,EACAE,EAAAhuE,EAAAqoB,UAAA4lD,GAGAjuE,EAAAtJ,SAEA,IADA,IAAA81B,EAAAxsB,EAAAgnB,aACAr2B,EAAA,EAAkBA,EAAAqP,EAAAonB,QAAAj0B,OAA2BxC,IAC7C,GAAA67B,EAAAxsB,EAAAonB,QAAAz2B,GAAAqD,YAAAgM,EAAA+mB,eAAA/mB,EAAAugB,MACAvgB,EAAAtJ,MAAA/F,GAAA,MACK,CAEL,IAAA+F,EAAA,EACA,SAAAsJ,EAAAX,OAEA3I,EADAH,KAAAC,OAAA5D,EAAAumB,IAAAnZ,EAAAonB,QAAAz2B,GAAAqP,EAAAuW,KAAAvW,EAAAX,MAAAW,EAAAonB,QAAAz2B,IAAA,QAGAqP,EAAAtJ,MAAA/F,GAAA+F,EAIAqC,KAAA0zE,WAAAuB,EAAAj1E,KAAAuzE,OAAAtsE,EAAAtJ,OAAAsJ,EAAAtJ,OACAsJ,EAAAsoB,WAAAvvB,KAAAuzE,OAAAtsE,EAAAtJ,QAEA02E,gBAAA,SAAAptE,EAAAkmB,EAAAC,GACA,IAAA3N,EAAA5Y,EAAAnM,OACA8sB,MAAA,EACA8H,UAAA,EACAC,WAAA,EACA3xB,OAAA,EACAD,SACA3B,QACAqyB,WACAumD,iBACAznD,SAAA,IAAA7yB,KAAA6yB,GACAC,SAAA,IAAA9yB,KAAA8yB,IACInmB,GASJ,OAPAjH,KAAAm1E,WAAAluE,EAAAX,KAAAW,EAAAuW,KAAA2P,EAAAC,EAAA,SAAAze,GACA8Q,EAAA+H,QACA/H,EAAA4O,QAAAnsB,KAAA,IAAA5H,KAAAqU,IACA8Q,EAAAm1D,cAAAjmE,EAAA1T,WAAAwkB,EAAA4O,QAAAj0B,OAAA,IAGAqlB,EAAA+T,kBAAA/T,EAAA4O,QAAA5tB,QACAgf,GAEA21D,cAAA,SAAAC,EAAAC,EAAA3tD,EAAAC,EAAAjjB,GASA,IARA,IAAA4wE,EAAAD,EAAAjnD,QACAmnD,EAAAH,EAAAhnD,QAEAO,EAAAjH,GAAA,EACAjK,EAAAkK,GAAA4tD,EAAAp7E,OAAA,EACAq7E,EAAA,EAGA7N,EAAA,EAAmBA,EAAA2N,EAAAn7E,OAAyBwtE,IAAA,CAC5C,IAAA8N,EAAAL,EAAAT,eAAAW,EAAA3N,SACA7sE,IAAA26E,MAAAh4D,IACA/Y,GACAA,EAAApK,MAAAyF,MAAAy1E,EAAA7N,EAAAh5C,EAAA8mD,IAEA9mD,EAAA8mD,EACAD,EAAA7N,KAKA4M,kBAAA,SAAAa,EAAAC,EAAA3tD,EAAAC,GACA5nB,KAAAo1E,cAAAC,EAAAC,EAAA3tD,EAAAC,EAAA,SAAA+tD,EAAAC,EAAAC,EAAAC,GACA,IAAA1G,EAAApvE,KAAAuzE,OAAA8B,EAAA13E,MAAAk4E,EAAAC,EAAA,GACA91E,KAAAuzE,OAAA+B,EAAA33E,MAAAg4E,EAAAC,EAAA,IACAxG,GACApvE,KAAAwzE,YAAApE,EAAAkG,EAAAK,EAAAC,EAAA,MAMAT,WAAA,SAAA7uE,EAAAkX,EAAA2P,EAAAC,EAAAzoB,GACA,IAAAkO,EAAA,IAAAvY,KAAA6yB,GACAzP,EAAA,IAAApjB,KAAA8yB,GACAvzB,EAAAyM,EAAA,YACAuM,EAAAhZ,EAAAyM,EAAA,UAAAuM,IAGA,IAAAsmC,EAAA,IAAA7+C,KAAAuY,GAIA,KAHAsmC,IAAAz7B,IACAA,EAAA7jB,EAAAumB,IAAA+4B,EAAA37B,EAAAlX,KAEA6yC,GAAAz7B,GAAA,CACA/Y,EAAA5M,KAAAiI,KAAA,IAAA1F,KAAA6+C,IACA,IAAAnF,EAAAmF,EAAAhb,oBACAgb,EAAAt/C,EAAAumB,IAAA+4B,EAAA37B,EAAAlX,GACA6yC,EAAAxzC,EAAAo4B,oBAAAob,EAAAnF,EAAAx2B,EAAAlX,GACAzM,EAAAyM,EAAA,YACA6yC,EAAAt/C,EAAAyM,EAAA,UAAA6yC,MAGAo7B,kBAAA,SAAA90D,GACA,IAAA0zB,EAAA1zB,EAAA4O,QAEApyB,EAAAwjB,EAAA9hB,MAAAvD,OAAA,EACA0f,EAAA,EACA,IAAAq5B,EAAA,IAAA1zB,EAAA0N,UAFA,GAEAlxB,EAAA,CACA,IAAA0B,EAAAH,KAAAiO,MAAAgU,EAAA9hB,MAAA,KAAAw1C,EAAA,GAAA1zB,EAAA0N,WAAAgmB,EAAA,GAAAA,EAAA,MACAr5B,GAAA2F,EAAA9hB,MAAA,GAAAA,EACA8hB,EAAA9hB,MAAA,GAAAA,EAEAw1C,EAAA,OAAA74C,KAAAmlB,EAAA0N,UAGA,IAAA1S,EAAA04B,EAAA/4C,OAAA,EACA27E,EAAA5iC,EAAA14B,GACAu7D,EAAAn8E,EAAAumB,IAAA21D,EAAAt2D,EAAAjC,KAAAiC,EAAAnZ,MAOA,IANA0vE,GAAAv2D,EAAA2N,UAAA3S,EAAA,IACA9c,EAAA8hB,EAAA9hB,MAAA8c,GAAAjd,KAAAiO,MAAAgU,EAAA9hB,MAAA8c,KAAAu7D,EAAAv2D,EAAA2N,WAAA4oD,EAAAD,KACAj8D,GAAA2F,EAAA9hB,MAAA8c,GAAA9c,EACA8hB,EAAA9hB,MAAA8c,GAAA9c,GAGAmc,EAAA,CAGA,IAFA,IAAA85D,EAAA5zE,KAAAuzE,OAAA9zD,EAAA9hB,OACAs4E,EAAA,EACAr+E,EAAA,EAAmBA,EAAA6nB,EAAA9hB,MAAAvD,OAAsBxC,IAAA,CACzC,IAAAwhB,EAAA5b,KAAAiO,MAAAqO,GAAA2F,EAAA9hB,MAAA/F,GAAAg8E,IACAn0D,EAAA9hB,MAAA/F,IAAAwhB,EACA68D,GAAA78D,EAEApZ,KAAA0zE,WAAA55D,EAAAm8D,EAAAx2D,EAAA9hB,4BC3UA,IAAA0P,EAAA7V,EAAA,GACAuP,EAAAvP,EAAA,GACAqP,EAAArP,EAAA,GACA8U,EAAA9U,EAAA,GAIA0+E,GAHA1+E,EAAA,GAGA,SAAA8V,GACA,aAGA,SAAA4oE,EAAA5yE,EAAA2D,EAAAC,EAAAvB,GAEA,IAAA0uB,EAAA/mB,EAAA/S,MAAAyF,KAAA7E,YAAA6E,KACAA,KAAAqH,QAAAR,EAAAnM,MAAAuM,GAAsCyQ,OAAA,MACtC2c,EAAA8hD,yBAAAtvE,EAAAzN,KAAAi7B,EAAA8hD,yBAAA9hD,GACAA,EAAA+hD,uBAAAvvE,EAAAzN,KAAAi7B,EAAA+hD,uBAAA/hD,GACAA,EAAAgiD,4BAAAxvE,EAAAzN,KAAAi7B,EAAAgiD,4BAAAhiD,GACAA,EAAAiiD,8BAAAzvE,EAAAzN,KAAAi7B,EAAAiiD,8BAAAjiD,GACAA,EAAAkiD,mBAAA1vE,EAAAzN,KAAAi7B,EAAAkiD,mBAAAliD,GAEAr0B,KAAAqH,QAAAqC,QAAA,EACA,IAAAa,EAAA5E,EAAAsB,OAAAi0B,YAmBA,OAjBAv1B,EAAA2G,IAAAC,OAGAhC,GAAA,GAGAvK,KAAAw2E,iBACAniD,EAAAhtB,QAAAzJ,OAAA2M,EACA8pB,EAAAjtB,QAAAC,QAAAzJ,OAAA2M,IAEA8pB,EAAAhtB,QAAA1J,MAAA4M,EACA8pB,EAAAjtB,QAAAC,QAAA1J,MAAA4M,GAGAvK,KAAAqH,QAAAovE,eAAA,EAEApiD,EAAA1sB,MAAA,WACA0sB,EA6cA,OA5eAhnB,EAAA6oE,EAAA5oE,GAkCA4oE,EAAA18E,UAAA0Q,KAAA,SAAA+J,GACAA,EAAAzS,UAAAxB,KAAA2J,UACA3J,KAAA8H,MAAAmM,EAAAvS,WAEA1B,KAAA8H,OACA9H,KAAAkK,OAEAlK,KAAA02E,cACA12E,KAAA22E,gBAEA32E,KAAA42E,kBAEA52E,KAAA62E,kBACA72E,KAAA82E,oBAGAZ,EAAA18E,UAAAmQ,QAAA,WAEA,wCADA3J,KAAAw2E,gBAAA,uCACA,kBAAAx2E,KAAAw2E,gBAAA,kDAGAN,EAAA18E,UAAAu9E,eAAA,WAEA,IADA,IAAAzzE,EAAAtD,KAAAoH,QACA9D,KAAA8D,SACA9D,IAAA8D,QAEA,GAAA9D,EACA,OAAAA,GAaA4yE,EAAA18E,UAAAw9E,UAAA,WACA,IAAA9yE,KAEA,OAXA,SAAA+yE,EAAA72E,EAAA8D,GAEA,GADAA,EAAAhC,KAAA9B,GACAA,EAAAo0B,OACA,QAAA58B,EAAA,EAAiBA,EAAAwI,EAAAo0B,OAAAp6B,OAAwBxC,IACzCq/E,EAAA72E,EAAAo0B,OAAA58B,GAAAsM,GAMA+yE,CAAAj3E,KAAA+2E,iBAAA7yE,GACAA,GAGAgyE,EAAA18E,UAAA09E,gBAAA,WAGA,IAFA,IAAAjgD,EAAAj3B,KAAAg3E,YACA9yE,KACAtM,EAAA,EAAgBA,EAAAq/B,EAAA78B,OAAkBxC,IAClCq/B,EAAAr/B,GAAAyP,UAAArH,KAAA02E,eAAAz/C,EAAAr/B,GAAAyP,QAAAoQ,SAAAzX,KAAA0H,KAAA1H,KAAAw2E,iBAAAv/C,EAAAr/B,GAAAyP,QAAA8vE,SAAAn3E,KAAA0H,MACAxD,EAAAhC,KAAA+0B,EAAAr/B,IAGA,OAAAsM,GAIAgyE,EAAA18E,UAAAo9E,gBAAA,WACA52E,KAAAw7D,YAAAx7D,KAAA8H,MACA9H,KAAAwH,WAAAyyB,OAAAj6B,KAAA8H,MAAA,SAAA9H,KAAAm2E,2BAIAD,EAAA18E,UAAAs9E,iBAAA,WAGA,IAFA,IAAA7/C,EAAAj3B,KAAAk3E,kBACAr1E,EAAA7B,KAAA02E,cAAA,gIACA9+E,EAAA,EAAgBA,EAAAq/B,EAAA78B,OAAkBxC,IAElCmP,EAAA9F,aAAAg2B,EAAAr/B,GAAAkQ,OAAAmvB,EAAAr/B,GAAA2Q,UAAA1G,IAIAq0E,EAAA18E,UAAAm9E,cAAA,WACA32E,KAAAu7D,YAAAv7D,KAAA8H,MACA9H,KAAAwH,WAAAyyB,OAAAj6B,KAAA8H,MAAA,SAAA9H,KAAAo2E,yBAGAF,EAAA18E,UAAA49E,mBAAA,WACAp3E,KAAA+2E,kBAGAb,EAAA18E,UAAAq9E,gBAAA,WACAvqE,EAAAW,KAEAjN,KAAAwH,WAAAyyB,OAAAj6B,KAAA+2E,iBAAAjvE,MAAA,QAAA9H,KAAAu2E,oBAEAv2E,KAAAwH,WAAAyyB,OAAAj6B,KAAA+2E,iBAAAjvE,MAAA,aAAA9H,KAAAu2E,qBAMAL,EAAA18E,UAAA69E,mBAAA,SAAAr7E,GACA,IAAAgE,KAAAs3E,WAAA,CACAt3E,KAAAs3E,YAAA,EAEAt3E,KAAAw7D,YAAA3+D,WAAAb,EACAgE,KAAAqH,QAAAw1B,eAAA7gC,EACAA,EAAAgE,KAAAw7D,YAAA3+D,WAGA,IADA,IAAAo6B,EAAAj3B,KAAAk3E,kBACAt/E,EAAA,EAAgBA,EAAAq/B,EAAA78B,OAAkBxC,IAClCq/B,EAAAr/B,GAAAyQ,UACA4uB,EAAAr/B,GAAAyQ,SAAArM,OAAAjB,GAGA,IAAA2hE,EAAA18D,KAAAqH,QAAAovE,eACAz2E,KAAAqH,QAAAovE,eAAAz6E,EACAgE,KAAA4E,UAAA,YAAA83D,EAAA1gE,EAAAgE,KAAAqH,QAAAqQ,SACA1X,KAAAs3E,YAAA,IAEApB,EAAA18E,UAAA+9E,iBAAA,SAAAx7E,GACA,IAAAiE,KAAAs3E,WAAA,CACAt3E,KAAAs3E,YAAA,EAEAt3E,KAAAu7D,YAAA7+D,UAAAX,EACAA,EAAAiE,KAAAu7D,YAAA7+D,UAIA,IAFA,IAAAu6B,EAAAj3B,KAAAk3E,kBAEAt/E,EAAA,EAAgBA,EAAAq/B,EAAA78B,OAAkBxC,IAClCq/B,EAAAr/B,GAAAyQ,UACA4uB,EAAAr/B,GAAAyQ,cAAAtN,EAAAgB,GAGA,IAAA2gE,EAAA18D,KAAAqH,QAAAovE,eACAz2E,KAAAqH,QAAAovE,eAAA16E,EACAiE,KAAA4E,UAAA,YAAA83D,EAAA3gE,EAAAiE,KAAAqH,QAAAqQ,SACA1X,KAAAs3E,YAAA,IAGApB,EAAA18E,UAAAk9E,YAAA,WACA,WAAA12E,KAAAqH,QAAAqQ,QAEAw+D,EAAA18E,UAAAg9E,cAAA,WACA,WAAAx2E,KAAAqH,QAAAqQ,QAEAw+D,EAAA18E,UAAA28E,yBAAA,SAAAx2E,GACA,IAAAK,KAAA02E,gBAAA12E,KAAAs3E,WAAA,CAMA,OAAAh9E,MAAA0F,KAAAw3E,aAAA,gBACA,IAAAx3E,KAAAuH,OAAA44B,qBAAA,CACA,IAAAnkC,EAAAgE,KAAAw7D,YAAA3+D,WAEAmD,KAAAq3E,mBAAAr7E,GAEAgE,KAAAy3E,SAAAz3E,KAAAw7D,YAAA3+D,cAEAq5E,EAAA18E,UAAA88E,8BAAA,SAAA32E,GACAK,KAAA02E,eAKAR,EAAA18E,UAAA8P,KAAA,WACAtJ,KAAAoH,QAAAkC,QAEA4sE,EAAA18E,UAAA4P,KAAA,WACApJ,KAAAoH,QAAAgC,QAGA8sE,EAAA18E,UAAAk+E,eAAA,WAYA,IAXA,IAKApsE,EALAuM,EAAA,EACA8/D,EAAA,EACAC,EAAA53E,KAAAw2E,gBAEAqB,EAAA73E,KAAAk3E,kBAEAY,EAAAF,EAAA,6BACAG,EAAAH,EAAA,sBACAI,EAAAJ,EAAA,QACA5jD,EAAAh0B,KAAAi4E,mBAEArgF,EAAA,EAAgBA,EAAAigF,EAAAz9E,OAAmBxC,IAEnC,IADA0T,EAAAusE,EAAAjgF,KACA0T,EAAA6qB,UAAA7qB,EAAA6qB,SAAArtB,UAAAwC,EAAAjE,QAAAqC,OAAA,CAEA,IACAwuE,EADAtzB,EAAAt5C,EAAA6qB,SAAArtB,UAQA,GALAovE,EADAtzB,EAAAnrD,eAAAq+E,GACAlzB,EAAAkzB,GAEAlzB,EAAAmzB,GAGA/jD,EAEA4wB,EAAAmzB,GAAAnzB,EAAAozB,IAAApzB,EAAAmzB,GAAAlgE,GAAAqgE,EAAAtzB,EAAAozB,GAAAhkD,EAAA,IACAnc,EAAAqgE,GAAAN,EAAA,KACAD,EAAA/yB,EAAAozB,QAEI,CACJ,IAAAG,EAAA36E,KAAAkY,IAAAkvC,EAAAmzB,GAAAG,EAAA,IAEAA,GAAAC,GADA36E,KAAAkY,IAAAkvC,EAAAozB,GAAAG,EAAA,IAGAD,EAAArgE,IAGAA,EAAAqgE,EACAP,EAAA/yB,EAAAozB,KAKA,OACAI,YAAAT,EACAU,YAAAxgE,IAIAq+D,EAAA18E,UAAAke,OAAA,SAAA4R,GACAtpB,KAAAw2E,gBACAx2E,KAAAq3E,mBAAA/tD,GAEAtpB,KAAAu3E,iBAAAjuD,IAIA4sD,EAAA18E,UAAAoe,eAAA,WACA,OACAyiD,QAAAr6D,KAAAnC,YACAiV,UAAA9S,KAAAqH,QAAAqQ,OACAnN,KAAAvK,KAAAqH,QAAAswE,UACA9/D,WAAA7X,KAAAqH,QAAAwQ,YAAA,EACAyR,SAAAtpB,KAAAqH,QAAAovE,gBAAA,IAIAP,EAAA18E,UAAA2P,QAAA,SAAAxL,EAAAC,GACA0P,EAAA9T,UAAA2P,QAAA5O,MAAAyF,KAAA7E,WAEA,IAAAm9E,EAAAt4E,KAAA03E,iBAEA9hD,GAAA51B,KAAA02E,cAAA94E,EAAAD,GAAAqC,KAAAi4E,oBAAAj4E,KAAAw2E,gBAAA,KAEA8B,EAAAD,aAAAziD,EAAA0iD,EAAAF,cACAE,EAAAD,aAAAziD,EAAA0iD,EAAAF,aAEAp4E,KAAAqH,QAAAwQ,WAAAygE,EAAAD,YAEAr4E,KAAAqH,QAAA1J,QACAqC,KAAAqH,QAAAzJ,SACAoC,KAAAu4E,eAAAD,EAAAD,cAGAnC,EAAA18E,UAAAqE,UAAA,WACA,SAAAmC,KAAAoH,UAAApH,KAAAoH,QAAAU,MAAArL,aAGAy5E,EAAA18E,UAAA07B,WAAA,WACA,IAAAojD,EAAAt4E,KAAA03E,iBACA,SAAAY,EAAAD,aAAAr4E,KAAAoH,SAAApH,KAAAoH,QAAAU,MAAArL,gBAEG67E,EAAAD,aAAAr4E,KAAAoH,SAAApH,KAAAoH,QAAAU,MAAArL,aAOHy5E,EAAA18E,UAAAy7B,WAAA,WAEA,QADAj1B,KAAA03E,iBACAW,cAAAr4E,KAAAoH,UAAApH,KAAAoH,QAAAU,MAAArL,aAQAy5E,EAAA18E,UAAAg/E,iBAAA,WACAx4E,KAAAi1B,aACAj1B,KAAAoJ,OACGpJ,KAAAk1B,cACHl1B,KAAAsJ,QAIA4sE,EAAA18E,UAAAi/E,gBAAA,SAAAntE,GACA,IAAA0oB,EAAA,EAIA,OAHA1oB,GAAA,YAAAA,EAAAjE,QAAAiE,MAAA,QAAAA,EAAAjE,QAAAiE,OACA0oB,EAAA1oB,EAAA6qB,SAAA5kB,aAAAoE,cAEAqe,GAGAkiD,EAAA18E,UAAAy+E,iBAAA,WACA,IAAAjkD,EAAA,EACA,GAAAh0B,KAAA02E,cAAA,CACA,IAAAgC,EAAA14E,KAAAoH,gBACA4sB,EAAAx2B,KAAAkY,IACA1V,KAAAy4E,gBAAAC,EAAA/zD,eAAA3kB,KAAAoH,QAAAM,MACA1H,KAAAy4E,gBAAAC,EAAAj0D,eAAAzkB,KAAAoH,QAAAM,YAKA,IAFA,IAAAmwE,EAAA73E,KAAAk3E,kBAEAt/E,EAAA,EAAkBA,EAAAigF,EAAAz9E,OAAmBxC,IAAA,CACrC,IAEA0iB,EAFAu9D,EAAAjgF,GACAwP,QACAotB,OAEA/Z,EAAAH,IAAAlgB,OAAA,GAEA,GAAAqgB,GAAA,aAAAA,EAAApT,QAAAiE,OAAA,IAAAmP,EAAApT,QAAAqC,OAAA,CACAsqB,EAAAvZ,EAAApT,QAAA1J,MACA,OAKA,OAAAq2B,GAAA,GAGAkiD,EAAA18E,UAAA++E,eAAA,SAAAhuE,GACA,IAAAhR,EAAAyG,KAAAw2E,gBAAA,iBACA7hD,EAAA30B,KAAAw2E,gBAAAx2E,KAAAw7D,YAAAx7D,KAAAu7D,YAEAvnC,EAAAh0B,KAAAi4E,mBAEAn6E,EAAA62B,EAAAjzB,WAEAsyB,EACAh0B,KAAA02E,eAEA12E,KAAAqH,QAAAswE,UAAA33E,KAAAqH,QAAAzJ,OAAAo2B,EAAA,EACAW,EAAAz2B,MAAAN,OAAAoC,KAAAqH,QAAAswE,UAAA,KACAhjD,EAAAz2B,MAAAnC,IAAAi4B,EAAA,OACAjtB,EAAA9F,aAAA0zB,EAAA30B,KAAAoH,QAAA8D,SAAAnP,KACAgL,EAAA9F,aAAA0zB,EAAAl4B,WAAA,wBAEAuD,KAAAqH,QAAAswE,UAAA33E,KAAAqH,QAAA1J,MAAAq2B,EAAA,EACAW,EAAAz2B,MAAAP,MAAAqC,KAAAqH,QAAAswE,UAAA,OAIAhjD,EAAAz2B,MAAAnC,IAAA,OACAgL,EAAA7F,gBAAAyzB,EAAA30B,KAAAoH,QAAA8D,SAAAnP,KACAgL,EAAA7F,gBAAAyzB,EAAAl4B,WAAA,sBACAuD,KAAAqH,QAAAswE,UAAA33E,KAAAqH,QAAAzJ,QAGAE,EAAAI,MAAA3E,GAAAgR,EAAA,MAGA2rE,EAAA18E,UAAA48E,uBAAA,SAAAz2E,GACA,IAAAK,KAAAm2E,6BAAAn2E,KAAAs3E,aAIAt3E,KAAAuH,OAAA44B,qBAAA,CACA,IAAApkC,EAAAiE,KAAAu7D,YAAA7+D,UAEAX,GADAiE,KAAA24E,UAGA34E,KAAAu3E,iBAAAx7E,GAEAiE,KAAA24E,QAAA34E,KAAAu7D,YAAA7+D,aAGAw5E,EAAA18E,UAAA68E,4BAAA,SAAA12E,GACAK,KAAAm2E,4BAKAD,EAAA18E,UAAAo/E,kBAAA,SAAAlH,GAGA,IAFA,IAAAmH,EAAA74E,KAAAk3E,kBAAAnyE,OAAA/E,MAEApI,EAAA,EAAgBA,EAAAihF,EAAAz+E,OAA2BxC,IAAA,CAC3C,IAAAkG,EAAA+6E,EAAAjhF,GAAAkQ,MACA,GAAAf,EAAA1D,UAAAquE,EAAA5zE,GACA,SAIA,UAGAo4E,EAAA18E,UAAA+8E,mBAAA,SAAA52E,GACA,IAAAhF,EAAAgF,EAAAhF,QAAAgF,EAAAE,WAEA,GAAAG,KAAA44E,kBAAAj+E,GAAA,CAGAqF,KAAAw3E,YAAA,IAAAl9E,KAEA,IAAA4J,KACA40E,EAAAxsE,EAAAW,KACA8rE,EAAAD,GAAA,GAAAn5E,EAAAq5E,OAAA,EAAAr5E,EAAAs5E,YACAC,EAAAJ,GAAA,GAAAn5E,EAAAw5E,OAAAx5E,EAAAy5E,WAQA,IANAz5E,EAAA+uC,UAAA/uC,EAAAq5E,QAAAr5E,EAAAs5E,cAEAF,EAAA,EAAAG,EACAA,EAAA,GAGAH,GAAAv7E,KAAA0iC,IAAA64C,GAAAv7E,KAAA0iC,IAAAg5C,GAAA,CACA,GAAAl5E,KAAA02E,cACA,OAGA,GAAAxyE,EAAAxG,EAAA,SACA,IAAAsC,KAAAw7D,cAAAx7D,KAAAw7D,YAAAv+D,YAAA,SAEA,IAAAiW,EAAA6lE,GAAA,GACAM,EAAAr5E,KAAAy3E,SACAz7E,EAAAq9E,EAAA,GAAAnmE,EAIA,GAHAlT,KAAAq3E,mBAAAr7E,GACAgE,KAAAw7D,YAAA3+D,WAAAb,EAEAq9E,GAAAr5E,KAAAw7D,YAAA3+D,WACA,SAGAmD,KAAAy3E,SAAAz3E,KAAAw7D,YAAA3+D,eACG,CACH,GAAAmD,KAAAw2E,gBACA,OAGA,GAAAtyE,EAAA3G,EAAA,SACA,IAAAyC,KAAAu7D,cAAAv7D,KAAAu7D,YAAAr+D,aAAA,SAEAgW,EAAAgmE,GAAA,QACA,IAAAA,IACAhmE,EAAAvT,EAAA25E,QAEA,IAAAC,EAAAv5E,KAAA24E,QACA58E,EAAAiE,KAAAu7D,YAAA7+D,UAAA,GAAAwW,EAUA,GAJAlT,KAAAu3E,iBAAAx7E,GACAiE,KAAAu7D,YAAA7+D,UAAAX,EAGAw9E,GAAAv5E,KAAAu7D,YAAA7+D,UACA,SAEAsD,KAAA24E,QAAA34E,KAAAu7D,YAAA7+D,UAMA,OAHAiD,EAAAqgC,gBACArgC,EAAAqgC,iBACArgC,EAAAsgC,cAAA,GACA,IAGAi2C,EA/eA,CAFA1+E,EAAA,KAofAG,EAAAD,QAAAw+E,mBCzfA,IAAA7oE,EAAA7V,EAAA,GACAuP,EAAAvP,EAAA,GACAqP,EAAArP,EAAA,GACAwP,EAAAxP,EAAA,GAEAgiF,EAAA,SAAAlsE,GACA,aAGA,SAAAksE,EAAAl2E,EAAA2D,EAAAC,GACA,IAEAuyE,EAAAC,EAFArlD,EAAA/mB,EAAA/S,MAAAyF,KAAA7E,YAAA6E,KAiGA,OA7FAq0B,EAAAslD,aAAA,SAAAh6E,GACA00B,EAAAulD,aAAAvlD,EAAAwlD,SAAAl6E,EAAAqD,MAAArD,EAAAsD,QAEAoxB,EAAAylD,WAAA,WACA,IAAAC,EAAA1lD,EAAA2lD,gBACA,IAAA3lD,EAAAzvB,UAAA,eAAA60E,EAAAC,EAAAK,IAAAjrB,KAAA,EAAAirB,IAAAE,MAAA,KACA5lD,EAAA6lD,YAGA7lD,EAAA8lD,gBAAA,GACA9lD,EAAA+lD,gBACA/lD,EAAAgmD,oBAGAhmD,EAAAgmD,iBAAA,WACAr6E,KAAAwH,WAAAS,OAAA3L,SAAA,UAAA+3B,EAAAylD,YACA95E,KAAAwH,WAAAS,OAAA3L,SAAA,YAAA+3B,EAAAslD,cACA35E,KAAAwH,WAAAS,OAAA3L,SAAA,YAAA+3B,EAAAimD,cACAt6E,KAAAwH,WAAAS,OAAA3L,SAAA,UAAA+3B,EAAAkmD,aAGAlmD,EAAAmmD,mBAAA,WAUA,GATAx6E,KAAAy6E,QACAhB,EAAAz5E,KAAA47D,QAAAv0D,QAAA1J,OAAAqC,KAAA47D,QAAA9zD,MAAA7K,YACAy8E,EAAA15E,KAAA67D,OAAAx0D,QAAA1J,OAAAqC,KAAA67D,OAAA/zD,MAAA7K,cAGAw8E,EAAAz5E,KAAA47D,QAAAv0D,QAAAzJ,QAAAoC,KAAA47D,QAAA9zD,MAAA5K,aACAw8E,EAAA15E,KAAA67D,OAAAx0D,QAAAzJ,QAAAoC,KAAA67D,OAAA/zD,MAAA5K,eAGA,IAAAm3B,EAAAzvB,UAAA,iBAAA60E,EAAAC,IACA,UAIArlD,EAAAqmD,UAAA,SAAA/6E,GAEA,QADAK,KAAAw6E,qBACA,CAIA,IAAAG,GAAA,EACA36E,KAAA46E,eAAA,SAAA/lE,GACAA,EAAA8mD,gBACA,IAAA9mD,EAAA2lE,uBACAG,GAAA,KAIAA,IAIAtmD,EAAAslD,aAAAh6E,GAEA00B,EAAA7sB,WAAAyyB,OAAA39B,SAAA,YAAA+3B,EAAAslD,cACAtlD,EAAA7sB,WAAAyyB,OAAA39B,SAAA,UAAA+3B,EAAAylD,eAGAzlD,EAAAkmD,WAAA,WACAlmD,EAAA8lD,gBAAA,GACA9lD,EAAA+lD,gBACA/lD,EAAAgmD,oBAGAhmD,EAAAimD,aAAA,SAAA36E,GACA00B,EAAAwmD,cAAAl7E,KACA00B,EAAAgmD,mBACAhmD,EAAAqmD,UAAA/6E,KAIA00B,EAAAymD,aAAA,SAAAn7E,GACA00B,EAAAsnC,eAEAtnC,EAAAunC,QAAAv0D,QAAAiD,WAAA+pB,EAAAwnC,OAAAx0D,QAAAiD,YAIA+pB,EAAA8lD,gBAAA,GACA9lD,EAAAwlD,SAAAxlD,EAAA0mD,cAEA1mD,EAAA2mD,YACAt9E,EAAAiC,EAAAqD,MACAzF,EAAAoC,EAAAsD,MACAqzC,UAAAh8C,KAAA0mC,OAGA3M,EAAA7sB,WAAAyyB,OAAA39B,SAAA,YAAA+3B,EAAAimD,cACAjmD,EAAA7sB,WAAAyyB,OAAA39B,SAAA,UAAA+3B,EAAAkmD,cAEAlmD,EAAA1sB,MAAA,UACA0sB,EAqVA,OAxbAhnB,EAAAmsE,EAAAlsE,GAqGAksE,EAAAhgF,UAAA0Q,KAAA,WAEAoD,EAAA9T,UAAA0Q,KAAAnS,KAAAiI,MACAA,KAAAy6E,OAAA,MAAAz6E,KAAAqH,QAAAtO,KACAiH,KAAAy6E,SAAAz6E,KAAAqH,QAAA1J,MACAqC,KAAAqH,QAAA1J,MAAAqC,KAAAqH,QAAA0B,SAAA,EAEA/I,KAAAy6E,QAAAz6E,KAAAqH,QAAAzJ,SACAoC,KAAAqH,QAAAzJ,OAAAoC,KAAAqH,QAAA4B,UAAA,GAGAjJ,KAAAqH,QAAAwxB,QAAA,EAEA74B,KAAAwH,WAAAyyB,OAAAj6B,KAAA8H,MAAA,YAZA9H,KAYA86E,eAGAtB,EAAAhgF,UAAAmQ,QAAA,WACA,IAAA5Q,EAAAiH,KAAAqH,QAAAtO,KACA8I,EAAA7B,KAAAqH,QAAAxF,KAAA,GACA,mEAAA9I,EAAA,oDAAAA,GAAA8I,EAAA,IAAAA,EAAA,sBAGA23E,EAAAhgF,UAAA4gF,cAAA,WACAp6E,KAAA65E,WACA75E,KAAA65E,SAAAp9E,YACAuD,KAAA65E,SAAAp9E,WAAAuE,YAAAhB,KAAA65E,UAEA75E,KAAA65E,SAAA,OAIAL,EAAAhgF,UAAAqhF,cAAA,SAAAl7E,GACA,QAAAK,KAAAg7E,aAIAx9E,KAAA0iC,IAAAlgC,KAAAg7E,WAAAt9E,EAAAiC,EAAAqD,OAAA,GAAAxF,KAAA0iC,IAAAlgC,KAAAg7E,WAAAz9E,EAAAoC,EAAAsD,OAAA,GAIA3I,KAAA0mC,MAAAhhC,KAAAg7E,WAAA1kC,UAAA,MAOAkjC,EAAAhgF,UAAAmiE,aAAA,WACA,IAAArhD,EAAAta,KAAAoH,QAAA+vB,WAEAn3B,KAAAqH,QAAAunB,OACA5uB,KAAA47D,QAAA57D,KAAA4H,SAAA+P,QAAA3X,KAAAqH,QAAAunB,MACA5uB,KAAA47D,mBAAA50D,IACAhH,KAAA47D,QAAA57D,KAAA47D,QAAAx0D,UAGApH,KAAAqH,QAAA6vC,OACAl3C,KAAA67D,OAAA77D,KAAA4H,SAAA+P,QAAA3X,KAAAqH,QAAA6vC,MACAl3C,KAAA67D,kBAAA70D,IACAhH,KAAA67D,OAAA77D,KAAA47D,QAAAx0D,UAIA,QAAAxP,EAAA,EAAiBA,EAAA0iB,EAAAlgB,OAAkBxC,IACnCoI,OAAAsa,EAAA1iB,KACAoI,KAAA47D,UACA57D,KAAA47D,QAAAthD,EAAA1iB,EAAA,IACAoI,KAAA67D,SACA77D,KAAA67D,OAAAvhD,EAAA1iB,EAAA,MAIA4hF,EAAAhgF,UAAA2gF,eAAA,SAAAxoE,GACA,IAAAspE,EAAA,iBACA,IAAAtpE,EAIA,OAHA5K,EAAA7F,gBAAAlB,KAAA47D,QAAA9zD,MAAAmzE,GACAl0E,EAAA7F,gBAAAlB,KAAA67D,OAAA/zD,MAAAmzE,QACAl0E,EAAA7F,gBAAA5E,SAAAD,KAAA,kBAGA0K,EAAA9F,aAAAjB,KAAA47D,QAAA9zD,MAAAmzE,GAAA,GACAl0E,EAAA9F,aAAAjB,KAAA67D,OAAA/zD,MAAAmzE,GAAA,GACAl0E,EAAA9F,aAAA3E,SAAAD,KAAA,sBAEAm9E,EAAAhgF,UAAAuhF,YAAA,WACA,IAAAlmE,EAAAvY,SAAAmD,cAAA,OAKA,OAJAoV,EAAAzV,UAAA,sBACAY,KAAA8H,MAAAhH,YAAA+T,GACA7U,KAAA8H,MAAA5J,MAAAg9E,SAAA,UACArmE,EAAA3W,MAAAN,OAAAoC,KAAA8H,MAAA5J,MAAAN,OACAiX,GAGA2kE,EAAAhgF,UAAA2hF,cAAA,SAAAz9E,EAAAH,GACA,IAAAigE,EAMA,OAJAA,EADAx9D,KAAAy6E,OACA/8E,EAAAsC,KAAAg7E,WAAAt9E,EAEAH,EAAAyC,KAAAg7E,WAAAz9E,GAEAigE,EAAA,UAGAgc,EAAAhgF,UAAA4hF,mBAAA,SAAA19E,EAAAH,GACA,IAAAgN,EACA8wE,EACAC,EACAC,EACAC,EACAx7E,KAAAy6E,QACAlwE,EAAA7M,EAAAsC,KAAAg7E,WAAAt9E,EACA29E,EAAAr7E,KAAA47D,QAAAv0D,QAAA1J,OAAAqC,KAAA47D,QAAA9zD,MAAA7K,YACAs+E,EAAAv7E,KAAA67D,OAAAx0D,QAAA1J,OAAAqC,KAAA67D,OAAA/zD,MAAA7K,YACAq+E,EAAAt7E,KAAA47D,QAAAv0D,QAAA0B,SACAyyE,EAAAx7E,KAAA67D,OAAAx0D,QAAA0B,WAGAwB,EAAAhN,EAAAyC,KAAAg7E,WAAAz9E,EACA89E,EAAAr7E,KAAA47D,QAAAv0D,QAAAzJ,QAAAoC,KAAA47D,QAAA9zD,MAAA5K,aACAq+E,EAAAv7E,KAAA67D,OAAAx0D,QAAAzJ,QAAAoC,KAAA67D,OAAA/zD,MAAA5K,aACAo+E,EAAAt7E,KAAA67D,OAAAx0D,QAAA4B,UACAuyE,EAAAx7E,KAAA67D,OAAAx0D,QAAA4B,WAEA,IACAwyE,EACAC,EAFA5oE,EAAA9S,KAAAm7E,cAAAz9E,EAAAH,GAIA,QAAAuV,EAAA,CAIA,GAHA4oE,EAAAH,EAAAhxE,EACAkxE,EAAAJ,EAAA79E,KAAA0iC,IAAA31B,GAEAgxE,EAAAhxE,EAAAvK,KAAA67D,OAAAx0D,QAAA2B,SACA,OAEAxL,KAAA0iC,IAAA31B,IAAA8wE,IACA9wE,GAAA/M,KAAA0iC,IAAAm7C,EAAA,IAGAA,EAAA79E,KAAA0iC,IAAA31B,IAAA+wE,IAEA/wE,GAAA/M,KAAA0iC,IAAAm7C,EAAAC,SAIAI,EAAAH,EAAA/9E,KAAA0iC,IAAA31B,GACAkxE,EAAAJ,EAAA9wE,EAEA8wE,EAAA9wE,EAAAvK,KAAA47D,QAAAv0D,QAAA2B,WACAuB,EAAAvK,KAAA47D,QAAAv0D,QAAA2B,SAAAqyE,GAGA79E,KAAA0iC,IAAA31B,IAAAgxE,IACAhxE,EAAAgxE,EAAA,GAGAA,EAAA/9E,KAAA0iC,IAAA31B,IAAAixE,IACAjxE,EAAA/M,KAAA0iC,IAAAq7C,EAAAC,IAYA,OARA,IAAA1oE,GACA4oE,EAAAH,EAAAhxE,EACAkxE,EAAAJ,EAAA79E,KAAA0iC,IAAA31B,KAEAmxE,EAAAH,EAAA/9E,KAAA0iC,IAAA31B,GACAkxE,EAAAJ,EAAA9wE,IAIAA,OACAmxE,eACAD,kBAIAjC,EAAAhgF,UAAAmiF,cAAA,WAEA,OADA37E,KAAA27D,eACA37D,KAAA67D,OAAAx0D,QAAA+tB,OAAAp1B,KAAA47D,QAAAv0D,QAAA+tB,OAGAokD,EAAAhgF,UAAAohF,eAAA,SAAAj2E,EAAA2hB,GAMA,IALA,IAAAoV,EAAA17B,KAAA4H,SAAA+P,QAAA,QAEAyd,EAAAp1B,KAAA27E,gBAEAlhB,EAAA/+B,EAAAlF,eAAA,WACA5+B,EAAA,EAAgBA,EAAA6iE,EAAArgE,OAAqBxC,IACrC6iE,EAAA7iE,GAAA+jF,iBAAAvmD,GAAAqlC,EAAA7iE,IAAAoI,MACA2E,EAAA5M,KAAAuuB,GAAAtmB,KAAAy6D,EAAA7iE,KAKA4hF,EAAAhgF,UAAAoiF,wBAAA,SAAAl+E,EAAAH,GACA,IAAAqnD,EAAA5kD,KAAAo7E,mBAAA19E,EAAAH,GAEA,IAAAyC,KAAA27E,gBACA,OAAA/2B,EAGA,IAcAi3B,EAdAC,GAAAl3B,GAEA5kD,KAAA46E,eAAA,SAAA/lE,GACAA,EAAA8mD,eACA,IAAAz4D,EAAA2D,EAAA/M,KAAAkG,KAAAg7E,YACAh7E,KAAAy6E,OACAv3E,EAAAxF,GAAAmX,EAAA+mD,QAAAv0D,QAAA1J,MAAAqC,KAAA47D,QAAAv0D,QAAA1J,MAEAuF,EAAA3F,GAAAsX,EAAA+mD,QAAAv0D,QAAAzJ,OAAAoC,KAAA47D,QAAAv0D,QAAAzJ,OAEAiX,EAAAmmE,WAAA93E,EACA44E,EAAA55E,KAAA2S,EAAAumE,mBAAA19E,EAAAH,MAIA,QAAA3F,EAAA,EAAeA,EAAAkkF,EAAA1hF,OAAsBxC,IAAA,CACrC,IAAAkkF,EAAAlkF,GAAA,YACAmD,IAAA8gF,EACAA,EAAAC,EAAAlkF,GACIkkF,EAAAlkF,GAAA6jF,cAAAI,EAAAJ,gBACJI,EAAAC,EAAAlkF,IAQA,OAAAikF,GAGArC,EAAAhgF,UAAAogF,aAAA,SAAAn0B,EAAA/nD,EAAAH,GACA,OAAAG,EAAA,CAIA,IAAAknD,EAAA5kD,KAAA47E,wBAAAl+E,EAAAH,GACAqnD,GAGA,IAAApnD,KAAA0iC,IAAA0kB,EAAAr6C,QAGAvK,KAAAy6E,QACAh1B,EAAAvnD,MAAAlC,KAAA4oD,EAAAr6C,KAAA,KACAvK,KAAAg7E,WAAAe,MAAAn3B,EAAAr6C,MAAA,IAGAk7C,EAAAvnD,MAAAnC,IAAA6oD,EAAAr6C,KAAA,KACAvK,KAAAg7E,WAAAgB,MAAAp3B,EAAAr6C,MAAA,GAGAvK,KAAA4E,UAAA,YAAAggD,EAAA62B,cAAA72B,EAAA82B,kBAEAlC,EAAAhgF,UAAAyiF,YAAA,SAAA7zE,GACA,IAAAmC,EAAAvK,KAAAy6E,OAAA,6BACAnxD,EAAAtpB,KAAAy6E,OAAAz6E,KAAAg7E,WAAAe,MAAA/7E,KAAAg7E,WAAAgB,MACAE,EAAAl8E,KAAA67D,OAAA/zD,MAAAyC,GACA4xE,EAAAn8E,KAAA47D,QAAA9zD,MAAAyC,GAGA6xE,GAAAF,EAAA5yD,GAAA4yD,EAFAl8E,KAAA67D,OAAA/yD,UAAA0B,QAGA6xE,GAAAF,EAAA7yD,GAAA6yD,EAFAn8E,KAAA47D,QAAA9yD,UAAA0B,QAGA,UAAApC,IACApI,KAAA67D,OAAAx0D,QAAAmD,QAAA4xE,GAEA,WAAAh0E,IACApI,KAAA47D,QAAAv0D,QAAAmD,QAAA6xE,IAQA7C,EAAAhgF,UAAAwgF,aAAA,WACA,IAAAmC,EAAAn8E,KAAAy6E,OAAAz6E,KAAA47D,QAAAv0D,QAAA1J,MAAAqC,KAAA47D,QAAAv0D,QAAAzJ,OACAs+E,EAAAl8E,KAAAy6E,OAAAz6E,KAAA67D,OAAAx0D,QAAA1J,MAAAqC,KAAA67D,OAAAx0D,QAAAzJ,OACA0rB,EAAAtpB,KAAAy6E,OAAAz6E,KAAAg7E,WAAAe,MAAA/7E,KAAAg7E,WAAAgB,MAEA,OAAAE,GAAAC,GAKAlC,MAAAiC,IAAA5yD,GAAA,IACAwlC,KAAAqtB,IAAA7yD,GAAA,KALA,MASAkwD,EAAAhgF,UAAA8iF,gBAAA,SAAAvC,GACA/5E,KAAA27D,eACA,IAAAjwC,EAAA1rB,KAAAy6E,OAAA,iBAGAV,GAIAA,EAAAE,MAIAj6E,KAAA67D,OAAAx0D,QAAAqkB,GAAAquD,EAAAE,MAHAj6E,KAAAi8E,YAAA,UAKAlC,EAAAjrB,KAIA9uD,KAAA47D,QAAAv0D,QAAAqkB,GAAAquD,EAAAjrB,KAHA9uD,KAAAi8E,YAAA,UAVAj8E,KAAAi8E,eAmBAzC,EAAAhgF,UAAA0gF,UAAA,WACAl6E,KAAA65E,UACA75E,KAAA8H,MAAA9G,YAAAhB,KAAA65E,UAEA,IAAAE,EAAA/5E,KAAAg6E,eAEA,GAAAh6E,KAAAg7E,WAAAe,OAAA/7E,KAAAg7E,WAAAgB,MAAA,CACAh8E,KAAAs8E,gBAAAvC,GAEA,IAAAruD,EAAA1rB,KAAAy6E,OAAA,iBACAz6E,KAAA67D,OAAAx0D,QAAA+tB,MACAp1B,KAAAuH,OAAAkzB,QAAApF,eAAAr1B,KAAA67D,OAAAx0D,QAAA+tB,MAAAp1B,KAAA67D,OAAAx0D,QAAAqkB,IACI1rB,KAAA47D,QAAAv0D,QAAA+tB,OACJp1B,KAAAuH,OAAAkzB,QAAApF,eAAAr1B,KAAA47D,QAAAv0D,QAAA+tB,MAAAp1B,KAAA47D,QAAAv0D,QAAAqkB,IAGA1rB,KAAA27E,gBACA37E,KAAA4H,SAAA+P,QAAA,QAAAlP,SAEAzI,KAAAoH,QAAAqB,WAKA+wE,EA3bA,CA4bCxyE,GAEDrP,EAAAD,QAAA8hF,mBCncA,IAAAnsE,EAAA7V,EAAA,GACAqP,EAAArP,EAAA,GAGA+kF,EAAA,SAAAjvE,GACA,aAGA,SAAAivE,EAAAj5E,EAAA2D,EAAAC,GAEA,IAAAmtB,EAAA/mB,EAAA/S,MAAAyF,KAAA7E,YAAA6E,KAEA,GAAAiH,EAAAqE,KAAA,CACArE,EAAA3C,KAEAtE,KAAA0H,IAAAb,EAAA7L,OAEA,IAAAwhF,EAAA31E,EAAA/M,KAAAmN,GAKA,UAJAu1E,EAAAv1E,cACAu1E,EAAAriE,UAEAna,KAAAm2B,SAAAn2B,KAAA4H,SAAA+zB,WAAA10B,EAAAqE,KAAAtL,KAAAw8E,EAAAx8E,OACAA,KAAAm2B,SACA,SAIA,OADA9B,EAAA1sB,MAAA,WACA0sB,EAqFA,OAzGAhnB,EAAAkvE,EAAAjvE,GAuBAivE,EAAA/iF,UAAAqO,WAAA,WACA7H,KAAAsI,QACAgF,EAAA9T,UAAAqO,WAAA9P,KAAAiI,OAGAu8E,EAAA/iF,UAAA8O,MAAA,WAKA,GAHAtI,KAAAy8E,cAAA,EAGAz8E,KAAAm2B,SAAA,CACA,IAAAk5B,EAAArvD,KAAAm2B,SAAAumD,QAAA18E,KAAAm2B,SAAAtuB,WACAwnD,GACAA,EAAAt3D,KAAAiI,KAAAm2B,UAIA7oB,EAAA9T,UAAA8O,MAAAvQ,KAAAiI,OAIAu8E,EAAA/iF,UAAA6O,SAAA,SAAArM,EAAAD,GAEAiE,KAAAm2B,UAAAn2B,KAAAm2B,SAAA9tB,SACArI,KAAAm2B,SAAA9tB,SAAArM,EAAAD,GAEAuR,EAAA9T,UAAA6O,SAAAtQ,KAAAiI,KAAAhE,EAAAD,IAIAwgF,EAAA/iF,UAAAygB,gBAAA,SAAAvc,EAAAH,GACA,IAAAuN,EAAA9K,KAAA6K,kBACA8xE,EAAAj/E,EAAAoN,EAAAC,WACA6xE,EAAAr/E,EAAAuN,EAAAE,SACAhL,KAAAqH,QAAA1J,MAAAg/E,EACA38E,KAAAqH,QAAAzJ,OAAAg/E,GAGAL,EAAA/iF,UAAA2P,QAAA,SAAAzL,EAAAH,GAGA,GAFA+P,EAAA9T,UAAA2P,QAAApR,KAAAiI,KAAAtC,EAAAH,IAEAyC,KAAA2I,YAAA3I,KAAAm2B,WACAn2B,KAAAy8E,aAAA,CACAz8E,KAAAy8E,cAAA,EACA,IAAA5yE,EAAA7J,KAAA8H,MAAA/F,WAAA,GACA6H,EAAA5J,KAAA8H,MAAA/F,WAAA,GACA6H,MAAAC,GAMA7J,KAAAm2B,SAAAjsB,KAAAN,KAKA2yE,EAAA/iF,UAAAi9B,eAAA,YACAz2B,KAAA2I,YAAA3I,KAAAm2B,UACAn2B,KAAAy8E,cACAz8E,KAAAm2B,SAAAhtB,QAAAnJ,KAAA0K,UAAAC,SAAA3K,KAAA0K,UAAAE,WAMA2xE,EAAA/iF,UAAAiR,eAAA,WACA,IAAAF,EAAA+C,EAAA9T,UAAAiR,eAAA1S,KAAAiI,MAEA,GAAAA,KAAAm2B,UAAAn2B,KAAAy8E,aAAA,CACA,IAAAI,EAAA78E,KAAAm2B,SAAArtB,UACAyB,EAAA5M,WAAA5C,IAAA8hF,EAAAlyE,SAAAkyE,EAAAl/E,MAAAk/E,EAAAlyE,SACAJ,EAAA3M,YAAA7C,IAAA8hF,EAAAjyE,SAAAiyE,EAAAj/E,OAAAi/E,EAAAjyE,SAGA,IAAAE,EAAA9K,KAAA6K,kBAIA,OAHAN,EAAA5M,OAAAmN,EAAAC,WACAR,EAAA3M,QAAAkN,EAAAE,SAEAT,GAGAgyE,EA5GA,CAFA/kF,EAAA,IAiHAG,EAAAD,QAAA6kF,mBCnHA,IAAAlvE,EAAA7V,EAAA,GACA48B,EAAA58B,EAAA,IACAwP,EAAAxP,EAAA,GAEAslF,EAAA,SAAAxvE,GACA,aAGA,SAAAwvE,EAAAx5E,EAAA2D,EAAAC,GAEA,IADA,IAAAmtB,EAAA/mB,EAAA/S,MAAAyF,KAAA7E,YAAA6E,KACApI,EAAA,EAAiBA,EAAAy8B,EAAAG,OAAAp6B,OAAyBxC,IAC1Cy8B,EAAAG,OAAA58B,GAAAyP,QAAAqC,OAAA,IAAA9R,EAKA,OAHAy8B,EAAA0oD,MAAA1oD,EAAAG,OAAA,GACAH,EAAA1sB,MAAA,aAEA0sB,EA8CA,OAvDAhnB,EAAAyvE,EAAAxvE,GAWAwvE,EAAAtjF,UAAA4O,KAAA,SAAA9D,GACA,IAAA8D,EAAAkF,EAAA9T,UAAA4O,KAAArQ,KAAAiI,KAAAsE,GAIA,OAHA8D,EAAAN,OACA9H,KAAAiK,MAAA,KAAAjK,MAEAoI,GAEA00E,EAAAtjF,UAAAiQ,SAAA,SAAA6B,GACA,IAAAjP,EAAA2D,KAAA8H,MACA9H,KAAA+8E,QACA/8E,KAAA+8E,MAAA11E,QAAAqC,QAAA,EACArN,EAAA2E,YAAAhB,KAAA+8E,MAAAj1E,QAEA9H,KAAA+8E,MAAAzxE,EACAjP,EAAAyE,YAAAwK,EAAAxD,QAEAg1E,EAAAtjF,UAAA2P,QAAA,SAAAzL,EAAAH,GACAyJ,EAAAxN,UAAA2P,QAAApR,KAAAiI,KAAAtC,EAAAH,IAGAu/E,EAAAtjF,UAAAi9B,eAAA,WACA,IAAAlsB,EAAAvK,KAAA0K,UACA1K,KAAA+8E,MAAA5zE,QAAAoB,EAAAI,SAAAJ,EAAAK,WAGAkyE,EAAAtjF,UAAAsP,QAAA,WACA,IAAA87C,EAAAt3C,EAAA9T,UAAAsP,QAAA/Q,KAAAiI,MACA,GAAAA,KAAA+8E,MAAA,CACA,IAAA3lD,EAAAp3B,KAAA+8E,MAAAj0E,UACA,GAAA9I,KAAAqH,QAAA21E,UACA,QAAAplF,EAAA,EAAmBA,EAAAoI,KAAAw0B,OAAAp6B,OAAwBxC,IAAA,CAC3C,IAAAqlF,EAAAj9E,KAAAw0B,OAAA58B,GAAAkR,UACA,QAAAV,KAAAgvB,EACAA,EAAAhvB,GAAA5K,KAAAkY,IAAA0hB,EAAAhvB,GAAA60E,EAAA70E,IAIA,QAAAmC,KAAAq6C,EACAA,EAAAr6C,GAAAq6C,EAAAr6C,IAAA6sB,EAAA7sB,GAEAq6C,EAAAp6C,QAAAhN,KAAAkY,IAAAkvC,EAAAp6C,QAAA4sB,EAAA5sB,SAEA,OAAAo6C,GAEAk4B,EA1DA,CA2DC1oD,GAEDz8B,EAAAD,QAAAolF,iBCsEAnlF,EAAAD,QAvIA,SAAAiO,GACA,IAAAw3D,EAAAx3D,EAAAoC,UAGAm1E,KACAC,KAEA,SAAAC,EAAA94E,EAAA6S,EAAArZ,GAEA,GAAAq/E,EAAA74E,GACA,OAAA64E,EAAA74E,GAEA6S,EAAAV,UACA9Q,EAAA0tB,QAAA,2BAEA,IAIAzc,EAAAO,EAAAP,OAmGA,OAjGA9Y,GACAA,EAAA4R,aAAAytD,EAAAl2D,SAAAo2E,iBAAA,GAEAF,EAAA74E,IACAmwD,YAAA,SAAA7iD,EAAAqC,GAGA,GAFAA,KAAAnW,GAEA8Y,GACAA,EAAAhF,GADA,CAOA,IAAA0rE,EApBA,SAAA1rE,GACA,OAAAuF,EAAAV,SAAA1e,KAAAiI,KAAA4R,EAAAuF,EAAAC,OAmBArf,KAAA4N,EAAAiM,GACA5R,KAAAywB,OAAA7e,EAAA0rE,EAAArpE,QANAjU,KAAAu9E,YAAA3rE,EAAAtN,KAUAgE,MAAA,SAAA2L,GAEAjU,KAAAwvB,SAAA0tD,EAAA54E,MACA6S,EAAAsZ,QACAzwB,KAAAw9E,gBAAAvpE,IAEAupE,gBAAA,SAAAvpE,IACAA,KAAAnW,KAEAmW,EAAAzS,UAAA,KAEAmzD,aAAA,SAAAhxC,EAAA1P,GACAA,KAAAnW,EAEA,IAAA2/E,EAAAnhF,SAAAg3E,yBACAtzE,KAAAsI,MAAA2L,GACA,QAAArc,EAAA,EAAA8lF,EAAA/5D,EAAAvpB,OAAuCxC,EAAA8lF,EAAS9lF,IAChDoI,KAAAy0D,YAAA9wC,EAAA/rB,GAAA6lF,GAGAxpE,EAAAnT,YAAA28E,IAEAhtD,OAAA,SAAA7e,EAAA9T,EAAAmW,GACAnW,GAOAkC,KAAAwvB,SAAA5d,EAAAtN,KAAAtE,KAAAwvB,SAAA5d,EAAAtN,IAAA7H,WACAuD,KAAA29E,aAAA/rE,EAAAtN,GAAAxG,GAEAmW,EAAAnT,YAAAhD,GAEAkC,KAAAwvB,SAAA5d,EAAAtN,IAAAxG,GAXAkC,KAAAwvB,SAAA5d,EAAAtN,KACAtE,KAAAu9E,YAAA3rE,EAAAtN,KAaAq5E,aAAA,SAAAp3C,EAAAq3C,GACA,IAAAhsE,EAAA5R,KAAAwvB,SAAA+W,GACA30B,KAAAnV,YACAmV,EAAAnV,WAAAwqC,aAAA22C,EAAAhsE,GAEA5R,KAAAwvB,SAAA+W,GAAAq3C,GAEAL,YAAA,SAAAh3C,GACAvmC,KAAAoJ,KAAAm9B,UACAvmC,KAAAwvB,SAAA+W,IAEAn9B,KAAA,SAAAm9B,GACA,IAAA30B,EAAA5R,KAAAwvB,SAAA+W,GACA30B,KAAAnV,YACAmV,EAAAnV,WAAAuE,YAAA4Q,IAGAisE,QAAA,SAAAjsE,GACA,IAAA0rE,EAAAt9E,KAAAwvB,SAAA5d,EAAAtN,IACAg5E,EACAA,EAAA7gF,YACAuD,KAAAywB,OAAA7e,EAAA0rE,EAAAx/E,GAGAkC,KAAAy0D,YAAA7iD,EAAA9T,IAGA+2D,UAAA,SAAAxiB,EAAAC,GACAtyC,KAAAwvB,SAAA8iB,GAAAtyC,KAAAwvB,SAAA6iB,UACAryC,KAAAwvB,SAAA6iB,IAEA7iB,SAAA0tD,EAAA54E,GACAxG,OACA+J,WAAA,WACA7H,KAAAsI,eACA60E,EAAA74E,UACA44E,EAAA54E,KAIA64E,EAAA74E,GAUA,OACA84E,cACAU,eARA,WACA,QAAAlmF,KAAAulF,EACAC,EAAAxlF,GAAAiQ,iCC5HA,IAAAk2E,EAAAvmF,EAAA,KACAqP,EAAArP,EAAA,GACAuP,EAAAvP,EAAA,GAkHA,SAAAwmF,EAAAC,GAKA,OAJAA,aAAAjkF,QACAikF,EAAAjkF,MAAAR,UAAAiH,MAAA1I,KAAAoD,UAAA,IAGA,SAAAV,GAEA,IADA,IAAAyJ,GAAA,EACAtM,EAAA,EAAAoK,EAAAi8E,EAAA7jF,OAA6CxC,EAAAoK,EAASpK,IAAA,CACtD,IAAAsmF,EAAAD,EAAArmF,GACAsmF,IACAh6E,MAAA,IAAAg6E,EAAAzjF,EAAA6J,GAAA7J,IAIA,OAAAyJ,GAKAvM,EAAAD,QAnIA,SAAAiO,GAEA,IAAAw4E,EAAAJ,EAAAp4E,GACA,OACAy4E,YAAA,SAAAC,EAAAC,EAAAC,GAEA,IAAAC,GACAC,kBACA/pB,aACAzgD,UAAAoqE,EACAK,WACAlqB,UAAA,WACAx0D,KAAA2+E,OAEA,IAAAz6E,KACA,QAAAtM,KAAAoI,KAAA00D,UACAxwD,EAAAhC,KAAAlC,KAAA00D,UAAA98D,IAEA,OAAAsM,GAEA4sB,SAAA,SAAAxsB,GACA,OAAAtE,KAAA00D,UAAApwD,IAEAq6E,KAAA,SAAAxnE,GACAA,IACAA,EAAA7S,GAAA6S,EAAA7S,IAAAuC,EAAA7L,MACAgF,KAAAy+E,eAAAv8E,KAAAiV,IAMA,IAHA,IAAAlD,EAAAjU,KAAAiU,YAEA2qE,EAAA5+E,KAAAy+E,eACA7mF,EAAA,EAAmBA,EAAAgnF,EAAAxkF,OAAoBxC,IAGvC,GAFAuf,EAAAynE,EAAAhnF,GAEAoI,KAAAiU,aAAAkD,KAAAlD,WAAAlN,EAAA1D,UAAA8T,EAAAlD,UAAA3X,SAAAD,MAAA,CAEA,IAAAyB,EAAAqZ,EAAAlD,UACA3P,EAAA6S,EAAA7S,GACAu6E,EAAA1nE,EAAA0nE,QACA,IAAA/gF,EAAArB,WAEA,GAAAoiF,EACA5qE,EAAAnT,YAAAhD,OACO,CACP,IAAAghF,EAAAR,MAAArqE,EAAAvS,WACAo9E,EACA7qE,EAAA8iB,aAAAj5B,EAAAghF,GAEA7qE,EAAAnT,YAAAhD,GAGAkC,KAAA00D,UAAApwD,GAAA65E,EAAAf,YACA94E,EACA6S,EACArZ,GAEAkC,KAAAy+E,eAAA/9E,OAAA9I,EAAA,GACAA,MAGA0f,SAAA,SAAArQ,GAmBA,OAjBAA,IACA,mBAAAA,IACAA,GAAgBwP,SAAAxP,SAGhBlM,IAAAkM,EAAA2P,OACA3P,EAAA2P,OAAAonE,EAAAO,OACMt3E,EAAA2P,kBAAA5c,QACNiN,EAAA2P,OAAA1U,KAAAq8E,GACAt3E,EAAA2P,OAAAonE,EAAA/2E,EAAA2P,SAGA3P,EAAAgN,YACAhN,EAAAgN,UAAA3X,SAAAmD,cAAA,SAGAO,KAAA2+E,KAAA13E,GACAA,IAAA3C,QAAAvJ,GAEAgkF,UAAA,SAAAx7D,GACA,QAAA3rB,KAAAoI,KAAA00D,UACAnxC,EAAAvjB,KAAA00D,UAAA98D,KAGAugB,YAAA,SAAA7T,GACAtE,KAAA00D,UAAApwD,KAEAtE,KAAA00D,UAAApwD,GAAAuD,oBACA7H,KAAA00D,UAAApwD,KAEAgE,MAAA,WACA,QAAA1Q,KAAAoI,KAAA00D,UACA10D,KAAA00D,UAAA98D,GAAAiQ,aAEA7H,KAAA00D,eAUA,OALA/uD,EAAAlK,YAAA,uBACA+iF,EAAAl2E,QACAk2E,EAAA,OAGAA,sBC/GA,IAAAQ,EAAAxnF,EAAA,KAoHAG,EAAAD,QAlHA,SAAAiO,GACA,IAAAuB,EAAA83E,EAAAr5E,GACA,OACAoR,cAAA,SAAA5e,GACA,OAAAwN,EAAAoC,UAAAC,WAAA,SAAA7P,IAAA,MAEA6e,iBAAA,SAAA/P,GACA,IAAA9O,EAAA8O,EAAA9O,KACA8e,EAAAhQ,EAAAgQ,iBACAgoE,EAAAh4E,EAAAi4E,wBAEAvqE,EAAAzN,EAAAk3E,YACAnnE,EACAgoE,EACA,SAAA9vE,EAAAyC,GACA,IAAA+C,EAAA+pE,QAOA,SANA,QAAA9mF,EAAA,EAAoBA,EAAA+c,EAAA+pE,QAAAtkF,OAA2BxC,IAC/C,QAAA+c,EAAA+pE,QAAA9mF,GAAAuX,EAAAyC,GACA,WAiBA,OARAjM,EAAAoC,UAAAkuD,WAAA,SAAA99D,EAAA,WACA,OAAAwc,IAGAhP,EAAAlK,YAAA,0BACAkZ,EAAA2C,aAGA3C,GAEAzK,KAAA,WACA,IAAAgN,EAAAlX,KAAAgX,kBACA7e,KAAA,OACA8e,iBAAA,WACA,OAAAtR,EAAAspB,WACAtpB,EAAAspB,WACMtpB,EAAA+Q,IAAAiB,QAAA,YACNhS,EAAA+Q,IAAAiB,QAAA,YAAAsX,gBADM,GAINiwD,wBAAA,WACA,OAAAv5E,EAAAwpB,YACAxpB,EAAAwpB,YACMxpB,EAAA+Q,IAAAiB,QAAA,YACNhS,EAAA+Q,IAAAiB,QAAA,YAAAwX,iBADM,GAINvY,OAAA,SAAAhF,MAGIjM,GAEJiqB,EAAA5vB,KAAAgX,kBACA7e,KAAA,OACA8e,iBAAA,WACA,OAAAtR,EAAAspB,WACAtpB,EAAAspB,WACMtpB,EAAA+Q,IAAAiB,QAAA,YACNhS,EAAA+Q,IAAAiB,QAAA,YAAAsX,gBADM,IAIFtpB,GAEJ,OACAw5E,aAAA,SAAAl4E,GACA,OAAAiQ,EAAAI,SAAArQ,IAOAu5B,eAAA,WACA,OAAAtpB,EAAAs9C,aAEA4qB,gBAAA,SAAA96E,GACA4S,EAAAiB,YAAA7T,IAKAi3B,iBAAA,WACArkB,EAAA5O,SAEA+2E,aAAA,SAAAp4E,GACA,OAAA2oB,EAAAtY,SAAArQ,IAKAq4E,eAAA,WACA,OAAA1vD,EAAA4kC,aAEA+qB,gBAAA,SAAAj7E,GACAsrB,EAAAzX,YAAA7T,IAKAk3B,iBAAA,WACA5L,EAAAtnB,8BC7GA,IAEAk3E,EAAA,SAAAz4E,GACA,gBAAApB,GACA,IAAA85E,GACA9wC,SACA+wC,eACAC,gBAGA,SAAAC,EAAAxkF,EAAAgE,EAAA9D,EAAA8E,GACAq/E,EAAArkF,GAAAgE,KACAqgF,EAAArkF,GAAAgE,OAGAqgF,EAAArkF,GAAAgE,GAAA8C,MACA5G,UACA8E,SAeA,SAAAy/E,EAAAlgF,IACAA,KAAAhD,OAAAvB,OACAT,QAAAgF,EAAAE,WAAA,IACAyE,EAAAqB,EAAAy3B,OAAAz9B,GAEAkQ,EAAAiwE,EAAAngF,EAAA8/E,EAAA9wC,OACAzqC,GAAA,EAOA,GANA,OAAAI,EACAJ,GAAAyB,EAAAX,WAAA,gBAAAW,EAAAf,UAAA,eAAAN,EAAA3E,IAEAgG,EAAAf,UAAA,gBAAAjF,IAGAuE,EAAA,CAEA,IADA67E,EAAAlwE,EAAAlQ,EAAA2E,GAEA,OAEAA,GAAAqB,EAAAsM,QAAA3N,IAAAqB,EAAAsB,OAAAojB,cAAA1kB,EAAAsB,OAAAu5C,aACA76C,EAAAwsC,WAAA7tC,IAKA,SAAA07E,EAAArgF,GAEA,IAAA2uC,GADA3uC,KAAAhD,OAAAvB,OACAT,QAAAgF,EAAAE,WACA4jB,EAAA9d,EAAAy3B,OAAAkR,GACA+nB,EAAA1wD,EAAAy3B,OAAAkR,EAAA3oC,EAAAsB,OAAA0oB,gBAEAzrB,GAAAyB,EAAAX,WAAA,kBAAAW,EAAAf,UAAA,iBAAA6e,EAAA4yC,EAAA12D,IAOA,OANAuE,IACAvE,EAAAqgC,eACArgC,EAAAqgC,iBAEArgC,EAAAsgF,aAAA,GAEA/7E,EAGA,SAAA47E,EAAAngF,EAAAugF,GAGA,IAFA,IAAAz9E,EAAA9C,EAAAhF,QAAAgF,EAAAE,WACAgQ,KACApN,GAAA,CACA,IAAAZ,EAAAkF,EAAA5H,aAAAsD,GACA,GAAAZ,EAAA,CACAA,IAAAV,MAAA,KACA,QAAAvJ,EAAA,EAAoBA,EAAAiK,EAAAzH,OAAgBxC,IACpC,GAAAiK,EAAAjK,IACAsoF,EAAAr+E,EAAAjK,IAGA,IAFA,IAAAuoF,EAAAD,EAAAr+E,EAAAjK,IAEAoW,EAAA,EAAqBA,EAAAmyE,EAAA/lF,OAA6B4T,IAClDmyE,EAAAnyE,GAAA5N,OACA2G,EAAA1D,UAAAZ,EAAA09E,EAAAnyE,GAAA5N,OAIAyP,EAAA3N,KAAAi+E,EAAAnyE,GAAA1S,SAKAmH,IAAAhG,WAEA,OAAAoT,EAGA,SAAAkwE,EAAAlwE,EAAAlQ,EAAA2E,GAGA,IAFA,IAAAJ,GAAA,EAEAtM,EAAA,EAAiBA,EAAAiY,EAAAzV,OAAqBxC,IAAA,CACtC,IAAAwoF,EAAAvwE,EAAAjY,GAAAG,KAAA4N,EAAAhG,EAAA2E,EAAA3E,EAAAhF,QAAAgF,EAAAE,YACAqE,YAAA,IAAAk8E,IAAA,IAAAA,GAGA,OAAAl8E,EAIA,SAAA+8B,EAAAthC,IACAA,KAAAhD,OAAAvB,OACAT,QAAAgF,EAAAE,WAAA,IACAyE,EAAAqB,EAAAy3B,OAAAz9B,GAEAkQ,EAAAiwE,EAAAngF,EAAA8/E,EAAAC,aACAx7E,GAAAyB,EAAAX,WAAA,mBAAAW,EAAAf,UAAA,kBAAAN,EAAA3E,IACA,GAAAuE,EAAA,CAEA,IADA67E,EAAAlwE,EAAAlQ,EAAA2E,GAEA,OAEA,OAAAA,GAAAqB,EAAAsM,QAAA3N,IACAJ,GAAAyB,EAAAsB,OAAAo5E,qBACA16E,EAAAu2B,aAAA53B,IAMA,SAAAg8E,EAAA3gF,GACA,GAAAgG,EAAAX,WAAA,gBACA,IAAAV,EAAAqB,EAAAy3B,OAAAz9B,GACAgG,EAAA46E,iBAAA5gF,EACAgG,EAAAf,UAAA,eAAAN,EAAA3E,KAqBA,IAAA6gF,EAAA76E,EAAA8B,uBAEA,SAAAg0B,EAAA39B,GAEA0iF,EAAAr4E,YAEArK,IACA0iF,EAAAvmD,OAAAn8B,EAAA,QAAA+hF,GACAW,EAAAvmD,OAAAn8B,EAAA,WAAAmjC,GACAu/C,EAAAvmD,OAAAn8B,EAAA,YAAAwiF,GACAE,EAAAvmD,OAAAn8B,EAAA,cAAAkiF,IAMA,OACAvkD,QACA0f,OAAA,SAAA//C,EAAAmH,EAAAjH,GACAskF,EAAAxkF,EAAAmH,EAAAjH,EAAA,OAEA+O,SAAAu1E,EACA33E,OAvCA,SAAAw4E,EAAArhF,EAAA9D,EAAA8E,GACA,GAAAq/E,EAAAgB,IAAAhB,EAAAgB,GAAArhF,GAAA,CAGA,IAFA,IAAAyQ,EAAA4vE,EAAAgB,GACAC,EAAA7wE,EAAAzQ,GACAxH,EAAA,EAAkBA,EAAA8oF,EAAAtmF,OAA4BxC,IAC9C8oF,EAAA9oF,GAAAwI,UACAsgF,EAAAhgF,OAAA9I,EAAA,GACAA,KAGA8oF,EAAAtmF,eACAyV,EAAAzQ,KA6BAwnE,YA/JA,SAAA6Z,EAAArhF,EAAAgB,EAAAwjC,GACA,IAAA/zB,EAAA4vE,EAAAgB,GAAArhF,GACA,GAAAyQ,EACA,QAAAjY,EAAA,EAAkBA,EAAAiY,EAAAzV,OAAqBxC,KACvCwI,GAAAyP,EAAAjY,GAAAwI,OAAAyP,EAAAjY,GAAAwI,UACAyP,EAAAjY,GAAA0D,QAAAf,MAAAyF,KAAA4jC,IA2JA3C,gBACAq/C,cACAN,gBACAH,UACAh4E,WAAA,WACA4zB,IACAgkD,EAAA,KACAe,EAAA,QA1LA,CAFAhpF,EAAA,IAqMAG,EAAAD,SACAwS,KAAAs1E,oBCtMA,IAAA34E,EAAArP,EAAA,GAEA,SAAAmpF,EAAA15E,GACAJ,EAAAnM,MAAAsF,KAAAiH,GAAA,GAIA,SAAA25E,EAAA9wE,EAAA+wE,GACA,IAAAC,EAAA9gF,KAAAqH,QAAAyI,GAEA,OAAAgxE,EACAA,aAAAH,EACAG,GAEAH,EAAAnnF,UAAAqnF,EACA7gF,KAAAqH,QAAAyI,GAAA,IAAA6wE,EAAAG,GACA9gF,KAAAqH,QAAAyI,IAGA+wE,EA0BAlpF,EAAAD,QAAA,SAAA+C,EAAA6I,GACAuD,EAAAnM,MAAAD,EAvBA,SAAAsmF,GACA,IAAAC,EACAC,EAEA,OACA1vE,WAAA,WAKA,OAJAyvE,IACAA,EAAAD,IAAAxvE,aAAAvR,KAAAuH,OAAAN,QAGA25E,EAAA7oF,KAAAiI,KAAA,SAAAghF,IAEA14D,cAAA,WAKA,OAJA24D,IACAA,EAAAF,IAAAz4D,gBAAAtoB,KAAAuH,OAAA4S,WAGAymE,EAAA7oF,KAAAiI,KAAA,YAAAihF,KAMAC,CAAA59E,sBC9CA,IAAAuD,EAAArP,EAAA,GACA0pF,EAAA1pF,EAAA,KA4GAG,EAAAD,SACAypF,cA3GA,SAAAx7E,GACA,IAAAsxB,KAqBA,IAAAmqD,KAEA,SAAAzlD,EAAAxjC,EAAAmL,EAAA2D,EAAA85E,GACA,IAAAM,EAAApqD,EAAA9+B,GAEA,IAAAkpF,MAAAnoF,OACA,SAEA,WAAAf,GAAA8O,EAAAlO,OACAgoF,EAAA15E,QAAAkI,KACAtI,EAAAlO,KAAA,IAEAkO,EAAAlO,KAAA,KAIA,YAAAZ,GAAA,aAAA8O,EAAAqE,MAAArE,EAAAyQ,SACAqpE,EAAA15E,QAAAkI,KACAtI,EAAAyQ,OAAA,IAEAzQ,EAAAyQ,OAAA,MAIAzQ,EAAAJ,EAAA/M,KAAAmN,IAEA3C,IAAA88E,EAAAn6E,EAAAqE,QACArE,EAAA3C,GAAA2C,EAAAqE,MAGArE,EAAA3C,KAAA2C,EAAApF,MACAoF,EAAApF,IAAAoF,EAAA3C,GAAA,SAGA,IAAAgH,EAAA,IAAA+1E,EAAAnoF,OAAAoK,EAAA2D,EAAAjH,KAAA2F,GAwBA,OAtBA07E,EAAAC,WACAD,EAAAC,UAAAh2E,GAGA41E,EAAA51E,EAAAy1E,GACAz1E,EAAA5D,MACA4D,EAAA5D,IAAAT,EAAA3C,IAAAqB,EAAA3K,OAGAsQ,EAAAlE,SAAA,iBAAA9D,IACAgI,EAAAlE,QAAA9D,GAEAgI,EAAAjE,UACAiE,EAAAjE,QAAAJ,GAGAm6E,EAAA91E,EAAA5D,OACA4D,EAAA5D,IAAA/B,EAAA3K,OAGAomF,EAAA91E,EAAA5D,KAAA4D,EAEAA,EAuBA,OAPA4rB,OA7FA,SAAA9uB,EAAA24E,GACA,IACAz1E,EAAA,OAcA,OAbAlD,EAAAkD,KACAA,EAAA,WACGlD,EAAAyM,QACHvJ,EAAA,UAEAlD,EAAA4uB,MAAA5uB,EAAAmH,KACAjE,EAAA,SAEAlD,EAAA6uB,QACA3rB,EAAA,aAGAqwB,EAAA5jC,KAAAiI,KAAAsL,EAAA,KAAAlD,EAAA24E,IA+EAtlD,MAdA,WACA2lD,MAcAG,aAXA,SAAAppF,EAAAqpF,EAAAF,GACArqD,EAAA9+B,IAAiBe,OAAAsoF,EAAAF,cAWjB3lD,aACAhkB,QATA,SAAArT,GACA,OAAA88E,EAAA98E,wBC/FA,IAAAm9E,EAAAjqF,EAAA,KACAuW,EAAAvW,EAAA,KACAkqF,EAAAlqF,EAAA,KACAwP,EAAAxP,EAAA,GACA48B,EAAA58B,EAAA,IACAslF,EAAAtlF,EAAA,KACA+kF,EAAA/kF,EAAA,KACAmqF,EAAAnqF,EAAA,KACAoqF,EAAApqF,EAAA,KACAi3B,EAAAj3B,EAAA,IACAuc,EAAAvc,EAAA,IACAszE,EAAAtzE,EAAA,KACAqzE,EAAArzE,EAAA,IAGAqqF,EAAArqF,EAAA,IAGAsqF,EAAAtqF,EAAA,IACAuqF,EAAAvqF,EAAA,IACAwqF,EAAAxqF,EAAA,IACAyqF,EAAAzqF,EAAA,IACA0qF,EAAA1qF,EAAA,IAEA2qF,EAAA3qF,EAAA,IACA4qF,EAAA5qF,EAAA,IACA6qF,EAAA7qF,EAAA,IAiFAG,EAAAD,SACAwS,KAhFA,SAAAvE,GAOA,SAAA28E,EAAAh3E,EAAAivD,GACA,IAAA8L,EAAA9L,EAAA50D,GACA0gE,EAAA1L,WACA0L,EAAA1L,UAAArvD,GACAA,EAAA7P,YAAA,qBACA4qE,EAAAvK,eACAuK,EAAAvK,cAAAxwD,KAEAA,EAAA7P,YAAA,uBACA4qE,EAAA1J,aACA0J,EAAA1J,YAAArxD,KAIA,IAAApE,EAAAu6E,EAAAN,cAAAx7E,GACAuB,EAAAq6E,aAAA,OAAAv6E,GACAE,EAAAq6E,aAAA,UAAAI,GACAz6E,EAAAq6E,aAAA,YAAAK,GACA16E,EAAAq6E,aAAA,SAAAntD,EAAA,SAAA9oB,GAEA,UADAA,EAAAjE,QAAAiE,EAAAjE,QAAA/C,GAAA,OAEAg+E,EAAAh3E,EAAA+2E,KAGAn7E,EAAAq6E,aAAA,WAAAhF,GACAr1E,EAAAq6E,aAAA,YAAAzE,GACA51E,EAAAq6E,aAAA,WAAA9yD,EAAA,SAAAnjB,GAEA,cADAA,EAAAjE,QAAAiE,EAAAjE,QAAA/C,GAAA,OACA,QAAAgH,EAAAjE,QAAAjO,MACAkpF,EAAAh3E,EAAA82E,KAGAl7E,EAAAq6E,aAAA,OAAAxtE,EAAA,SAAAzI,GAEA,UADAA,EAAAjE,QAAAiE,EAAAjE,QAAA/C,GAAA,OACA,QAAAgH,EAAAjE,QAAAjO,MACAkpF,EAAAh3E,EAAA62E,KAIAj7E,EAAAq6E,aAAA,eAAAzW,GACA5jE,EAAAq6E,aAAA,mBAAA1W,GAEA,IAAA0X,EAAAb,EAAA/7E,GAEA2gE,EAAAub,EAAAl8E,GAMA,OAJAA,EAAA0gE,IAAAC,gBACA3gE,EAAA0gE,IAAAE,eAAAD,EACAA,EAAAp8D,KAAAvE,IAGAuB,UACA6G,cAAA7D,KAAAvE,GACA68E,UAAAD,EAAAr4E,OACA3E,QACAoR,SAAAurE,EAAAv8E,GACA+qB,OAAAsxD,EAAAr8E,GACA4qB,QAAAuxD,EAAAn8E,GACA6qB,aAAAuxD,EAAAp8E,GACA0W,KAAA4lE,EAAAt8E,IAEA88E,eACA1rE,cAAA,SAAA5e,GACA,OAAAoqF,EAAAxrE,cAAA5e,EAAAwN,IAEAqR,iBAAA,SAAA/P,GACA,OAAAs7E,EAAAvrE,iBAAA/P,EAAAtB,yBCrGA,IAAAkB,EAAArP,EAAA,GACAA,EAAA,GAEAG,EAAAD,QAAA,SAAAiO,GAEA,IAAA+8E,EAAA,cAEAC,EAAA,KAEA,SAAAh+E,EAAAsC,EAAAlN,GACA,IAAA6oF,EAAA37E,EAAAtC,SACAk+E,EAAAz5E,KAAAnC,EAAA7K,KAEAumF,EAAA17E,EAAA7K,IAAA,KACAwmF,GACAA,EAAA7oF,GAGA,SAAA+oF,EAAAnjF,GACA,GAAAgjF,EAAA,CAEA,IAAAp/D,GADA5jB,KAAAvE,OACAktC,OAAAltC,MAAAitC,QACArI,GAAA,EAEA,GAAA+iD,EAAA5V,SAAA,CACA,OAAA5pD,GAAA,IAAAA,EAAA,CAGA,IAAA5oB,EAAAgF,EAAAhF,QAAAgF,EAAAE,WACAkH,EAAA5H,aAAAxE,GAAA2E,QAAA,0BAAA3E,EAAAg0C,MACAh0C,EAAAg0C,SAEAhqC,EAAAg+E,GAAA,GACA3iD,GAAA,GAIA,IAAAzc,IACA5e,EAAAg+E,GAAA,GACA3iD,GAAA,GAIA,OAAAA,GACArgC,EAAAqgC,gBACArgC,EAAAqgC,mBACArgC,EAAAsgC,cAAA,SAEA,GAMA,SAAA+iD,EAAAjqF,GACAiqF,EAAAC,QACAD,EAAAC,MAAA3mF,SAAAmD,cAAA,OAEAujF,EAAAC,MAAA96C,UAAA26C,EACAE,EAAAC,MAAA7jF,UAAA,kBACA9C,SAAAD,KAAAyE,YAAAkiF,EAAAC,QAEA3mF,SAAAD,KAAA8Z,aACA6sE,EAAAC,MAAA/kF,MAAAH,QAAAhF,EAAA,sBAGA,SAAAiG,EAAAyP,EAAArP,EAAArF,GACA,IAAAmpF,EAAAv9E,EAAAwO,SAAAysC,wBAAAnyC,GACAtW,EAAAiH,EAAAH,cAAAgB,QAAA,UAEA,cAAAijF,EAAA,mDADA,SAAA/qF,EAAA,kBAAAA,EAAA,WACA,kBAAA4B,EAAA,aAAAA,EAAA,WAAA0U,EAAA,eAsCA,SAAA00E,IAGA,IAFA,IAAA9+C,KAAA5jC,MAAAlG,MAAAY,WAAA,IAEAvD,EAAA,EAAiBA,EAAAysC,EAAAjqC,OAAmBxC,IACpC,GAAAysC,EAAAzsC,GACA,OAAAysC,EAAAzsC,GA4EA,SAAAwrF,EAAAn8E,EAAA+pC,EAAAqyC,GACA,IAAAjnF,EAAA6K,EAAArH,QAAAqH,EAvEA,SAAAA,EAAA+pC,EAAAqyC,GACA,IAAAjnF,EAAAE,SAAAmD,cAAA,OAIA6jF,GAFA39E,EAAAuU,OAEArT,EAAA7L,OACA2K,EAAAwO,SAAA4sC,iBAAA3kD,EAAAknF,GAGAlnF,EAAAgD,UAAA,2CAAA6H,EAAAuK,KAAA,WAAAvK,EAAAuK,KACApV,EAAAsT,aAAAgzE,EAAA,GAEA,IAAAn2D,EAAA,GAcA,GAZAtlB,EAAAtJ,QACAvB,EAAA8B,MAAAP,MAAAsJ,EAAAtJ,OACAsJ,EAAArJ,SACAxB,EAAA8B,MAAAN,OAAAqJ,EAAArJ,QACAqJ,EAAAo1B,QACA9P,GAAA,qDAAAtlB,EAAAo1B,MAAA,UACA9P,GAAA,uDAAA+2D,EAAA,YAAAr8E,EAAA2C,QAAA,GAAA3C,EAAAwH,MAAA,yEACAuiC,IACAzkB,GAAAvtB,EAAAmkF,EAAAl8E,EAAA+pC,GAAArrC,EAAAuU,OAAAK,OAAA2C,WAAA,gBACAmmE,IACA92D,GAAAvtB,EAAAmkF,EAAAl8E,EAAAo8E,OAAA19E,EAAAuU,OAAAK,OAAA4C,eAAA,wBAEAlW,EAAA+0B,QACA,QAAApkC,EAAA,EAAkBA,EAAAqP,EAAA+0B,QAAA5hC,OAA2BxC,IAAA,CAC7C,IAAA2rF,EAAAt8E,EAAA+0B,QAAApkC,GAMA20B,GALA,iBAAAg3D,EAKAvkF,EAHAukF,EAAA71E,MACA61E,EAAA1hF,KAAA,SAAA0hF,EAAA71E,MAAAzO,cAAA,kBAAAskF,EAAA71E,MAAAzO,cAAA,UACAskF,EAAA1qF,OAAAjB,GAGAoH,EAAAukF,IAAA3rF,GAQA,GAHA20B,GAAA,SACAnwB,EAAAoF,UAAA+qB,EAEAtlB,EAAA2C,QAAA,CACA,IAAA9L,EAAAmJ,EAAA2C,QACA,iBAAA9L,IACAA,EAAAxB,SAAA8F,eAAAtE,IACA,QAAAA,EAAAI,MAAAH,UACAD,EAAAI,MAAAH,QAAA,IACA3B,EAAA2F,WAAAkF,EAAAo1B,MAAA,KAAAv7B,YAAAhD,GAiBA,OAdA1B,EAAA8rC,QAAA,SAAAvoC,GAEA,IAAA/E,GADA+E,KAAAvE,OACAT,QAAAgF,EAAAE,WAEA,GADAjF,EAAAwE,YAAAxE,IAAA6B,YACA,sBAAA7B,EAAAwE,UAAA+B,MAAA,SACA,IAAApH,EAAAa,EAAA0D,aAAA,eAEAqG,EAAAsC,EADAlN,EAAA,QAAAA,GAAA,SAAAA,QAIAkN,EAAA7K,OACA40C,GAAAqyC,KACAV,EAAA17E,GAEA7K,EAIAonF,CAAAv8E,EAAA+pC,EAAAqyC,GAEAp8E,EAAAyC,QACAs5E,GAAA,GACA1mF,SAAAD,KAAAyE,YAAA1E,GACA,IAAAsB,EAAAF,KAAA0iC,IAAA1iC,KAAAiO,QAAA9O,OAAA0Y,YAAA/Y,SAAAE,gBAAAS,aAAAb,EAAAa,aAAA,IACAM,EAAAC,KAAA0iC,IAAA1iC,KAAAiO,QAAA9O,OAAA67B,aAAAl8B,SAAAE,gBAAAU,cAAAd,EAAAc,cAAA,IAeA,MAdA,OAAA+J,EAAAqiB,SACAltB,EAAA8B,MAAAnC,IAAA,OAEAK,EAAA8B,MAAAnC,IAAAwB,EAAA,KACAnB,EAAA8B,MAAAlC,KAAA0B,EAAA,KAEAtB,EAAA+rC,UAAA26C,EAEAD,EAAAn9E,MAAAtJ,GAEA6K,EAAAyC,QACAm5E,EAAAz5E,KAAAhN,GAEAuJ,EAAAf,UAAA,kBAAAxI,IACAA,EAGA,SAAAqnF,EAAAx8E,GACA,OAAAm8E,EAAAn8E,GAAA,MAGA,SAAAy8E,EAAAz8E,GACA,OAAAm8E,EAAAn8E,GAAA,MAGA,SAAA08E,EAAA18E,GACA,OAAAm8E,EAAAn8E,GAGA,SAAA28E,EAAAn1E,EAAA+C,EAAA7M,GAQA,MAPA,iBAAA8J,IACA,mBAAA+C,IACA7M,EAAA6M,EACAA,EAAA,IAEA/C,GAAWA,OAAA+C,OAAA7M,aAEX8J,EAtLA9I,EAAAvK,MAAAkB,SAAA,UAAAwmF,GAAA,GAiMA,IAUAD,EAAA,WACA,IAAAp0E,EAAAm1E,EAAArpF,MAAAyF,KAAA7E,WAEA,OADAsT,EAAA+C,KAAA/C,EAAA+C,MAAA,QACAmyE,EAAAl1E,IAEAo0E,EAAAz5E,KAAA,SAAAtL,GACA,KAAAA,KAAAQ,eAAAR,EAAAQ,aAAAokF,IACA5kF,IAAArB,WACAqB,IACAA,EAAArB,WAAAuE,YAAAlD,GACAklF,GAAA,GAEAr9E,EAAAf,UAAA,uBAAA9G,MAIA,IAAAiJ,EAAAvP,EAAA,GAEAqrF,EAAAn9E,MAAA,SAAA5H,GACAy8B,WAAA,WACA,IAAAspD,EAAA98E,EAAA5G,kBAAArC,GACA+lF,EAAAzpF,QACAypF,EAAA,GAAAn+E,OAAAm+E,EAAA,GAAAn+E,SAEG,IAGH,IAAAq9E,EAAA,SAAAt0E,EAAA+C,EAAAupB,EAAAz2B,GAKA,QAJAmK,EA9CA,SAAAA,EAAA+C,EAAAupB,EAAAz2B,GAKA,MAJA,iBAAAmK,IACAA,GAAWA,OAAA+C,OAAAupB,SAAAz2B,OACXmK,EAAAnK,GAAAmK,EAAAnK,IAAAuC,EAAA7L,MACAyT,EAAAssB,OAAAtsB,EAAAssB,QAAAgoD,EAAAhoD,OACAtsB,GAyCAlU,MAAAyF,KAAA7E,YACAqW,KAAA/C,EAAA+C,MAAA,OAEA/C,EAAA+C,KAAArQ,MAAA,SAEA,YACA,OAAAsiF,EAAAh1E,GACA,cACA,OAAAi1E,EAAAj1E,GACA,eACA,OAAAk1E,EAAAl1E,GACA,QACA,OA9NA,SAAAA,GACAs0E,EAAAtkF,OACAskF,EAAAtkF,KAAAnC,SAAAmD,cAAA,OACAsjF,EAAAtkF,KAAAW,UAAA,yCACA2jF,EAAAtkF,KAAAP,MAAA6kF,EAAAz5D,UAAA,MACAhtB,SAAAD,KAAAyE,YAAAiiF,EAAAtkF,OAGAskF,EAAA35E,KAAAqF,EAAAnK,IACA,IAAAu2B,EAAAv+B,SAAAmD,cAAA,OAuBA,OAtBAo7B,EAAAr5B,UAAA,QAAAiN,OAAA,SACAosB,EAAAz7B,UAAA,gCAAAqP,EAAA+C,KAAA,WAAA/C,EAAA+C,KACAqpB,EAAAqN,QAAA,WACA66C,EAAA35E,KAAAqF,EAAAnK,IACAmK,EAAA,MAGA9I,EAAAwO,SAAA2sC,gBAAAjmB,GAEA,UAAAkoD,EAAAz5D,UAAAy5D,EAAAtkF,KAAAiD,WACAqhF,EAAAtkF,KAAAs4B,aAAA8D,EAAAkoD,EAAAtkF,KAAAiD,YAEAqhF,EAAAtkF,KAAAqC,YAAA+5B,GAEApsB,EAAAssB,OAAA,IACAgoD,EAAAe,OAAAr1E,EAAAnK,IAAA3H,OAAA49B,WAAA,WACAwoD,EAAA35E,KAAAqF,EAAAnK,KACImK,EAAAssB,SAEJgoD,EAAA7hE,KAAAzS,EAAAnK,IAAAu2B,EACAA,EAAA,KAEApsB,EAAAnK,GA8LAy/E,CAAAt1E,KAIAs0E,EAAAnpF,MAAA,IAAAU,MAAAW,UACA8nF,EAAA/nF,IAAA6L,EAAA7L,IACA+nF,EAAAhoD,OAAA,IACAgoD,EAAA5V,UAAA,EACA4V,EAAAz5D,SAAA,MACAy5D,EAAA7hE,QACA6hE,EAAAe,UAEAf,EAAAiB,QAAA,WACA,QAAA7qF,KAAA4pF,EAAA7hE,KACA6hE,EAAA35E,KAAAjQ,IAEA4pF,EAAA35E,KAAA,SAAA9E,GACA,IAAA7J,EAAAsoF,EAAA7hE,KAAA5c,GACA7J,KAAAgC,aACAE,OAAA49B,WAAA,WACA9/B,EAAAgC,WAAAuE,YAAAvG,GACAA,EAAA,MACI,KACJA,EAAA2E,WAAA,UAEA2jF,EAAAe,OAAAx/E,IACA3H,OAAAw+B,aAAA4nD,EAAAe,OAAAx/E,WACAy+E,EAAA7hE,KAAA5c,KAIA,IAAA2/E,KA+BA,OA9BAt+E,EAAAlK,YAAA,0BAAAW,GACA6nF,EAAA/hF,KAAA9F,KAEAuJ,EAAAlK,YAAA,+BAAAW,GACA,QAAAxE,EAAA,EAAgBA,EAAAqsF,EAAA7pF,OAAmBxC,IACnCqsF,EAAArsF,KAAAwE,IACA6nF,EAAAvjF,OAAA9I,EAAA,GACAA,OAKA+N,EAAAlK,YAAA,uBACAunF,EAAAC,OAAAD,EAAAC,MAAAxmF,YACAumF,EAAAC,MAAAxmF,WAAAuE,YAAAgiF,EAAAC,OAGA,QAAArrF,EAAA,EAAgBA,EAAAqsF,EAAA7pF,OAAmBxC,IACnCqsF,EAAArsF,GAAA6E,YACAwnF,EAAArsF,GAAA6E,WAAAuE,YAAAijF,EAAArsF,IAGAqsF,EAAA,KAEAlB,EAAAtkF,MAAAskF,EAAAtkF,KAAAhC,YACAsmF,EAAAtkF,KAAAhC,WAAAuE,YAAA+hF,EAAAtkF,MAEAskF,EAAA,QAIAjsD,MAjHA,WACA,IAAAroB,EAAAm1E,EAAArpF,MAAAyF,KAAA7E,WAEA,OADAsT,EAAA+C,KAAA/C,EAAA+C,MAAA,UACAiyE,EAAAh1E,IA+GAyiC,QA7GA,WACA,IAAAziC,EAAAm1E,EAAArpF,MAAAyF,KAAA7E,WAEA,OADAsT,EAAA+C,KAAA/C,EAAA+C,MAAA,QACAkyE,EAAAj1E,IA2GAosB,QAAAkoD,EACAmB,SAAArB,qBCzWA,IAAAh8E,EAAArP,EAAA,GAiCAG,EAAAD,QA/BA,WACA,IAAAysF,KAuBA,OACApzE,SAtBA,SAAA5Y,GACA,GAAAA,EACA,OAAAgsF,EAAAhsF,GAAAk3D,SAEA,IAAAnrD,KACA,QAAAtM,KAAAusF,EACAA,EAAAvsF,GAAAwsF,UACAv9E,EAAAnM,MAAAwJ,EAAAigF,EAAAvsF,GAAAy3D,UAAA,GAEA,OAAAnrD,GAcAknC,iBAVA,SAAAjzC,EAAAksF,EAAAD,GACAD,EAAAhsF,IAA0Bk3D,OAAAg1B,EAAAD,aAU1Btf,mBAPA,SAAA3sE,UACAgsF,EAAAhsF,qBCvBAR,EAAAD,QAAA,SAAAiO,GAEA,IAAA2+E,KAEA,SAAAzQ,EAAA17E,EAAAosF,EAAAC,GACAA,KAAArsF,EACA,IAAA8O,EAAAtB,EAAAsB,OACAkT,EAAAxU,EAAAwU,UAEAxU,EAAAsB,OAAA9O,IAAAmsF,EAAAE,IAAAv9E,EAAA9O,KACAosF,GAAApqE,EAAAqqE,KACArqE,EAAAqqE,GAAA7+E,EAAAgJ,KAAA6jB,YAAAvrB,EAAA9O,IACAmsF,EAAAE,GAAAv9E,EAAA9O,KAkIA,OACAmjC,cA9HA,WACA,IAAA/gB,EAAA5U,EAAAuU,OAAAK,OACAA,EAAA2nB,eAAA3nB,EAAAe,UACAf,EAAA6zB,iBAAA7zB,EAAAgB,YACAhB,EAAA0nB,iBAAA1nB,EAAAmB,YAGA,IAAA/M,EAAAhJ,EAAAgJ,KAGAzW,EAAAyW,EAAA6jB,YACAv6B,EAAA0N,EAAAsB,OACA4sE,EAAA,qBAAA94E,EAAA4K,EAAAsB,OAAAtB,EAAAwU,WACA05D,EAAA,kCAAAluE,EAAAsB,OAAAtB,EAAAwU,WACA05D,EAAA,oBAAA94E,EAAA4K,EAAAsB,OAAAtB,EAAAwU,WAEAxU,EAAAjL,MAAAiL,EAAAwU,WACAsqE,SAAA91E,EAAA49D,YAAAt0E,EAAAwsF,SAAAxsF,EAAAysF,YACAznC,WAAA/kD,EAAAD,EAAAwsF,SAAAxsF,EAAAysF,YACAC,SAAAh2E,EAAA49D,YAAAt0E,EAAA0sF,UACAt7D,cAAA,SAAAxW,EAAA6K,EAAAhL,GACA,UAEAoI,kBAAA,SAAA/O,EAAA9E,GACA,UAGA4iB,UAAA,SAAAhX,EAAA6K,EAAAhL,GACA,OAAAA,EAAAjE,MAEA+c,WAAA,SAAA3Y,EAAA6K,EAAAhL,GACA,UAEA60D,eAAA,SAAA10D,EAAA6K,EAAAhL,GACA,UAEA+3D,eAAA,SAAA53D,EAAA6K,EAAAhL,GACA,UAEA63D,gBAAA,SAAA34D,EAAAjD,GACA,UAEAikB,iBAAA,SAAAjkB,GACA,UAEAwjB,gBAAA,SAAAxjB,GACA,UAGAs4D,YAAA,SAAAr1D,GACA,+CAEAu1D,YAAA,SAAAv1D,GACA,mDAAAA,EAAAqQ,MAAA,6BAEAolD,UAAA,SAAAz1D,GACA,wDAEAs1D,UAAA,SAAAt1D,GACA,4CAAAA,EAAAqQ,MAAA,4BAEAmlD,WAAA,SAAAx1D,GACA,yDAEAm1D,UAAA,SAAAp4D,EAAAiD,GACA,OAAAA,GAAAjM,EAAA4rC,kBAAA3/B,IAAAjM,EAAAsB,OAAAwqC,iBACA9rC,EAAAwU,UAAAyqE,sBAAAhzE,GAEAjM,EAAAwU,UAAA0qE,iBAAAl2E,IAIA6gC,UAAA,SAAA38B,EAAA6K,EAAA3a,GACA,OAAA4C,EAAA4rC,kBAAAxuC,IAAA4C,EAAAsB,OAAAwqC,iBACA9rC,EAAAwU,UAAAyqE,sBAAA7hF,GAEA4C,EAAAwU,UAAA6tB,UAAAn1B,GAAA,MAAAlN,EAAAwU,UAAA6tB,UAAAtqB,IAIAknE,sBAAA,SAAAlyE,GACA,UAGAq4B,YAAA7yC,EAAAD,EAAA8yC,aACAi/B,WAAA,SAAA3tD,GACA,UAEAqoD,iBAAA,SAAAroD,GACA,IAAAsL,EAAAhiB,EAAAsM,QAAAoK,EAAAzhB,QACAgtB,EAAAjiB,EAAAsM,QAAAoK,EAAA1hB,QAEA,YAAAgtB,EAAAlZ,KAAA,oBAA4CmZ,EAAAnZ,KAAA,QAG5CuxC,UAAA,SAAAr4B,EAAAqD,EAAApD,EAAAsD,GACAvD,EAAAhiB,EAAAsM,QAAA0V,GACA,IAAApN,EAAA5U,EAAAuU,OAAAK,OAEA9L,EAAA,MAAAkZ,EAAAlZ,KAAA,SAAAuc,EAAAzQ,EAAAgC,WAAAhC,EAAAiC,UAAA,QAKA,OAJAoL,IAEAnZ,GAAA,QADAmZ,EAAAjiB,EAAAsM,QAAA2V,IACAnZ,KAAA,SAAAyc,EAAA3Q,EAAAgC,WAAAhC,EAAAiC,UAAA,SAEA/N,GAEA2vD,gBAAA,SAAAz2C,EAAAqD,EAAApD,EAAAsD,GACA,IAAA9K,EAAA,GAOA,OALAuH,GAAAC,IAEAxH,EAAA,KADAza,EAAA0lB,cAAA1D,EAAAC,EAAAoD,EAAAE,GACA,uCAGA,qBAAA9K,GAIA0kE,oBAAAn2E,EAAA6jB,YAAA,YACA8sB,aAAA,SAAAzsC,EAAA6K,EAAAtiB,GACA,sBAAAA,EAAAqT,KAAA,2BAAA9I,EAAAwU,UAAA2qE,oBAAAjyE,GAAA,yBAAAlN,EAAAwU,UAAA2qE,oBAAApnE,OAOAm2D,kCChJA,IAAA/sE,EAAAtP,EAAA,GACAqP,EAAArP,EAAA,GACA6iC,EAAA7iC,EAAA,IAEAG,EAAAD,QAAA,SAAAiO,GAEA,SAAAo/E,EAAAplF,GACA,OACAhF,OAAAgF,EAAAhF,QAAAgF,EAAAE,WACAmD,MAAArD,EAAAqD,MACAC,MAAAtD,EAAAsD,MACAE,QAAAxD,EAAAwD,QACAC,QAAAzD,EAAAyD,QACAmqE,QAAA5tE,EAAA4tE,QACA7+B,SAAA/uC,EAAA+uC,SACA4+B,QAAA3tE,EAAA2tE,QACA0X,OAAArlF,EAAAqlF,QAIA,SAAA5nB,EAAA3iE,EAAAwM,GACAjH,KAAAilF,KAAAxqF,EACAuF,KAAAklF,UAAAj+E,MACAH,EAAA9G,MAEA,IAAAmlF,EAAAnlF,KAAAolF,kBAEAplF,KAAAqlF,kBAAA,KACA1/E,EAAAlK,YAAA,gBAAAoL,EAAAzN,KAAA,SAAA4C,EAAAD,GACAiE,KAAAslF,kBACGtlF,OAEH,QAAApI,EAAA,EAAgBA,EAAAutF,EAAA/qF,OAAyBxC,IACzCiP,EAAAzN,KAAA,SAAAyF,GAEA8G,EAAAvK,MAAAX,EAAAoE,EAAAgpE,KAAAhhE,EAAAzN,KAAA,SAAAuG,GACAd,EAAAygC,SAAA3/B,KAIAK,KAAAklF,UAAAK,gBAAAR,EAAAplF,GAEAgG,EAAAsB,OAAAwlB,OACAzsB,KAAAslF,iBAEAtlF,KAAAqlF,kBAAA9qD,WAAA1zB,EAAAzN,KAAA,WACA4G,KAAAwlF,UAAA/qF,EAAAkF,EAAAd,IACOmB,MAAA2F,EAAAsB,OAAAwjB,aAGPzqB,KAAAwlF,UAAA/qF,EAAAkF,EAAAd,KAEKmB,OAEL2F,EAAAvK,MAAAkB,SAAAD,KAAAwC,EAAA+oE,GAAA/gE,EAAAzN,KAAA,SAAAuG,GACAd,EAAAygC,SAAA3/B,IAGAK,KAAAslF,kBACKtlF,QAEDA,KA5BJ,CA4BImlF,EAAAvtF,IAsOJ,OAlOAwlE,EAAA5jE,WACAisF,gBAAA,SAAAC,EAAAC,GACA,IAAAC,EAAA/+E,EAAAzN,KAAA,SAAAuG,GACA,OAAAK,KAAA6lF,SAAAH,EAAA/lF,EAAAgmF,EAAArmD,WACIt/B,MAKJ8lF,GAJAj/E,EAAAzN,KAAA,SAAAuG,GACA,OAAAK,KAAA+lF,WAAAL,EAAA/lF,IACIK,MAEJ6G,EAAAzN,KAAA,SAAAuG,GAIA,OAHAA,KAAAqgC,gBACArgC,EAAAqgC,kBACArgC,GAAAvE,OAAA6kC,cAAA,KACAp5B,EAAArM,QAAAwF,KAAAiH,OAAAq2D,qBACAjjC,EAAAr6B,UAAAiH,OAAAq2D,sBAGAsoB,EAAAjmF,IACIK,OAEJgmF,EAAAn/E,EAAAzN,KAAA,SAAAuG,GAGA,OAFAgG,EAAAjK,YAAAY,SAAAD,KAAAspF,EAAA9hE,KAAAiiE,GACAngF,EAAAjK,YAAAY,SAAAD,KAAAspF,EAAA/d,GAAAoe,GACAhmF,KAAAimF,QAAAP,IACI1lF,MAGJ2F,EAAAvK,MAAAkB,SAAAD,KAAAspF,EAAA9hE,KAAAiiE,GACAngF,EAAAvK,MAAAkB,SAAAD,KAAAspF,EAAA/d,GAAAoe,IAEAE,oBAAA,SAAAhjF,GACA,IAAAijF,EAAAjjF,EAAAxF,EAAAsC,KAAAiH,OAAA/D,IAAAxF,EACA0oF,EAAAljF,EAAA3F,EAAAyC,KAAAiH,OAAA/D,IAAA3F,EAGA,OAFAC,KAAAugE,KAAAvgE,KAAAsiE,IAAAtiE,KAAA0iC,IAAAimD,GAAA,GAAA3oF,KAAAsiE,IAAAtiE,KAAA0iC,IAAAkmD,GAAA,IAEApmF,KAAAiH,OAAAo2D,aAMAgpB,cAAA,WAEA,IAAAj2B,EAAApwD,KAAAiH,OAAAmpD,OAAA9zD,SAAAmD,cAAA,OACA2wD,EAAAhxD,UAAA,oBACAgxD,EAAA5uD,UAAA,kBACAlF,SAAAD,KAAAyE,YAAAsvD,IAEAk2B,kBAAA,SAAAC,EAAAC,GACA,GAAA7gF,EAAAsB,OAAAwlB,MAAA,CAKA,IAAA9sB,EAAA6mF,EAAAD,GAEAlrF,EAAAsE,EAAAhF,QAAAgF,EAAAE,WACA/F,EAAAuB,EAAAqlC,WAAA,GAEA1gC,KAAAiH,OAAAs+E,gBAAAR,EAAAplF,GACAK,KAAAiH,OAAAs+E,gBAAA5qF,OAAAb,EACAkG,KAAAiH,OAAAw/E,eAAAprF,EACAA,EAAAoB,WAAAqE,YAAAhH,GAEAuB,EAAA6C,MAAAH,QAAA,OACAzB,SAAAD,KAAAyE,YAAAzF,KAEA+pF,gBAAA,WAEA,IAAAD,KAWA,GATAA,EAAAjjF,MACA2hB,KAAA,YACAgkD,KAAA,YACAD,GAAA,UACAtoC,SAAA,SAAA3/B,GACA,OAAAA,KAIAgG,EAAAsB,OAAAwlB,MAAA,CAEA,IAAAmS,GAAA,EACA,IACAtiC,SAAAuiC,YAAA,cACK,MAAAl/B,GACLi/B,GAAA,EAGAA,EACAumD,EAAAjjF,MACA2hB,KAAA,YACAgkD,KAAA,aACAD,GAAA,WACAtoC,SAAA,SAAAv8B,GACA,OAAAA,EAAAg8B,SAAAh8B,EAAAg8B,QAAA3kC,OAAA,OACA2I,EAAAg8B,QAAA,IAEApkC,OAAA2B,SAAAoqF,iBAAA3jF,EAAAg8B,QAAA,GAAA57B,QAAAJ,EAAAg8B,QAAA,GAAA37B,SACAJ,MAAAD,EAAAg8B,QAAA,GAAA/7B,MACAC,MAAAF,EAAAg8B,QAAA,GAAA97B,MACAE,QAAAJ,EAAAg8B,QAAA,GAAA57B,QACAC,QAAAL,EAAAg8B,QAAA,GAAA37B,SAGAL,KAGKpG,OAAA6P,UAAAwyB,eACLmmD,EAAAjjF,MACA2hB,KAAA,cACAgkD,KAAA,cACAD,GAAA,YACAtoC,SAAA,SAAAv8B,GACA,eAAAA,EAAAk8B,YAAA,KACAl8B,KAIKpG,OAAA6P,UAAA0yB,kBACLimD,EAAAjjF,MACA2hB,KAAA,gBACAgkD,KAAA,gBACAD,GAAA,cACAtoC,SAAA,SAAAv8B,GACA,OAAAA,EAAAk8B,aAAAl8B,EAAAo8B,qBAAA,KACAp8B,KAMA,OAAAoiF,GAEAG,eAAA,WACAtlF,KAAAqlF,oBACAlqD,aAAAn7B,KAAAqlF,mBACArlF,KAAAqlF,kBAAA,OAGAG,UAAA,SAAA/qF,EAAAkF,EAAAgmF,GACA3lF,KAAAiH,QACAxM,MACA21D,OAAA,KACA9G,SAAA,EACApmD,IAAAlD,KAAA6+D,YAAAl/D,GACA09D,YAAA,GAEAr9D,KAAAklF,WACAr+E,EAAAnM,MAAAsF,KAAAiH,OAAAjH,KAAAklF,WAAA,GAGAllF,KAAAylF,gBAAAhrF,EAAAkrF,GAEAhgF,EAAA84B,uBAAA,EACAniC,SAAAD,KAAA+C,WAAA,kBAEAuG,EAAAsB,OAAAwlB,OACAzsB,KAAA6lF,SAAAprF,EAAAkF,EAAAgmF,EAAArmD,WAIAumD,SAAA,SAAAprF,EAAAkF,EAAA6mF,GACA,IAAA5rF,EAAA4rF,EAAA7mF,GACA,GAAA/E,EAAA,CAEA,IAAAoF,KAAAiH,OAAAmpD,SAAApwD,KAAAiH,OAAAqiD,QAAA,CACA,IAAApmD,EAAAlD,KAAA6+D,YAAAjkE,GAEA,GAAA+K,EAAAsB,OAAAwlB,OAAAzsB,KAAAkmF,oBAAAhjF,GAAA,CAKA,GAFAlD,KAAAiH,OAAAqiD,SAAA,EACAtpD,KAAAiH,OAAAmnB,QAAA,GACA,IAAApuB,KAAA4E,UAAA,qBAAAnK,EAAAuF,KAAAiH,OAAAs+E,kBAEA,OADAvlF,KAAAiH,OAAAmnB,QAAA,GACA,EAEApuB,KAAAsmF,kBAAA3mF,EAAA6mF,GACAxmF,KAAAqmF,gBACA1gF,EAAA+4B,kBACA1+B,KAAA4E,UAAA,oBAAAnK,EAAAuF,KAAAiH,OAAAs+E,uBAEAvlF,KAAAiH,OAAAmnB,QAAA,EAKA,OAAApuB,KAAAiH,OAAAmnB,YAAA,GACAxzB,EAAAsI,IAAAlD,KAAA6+D,YAAAjkE,GACAoF,KAAAiH,OAAAmpD,OAAAlyD,MAAAlC,KAAApB,EAAAsI,IAAAxF,EAAA,KACAsC,KAAAiH,OAAAmpD,OAAAlyD,MAAAnC,IAAAnB,EAAAsI,IAAA3F,EAAA,KACAyC,KAAA4E,UAAA,cAAAnK,EAAAG,KACA,KAIAqrF,QAAA,SAAAxrF,GACA,IAAAE,EAAAqF,KAAAiH,OAAAw/E,eACA9rF,KAAA8B,YACA9B,EAAA8B,WAAAuE,YAAArG,GAEAgL,EAAA84B,uBAAA,EACAz+B,KAAAiH,OAAAmpD,SACApwD,KAAAiH,OAAAmpD,OAAA3zD,WAAAuE,YAAAhB,KAAAiH,OAAAmpD,QACApwD,KAAAiH,OAAAmpD,OAAA,KAEApwD,KAAA4E,UAAA,iBAEAtI,SAAAD,KAAA+C,UAAA9C,SAAAD,KAAA+C,UAAAa,QAAA,uBAGA4+D,YAAA,SAAAl/D,GACA,IAAAjC,EAAA,EAAAH,EAAA,EASA,OARAoC,KAAAhD,OAAAvB,OACA4H,OAAArD,EAAAsD,OACAvF,EAAAiC,EAAAqD,MACAzF,EAAAoC,EAAAsD,QACItD,EAAAwD,SAAAxD,EAAAyD,WACJ1F,EAAAiC,EAAAwD,QAAA7G,SAAAD,KAAAQ,WAAAP,SAAAE,gBAAAK,WACAU,EAAAoC,EAAAyD,QAAA9G,SAAAD,KAAAK,UAAAJ,SAAAE,gBAAAE,YAEWgB,IAAAH,OAIX6/D,kBC/QAzlE,EAAAD,QAAA,SAAAiO,GACA,IAAA9L,GACAqQ,KAAA,WAKA,IAJA,IAAAgQ,EAAAvU,EAAAuU,OAEAvgB,EAAAugB,EAAAvL,KAAAuM,YACApiB,EAAAohB,EAAAvL,KAAAg4E,oBACA/uF,EAAA,EAAkBA,EAAA+B,EAAAS,OAAcxC,IAChCkB,EAAAa,EAAA/B,MAIA,IAFA+B,EAAAugB,EAAAvL,KAAAsM,WACAniB,EAAAohB,EAAAvL,KAAAi4E,mBACAhvF,EAAA,EAAkBA,EAAA+B,EAAAS,OAAcxC,IAChCkB,EAAAa,EAAA/B,OAEA24C,UAAA,SAAA5hC,GACA,IAAAk4E,EAAA,IAAAvsF,KAAAqU,GAMA,OALAA,EAAAkiC,SAAA,GACA7wC,KAAA8mF,WAAAn4E,GACAA,EAAAs8B,aACAt8B,EAAA9C,UAAAg7E,EAAAh7E,WAAA8C,EAAA/C,WAAAi7E,EAAAj7E,YAAA+C,EAAAhD,cAAAk7E,EAAAl7E,gBACAgD,EAAAq8B,QAAAr8B,EAAAonC,UAAA,SAAApnC,EAAAs8B,aACAt8B,GAEAo4E,UAAA,SAAAp4E,GACA,OAAAA,EAAA1T,UAAA,OAAA0T,EAAAwvB,qBAAA,OAEA6oD,WAAA,SAAAr4E,GACA,IAAA6uD,EAAA7uD,EAAAiqC,SAKA,OAJAjzC,EAAAsB,OAAAggF,kBACA,IAAAzpB,IAAA,EACAA,KAEAx9D,KAAAuwC,UAAAvwC,KAAAogB,IAAAzR,GAAA,EAAA6uD,EAAA,SAEA0pB,YAAA,SAAAv4E,GAEA,OADAA,EAAAw4E,QAAA,GACAnnF,KAAAuwC,UAAA5hC,IAEAy4E,cAAA,SAAAz4E,GACA3O,KAAAknF,YAAAv4E,GACA,IACA04E,EADArvF,EAAA2W,EAAA/C,WAcA,OAVAy7E,EADArvF,GAAA,EACA,EACIA,GAAA,EACJ,EACIA,GAAA,EACJ,EAEA,EAGA2W,EAAA24E,SAAAD,GACA14E,GAEA44E,WAAA,SAAA54E,GAEA,OADAA,EAAA24E,SAAA,GACAtnF,KAAAknF,YAAAv4E,IAEAgpC,UAAA,SAAAhpC,GACA,OAAA3O,KAAAuwC,UAAA5hC,IAEAm4E,WAAA,SAAAn4E,GAKA,OAJAA,EAAAu8B,cACAv8B,EAAA64E,WAAA,GACAxnF,KAAAynF,aAAA94E,GAEAA,GAEA84E,aAAA,SAAA94E,GAKA,OAJAA,EAAA+4E,cACA/4E,EAAAg5E,WAAA,GACAh5E,EAAAi5E,mBACAj5E,EAAAk5E,gBAAA,GACAl5E,GAEAm5E,UAAA,SAAAn5E,EAAA6qC,GACA,IAAAuuC,EAAA,IAAAztF,KAAAqU,EAAA1T,WAMA,OAJA8sF,EAAAZ,QAAAY,EAAAl8E,UAAA2tC,GACAA,GAAA,IAAA7qC,EAAAs8B,YAAA88C,EAAA98C,aACA88C,EAAAl8E,WAAA8C,EAAA9C,WAAAk8E,EAAAn8E,WAAA+C,EAAA/C,YAAAm8E,EAAAp8E,cAAAgD,EAAAhD,gBACAo8E,EAAA/8C,QAAA+8C,EAAAhyC,UAAA,SAAAgyC,EAAA98C,aACA88C,GAGA3nE,IAAA,SAAAzR,EAAA6qC,EAAAzgD,GAEA,IAAAgvF,EAAA,IAAAztF,KAAAqU,EAAA1T,WACA,OAAAlC,GACA,UACAgvF,EAAA/nF,KAAA8nF,UAAAC,EAAAvuC,GACA,MACA,WACAuuC,EAAA/nF,KAAA8nF,UAAAC,EAAA,EAAAvuC,GACA,MACA,YACAuuC,EAAAT,SAAAS,EAAAn8E,WAAA4tC,GACA,MACA,WACAuuC,EAAAC,QAAAD,EAAAp8E,cAAA6tC,GACA,MACA,WAWAuuC,EAAA/8C,QAAA+8C,EAAAhyC,UAAA,GAAAyD,EAAA,QACA,MACA,aAEAuuC,EAAA/8C,QAAA+8C,EAAAhyC,UAAA,GAAAyD,EAAA,KAEA,MACA,QACA,OAAAx5C,KAAA,OAAAjH,GAAA4V,EAAA6qC,EAAAzgD,GAEA,OAAAgvF,GAGAE,YAAA,SAAAt5E,EAAA6qC,GACA,OAAAx5C,KAAAogB,IAAAzR,EAAA,EAAA6qC,EAAA,UAGA0uC,SAAA,SAAAC,GACA,OAAAA,EAAA,OAAAA,EACAA,GAEAruF,KAAA,SAAA6U,GACA,WAAArU,KAAAqU,EAAA1T,YAEAu3B,YAAA,SAAA41D,EAAAC,GACAD,IAAAnoF,QAAA,sBAAAzB,GACA,OAAAA,GACA,SACA,qCACA,SACA,0CACA,SACA,2BACA,SACA,gCACA,SACA,6CACA,SACA,+BACA,SACA,iDACA,SACA,gDACA,SACA,qDACA,SACA,oDACA,SACA,gDACA,SACA,wCACA,SACA,4BACA,SACA,sCACA,SACA,wCACA,SACA,2CACA,SACA,2CACA,SACA,wCACA,SACA,uCACA,SACA,oCACA,QACA,OAAAA,KAGA6pF,IAAAD,IAAAnoF,QAAA,6BACA,IAAAmsE,EAAA,IAAAkc,SAAA,6DAAAF,EAAA,MAEA,gBAAAz5E,GACA,OAAAy9D,EAAAz9D,EAAA9U,EAAAquF,SAAAviF,EAAAuU,OAAArgB,EAAA0uF,WAAA1uF,EAAA2uF,WAGAjc,YAAA,SAAA6b,EAAAC,GAGA,IAFA,IAAAI,EAAA,4CACAC,EAAAN,EAAA1lD,MAAA,cACA9qC,EAAA,EAAkBA,EAAA8wF,EAAAtuF,OAAiBxC,IACnC,OAAA8wF,EAAA9wF,IACA,SACA,SACA6wF,GAAA,eAAA7wF,EAAA,QACA,MACA,SACA,SACA6wF,GAAA,gBAAA7wF,EAAA,WACA,MACA,SACA6wF,GAAA,eAAA7wF,EAAA,aAAAA,EAAA,mBACA,MACA,SACA,SACA,SACA,SACA6wF,GAAA,eAAA7wF,EAAA,QACA,MACA,SACA6wF,GAAA,eAAA7wF,EAAA,QACA,MACA,SACA6wF,GAAA,eAAA7wF,EAAA,QACA,MACA,SACA,SACA6wF,GAAA,2BAAA7wF,EAAA,oCACA,MACA,SACA6wF,GAAA,eAAA7wF,EAAA,QACA,MACA,SACA6wF,GAAA,4CAAA7wF,EAAA,SACA,MACA,SACA6wF,GAAA,2CAAA7wF,EAAA,SAMA,IAAA2rB,EAAA,4CACA8kE,IAAA9kE,EAAA,aAAAA,EAAA,KACA,IAAA8oD,EAAA,IAAAic,SAAA,0CAAyEG,EAAA,oBAAAllE,EAAA,MAEzE,gBAAA47B,GACA,OAAAktB,EAAAltB,EAAAx5C,EAAAuU,UAGAquE,WAAA,SAAAR,GACA,OAAApiF,EAAAgJ,KAAAg6E,eAAAZ,GAAA,IAEAY,eAAA,SAAAZ,EAAAa,GACA,IAAAb,EAAA,SACA,IAAAc,EAAAd,EAAAnvC,SACAgwC,GACA,IAAAC,IACAA,EAAA,GAGA,IAAAC,EAAA,IAAAxuF,KAAAytF,EAAA9sF,WACA6tF,EAAA3B,QAAAY,EAAAl8E,WAAA,EAAAg9E,IACA,IAAAE,EAAAD,EAAAn9E,cACAq9E,EAAAxrF,KAAAC,OAAAqrF,EAAA/yC,UAAA,IAAAz7C,KAAAyuF,EAAA,KAAAhzC,WAAA,OAEA,OADA,EAAAv4C,KAAAiO,MAAAu9E,EAAA,IAIAR,QAAA,SAAAT,GACA,OAAApiF,EAAAgJ,KAAAg6E,eAAAZ,EAAApiF,EAAAsB,OAAAggF,kBAEAgC,cAAA,SAAAlB,GACA,OAAApiF,EAAAgJ,KAAA45E,WAAAR,IAEAmB,eAAA,SAAAv6E,GACA,WAAArU,KAAAqU,EAAAw6E,iBAAAx6E,EAAAy6E,cAAAz6E,EAAAy1B,aAAAz1B,EAAA06E,cAAA16E,EAAA26E,gBAAA36E,EAAA46E,kBAEA9yB,UAAA,SAAA9nD,EAAAy5E,GAeA,OAZAz5E,MAAAhD,cACAhG,EAAAnL,QAAA4tF,KAEAA,EADA,mBACAziF,EAAAnL,QAAAmL,EAAAwU,UAAAiuE,IAAAziF,EAAAwU,UAAAiuE,GAAAziF,EAAAgJ,KAAA49D,YAAA6b,GAEAziF,EAAAwU,UAAAsqE,UAGA91E,EADAA,EACAy5E,EAAAz5E,GAEA,MAEAA,IAGA,OAAA9U,oBCxTA,IAAAyS,EAAA9U,EAAA,GAEAG,EAAAD,QAAA,SAAAiO,GACA,OAIAu9B,OAAA,EAIAmsB,OAAA,MAEA1sC,MAAA,SAAAP,GACA,uBAAAA,KAGAA,IAAAniB,QAAA,aACAtD,OAAA6sF,YAAAl9E,EAAAC,KACA9R,GAAA,IAAAkC,OAAA6sF,WAAAC,gBAAArnE,EAAA,YACIzlB,OAAA+sF,gBAAA/sF,OAAA5B,aACJN,EAAA,IAAAkC,OAAA+sF,cAAA,qBACAC,MAAA,QACAlvF,EAAAmvF,QAAAxnE,IAEA3nB,GATA,IAAAA,GAWAyjD,OAAA,SAAA2rC,EAAAC,EAAArvF,GACA,YAAAqvF,EAAA/3B,QAAA+3B,EAAA/3B,OAAA,KACA,IAAA3U,EAAA0sC,EAAAC,YAAAD,EAAAC,aAAAD,EAAA9pF,KAAA2iB,MAAAmnE,EAAAhuC,cAAAguC,GACA,GAAA1sC,GAAA,OAAAA,EAAA5gD,kBAAA4gD,EAAA5a,qBAAA,eAAApoC,OACA,OAAAgjD,EAAA5a,qBAAAqnD,GAAA,GAIA,OADA,IAAApvF,GAAAkL,EAAAf,UAAA,kCAAAzJ,UAAA,GAAAV,IACA6B,SAAAmD,cAAA,QAEAm+C,MAAA,SAAAosC,EAAAC,GAEA,GADAA,EAAAvrF,WAAAurF,IAAAF,aAAAE,GACA39E,EAAAC,KACA,OAAA09E,EAAAC,YAAAF,OAMA,IAJA,IACAn/C,EADA7T,KAEA7d,GAAA8wE,EAAAE,eAAAF,GAAAG,SAAAJ,EAAAC,EAAA,KAAAI,YAAAC,SAAA,MAGAz/C,EAAA1xB,EAAAoxE,eAEAvzD,EAAA90B,KAAA2oC,GAKA,OAAA7T,GAGAo4B,MAAA,SAAAnoD,GACAjH,KAAAwqF,MACAvjF,EAAAooD,QAAA,MACApoD,EAAAs0C,IACAt0C,EAAAmb,MAAA,GACAnb,EAAA0iF,QAAA,EACA1iF,EAAAtC,SACA,KACAsC,EAAA0lD,UAGAl0D,IAAA,SAAA8iD,EAAAkvC,GACAzqF,KAAAwqF,MAAA,MAAAjvC,EAAA,QAAAkvC,IAEAC,QAAA,SAAAnvC,GACA,OAAAv7C,KAAAwqF,MAAA,MAAAjvC,EAAA,UAEAvF,IAAA,SAAAuF,EAAAovC,EAAAF,GACAzqF,KAAAwqF,MAAA,MAAAjvC,EAAAovC,GAAA,EAAAF,IAEAG,IAAA,SAAArvC,EAAAovC,EAAAF,GACAzqF,KAAAwqF,MAAA,SAAAjvC,EAAAovC,GAAA,EAAAF,IAEAI,KAAA,SAAAtvC,EAAAovC,EAAAF,GACA,GAAAtvF,UAAAf,OACAuwF,EAAA,GACI,GAAAxvF,UAAAf,QAAA,yCAAAuC,OAAAguF,GAIJA,EAAAzwF,OAAAywF,IAHAF,EAAAE,EACAA,EAAA,IAIA3qF,KAAAwqF,MAAA,OAAAjvC,EAAAovC,GAAA,EAAAF,IAEAK,SAAA,SAAAvvC,EAAAovC,GAEA,OADAA,EAAA,OAAAA,EAAA,GAAAzwF,OAAAywF,GACA3qF,KAAAwqF,MAAA,OAAAjvC,EAAAovC,GAAA,IAEAI,QAAA,SAAAxvC,EAAAkvC,GACAzqF,KAAAwqF,MAAA,MAAAjvC,EAAA,QAAAkvC,GAA+ClvC,SAE/CyvC,SAAA,SAAAzvC,EAAAovC,EAAAF,GACA,GAAAtvF,UAAAf,QAAA,uBAAAuC,OAAAguF,GAAA,KACAF,EAAAE,EACAA,EAAA,IAEA3qF,KAAAwqF,MAAA,OAAAjvC,EAAAovC,GAAA,EAAAF,GAAoDlvC,MAAAovC,cAEpDH,MAAA,SAAAn7B,EAAA9T,EAAAovC,EAAAhB,EAAAc,EAAAQ,EAAAt+B,GAEA,IAAA7zD,EAAA6D,OAAAgQ,iBAAAL,EAAAC,KAAA,IAAAI,eAAA,IAAA+8E,cAAA,qBACAwB,EAAA,OAAA1+E,UAAAC,UAAAi2B,MAAA,uBAAAl2B,UAAAC,UAAAi2B,MAAA,cAAAl2B,UAAAC,UAAAi2B,MAAA,UAgCA,GA9BAinD,IACA7wF,EAAAqyF,mBAAA,WACA,MAAAryF,EAAAsyF,YAAAF,GAAA,GAAApyF,EAAAsyF,WAAA,CACA,SAAAtyF,EAAAi5D,QAAA,KAAAj5D,EAAAgjD,gBACAn2C,EAAAf,UAAA,eAAA9L,IAAA,OAEA6D,OAAA49B,WAAA,WACA,sBACAkwD,EAAAlwF,MAAAoC,SAA+Bk/C,OAAA/iD,EAAAk6D,SAAAzX,KAE/B0vC,SACA,IAAAA,EAAA,SACAjrF,KAAAgrF,SAAAC,EAAA1vC,IAAA0vC,EAAAN,SAAAF,GAEAzqF,KAAA+qF,QAAAE,EAAA1vC,IAAAkvC,IAGAA,EAAA,KACA3xF,EAAA,MACO,MAKP,OAAAu2D,GAAArvD,KAAAkjC,QACAqY,MAAAj8C,QAAA,6BAAAhF,MAAAy7C,UAAA,MAGAj9C,EAAAmf,KAAAo3C,EAAA9T,EAAAouC,GAEAh9B,EACA,QAAAxzD,KAAAwzD,EACA7zD,EAAAuyF,iBAAAlyF,EAAAwzD,EAAAxzD,QACI,QAAAk2D,EAAAi8B,eAAA,OAAAj8B,GAAA,UAAAA,EACJv2D,EAAAuyF,iBAAA,oDACI,OAAAh8B,IACJs7B,EAAA,MAOA,GAJA7xF,EAAAuyF,iBAAA,qCAEAvyF,EAAAyyF,KAAAZ,IAEAhB,EAAA,OAAuB9tC,OAAA/iD,EAAAk6D,SAAAzX,IAGvBqT,aAAA,SAAA9uD,GACA,UAAAA,EAAAR,QAAA,KACA,IAEA,sBChKA3H,EAAAD,QAAA,WACA,OACAgkC,QACA75B,IAAA,kBACAm1B,OAEAznB,OACOjE,KAAA,OAAA6rE,QAAA,YAAA1/D,QAAA,cACA5C,SAAA,EAAAlX,MAAA,IACA2N,KAAA,WAAA6rE,QAAA,YAAA1/D,QAAA,cACAnM,KAAA,YAAAhH,GAAA,gBAIFgH,KAAA,YAAAhH,GAAA,YAAA1G,OAAA,MAGLgvB,OACAE,gBAAA,IACAD,eAAA,IACAE,iBAAA,IACA+Q,gBAAA,KAEApV,OACAhW,KAAA,OACAyX,QAAA,UACAxB,UAAA,aAEAu5B,YAAA,EACAlkC,cAAA,MACAk2B,WAAA,EACAC,mBAAA,EACAhmB,eAAA,EAEA0lC,gBAAA,EAEAjiC,UAAA,EACAC,mBAAA,EACAy4B,YAAA,EACAP,iBAAA,GAEA19B,YAAA,EACAi+C,iBAAA,EAEA35C,mBAAA,EACAixB,gBAAA,EACAD,wBAAA,aACA6pC,cAAA,EACA3wB,YAAA,EACAE,WAAA,EACA+G,aAAA,KACA2iB,SAAA,iBACAE,SAAA,iBACAsC,iBAAA,EACAvC,YAAA,EACA77D,eAAA,EACAnI,WAAA,EACA2J,aAAA,EACAq8C,iBAAA,EACA1pC,iBAAA,EACAyK,UAAA,EAGAs/B,UAAA,WAEA36C,YAAA,EACA5C,eAAA,EACA0C,aAAA,EACA+2C,cAAA,EACAxjB,WAAA,EACAj1B,WACA/hB,OAAA,SACAugB,SAAA,WACAnF,KAAA,OACAuK,OAAA,UAEAsd,iBAAA,EACA88B,mBAAA,GACA7hC,QAAA,EAEA9sB,SAAA,EACAzE,UACIjd,KAAA,OAAA6uE,MAAA,EAAArpE,MAAA,IAAA8K,QAAA,IACAtQ,KAAA,aAAAmvE,MAAA,SAAA7+D,QAAA,IACAtQ,KAAA,WAAAmvE,MAAA,WACAnvE,KAAA,MAAAwF,MAAA,KAIJ6f,KAAA,EACAkC,WAAA,MACAC,sBAAA,EACAI,aAEA4S,qBAAA,EAEAkZ,UAAA,GACAvtB,cAAA,EACAw1D,WAAA,QACA9rC,UAAA,WACA+C,YAAA,QACAzN,eAAA,UACA3N,eAAA,UACA0tD,gBAAA,aACA57C,cACA,iBACA,oBAEA2I,kBACAqhD,aAAA,iBACAC,eAAA,mBACAC,eAAA,oBAEAjqD,eACA,oBAEAqD,UACAgH,WACK5zC,KAAA,cAAAyF,OAAA,GAAAkU,OAAA,OAAAN,KAAA,WAAA9L,OAAA,IACAvN,KAAA,OAAAqZ,KAAA,WAAAM,OAAA,SAEL85E,mBACKzzF,KAAA,cAAAyF,OAAA,GAAAkU,OAAA,OAAAN,KAAA,WAAA9L,OAAA,IACAvN,KAAA,OAAAqZ,KAAA,aAAAM,OAAA,SACA3Z,KAAA,OAAAqZ,KAAA,WAAAi2B,UAAA,EAAA31B,OAAA,SAEL+5E,qBACK1zF,KAAA,cAAAyF,OAAA,GAAAkU,OAAA,OAAAN,KAAA,WAAA9L,OAAA,IACAvN,KAAA,OAAAqZ,KAAA,aAAAM,OAAA,SACA3Z,KAAA,OAAAqZ,KAAA,WAAAg2B,aAAA,EAAA11B,OAAA,UAGL+6B,eAAA,EACAlyB,MAAA,EACAu3B,mBAAA,EACAmuC,qBAAA,EACAjkC,gBAAA,EACArf,mBAAA,IAEA4iB,cAAA,EACAqmB,mBAAA,EAEAjyC,YAAA,OACA/B,iBAAA,GAGA1Z,sBAAA,GAEAi2D,8BAAA,eAEAud,uBAAA,eAGA5c,iBAAA,EAGA6c,aAAA,EAEAt6C,kBAAA,EAGAkN,kBAAA,WACAD,kBAAA,WACA9D,kBAAA,cACAC,sBAEAxtB,kBAEA2oC,qBAAA,EACArxB,iBAAA,EACAqnD,wBAAA,EACAlxD,aAAA,EACAymB,qBAAA,EACArxB,cAAA,EACA9V,KAAA,EACAyoC,kBAAA,mBC/KAlrD,EAAAD,QAAA,WACA,IAAAylE,KAkBA,OACAA,UANAl2D,OAAA,SACAkT,UAAA,YACAD,OAAA,UAKA+7C,WAnBA,SAAA99D,EAAAC,GACA+kE,EAAAhlE,GAAAC,GAmBA4P,WAhBA,SAAA7P,GACA,OAAAglE,EAAAhlE,GAGAglE,EAAAhlE,KAFA,MAeA8O,OAAA,WACA,OAAAjH,KAAAgI,WAAA,WAEAmS,UAAA,WACA,OAAAna,KAAAgI,WAAA,cAEAkS,OAAA,WACA,OAAAla,KAAAgI,WAAA,WAEAH,WAAA,WACA,QAAAjQ,KAAAulE,EACA,GAAAA,EAAAvlE,GAAA,CACA,IAAAq0F,EAAA9uB,EAAAvlE,GACAq0F,KAAApkF,YACAokF,EAAApkF,aAIAs1D,EAAA,uBCzCAxlE,EAAAD,QAAA,SAAAiO,GACAA,EAAAumF,QAAA,SAAAv0F,GACA,OAAAA,EAAAqI,KAAA+H,4BCFApQ,EAAAD,SACA8wC,WACAE,GAAA,GACAD,KAAA,GACAglC,KAAA,GACAC,MAAA,GACAj/B,MAAA,GACA4+B,MAAA,GACAM,OAAA,GACAH,IAAA,GACAI,IAAA,qBCVAp2E,EAAA,IAaAG,EAAAD,QAAA,WAEA,IAAAiO,EAAA,IAbA,WACA3F,KAAAuoC,UAAA/wC,EAAA,KACAwI,KAAA4xD,QAAA,QACA5xD,KAAAma,aACAna,KAAAqmE,OACArmE,KAAA4uC,MACAC,UAAA7uC,KAAAuoC,UAAAC,UAAA6kC,MACAv+B,YAAA9uC,KAAAuoC,UAAAC,UAAAglC,MAQAh2E,EAAA,IAAAA,CAAAmO,GAEAA,EAAAoC,UAAApC,EAAAumF,QAAA10F,EAAA,MACAmO,EAAAsB,OAAAtB,EAAAumF,QAAA10F,EAAA,MACAmO,EAAAg2C,KAAAnkD,EAAA,IAAAA,CAAAmO,GACAA,EAAAgJ,KAAAnX,EAAA,IAAAA,CAAAmO,GACA,IAAA2nD,EAAA91D,EAAA,IAAAA,CAAAmO,GACAA,EAAAoC,UAAAkuD,WAAA,iBAA8C,OAAA3I,IAE9C3nD,EAAAoC,UAAAkuD,WAAA,oBACA,OAAAtwD,EAAAsB,SAEAtB,EAAAoC,UAAAkuD,WAAA,kBACA,OAAAtwD,EAAAgJ,OAEAhJ,EAAAoC,UAAAkuD,WAAA,oBACA,OAAAtwD,EAAAuU,SAEAvU,EAAAoC,UAAAkuD,WAAA,uBACA,OAAAtwD,EAAAwU,YAGA,IAAAgyE,EAAA30F,EAAA,IAAAA,CAAAmO,GACAA,EAAAoC,UAAAkuD,WAAA,4BACA,OAAAk2B,IAGA30F,EAAA,EACAsP,CAAAnB,GAEA,IACAymF,EAAA,IADA50F,EAAA,MAGA40F,EAAAhhD,iBAAA,oBACA,OACAje,SAAAxnB,EAAA6a,UACA4M,SAAAznB,EAAA8a,UACA6J,cAAA3kB,EAAA6nB,MAAAC,WAAA+kB,mBAGA7sC,EAAAoL,SAAAq7E,EAAAr7E,SACApL,EAAAoC,UAAAkuD,WAAA,mBACA,OAAAm2B,IAGA,IAAAvlF,EAAArP,EAAA,GACAqP,EAAAnM,MAAAiL,EAAAkB,GACAlB,EAAA2G,IAAA9U,EAAA,GAEA,IAAAgpF,EAAAhpF,EAAA,GAAAA,GACAmO,EAAAvK,MAAAolF,EAAAvmD,OACAt0B,EAAAjK,YAAA8kF,EAAAv4E,OACAtC,EAAA60B,gBAAAgmD,EAAAr4E,UACAxC,EAAA8B,qBAAA+4E,EAAAtmD,OAEArzB,EAAAnM,MAAAiL,EAAAnO,EAAA,IAAAA,CAAAmO,IACA,IAAA0mF,EAAA70F,EAAA,KAAA0S,KAAAvE,GACAA,EAAA+Q,IAAA21E,EAAAnlF,QACAvB,EAAA+Q,IAAA/B,OAAA03E,EAAA9mF,OACAI,EAAAm2B,aAAAuwD,EAAAt+E,YACApI,EAAAoC,UAAAkuD,WAAA,yBACA,OAAAtwD,EAAAm2B,eAEAn2B,EAAAjL,MAAAiL,EAAA0mF,EAAA7J,WAEAhrF,EAAA,GAAAA,CAAAmO,GAEAA,EAAAoC,UAAAkuD,WAAA,oBACA,OAAAo2B,EAAA5J,gBAGA,IAAA6J,EAAA90F,EAAA,IAgCA,OA/BAmO,EAAAjL,MAAAiL,EAAA2mF,KAEA90F,EAAA,GAAAA,CAAAmO,GAEAnO,EAAA,GAAAA,CAAAmO,GACAnO,EAAA,GAAAA,CAAAmO,GAEAnO,EAAA,GAAAA,CAAAmO,GACAnO,EAAA,GAAAA,CAAAmO,GACAnO,EAAA,GAAAA,CAAAmO,GACAnO,EAAA,GAAAA,CAAAmO,GACAnO,EAAA,GAAAA,CAAAmO,GACAnO,EAAA,GAAAA,CAAAmO,GACAnO,EAAA,GAAAA,CAAAmO,GACAnO,EAAA,GAAAA,CAAAmO,GACAnO,EAAA,GAAAA,CAAAmO,GACAnO,EAAA,GAAAA,CAAAmO,GACAnO,EAAA,GAAAA,CAAAmO,GACAnO,EAAA,GAAAA,CAAAmO,GACAnO,EAAA,GAAAA,CAAAmO,GACAnO,EAAA,GAAAA,CAAAmO,GACAnO,EAAA,GAAAA,CAAAmO,GACAnO,EAAA,GAAAA,CAAAmO,GACAnO,EAAA,GAAAA,CAAAmO,GACAnO,EAAA,GAAAA,CAAAmO,GACAnO,EAAA,GAAAA,CAAAmO,GACAnO,EAAA,GAAAA,CAAAmO,GACAnO,EAAA,GAAAA,CAAAmO,GACAnO,EAAA,GAAAA,CAAAmO,GACAnO,EAAA,GAAAA,CAAAmO,GAEAA,kBCxHAhO,EAAAD,QAAA,SAAAiO,GAEA,SAAA4mF,EAAAC,EAAAC,GAEA,IAAAC,EAAA/mF,EAAA2G,IAAAC,KAAA,QAGAsuB,GACA6xD,EAAA,IAAAF,EAAA,IAAAE,EACA,+EACAA,EAAA,IAAAD,EAAA,IAAAC,EACA,gFACAnsF,KAAA,IAEA8E,EAAA1I,OAAAyI,QAAAunF,MAAAhwF,OAAAyI,QAAAC,IAEAu+B,GAAA/I,GACAl1B,EAAA2G,IAAAC,OACAq3B,IAAA7+B,QAAA,mFAGAM,EAAA9K,MAAAoC,OAAAyI,QAAAw+B,GAGA,SAAAgpD,EAAAv9B,GACA,kBAEA,OADAk9B,EAAA,UAAAl9B,EAAA,SAAAA,GACA1pD,EAAA0pD,GAAA90D,MAAAoL,EAAAxK,YAOAwB,OAAAqoD,SACAroD,OAAAqoD,WAiBA,IAfA,IAAA6nC,GACA,UACA,QACA,UACA,WACA,MACA,OACA,QACA,UACA,OACA,UAGAC,KAEAl1F,EAAA,EAAeA,EAAAi1F,EAAAzyF,OAA0BxC,IAGzC+E,OAAAqoD,OAAA6nC,EAAAj1F,MACAk1F,EAAA5qF,KAAA2qF,EAAAj1F,IACAotD,OAAA6nC,EAAAj1F,IAAAg1F,EAAAC,EAAAj1F,KAIA+N,EAAAlK,YAAA,uBACA,QAAA7D,EAAA,EAAgBA,EAAAk1F,EAAA1yF,OAAuBxC,WACvC+E,OAAAqoD,OAAA8nC,EAAAl1F,IAEAk1F,EAAA,OAOAnwF,OAAAomD,gBACApmD,OAAAomD,cAAA,SAAAxH,GAEA,OADAgxC,EAAA,yDACA,IAAA5mF,EAAAo9C,cAAAxH,IAEA51C,EAAAlK,YAAA,uBACAkB,OAAAomD,cAAA,wFC9EA,IAAAgqC,EAAAv1F,EAAA,KACAw1F,EAAAx1F,EAAA,KAIAu1F,EADepwF,OAAegJ,MAAQqnF","file":"dhtmlxgantt.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/codebase/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 135);\n","var dateHelper = require(\"./date_helpers\");\n\nfunction copy(object) {\n\tvar i, t, result; // iterator, types array, result\n\n\tif (object && typeof object == \"object\") {\n\t\tresult = {};\n\t\tt = [Array,Number,String,Boolean];\n\t\tfor (i=0; i<t.length; i++) {\n\t\t\tif (object instanceof t[i])\n\t\t\t\tresult = i ? new t[i](object) : new t[i](); // first one is array\n\t\t}\n\n\t\tif (dateHelper.isDate(object)) {\n\t\t\tresult = new Date(object);\n\t\t}\n\n\t\tfor (i in object) {\n\t\t\tif (Object.prototype.hasOwnProperty.apply(object, [i]))\n\t\t\t\tresult[i] = copy(object[i]);\n\t\t}\n\t}\n\treturn result || object;\n}\n\nfunction mixin (target, source, force){\n\tfor (var f in source)\n\t\tif (((target[f] === undefined) || force)) target[f]=source[f];\n\treturn target;\n}\n\nfunction defined(obj) {\n\treturn typeof(obj) != \"undefined\";\n}\n\nvar seed;\nfunction uid() {\n\tif (!seed)\n\t\tseed = (new Date()).valueOf();\n\n\tseed++;\n\treturn seed;\n}\n\n//creates function with specified \"this\" pointer\nfunction bind(functor, object){\n\tif(functor.bind)\n\t\treturn functor.bind(object);\n\telse\n\t\treturn function(){ return functor.apply(object,arguments); };\n}\n\nfunction event(el, event, handler, capture){\n\tif (el.addEventListener)\n\t\tel.addEventListener(event, handler, capture === undefined ? false : capture);\n\n\telse if (el.attachEvent)\n\t\tel.attachEvent(\"on\"+event, handler);\n}\n\nfunction eventRemove(el, event, handler, capture){\n\tif (el.removeEventListener)\n\t\tel.removeEventListener(event, handler, capture === undefined ? false : capture);\n\n\telse if (el.detachEvent)\n\t\tel.detachEvent(\"on\"+event, handler);\n}\n\n\nmodule.exports = {\n\tcopy: copy,\n\tdefined: defined,\n\tmixin: mixin,\n\tuid: uid,\n\tbind: bind,\n\tevent: event,\n\teventRemove: eventRemove\n};","//returns position of html element on the page\nfunction elementPosition(elem) {\n\tvar top=0, left=0, right=0, bottom=0;\n\tif (elem.getBoundingClientRect) { //HTML5 method\n\t\tvar box = elem.getBoundingClientRect();\n\t\tvar body = document.body;\n\t\tvar docElem = (document.documentElement ||\n\t\t\tdocument.body.parentNode ||\n\t\t\tdocument.body);\n\n\t\tvar scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop;\n\t\tvar scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft;\n\t\tvar clientTop = docElem.clientTop || body.clientTop || 0;\n\t\tvar clientLeft = docElem.clientLeft || body.clientLeft || 0;\n\t\ttop  = box.top +  scrollTop - clientTop;\n\t\tleft = box.left + scrollLeft - clientLeft;\n\n\t\tright = document.body.offsetWidth - box.right;\n\t\tbottom = document.body.offsetHeight - box.bottom;\n\t} else { //fallback to naive approach\n\t\twhile(elem) {\n\t\t\ttop = top + parseInt(elem.offsetTop,10);\n\t\t\tleft = left + parseInt(elem.offsetLeft,10);\n\t\t\telem = elem.offsetParent;\n\t\t}\n\n\t\tright = document.body.offsetWidth - elem.offsetWidth - left;\n\t\tbottom = document.body.offsetHeight - elem.offsetHeight - top;\n\t}\n\treturn { y: Math.round(top), x: Math.round(left), width:elem.offsetWidth, height:elem.offsetHeight, right: Math.round(right), bottom: Math.round(bottom) };\n}\n\nfunction isVisible(node){\n\tvar display = false,\n\t\tvisibility = false;\n\tif(window.getComputedStyle){\n\t\tvar style = window.getComputedStyle(node, null);\n\t\tdisplay = style[\"display\"];\n\t\tvisibility = style[\"visibility\"];\n\t}else if(node.currentStyle){\n\t\tdisplay = node.currentStyle[\"display\"];\n\t\tvisibility = node.currentStyle[\"visibility\"];\n\t}\n\treturn (display != \"none\" && visibility != \"hidden\");\n}\n\nfunction hasNonNegativeTabIndex(node){\n\treturn !isNaN(node.getAttribute(\"tabindex\")) && (node.getAttribute(\"tabindex\")*1 >= 0);\n}\n\nfunction hasHref(node){\n\tvar canHaveHref = {\"a\": true, \"area\": true};\n\tif(canHaveHref[node.nodeName.loLowerCase()]){\n\t\treturn !!node.getAttribute(\"href\");\n\t}\n\treturn true;\n}\n\nfunction isEnabled(node){\n\tvar canDisable = {\"input\":true, \"select\":true, \"textarea\":true, \"button\":true, \"object\":true};\n\tif(canDisable[node.nodeName.toLowerCase()]){\n\t\treturn !node.hasAttribute(\"disabled\");\n\t}\n\n\treturn true;\n}\n\nfunction getFocusableNodes(root){\n\tvar nodes = root.querySelectorAll([\n\t\t\"a[href]\",\n\t\t\"area[href]\",\n\t\t\"input\",\n\t\t\"select\",\n\t\t\"textarea\",\n\t\t\"button\",\n\t\t\"iframe\",\n\t\t\"object\",\n\t\t\"embed\",\n\t\t\"[tabindex]\",\n\t\t\"[contenteditable]\"\n\t].join(\", \"));\n\n\tvar nodesArray = Array.prototype.slice.call(nodes, 0);\n\tfor(var i = 0; i < nodesArray.length; i++){\n\t\tvar node = nodesArray[i];\n\t\tvar isValid = (hasNonNegativeTabIndex(node)  || isEnabled(node) || hasHref(node)) && isVisible(node);\n\t\tif(!isValid){\n\t\t\tnodesArray.splice(i, 1);\n\t\t\ti--;\n\t\t}\n\t}\n\treturn nodesArray;\n}\n\nfunction getScrollSize(){\n\tvar div = document.createElement(\"div\");\n\tdiv.style.cssText=\"visibility:hidden;position:absolute;left:-1000px;width:100px;padding:0px;margin:0px;height:110px;min-height:100px;overflow-y:scroll;\";\n\n\tdocument.body.appendChild(div);\n\tvar width = div.offsetWidth-div.clientWidth;\n\tdocument.body.removeChild(div);\n\n\treturn width;\n}\n\nfunction getClassName(node){\n\tif(!node) return \"\";\n\n\tvar className = node.className || \"\";\n\tif(className.baseVal)//'className' exist but not a string - IE svg element in DOM\n\t\tclassName = className.baseVal;\n\n\tif(!className.indexOf)\n\t\tclassName = '';\n\n\treturn _trimString(className);\n}\n\nfunction addClassName(node, className){\n\tif (className && node.className.indexOf(className) === -1) {\n\t\tnode.className += \" \" + className;\n\t}\n}\n\nfunction removeClassName(node, name) {\n\tname = name.split(\" \");\n\tfor (var i = 0; i < name.length; i++) {\n\t\tvar regEx = new RegExp('\\\\s?\\\\b' + name[i] + '\\\\b(?![-_\\.])', \"\");\n\t\tnode.className = node.className.replace(regEx, \"\");\n\t}\n}\n\nfunction toNode(node) {\n\tif (typeof node === \"string\") {\n\t\treturn (document.getElementById(node) || document.querySelector(node) || document.body);\n\t}\n\treturn node || document.body;\n}\n\nvar _slave = document.createElement(\"div\");\nfunction insert(node, newone) {\n\t_slave.innerHTML = newone;\n\tvar child = _slave.firstChild;\n\tnode.appendChild(child);\n\treturn child;\n}\n\nfunction remove(node) {\n\tif (node && node.parentNode) {\n\t\tnode.parentNode.removeChild(node);\n\t}\n}\n\nfunction getChildren(node, css) {\n\tvar ch = node.childNodes;\n\tvar len = ch.length;\n\tvar out = [];\n\tfor (var i = 0; i < len; i++) {\n\t\tvar obj = ch[i];\n\t\tif (obj.className && obj.className.indexOf(css) !== -1) {\n\t\t\tout.push(obj);\n\t\t}\n\t}\n\treturn out;\n}\n\nfunction getTargetNode(e){\n\tvar trg;\n\tif (e.tagName)\n\t\ttrg = e;\n\telse {\n\t\te=e||window.event;\n\t\ttrg=e.target||e.srcElement;\n\t}\n\treturn trg;\n}\n\nfunction locateAttribute(e, attribute) {\n\tif(!attribute) return;\n\n\tvar trg = getTargetNode(e);\n\n\twhile (trg){\n\t\tif (trg.getAttribute){\t//text nodes has not getAttribute\n\t\t\tvar test = trg.getAttribute(attribute);\n\t\t\tif (test) return trg;\n\t\t}\n\t\ttrg=trg.parentNode;\n\t}\n\treturn null;\n}\n\nfunction _trimString(str){\n\tvar func = String.prototype.trim || function(){ return this.replace(/^\\s+|\\s+$/g, \"\"); };\n\treturn func.apply(str);\n}\n\nfunction locateClassName(e, classname, strict){\n\tif(strict === undefined)\n\t\tstrict = true;\n\n\tvar trg = getTargetNode(e);\n\tvar css = '';\n\tvar test = false;\n\twhile (trg){\n\t\tcss = getClassName(trg);\n\n\t\tif(css){\n\t\t\tvar ind = css.indexOf(classname);\n\t\t\tif (ind >= 0){\n\t\t\t\tif (!strict)\n\t\t\t\t\treturn trg;\n\n\t\t\t\t//check that we have exact match\n\t\t\t\tvar left = (ind === 0) || (!_trimString(css.charAt(ind - 1)));\n\t\t\t\tvar right = ((ind + classname.length >= css.length)) || (!_trimString(css.charAt(ind + classname.length)));\n\n\t\t\t\tif (left && right)\n\t\t\t\t\treturn trg;\n\t\t\t}\n\t\t}\n\n\t\ttrg=trg.parentNode;\n\t}\n\treturn null;\n}\n\n/*\nevent position relatively to DOM element\n */\nfunction getRelativeEventPosition(ev, node){\n\tif (ev.pageX || ev.pageY)\n\t\tvar pos = {x: ev.pageX, y: ev.pageY};\n\n\tvar d = document.documentElement;\n\tvar pos = {\n\t\tx: ev.clientX + d.scrollLeft - d.clientLeft,\n\t\ty: ev.clientY + d.scrollTop - d.clientTop\n\t};\n\n\tvar box = elementPosition(node);\n\tpos.x = pos.x - box.x + node.scrollLeft;\n\tpos.y = pos.y - box.y + node.scrollTop;\n\treturn pos;\n}\n\n\nfunction isChildOf(child, parent){\n\tif(!child || !parent){\n\t\treturn false;\n\t}\n\n\twhile(child && child != parent) {\n\t\tchild = child.parentNode;\n\t}\n\n\treturn child === parent;\n}\n\nmodule.exports = {\n\tgetNodePosition: elementPosition,\n\tgetFocusableNodes: getFocusableNodes,\n\tgetScrollSize: getScrollSize,\n\tgetClassName: getClassName,\n\taddClassName: addClassName,\n\tremoveClassName: removeClassName,\n\tinsertNode: insert,\n\tremoveNode: remove,\n\tgetChildNodes: getChildren,\n\ttoNode: toNode,\n\tlocateClassName:locateClassName,\n\tlocateAttribute: locateAttribute,\n\tgetTargetNode: getTargetNode,\n\tgetRelativeEventPosition: getRelativeEventPosition,\n\tisChildOf: isChildOf,\n};","module.exports = function (d, b) {\n\tfor (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\tfunction __() { this.constructor = d; }\n\td.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};","var EventHost = function(){\n\tthis._connected = [];\n\tthis._silent_mode = false;\n};\n\nEventHost.prototype = {\n\t_silentStart: function() {\n\t\tthis._silent_mode = true;\n\t},\n\t_silentEnd: function() {\n\t\tthis._silent_mode = false;\n\t}\n};\n\nvar\tcreateEventStorage = function(obj) {\n\tvar dhx_catch = [];\n\tvar z = function(){\n\t\tvar res = true;\n\t\tfor (var i = 0; i < dhx_catch.length; i++){\n\t\t\tif (dhx_catch[i]){\n\t\t\t\tvar zr = dhx_catch[i].apply(obj, arguments);\n\t\t\t\tres=res&&zr;\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t};\n\tz.addEvent=function(ev){\n\t\tif (typeof (ev) == \"function\")\n\t\t\treturn dhx_catch.push(ev)-1;\n\t\treturn false;\n\t};\n\tz.removeEvent=function(id){\n\t\tdhx_catch[id]=null;\n\t};\n\treturn z;\n};\n\nfunction makeEventable(obj){\n\n\tvar eventHost = new EventHost();\n\tobj.attachEvent=function(name, catcher, callObj){\n\t\tname='ev_'+name.toLowerCase();\n\t\tif (!eventHost[name])\n\t\t\teventHost[name] = createEventStorage(callObj||this);\n\n\t\treturn(name+':'+eventHost[name].addEvent(catcher)); //return ID (event name & event ID)\n\t};\n\tobj.attachAll = function(callback, callObj){\n\t\tthis.attachEvent('listen_all', callback, callObj);\n\t};\n\n\tobj.callEvent=function(name, arg0, callObj){\n\t\tif (eventHost._silent_mode) return true;\n\n\t\tvar handlerName = 'ev_'+name.toLowerCase();\n\n\t\tif (eventHost['ev_listen_all']){\n\t\t\teventHost['ev_listen_all'].apply(callObj || this, [name].concat(arg0));\n\t\t}\n\n\t\tif (eventHost[handlerName])\n\t\t\treturn eventHost[handlerName].apply(callObj || this, arg0);\n\t\treturn true;\n\t};\n\tobj.checkEvent=function(name){\n\t\treturn (!!eventHost['ev_'+name.toLowerCase()]);\n\t};\n\tobj.detachEvent=function(id){\n\t\tif (id){\n\t\t\tvar list = id.split(':');           //get EventName and ID\n\t\t\teventHost[list[0]].removeEvent(list[1]); //remove event\n\t\t}\n\t};\n\tobj.detachAllEvents = function(){\n\t\tfor (var name in eventHost){\n\t\t\tif (name.indexOf(\"ev_\") === 0)\n\t\t\t\tdelete eventHost[name];\n\t\t}\n\t};\n\n}\n\nmodule.exports = makeEventable;","function dummy() {\n\tconsole.log(\"Method is not implemented.\"); // jshint ignore:line\n}\nfunction BaseControl() {\n}\n\n// base methods will be runned in gantt context\nBaseControl.prototype.render = dummy; // arguments: sns\nBaseControl.prototype.set_value = dummy; // arguments: node, value, ev, sns(config)\nBaseControl.prototype.get_value = dummy; // arguments node, ev, sns(config)\nBaseControl.prototype.focus = dummy; // arguments: node\n\nmodule.exports = function(gantt) { // we could send current instance of gantt to module\n\treturn BaseControl;\n};","var units = {\n\t\"second\": 1,\n\t\"minute\": 60,\n\t\"hour\": 60 * 60,\n\t\"day\": 60 * 60 * 24,\n\t\"week\": 60 * 60 * 24 * 7,\n\t\"month\": 60 * 60 * 24 * 30,\n\t\"quarter\": 60 * 60 * 24 * 30 * 3,\n\t\"year\": 60 * 60 * 24 * 365\n};\nfunction getSecondsInUnit(unit){\n\treturn units[unit] || units.hour;\n}\n\nfunction forEach(arr, callback){\n\tif(arr.forEach){\n\t\tarr.forEach(callback);\n\t}else{\n\t\tvar workArray = arr.slice();\n\t\tfor(var i = 0; i < workArray.length; i++){\n\t\t\tcallback(workArray[i], i);\n\t\t}\n\t}\n}\n\nfunction arrayMap(arr, callback){\n\tif(arr.map){\n\t\treturn arr.map(callback);\n\t}else{\n\t\tvar workArray = arr.slice();\n\t\tvar resArray = [];\n\n\t\tfor(var i = 0; i < workArray.length; i++){\n\t\t\tresArray.push(callback(workArray[i], i));\n\t\t}\n\n\t\treturn resArray;\n\t}\n\n}\n\nmodule.exports = {\n\tgetSecondsInUnit: getSecondsInUnit,\n\tforEach: forEach,\n\tarrayMap: arrayMap\n};","var utils = require(\"../../../utils/utils\"),\n\tdomEventsScope = require(\"../../../utils/dom_event_scope\"),\n\teventable = require(\"../../../utils/eventable\"),\n\tdomHelpers = require(\"../../../utils/dom_helpers\");\n\nvar Cell = (function () {\n\t\"use strict\";\n\n\tfunction Cell(parent, config, factory, gantt) {\n\t\tif (parent) {\n\t\t\tthis.$container = domHelpers.toNode(parent);\n\t\t\tthis.$parent = parent;\n\t\t}\n\t\t// save config\n\t\tthis.$config = utils.mixin(config, {\n\t\t\theaderHeight: 33\n\t\t});\n\t\tthis.$gantt = gantt;\n\t\tthis.$domEvents = gantt._createDomEventScope();\n\t\t// set id\n\t\tthis.$id = config.id || \"c\" + utils.uid();\n\n\t\tthis.$name = \"cell\";\n\t\tthis.$factory = factory;\n\n\t\teventable(this);\n\n\t}\n\n\tCell.prototype.destructor = function () {\n\t\tthis.$parent = this.$container = this.$view = null;\n\t\tvar mouse = this.$gantt.$services.getService(\"mouseEvents\");\n\t\tmouse.detach(\"click\", \"gantt_header_arrow\", this._headerClickHandler);\n\t\tthis.$domEvents.detachAll();\n\t\tthis.callEvent(\"onDestroy\", []);\n\t\tthis.detachAllEvents();\n\t};\n\tCell.prototype.cell = function (id) {\n\t\treturn null;\n\t};\n\n\tCell.prototype.scrollTo = function(left, top){\n\n\t\tif (left*1 == left){\n\t\t\tthis.$view.scrollLeft = left;\n\t\t}\n\t\tif(top*1 == top){\n\t\t\tthis.$view.scrollTop = top;\n\t\t}\n\t};\n\n\tCell.prototype.clear = function(){\n\t\tthis.getNode().innerHTML = \"\";\n\t\tthis.getNode().className = \"gantt_layout_content\";\n\t\tthis.getNode().style.padding = \"0\";\n\t};\n\n\tCell.prototype.resize = function (final) {\n\t\tif (this.$parent) {\n\t\t\treturn this.$parent.resize(final);\n\t\t}\n\n\t\tif(final === false){\n\t\t\tthis.$preResize = true;\n\t\t}\n\n\t\tvar topCont = this.$container;\n\t\tvar x = topCont.offsetWidth;\n\t\tvar y = topCont.offsetHeight;\n\t\tvar topSize = this.getSize();\n\t\tif (topCont === document.body) {\n\t\t\tx = document.body.offsetWidth;\n\t\t\ty = document.body.offsetHeight;\n\t\t}\n\t\tif (x < topSize.minWidth) {\n\t\t\tx = topSize.minWidth;\n\t\t}\n\t\tif (x > topSize.maxWidth) {\n\t\t\tx = topSize.maxWidth;\n\t\t}\n\t\tif (y < topSize.minHeight) {\n\t\t\ty = topSize.minHeight;\n\t\t}\n\t\tif (y > topSize.maxHeight) {\n\t\t\ty = topSize.maxHeight;\n\t\t}\n\t\tthis.setSize(x, y);\n\n\t\tvar self = this;\n\n\t\tif(!this.$preResize){\n\t\t//\tself.callEvent(\"onResize\", [x, y]);\n\t\t}\n\t\tthis.$preResize = false;\n\t};\n\n\tCell.prototype.hide = function () {\n\t\tthis._hide(true);\n\t\tthis.resize();\n\t};\n\tCell.prototype.show = function (force) {\n\t\tthis._hide(false);\n\t\tif (force && this.$parent) {\n\t\t\tthis.$parent.show();\n\t\t}\n\t\tthis.resize();\n\t};\n\tCell.prototype._hide = function (mode) {\n\t\tif (mode === true && this.$view.parentNode) {\n\t\t\tthis.$view.parentNode.removeChild(this.$view);\n\t\t}\n\t\telse if (mode === false && !this.$view.parentNode) {\n\t\t\tvar index = this.$parent.cellIndex(this.$id);\n\t\t\tthis.$parent.moveView(this, index);\n\t\t}\n\t\tthis.$config.hidden = mode;\n\t};\n\tCell.prototype.$toHTML = function (content, css) {\n\t\tif (content === void 0) { content = \"\"; }\n\t\tcss = [(css || \"\"), (this.$config.css || \"\")].join(\" \");\n\t\tvar obj = this.$config;\n\t\tvar header = \"\";\n\t\tif (obj.raw) {\n\t\t\tcontent = typeof obj.raw === \"string\" ? obj.raw : \"\";\n\t\t}\n\t\telse {\n\t\t\tif (!content) {\n\t\t\t\tcontent = \"<div class='gantt_layout_content' \"+(css ? \" class='\"+css+\"' \" : \"\")+\" >\" + (obj.html || \"\") + \"</div>\";\n\t\t\t}\n\t\t\tif (obj.header) {\n\t\t\t\tvar collapseIcon = obj.canCollapse ? \"<div class='gantt_layout_header_arrow'></div>\" : \"\";\n\t\t\t\theader = \"<div class='gantt_layout_header'>\" + collapseIcon + \"<div class='gantt_layout_header_content'>\" + obj.header + \"</div></div>\";\n\t\t\t}\n\t\t}\n\t\treturn \"<div class='gantt_layout_cell \" + css + \"' data-cell-id='\" + this.$id + \"'>\" + header + content + \"</div>\";\n\t};\n\tCell.prototype.$fill = function (node, parent) {\n\t\tthis.$view = node;\n\t\tthis.$parent = parent;\n\t\tthis.init();\n\t};\n\tCell.prototype.getNode = function () {\n\t\treturn (this.$view.querySelector(\"gantt_layout_cell\") || this.$view);\n\t};\n\tCell.prototype.init = function () {\n\t\t// [NOT-GOOD] code is executed for each component, while it still has only one handler, it is no good\n\n\t\tvar self = this;\n\n\t\tthis._headerClickHandler = function(e){\n\t\t\tvar cellId = domHelpers.locateAttribute(e, \"data-cell-id\");\n\t\t\tif(cellId == self.$id){\n\t\t\t\tself.toggle();\n\t\t\t}\n\t\t};\n\n\t\tvar mouse = this.$gantt.$services.getService(\"mouseEvents\");\n\t\tmouse.delegate(\"click\", \"gantt_header_arrow\", this._headerClickHandler);\n\n\t\tthis.callEvent(\"onReady\", []);\n\t};\n\tCell.prototype.toggle = function () {\n\t\tthis.$config.collapsed = !this.$config.collapsed;\n\t\tthis.resize();\n\t};\n\tCell.prototype.getSize = function () {\n\t\tvar size = {\n\t\t\theight: this.$config.height || 0,\n\t\t\twidth: this.$config.width || 0,\n\t\t\tgravity: this.$config.gravity || 1,\n\t\t\tminHeight: this.$config.minHeight || 0,\n\t\t\tminWidth: this.$config.minWidth || 0,\n\t\t\tmaxHeight: this.$config.maxHeight || 100000,\n\t\t\tmaxWidth: this.$config.maxWidth || 100000\n\t\t};\n\t\tif (this.$config.collapsed) {\n\t\t\tvar mode = this.$config.mode === \"x\";\n\t\t\tsize[mode ? \"width\" : \"height\"] = size[mode ? \"maxWidth\" : \"maxHeight\"] = this.$config.headerHeight;\n\t\t}\n\t\treturn size;\n\t};\n\n\tCell.prototype.getContentSize = function(){\n\n\t\tvar width = this.$lastSize.contentX;\n\t\tif(width !== width*1){\n\t\t\twidth = this.$lastSize.width;\n\t\t}\n\n\t\tvar height = this.$lastSize.contentY;\n\t\tif(height !== height*1){\n\t\t\theight = this.$lastSize.height;\n\t\t}\n\n\t\treturn {\n\t\t\twidth: width,\n\t\t\theight: height\n\t\t};\n\t};\n\n\tCell.prototype._getBorderSizes = function(){\n\t\tvar borders = {\n\t\t\ttop: 0,\n\t\t\tright: 0,\n\t\t\tbottom: 0,\n\t\t\tleft: 0,\n\t\t\thorizontal: 0,\n\t\t\tvertical: 0\n\t\t};\n\t\tif(this._currentBorders){\n\t\t\tif(this._currentBorders[this._borders.left]){\n\t\t\t\tborders.left = 1;\n\t\t\t\tborders.horizontal++;\n\t\t\t}\n\n\t\t\tif(this._currentBorders[this._borders.right]){\n\t\t\t\tborders.right = 1;\n\t\t\t\tborders.horizontal++;\n\t\t\t}\n\n\t\t\tif(this._currentBorders[this._borders.top]){\n\t\t\t\tborders.top = 1;\n\t\t\t\tborders.vertical++;\n\t\t\t}\n\n\t\t\tif(this._currentBorders[this._borders.bottom]){\n\t\t\t\tborders.bottom = 1;\n\t\t\t\tborders.vertical++;\n\t\t\t}\n\t\t}\n\n\t\treturn borders;\n\n\t};\n\n\tCell.prototype.setSize = function (x, y) {\n\t\tthis.$view.style.width = x + \"px\";\n\t\tthis.$view.style.height = y + \"px\";\n\n\t\tvar borders = this._getBorderSizes();\n\t\tvar contentY = y - borders.vertical;\n\t\tvar contentX = x - borders.horizontal;\n\n\t\tthis.$lastSize = { x: x, y: y, contentX: contentX, contentY: contentY };\n\t\tif (this.$config.header) {\n\t\t\tthis._sizeHeader();\n\t\t}else{\n\t\t\tthis._sizeContent();\n\t\t}\n\t};\n\n\tCell.prototype._borders = {\n\t\t\"left\":\"gantt_layout_cell_border_left\",\n\t\t\"right\":\"gantt_layout_cell_border_right\",\n\t\t\"top\":\"gantt_layout_cell_border_top\",\n\t\t\"bottom\":\"gantt_layout_cell_border_bottom\"\n\t};\n\n\tCell.prototype._setBorders = function(css, view){\n\t\tif(!view) {\n\t\t\tview = this;\n\t\t}\n\t\tvar node = view.$view;\n\n\t\tfor( var i in this._borders){\n\t\t\tdomHelpers.removeClassName(node, this._borders[i]);\n\t\t}\n\n\t\tif(typeof css == \"string\"){\n\t\t\tcss = [css];\n\t\t}\n\n\t\tvar cssHash = {};\n\n\t\tfor(var i = 0; i < css.length; i++){\n\t\t\tdomHelpers.addClassName(node, css[i]);\n\t\t\tcssHash[css[i]] = true;\n\t\t}\n\n\t\tview._currentBorders = cssHash;\n\t};\n\n\n\tCell.prototype._sizeContent = function(){\n\t\tvar content = this.$view.childNodes[0];\n\t\tif(content && content.className == \"gantt_layout_content\"){\n\t\t\tcontent.style.height = this.$lastSize.contentY + \"px\";\n\t\t}\n\t};\n\n\tCell.prototype._sizeHeader = function () {\n\t\tvar size = this.$lastSize;\n\t\tsize.contentY -= this.$config.headerHeight;\n\t\tvar header = this.$view.childNodes[0];\n\t\tvar content = this.$view.childNodes[1];\n\t\tvar xLayout = this.$config.mode === \"x\";\n\t\tif (this.$config.collapsed) {\n\t\t\tcontent.style.display = \"none\";\n\t\t\tif (xLayout) {\n\t\t\t\theader.className = \"gantt_layout_header collapsed_x\";\n\t\t\t\theader.style.width = size.y + \"px\";\n\t\t\t\tvar d = Math.floor(size.y / 2 - size.x / 2);\n\t\t\t\theader.style.transform = \"rotate(90deg) translate(\" + d + \"px, \" + d + \"px)\";\n\t\t\t\tcontent.style.display = \"none\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\theader.className = \"gantt_layout_header collapsed_y\";\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (xLayout) {\n\t\t\t\theader.className = \"gantt_layout_header\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\theader.className = \"gantt_layout_header vertical\";\n\t\t\t}\n\t\t\theader.style.width = 'auto';\n\t\t\theader.style.transform = '';\n\t\t\tcontent.style.display = \"\";\n\t\t\tcontent.style.height = size.contentY + \"px\";\n\t\t}\n\t\theader.style.height = this.$config.headerHeight + \"px\";\n\t};\n\treturn Cell;\n}());\n\nmodule.exports = Cell;\n","function isDate(obj) {\n\tif (obj && typeof obj == \"object\") {\n\t\treturn !!(obj.getFullYear && obj.getMonth && obj.getDate);\n\t} else {\n\t\treturn false;\n\t}\n}\n\nmodule.exports = {\n\tisDate: isDate\n};","module.exports = function (gantt) {\n\n\tvar BaseEditor = function () {\n\t};\n\n\tBaseEditor.prototype = {\n\t\tshow: function (id, column, config, placeholder) {\n\t\t},\n\t\thide: function () {\n\t\t},\n\t\tset_value: function (value, id, column, node) {\n\t\t\tthis.get_input(node).value = value;\n\t\t},\n\t\tget_value: function (id, column, node) {\n\t\t\treturn this.get_input(node).value || \"\";\n\t\t},\n\t\tis_changed: function (value, id, column, node) {\n\t\t\tvar currentValue = this.get_value(id, column, node);\n\t\t\tif (currentValue && value && currentValue.valueOf && value.valueOf) {\n\t\t\t\treturn currentValue.valueOf() != value.valueOf();\n\t\t\t} else {\n\t\t\t\treturn currentValue != value;\n\t\t\t}\n\t\t},\n\t\tis_valid: function (value, id, column, node) {\n\t\t\treturn true;\n\t\t},\n\n\t\tsave: function (id, column, node) {\n\n\t\t},\n\t\tget_input: function (node) {\n\t\t\treturn node.querySelector(\"input\");\n\t\t},\n\t\tfocus: function (node) {\n\t\t\tvar input = this.get_input(node);\n\t\t\tif (!input) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (input.focus) {\n\t\t\t\tinput.focus();\n\t\t\t}\n\n\t\t\tif (input.select) {\n\t\t\t\tinput.select();\n\t\t\t}\n\t\t}\n\t};\n\treturn BaseEditor;\n};","var env = {\n\tisIE: (navigator.userAgent.indexOf(\"MSIE\") >= 0 || navigator.userAgent.indexOf(\"Trident\") >= 0),\n\tisIE6: (!window.XMLHttpRequest && navigator.userAgent.indexOf(\"MSIE\") >= 0),\n\tisIE7: (navigator.userAgent.indexOf(\"MSIE 7.0\") >= 0 && navigator.userAgent.indexOf(\"Trident\") < 0),\n\tisIE8: (navigator.userAgent.indexOf(\"MSIE 8.0\") >= 0 && navigator.userAgent.indexOf(\"Trident\") >= 0),\n\tisOpera: (navigator.userAgent.indexOf(\"Opera\") >= 0),\n\tisChrome: (navigator.userAgent.indexOf(\"Chrome\") >= 0),\n\tisKHTML: (navigator.userAgent.indexOf(\"Safari\") >= 0 || navigator.userAgent.indexOf(\"Konqueror\") >= 0),\n\tisFF: (navigator.userAgent.indexOf(\"Firefox\") >= 0),\n\tisIPad: (navigator.userAgent.search(/iPad/gi) >= 0),\n\tisEdge: (navigator.userAgent.indexOf(\"Edge\")!=-1)\n};\n\nmodule.exports = env;","var __extends = require(\"../../../utils/extends\");\n\nmodule.exports = function(gantt) {\n\tvar _super = require(\"./base_control\")(gantt);\n\n\tfunction SelectControl() {\n\t\tvar self = _super.apply(this, arguments) || this;\n\t\n\t\treturn self; \n\t}\n\t\n\t__extends(SelectControl, _super);\n\t\n\tSelectControl.prototype.render = function(sns) {\n\t\tvar height = (sns.height || \"23\") + \"px\";\n\t\tvar html = \"<div class='gantt_cal_ltext' style='height:\" + height + \";'><select style='width:100%;'>\";\n\t\tvar i;\n\t\n\t\tif (sns.options && sns.options.length) {\n\t\t\tfor (i = 0; i < sns.options.length; i++) {\n\t\t\t\thtml += \"<option value='\" + sns.options[i].key + \"'>\" + sns.options[i].label + \"</option>\";\n\t\t\t}\n\t\t}\n\t\n\t\thtml += \"</select></div>\";\n\t\treturn html;\n\t};\n\t\n\tSelectControl.prototype.set_value = function(node, value, ev, sns) {\n\t\tvar select = node.firstChild;\n\t\tif (!select._dhx_onchange && sns.onchange) {\n\t\t\tselect.onchange = sns.onchange;\n\t\t\tselect._dhx_onchange = true;\n\t\t}\n\t\tif (typeof value === \"undefined\")\n\t\t\tvalue = (select.options[0] || {}).value;\n\t\tselect.value = value || \"\";\n\t};\n\t\n\tSelectControl.prototype.get_value = function(node) {\n\t\treturn node.firstChild.value;\n\t};\n\t\n\tSelectControl.prototype.focus = function(node) {\n\t\tvar a = node.firstChild;\n\t\tgantt._focus(a, true);\n\t};\n\t\n\treturn SelectControl;\n};","function create(gantt){\n\tvar events = [];\n\n\treturn {\n\t\tdelegate:function(event, className, handler, root) {\n\t\t\tevents.push([event, className, handler, root]);\n\n\t\t\tvar helper = gantt.$services.getService(\"mouseEvents\");\n\t\t\thelper.delegate(event, className, handler, root);\n\t\t},\n\t\tdestructor: function(){\n\t\t\tvar mouseEvents = gantt.$services.getService(\"mouseEvents\");\n\t\t\tfor(var i = 0; i < events.length; i++){\n\t\t\t\tvar h = events[i];\n\t\t\t\tmouseEvents.detach(h[0], h[1], h[2], h[3]);\n\t\t\t}\n\t\t\tevents = [];\n\t\t}\n\t};\n}\n\nmodule.exports = create;","var getKeyboardMapping = require(\"./keyboard_mappings\");\nvar textEditorFactory = require(\"./editors/text\"),\n\tnumberEditorFactory = require(\"./editors/number\"),\n\tselectEditorFactory = require(\"./editors/select\"),\n\tdateEditorFactory = require(\"./editors/date\"),\n\tpredecessorEditorFactory = require(\"./editors/predecessor\");\nvar utils = require(\"../../../../utils/utils\");\nvar domHelpers = require(\"../../../../utils/dom_helpers\");\nvar eventable = require(\"../../../../utils/eventable\");\n\nfunction initConfigs(gantt){\n\tgantt.config.editor_types = {\n\t\ttext: new (textEditorFactory(gantt))(),\n\t\tnumber: new (numberEditorFactory(gantt))(),\n\t\tselect: new (selectEditorFactory(gantt))(),\n\t\tdate: new (dateEditorFactory(gantt))(),\n\t\tpredecessor: new (predecessorEditorFactory(gantt))()\n\t};\n}\n\nfunction create(gantt){\n\tvar keyboardMapping = getKeyboardMapping();\n\n\tvar eventBus = {};\n\teventable(eventBus);\n\n\tfunction createGridEditors(grid) {\n\n\t\tfunction _getGridCellFromNode(node){\n\t\t\tvar row = domHelpers.locateAttribute(node, grid.$config.item_attribute);\n\t\t\tvar cell = domHelpers.locateAttribute(node, \"data-column-name\");\n\t\t\tif(cell){\n\t\t\t\tvar columnName = cell.getAttribute(\"data-column-name\");\n\t\t\t\tvar id = row.getAttribute(grid.$config.item_attribute);\n\t\t\t\treturn {\n\t\t\t\t\tid: id,\n\t\t\t\t\tcolumnName: columnName\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn null;\n\n\t\t}\n\n\t\tfunction _getEditorPosition(itemId, columnName) {\n\t\t\tvar top = grid.getItemTop(itemId);\n\t\t\tvar height = grid.getItemHeight(itemId);\n\t\t\tvar cols = grid.getGridColumns();\n\t\t\tvar left = 0,\n\t\t\t\twidth = 0;\n\n\t\t\tfor (var i = 0; i < cols.length; i++) {\n\t\t\t\tif (cols[i].name == columnName) {\n\t\t\t\t\twidth = cols[i].width;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tleft += cols[i].width;\n\t\t\t}\n\t\t\treturn {\n\t\t\t\ttop: top,\n\t\t\t\tleft: left,\n\t\t\t\theight: height,\n\t\t\t\twidth: width\n\t\t\t};\n\t\t}\n\t\tfunction _createPlaceholder(itemId, columnName) {\n\t\t\tvar pos = _getEditorPosition(itemId, columnName);\n\t\t\tvar el = document.createElement(\"div\");\n\t\t\tel.className = \"gantt_grid_editor_placeholder\";\n\t\t\tel.setAttribute(grid.$config.item_attribute, itemId);\n\t\t\tel.setAttribute(\"data-column-name\", columnName);\n\t\t\tel.setAttribute(\"data-column-index\", grid.getColumnIndex(columnName));\n\n\t\t\tel.style.cssText = [\n\t\t\t\t\"top:\" + pos.top + \"px\",\n\t\t\t\t\"left:\" + pos.left + \"px\",\n\t\t\t\t\"width:\" + pos.width + \"px\",\n\t\t\t\t\"height:\" + pos.height + \"px\"\n\t\t\t].join(\";\");\n\n\t\t\treturn el;\n\t\t}\n\n\n\t\tvar handlers = [];\n\t\tvar store = null;\n\t\tvar controller = {\n\t\t\t_itemId: null,\n\t\t\t_columnName: null,\n\t\t\t_editor: null,\n\t\t\t_editorType: null,\n\t\t\t_placeholder: null,\n\n\t\t\tlocateCell: _getGridCellFromNode,\n\t\t\tgetEditorConfig: function (columnName) {\n\t\t\t\tvar column = grid.getColumn(columnName);\n\t\t\t\treturn column.editor;\n\t\t\t},\n\n\t\t\tinit: function () {\n\t\t\t\tvar mapping = keyboardMapping.getMapping();\n\t\t\t\tif(mapping.init){\n\t\t\t\t\tmapping.init(this, grid);\n\t\t\t\t}\n\n\t\t\t\tstore = grid.$gantt.getDatastore(grid.$config.bind);\n\n\t\t\t\tvar self = this;\n\n\t\t\t\thandlers.push(store.attachEvent(\"onIdChange\", function(oldId, newId){\n\t\t\t\t\tif(self._itemId == oldId){\n\t\t\t\t\t\tself._itemId = newId;\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t\thandlers.push(store.attachEvent(\"onStoreUpdated\", function(){\n\t\t\t\t\tif(grid.$gantt.getState(\"batchUpdate\").batch_update){\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif(self.isVisible() && !store.isVisible(self._itemId)){\n\t\t\t\t\t\tself.hide();\n\t\t\t\t\t}\n\t\t\t\t}));\n\n\t\t\t\tthis.init = function(){};\n\t\t\t},\n\n\t\t\tgetState: function(){\n\t\t\t\treturn {\n\t\t\t\t\teditor: this._editor,\n\t\t\t\t\teditorType: this._editorType,\n\t\t\t\t\tplaceholder: this._placeholder,\n\t\t\t\t\tid: this._itemId,\n\t\t\t\t\tcolumnName: this._columnName\n\t\t\t\t};\n\t\t\t},\n\n\t\t\tstartEdit: function(itemId, columnName) {\n\t\t\t\tif (this.isVisible()) {\n\t\t\t\t\tthis.save();\n\t\t\t\t}\n\n\t\t\t\tif(!store.exists(itemId)){\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar editorState = {id: itemId, columnName: columnName};\n\t\t\t\tif(this.callEvent(\"onBeforeEditStart\", [editorState]) === false){\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.show(editorState.id, editorState.columnName);\n\t\t\t\tthis.setValue();\n\n\t\t\t\tthis.callEvent(\"onEditStart\", [editorState]);\n\t\t\t},\n\t\t\tisVisible: function(){\n\t\t\t\treturn !!(this._editor && domHelpers.isChildOf(this._placeholder, document.body));\n\t\t\t},\n\t\t\tshow: function (itemId, columnName) {\n\t\t\t\tif (this.isVisible()) {\n\t\t\t\t\tthis.save();\n\t\t\t\t}\n\t\t\t\tvar editorState = {id: itemId, columnName: columnName};\n\n\t\t\t\tvar column = grid.getColumn(editorState.columnName);\n\t\t\t\tvar editorConfig = this.getEditorConfig(column.name);\n\t\t\t\tif(!editorConfig)\n\t\t\t\t\treturn;\n\n\t\t\t\tvar editor = grid.$getConfig().editor_types[editorConfig.type];\n\n\t\t\t\tvar placeholder = _createPlaceholder(editorState.id, editorState.columnName);\n\t\t\t\tgrid.$grid_data.appendChild(placeholder);\n\t\t\t\teditor.show(editorState.id, column, editorConfig, placeholder);\n\t\t\t\tthis._editor = editor;\n\t\t\t\tthis._placeholder = placeholder;\n\t\t\t\tthis._itemId = editorState.id;\n\t\t\t\tthis._columnName = editorState.columnName;\n\t\t\t\tthis._editorType = editorConfig.type;\n\n\t\t\t\tvar mapping = keyboardMapping.getMapping();\n\t\t\t\tif(mapping.onShow){\n\t\t\t\t\tmapping.onShow(this, placeholder, grid);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tsetValue: function () {\n\t\t\t\tvar state = this.getState();\n\t\t\t\tvar itemId = state.id,\n\t\t\t\t\tcolumnName = state.columnName;\n\n\t\t\t\tvar column = grid.getColumn(columnName);\n\t\t\t\tvar item = store.getItem(itemId);\n\t\t\t\tvar editorConfig = this.getEditorConfig(columnName);\n\n\t\t\t\tif(!editorConfig)\n\t\t\t\t\treturn;\n\n\t\t\t\tvar value = item[editorConfig.map_to];\n\t\t\t\tif(editorConfig.map_to == \"auto\"){\n\t\t\t\t\tvalue = store.getItem(itemId);\n\t\t\t\t}\n\n\t\t\t\tthis._editor.set_value(value, itemId, column, this._placeholder);\n\t\t\t\tthis.focus();\n\t\t\t},\n\n\t\t\tfocus: function(){\n\t\t\t\tthis._editor.focus(this._placeholder);\n\t\t\t},\n\n\t\t\tgetValue: function () {\n\t\t\t\tvar column = grid.getColumn(this._columnName);\n\t\t\t\treturn this._editor.get_value(this._itemId, column, this._placeholder);\n\t\t\t},\n\n\t\t\t_getItemValue: function() {\n\t\t\t\tvar editorConfig = this.getEditorConfig(this._columnName);\n\n\t\t\t\tif(!editorConfig)\n\t\t\t\t\treturn;\n\n\t\t\t\tvar item = gantt.getTask(this._itemId);\n\t\t\t\tvar value = item[editorConfig.map_to];\n\t\t\t\tif(editorConfig.map_to == \"auto\"){\n\t\t\t\t\tvalue = store.getItem(this._itemId);\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t},\n\n\t\t\tisChanged: function(){\n\n\t\t\t\tvar column = grid.getColumn(this._columnName);\n\n\t\t\t\tvar value = this._getItemValue();\n\n\t\t\t\treturn this._editor.is_changed(value, this._itemId, column, this._placeholder);\n\t\t\t},\n\n\t\t\thide: function () {\n\t\t\t\tif(!this._itemId)\n\t\t\t\t\treturn;\n\n\t\t\t\tvar itemId = this._itemId,\n\t\t\t\t\tcolumnName = this._columnName;\n\n\t\t\t\tvar mapping = keyboardMapping.getMapping();\n\t\t\t\tif(mapping.onHide){\n\t\t\t\t\tmapping.onHide(this, this._placeholder, grid);\n\t\t\t\t}\n\n\t\t\t\tthis._itemId = null;\n\t\t\t\tthis._columnName = null;\n\t\t\t\tthis._editorType = null;\n\t\t\t\tif (!this._placeholder) return;\n\n\t\t\t\tif (this._editor) {\n\t\t\t\t\tthis._editor.hide(this._placeholder);\n\t\t\t\t}\n\t\t\t\tthis._editor = null;\n\t\t\t\tif (this._placeholder.parentNode) {\n\t\t\t\t\tthis._placeholder.parentNode.removeChild(this._placeholder);\n\t\t\t\t}\n\t\t\t\tthis._placeholder = null;\n\n\t\t\t\tthis.callEvent(\"onEditEnd\", [{id: itemId, columnName: columnName}]);\n\t\t\t},\n\t\t\tsave: function () {\n\t\t\t\tif(!(this.isVisible() && store.exists(this._itemId) && this.isChanged())) {\n\t\t\t\t\tthis.hide();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar itemId = this._itemId,\n\t\t\t\t\tcolumnName = this._columnName;\n\n\t\t\t\tif(!store.exists(itemId)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar item = store.getItem(itemId);\n\t\t\t\tvar editorConfig = this.getEditorConfig(columnName);\n\t\t\t\tvar editorState = {\n\t\t\t\t\tid: itemId,\n\t\t\t\t\tcolumnName: columnName,\n\t\t\t\t\tnewValue: this.getValue(),\n\t\t\t\t\toldValue: this._getItemValue()\n\t\t\t\t};\n\t\t\t\tif(this.callEvent(\"onBeforeSave\", [editorState]) !== false) {\n\t\t\t\t\tif(this._editor.is_valid(editorState.newValue, editorState.id, editorState.columnName, this._placeholder)){\n\n\t\t\t\t\t\tvar value = editorState.newValue;\n\t\t\t\t\t\tif (editorConfig.map_to != \"auto\") {\n\t\t\t\t\t\t\titem[columnName] = value;\n\t\t\t\t\t\t\tif (columnName == \"duration\") {\n\t\t\t\t\t\t\t\titem.end_date = gantt.calculateEndDate(item);\n\t\t\t\t\t\t\t} else if (columnName == \"end_date\") {\n\t\t\t\t\t\t\t\titem.start_date = gantt.calculateEndDate({\n\t\t\t\t\t\t\t\t\tstart_date: item.end_date,\n\t\t\t\t\t\t\t\t\tduration: -item.duration,\n\t\t\t\t\t\t\t\t\ttask: item}\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else if (columnName == \"start_date\") {\n\t\t\t\t\t\t\t\titem.end_date = gantt.calculateEndDate(item);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tstore.updateItem(itemId);\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tthis._editor.save(itemId, grid.getColumn(columnName), this._placeholder);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.callEvent(\"onSave\", [editorState]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.hide();\n\t\t\t},\n\n\t\t\t_findEditableCell: function findEditableCell(start, direction){\n\t\t\t\tvar nextIndex = start;\n\t\t\t\tvar columns = grid.getGridColumns();\n\t\t\t\tvar nextColumn = columns[nextIndex];\n\n\t\t\t\tvar columnName = nextColumn ? nextColumn.name : null;\n\t\t\t\tif(columnName){\n\t\t\t\t\twhile(columnName && !this.getEditorConfig(columnName)){\n\t\t\t\t\t\tcolumnName = this._findEditableCell(start + direction, direction);\n\t\t\t\t\t}\n\t\t\t\t\treturn columnName;\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t},\n\n\t\t\tgetNextCell: function moveCell(dir){\n\t\t\t\treturn this._findEditableCell(grid.getColumnIndex(this._columnName) + dir, dir);\n\t\t\t},\n\n\t\t\tgetFirstCell: function getFirstCell(){\n\t\t\t\treturn this._findEditableCell(0, 1);\n\t\t\t},\n\n\t\t\tgetLastCell: function getLastCell(){\n\t\t\t\treturn this._findEditableCell(grid.getGridColumns().length - 1, -1);\n\t\t\t},\n\n\t\t\teditNextCell: function nextCell(canChangeRow){\n\t\t\t\tvar cell = this.getNextCell(1);\n\t\t\t\tif(cell){\n\t\t\t\t\tvar nextColumn = this.getNextCell(1);\n\t\t\t\t\tif(nextColumn && this.getEditorConfig(nextColumn)){\n\t\t\t\t\t\tthis.startEdit(this._itemId, nextColumn);\n\t\t\t\t\t}\n\t\t\t\t}else if(canChangeRow && this.moveRow(1)){\n\t\t\t\t\tvar task = this.moveRow(1);\n\t\t\t\t\tcell = this.getFirstCell();\n\t\t\t\t\tif(cell && this.getEditorConfig(cell)){\n\t\t\t\t\t\tthis.startEdit(task, cell);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\teditPrevCell: function prevCell(canChangeRow){\n\t\t\t\tvar cell = this.getNextCell(-1);\n\t\t\t\tif(cell){\n\t\t\t\t\tvar nextColumn = this.getNextCell(-1);\n\t\t\t\t\tif(nextColumn && this.getEditorConfig(nextColumn)){\n\t\t\t\t\t\tthis.startEdit(this._itemId, nextColumn);\n\t\t\t\t\t}\n\t\t\t\t}else if(canChangeRow && this.moveRow(-1)){\n\t\t\t\t\tvar task = this.moveRow(-1);\n\t\t\t\t\tcell = this.getLastCell();\n\t\t\t\t\tif(cell && this.getEditorConfig(cell)){\n\t\t\t\t\t\tthis.startEdit(task, cell);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tmoveRow: function moveRow(dir){\n\t\t\t\tif(dir > 0){\n\t\t\t\t\treturn gantt.getNext(this._itemId);\n\t\t\t\t}else {\n\t\t\t\t\treturn  gantt.getPrev(this._itemId);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\teditNextRow: function nextRow(){\n\t\t\t\tvar row = this.getNextCell(1);\n\t\t\t\tif(row){\n\t\t\t\t\tthis.startEdit(row, this._columnName);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\teditPrevRow: function prevRow(){\n\t\t\t\tvar row = this.getNextCell(-1);\n\t\t\t\tif(row){\n\t\t\t\t\tthis.startEdit(row, this._columnName);\n\t\t\t\t}\n\t\t\t},\n\t\t\tdestructor: function(){\n\t\t\t\thandlers.forEach(function(handlerId){\n\t\t\t\t\tstore.detachEvent(handlerId);\n\t\t\t\t});\n\t\t\t\tstore = null;\n\t\t\t\tthis.hide();\n\t\t\t\tthis.detachAllEvents();\n\t\t\t}\n\t\t};\n\n\t\tutils.mixin(controller, keyboardMapping);\n\t\tutils.mixin(controller, eventBus);\n\n\t\treturn controller;\n\t}\n\n\n\tvar inlineEditController = {\n\t\tinit: initConfigs,\n\t\tcreateEditors: createGridEditors\n\t};\n\n\tutils.mixin(inlineEditController, keyboardMapping);\n\tutils.mixin(inlineEditController, eventBus);\n\n\treturn inlineEditController;\n}\n\nmodule.exports = create;","var domHelpers = require(\"../../../utils/dom_helpers\"),\n\tutils = require(\"../../../utils/utils\"),\n\teventable = require(\"../../../utils/eventable\"),\n\tgridResize = require(\"./grid_resize\"),\n\teditors = require(\"./editors/controller\");\n\nvar Grid = function(parent, config, factory, gantt){\n\tthis.$config = utils.mixin({}, config || {});\n\tthis.$gantt = gantt;\n\tthis.$parent = parent;\n\teventable(this);\n\tthis.$state = {};\n};\n\n\nGrid.prototype = {\n\tinit: function(container){\n\t\tvar gantt = this.$gantt;\n\t\tvar gridAriaAttr = gantt._waiAria.gridAttrString();\n\t\tvar gridDataAriaAttr = gantt._waiAria.gridDataAttrString();\n\n\n\t\tcontainer.innerHTML = \"<div class='gantt_grid' style='height:inherit;width:inherit;' \"+gridAriaAttr+\"></div>\";\n\t\tthis.$grid = container.childNodes[0];\n\n\t\tthis.$grid.innerHTML = \"<div class='gantt_grid_scale' \"+\n\t\t\tgantt._waiAria.gridScaleRowAttrString()+\"></div><div class='gantt_grid_data' \"+gridDataAriaAttr+\"></div>\";\n\n\t\tthis.$grid_scale = this.$grid.childNodes[0];\n\t\tthis.$grid_data = this.$grid.childNodes[1];\n\n\t\tvar attr = this.$getConfig()[this.$config.bind + \"_attribute\"];\n\t\tif(!attr && this.$config.bind){\n\t\t\tattr = this.$config.bind + \"_id\";\n\t\t}\n\t\tthis.$config.item_attribute = attr || null;\n\t\t\n\t\tif(!this.$config.layers){\n\t\t\tvar layers = this._createLayerConfig();\n\t\t\tthis.$config.layers = layers;\n\t\t}\n\n\t\tvar resizer = gridResize(gantt, this);\n\t\tresizer.init();\n\t\tthis._renderHeaderResizers = resizer.doOnRender;\n\t\tthis._mouseDelegates = require(\"../mouse_event_container\")(gantt);\n\n\t\tthis._addLayers(this.$gantt);\n\t\tthis._initEvents();\n\t\tthis.callEvent(\"onReady\", []);\n\t\t//this.refresh();\n\t},\n\tsetSize: function(width, height){\n\t\tthis.$config.width = this.$state.width = width;\n\t\tthis.$state.height = height;\n\n\t\t// TODO: maybe inherit and override in a subclass instead of extending here\n\n\t\tvar columns = this.getGridColumns(),\n\t\t\tinnerWidth = 0;\n\n\t\tfor (var i = 0, l = columns.length; i < l; i++) {\n\t\t\tinnerWidth += columns[i].width*1;\n\t\t}\n\n\t\tvar outerWidth;\n\t\tif(isNaN(innerWidth) || !this.$config.scrollable){\n\t\t\touterWidth = this._setColumnsWidth(width + 1);\n\t\t\tinnerWidth = outerWidth;\n\t\t}\n\n\t\tif(this.$config.scrollable){\n\t\t\tthis.$grid_scale.style.width = innerWidth + \"px\";\n\t\t\tthis.$grid_data.style.width = innerWidth + \"px\";\n\t\t}else{\n\t\t\tthis.$grid_scale.style.width = \"inherit\";\n\t\t\tthis.$grid_data.style.width = \"inherit\";\n\t\t}\n\t\tthis.$config.width -= 1;\n\n\t\tvar config = this.$getConfig();\n\t\tif(outerWidth !== width){\n\t\t\tconfig.grid_width = outerWidth;\n\t\t\tthis.$config.width = outerWidth - 1;\n\t\t}\n\n\t\tvar dataHeight = Math.max(this.$state.height - config.scale_height, 0);\n\t\tthis.$grid_data.style.height = dataHeight + \"px\";\n\t\tthis.refresh();\n\t},\n\tgetSize: function(){\n\n\t\tvar config = this.$getConfig();\n\n\t\tvar store = this.$config.rowStore;\n\n\t\tvar contentHeight = store ? config.row_height * store.countVisible() : 0,\n\t\t\tcontentWidth = this._getGridWidth();\n\n\t\tvar size = {\n\t\t\tx: this.$state.width,\n\t\t\ty: this.$state.height,\n\t\t\tcontentX: this.isVisible() ? contentWidth: 0,\n\t\t\tcontentY: this.isVisible() ? (config.scale_height + contentHeight) : 0,\n\t\t\tscrollHeight: this.isVisible() ? contentHeight: 0,\n\t\t\tscrollWidth: this.isVisible() ? contentWidth : 0\n\t\t};\n\n\t\treturn size;\n\t},\n\trefresh: function(){\n\n\t\tif(this.$config.bind)\n\t\t\tthis.$config.rowStore = this.$gantt.getDatastore(this.$config.bind);\n\n\t\tthis._initSmartRenderingPlaceholder();\n\n\t\tthis._calculateGridWidth();\n\t\tthis._renderGridHeader();\n\t},\n\tscrollTo: function(left, top){\n\t\tif(!this.isVisible())\n\t\t\treturn;\n\n\t\tif (left*1 == left){\n\t\t\tthis.$state.scrollLeft = this.$grid.scrollLeft = left;\n\t\t}\n\n\t\t// var config = this.$getConfig();\n\t\tif(top*1 == top){\n\t\t\tthis.$state.scrollTop = this.$grid_data.scrollTop = top;\n\t\t}\n\t},\n\n\tgetColumnIndex: function(name){\n\t\tvar columns = this.$getConfig().columns;\n\n\t\tfor (var i = 0; i < columns.length; i++) {\n\t\t\tif (columns[i].name == name) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetColumn: function(name){\n\t\tvar index = this.getColumnIndex(name);\n\t\tif(index === null){\n\t\t\treturn null;\n\t\t}\n\t\treturn this.$getConfig().columns[index];\n\t},\n\n\tgetGridColumns: function(){\n\t\tvar config = this.$getConfig();\n\t\treturn config.columns.slice();\n\t},\n\tisVisible: function(){\n\t\tif(this.$parent && this.$parent.$config){\n\t\t\treturn !this.$parent.$config.hidden;\n\t\t}else{\n\t\t\treturn this.$grid.offsetWidth;\n\t\t}\n\t},\n\n\tgetItemTop: function(id){\n\t\tif(this.$config.rowStore){\n\t\t\tvar store = this.$config.rowStore;\n\t\t\tif(!store) return 0;\n\n\t\t\treturn store.getIndexById(id) * this.$getConfig().row_height;\n\n\t\t}else{\n\t\t\treturn 0;\n\t\t}\n\t},\n\n\tgetItemHeight: function(){\n\t\tvar config = this.$getConfig();\n\t\treturn config.row_height;\n\t},\n\n\t_createLayerConfig: function(){\n\t\tvar gantt = this.$gantt;\n\t\tvar self = this;\n\t\tvar layers = [\n\t\t\t{\n\t\t\t\trenderer: gantt.$ui.layers.gridLine,\n\t\t\t\tcontainer: this.$grid_data,\n\t\t\t\tfilter: [function(){\n\t\t\t\t\treturn self.isVisible();\n\t\t\t\t}]\n\t\t\t}\n\t\t];\n\t\treturn layers;\n\t},\n\n\t_addLayers: function(gantt){\n\t\tif(!this.$config.bind)\n\t\t\treturn;\n\n\t\tthis._taskLayers = [];\n\n\t\tvar self = this;\n\n\t\tvar layers = this.$gantt.$services.getService(\"layers\");\n\t\tvar taskRenderer = layers.getDataRender(this.$config.bind);\n\n\t\tif(!taskRenderer){\n\t\t\ttaskRenderer = layers.createDataRender({\n\t\t\t\tname: this.$config.bind,\n\t\t\t\tdefaultContainer: function(){ return self.$grid_data;}\n\t\t\t});\n\t\t}\n\n\t\tvar taskLayers = this.$config.layers;\n\t\tfor(var i = 0; taskLayers && i < taskLayers.length; i++){\n\t\t\tvar layer = taskLayers[i];\n\t\t\tlayer.host = this;\n\t\t\tvar bar_layer = taskRenderer.addLayer(layer);\n\t\t\tthis._taskLayers.push(bar_layer);\n\t\t}\n\n\t\tif(this.$config.bind)\n\t\t\tthis.$config.rowStore = this.$gantt.getDatastore(this.$config.bind);\n\n\t\tthis._initSmartRenderingPlaceholder();\n\t},\n\n\t_refreshPlaceholderOnStoreUpdate: function(id){\n\t\tvar config = this.$getConfig(),\n\t\t\tstore = this.$config.rowStore;\n\n\t\tif(!store || id !== null || !this.isVisible() || !config.smart_rendering) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar contentHeight;\n\t\tif(this.$config.scrollY) {\n\t\t\tvar scroll = this.$gantt.$ui.getView(this.$config.scrollY);\n\t\t\tif(scroll)\n\t\t\t\tcontentHeight = scroll.getScrollState().scrollSize;\n\t\t}\n\n\t\tif(!contentHeight){\n\t\t\tcontentHeight = store ? config.row_height * store.countVisible() : 0;\n\t\t}\n\n\t\tif(contentHeight){\n\t\t\tif(this.$rowsPlaceholder && this.$rowsPlaceholder.parentNode){\n\t\t\t\tthis.$rowsPlaceholder.parentNode.removeChild(this.$rowsPlaceholder);\n\t\t\t}\n\n\t\t\tvar placeholder = this.$rowsPlaceholder = document.createElement(\"div\");\n\t\t\tplaceholder.style.visibility = \"hidden\";\n\t\t\tplaceholder.style.height = contentHeight + \"px\";\n\t\t\tplaceholder.style.width = \"1px\";\n\t\t\tthis.$grid_data.appendChild(placeholder);\n\t\t}\n\t},\n\n\t_initSmartRenderingPlaceholder: function(){\n\t\tvar store = this.$config.rowStore;\n\t\tif(!store){\n\t\t\treturn;\n\t\t}else{\n\t\t\tthis._initSmartRenderingPlaceholder = function(){};\n\t\t}\n\t\tthis._staticBgHandler = store.attachEvent(\"onStoreUpdated\", utils.bind(this._refreshPlaceholderOnStoreUpdate, this));\n\t},\n\n\t_initEvents: function(){\n\t\tthis._mouseDelegates.delegate(\"click\", \"gantt_close\", gantt.bind(function (e, id, trg) {\n\t\t\tvar store = this.$config.rowStore;\n\t\t\tif(!store) return true;\n\n\t\t\tvar target = domHelpers.locateAttribute(e, this.$config.item_attribute);\n\t\t\tif(target){\n\t\t\t\tstore.close(target.getAttribute(this.$config.item_attribute));\n\n\t\t\t}\n\t\t\treturn false;\n\t\t}, this), this.$grid);\n\n\t\tthis._mouseDelegates.delegate(\"click\", \"gantt_open\", gantt.bind(function (e, id, trg) {\n\t\t\tvar store = this.$config.rowStore;\n\t\t\tif(!store) return true;\n\n\t\t\tvar target = domHelpers.locateAttribute(e, this.$config.item_attribute);\n\t\t\tif(target){\n\t\t\t\tstore.open(target.getAttribute(this.$config.item_attribute));\n\n\t\t\t}\n\t\t\treturn false;\n\t\t}, this), this.$grid);\n\t},\n\n\t_clearLayers: function(gantt){\n\t\tvar layers = this.$gantt.$services.getService(\"layers\");\n\t\tvar taskRenderer = layers.getDataRender(this.$config.bind);\n\n\t\tfor(var i = 0; i < this._taskLayers.length; i++){\n\t\t\ttaskRenderer.removeLayer(this._taskLayers[i]);\n\t\t}\n\n\t\tthis._taskLayers = [];\n\t},\n\n\t_getColumnWidth: function(column, config, width) {\n\t\tvar min_width = column.min_width || config.min_grid_column_width;\n\t\tvar new_width = Math.max(width, min_width || 10);\n\t\tif (column.max_width)\n\t\t\tnew_width = Math.min(new_width, column.max_width);\n\t\treturn new_width;\n\t},\n\t// return min and max possible grid width according to restricts\n\t_getGridWidthLimits: function() {\n\t\tvar config = this.$getConfig(),\n\t\t\tcolumns = this.getGridColumns(),\n\t\t\tmin_limit = 0,\n\t\t\tmax_limit = 0;\n\n\t\t\tfor (var i=0; i<columns.length; i++) {\n\t\t\t\tmin_limit += columns[i].min_width ? columns[i].min_width : config.min_grid_column_width;\n\t\t\t\tif (max_limit !== undefined) {\n\t\t\t\t\tmax_limit = columns[i].max_width ? (max_limit + columns[i].max_width) : undefined;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn [min_limit, max_limit];\n\t},\n\t// resize columns to get total newWidth, starting from columns[start_index]  \n\t_setColumnsWidth: function(newWidth, start_index) {\n\t\tvar config = this.$getConfig();\n\t\tvar columns = this.getGridColumns(),\n\t\t\tcolumns_width = 0,\n\t\t\tfinal_width = newWidth;\n\n\t\tstart_index = !window.isNaN(start_index) ? start_index : -1;\n\n\t\tfor (var i = 0, l = columns.length; i < l; i++) {\n\t\t\tcolumns_width += columns[i].width*1;\n\t\t}\n\n\t\tif (window.isNaN(columns_width)) {\n\t\t\tthis._calculateGridWidth(); \n\t\t\tcolumns_width = 0;\n\t\t\tfor (var i = 0, l = columns.length; i < l; i++) {\n\t\t\t\tcolumns_width += columns[i].width*1;\n\t\t\t}\n\t\t}\n\n\t\tvar extra_width = final_width - columns_width;\n\n\t\tvar start_width = 0;\n\t\tfor (var i=0; i<start_index+1; i++) {\n\t\t\tstart_width += columns[i].width;\n\t\t}\n\n\t\tcolumns_width -= start_width;\n\n\t\tfor (var i=start_index+1; i<columns.length; i++) {\n\n\t\t\tvar col = columns[i];\n\t\t\tvar\tshare = Math.round(extra_width * (col.width / columns_width));\n\n\t\t\t// columns have 2 additional restrict fields - min_width & max_width that are set by user\n\t\t\tif (extra_width < 0) {\n\t\t\t\tif (col.min_width && col.width+share < col.min_width)\n\t\t\t\t\tshare = col.min_width - col.width;\n\t\t\t\telse if (!col.min_width && config.min_grid_column_width && col.width+share < config.min_grid_column_width)\n\t\t\t\t\tshare = config.min_grid_column_width - col.width;\n\t\t\t} else if (col.max_width && col.width+share > col.max_width)\n\t\t\t\tshare = col.max_width - col.width;\n\n\t\t\tcolumns_width -= col.width;\n\t\t\tcol.width += share;\n\t\t\textra_width -= share;\n\n\t\t}\n\n\t\tvar iterator = extra_width > 0 ? 1 : -1;\n\t\twhile ((extra_width > 0 && iterator === 1) || (extra_width < 0 && iterator === -1)) {\n\t\t\tvar curExtra = extra_width;\n\t\t\tfor (i = start_index+1; i<columns.length; i++) {\n\t\t\t\tvar new_width = columns[i].width + iterator;\n\n\t\t\t\tif (new_width == this._getColumnWidth(columns[i], config, new_width)) {\n\t\t\t\t\textra_width -= iterator;\n\t\t\t\t\tcolumns[i].width = new_width;\n\t\t\t\t}\n\n\t\t\t\tif (!extra_width)\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif (curExtra == extra_width)\n\t\t\t\tbreak;\n\t\t}\n\n\t\t// if impossible to resize the right-side columns, resize the start column\n\t\tif (extra_width && start_index > -1) {\n\t\t\tvar new_width = columns[start_index].width + extra_width;\n\t\t\tif (new_width == this._getColumnWidth(columns[start_index], config, new_width))\n\t\t\t\tcolumns[start_index].width = new_width;\n\t\t}\n\n\t\t//if (this.callEvent(\"onGridResizeEnd\", [config.grid_width, final_width]) === false)\n\t\t//\treturn;\n\n\t\treturn this._getColsTotalWidth();\n\t},\n\n\t_getColsTotalWidth: function(){\n\t\tvar columns = this.getGridColumns();\n\t\tvar cols_width = 0;\n\n\t\tfor (var i = 0; i < columns.length; i++) {\n\t\t\tvar v = parseFloat(columns[i].width);\n\t\t\tif (window.isNaN(v)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tcols_width += v;\n\t\t}\n\t\treturn cols_width;\n\t},\n\t_calculateGridWidth: function() {\n\t\tvar config = this.$getConfig();\n\t\tvar columns = this.getGridColumns();\n\t\tvar cols_width = 0;\n\t\tvar unknown = [];\n\t\tvar width = [];\n\n\t\tfor (var i = 0; i < columns.length; i++) {\n\t\t\tvar v = parseFloat(columns[i].width);\n\t\t\tif (window.isNaN(v)) {\n\t\t\t\tv = config.min_grid_column_width || 10;\n\t\t\t\tunknown.push(i);\n\t\t\t}\n\t\t\twidth[i] = v;\n\t\t\tcols_width += v;\n\t\t}\n\t\tvar gridWidth = this._getGridWidth() + 1;\n\t\tif (config.autofit || unknown.length) {\n\t\t\tvar diff = gridWidth - cols_width;\n\t\t\t// TODO: logic may be improved for proportional changing of width\n\t\t\tif (config.autofit) {\n\t\t\t\t// delta must be added for all columns\n\t\t\t\tfor (var i = 0; i < width.length; i++) {\n\t\t\t\t\tvar delta = Math.round(diff / (width.length-i));\n\t\t\t\t\twidth[i] += delta;\n\t\t\t\t\tvar new_width = this._getColumnWidth(columns[i], config, width[i]);\n\t\t\t\t\t\n\t\t\t\t\tif (new_width != width[i]) {\n\t\t\t\t\t\tdelta = new_width - width[i];\n\t\t\t\t\t\twidth[i] = new_width;\n\t\t\t\t\t}\n\t\t\t\t\tdiff -= delta;\n\t\t\t\t}\n\t\t\t} else if (unknown.length) {\n\t\t\t\t// there are several columns with undefined width\n\t\t\t\tfor (var i = 0; i < unknown.length; i++) {\n\t\t\t\t\tvar delta = Math.round(diff / (unknown.length-i)); // no float values, just integer\n\t\t\t\t\tvar index = unknown[i];\n\t\t\t\t\twidth[index] += delta;\n\t\t\t\t\tvar new_width = this._getColumnWidth(columns[index], config, width[index]);\n\t\t\t\t\tif (new_width != width[index]) {\n\t\t\t\t\t\tdelta = new_width - width[index];\n\t\t\t\t\t\twidth[index] = new_width;\n\t\t\t\t\t}\n\t\t\t\t\tdiff -= delta;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < width.length; i++) {\n\t\t\t\tcolumns[i].width = width[i];\n\t\t\t}\n\t\t} else {\n\t\t\tvar changed = (gridWidth != cols_width);\n\t\t\tthis.$config.width = cols_width - 1;\n\t\t\tconfig.grid_width = cols_width;\n\t\t\tif(changed){\n\t\t\t\tthis.$parent._setContentSize(this.$config.width, this.$config.height);\n//\t\t\t\tthis.$parent.$config.width = cols_width;\n\t\t\t}\n\t\t}\n\n\t},\n\n\t_renderGridHeader: function(){\n\t\tvar gantt = this.$gantt;\n\t\tvar config = this.$getConfig();\n\t\tvar locale = this.$gantt.locale;\n\t\tvar templates = this.$gantt.templates;\n\n\t\tvar columns = this.getGridColumns();\n\t\tif(config.rtl){\n\t\t\tcolumns = columns.reverse();\n\t\t}\n\t\tvar cells = [];\n\t\tvar width = 0,\n\t\t\tlabels = locale.labels;\n\n\t\tvar lineHeigth = config.scale_height - 1;\n\n\t\tfor (var i = 0; i < columns.length; i++) {\n\t\t\tvar last = i == columns.length - 1;\n\t\t\tvar col = columns[i];\n\n\t\t\t// ensure columns have non-empty names\n\t\t\tif (!col.name) {\n\t\t\t\tcol.name = gantt.uid() + \"\";\n\t\t\t}\n\n\t\t\tvar colWidth = col.width * 1;\n\n\t\t\tvar gridWidth = this._getGridWidth();\n\t\t\tif (last && gridWidth > width + colWidth)\n\t\t\t\tcol.width = colWidth = gridWidth - width;\n\t\t\twidth += colWidth;\n\t\t\tvar sort = (gantt._sort && col.name == gantt._sort.name) ? (\"<div class='gantt_sort gantt_\" + gantt._sort.direction + \"'></div>\") : \"\";\n\t\t\tvar cssClass = [\"gantt_grid_head_cell\",\n\t\t\t\t(\"gantt_grid_head_\" + col.name),\n\t\t\t\t(last ? \"gantt_last_cell\" : \"\"),\n\t\t\t\ttemplates.grid_header_class(col.name, col)].join(\" \");\n\n\t\t\tvar style = \"width:\" + (colWidth - (last ? 1 : 0)) + \"px;\";\n\t\t\tvar label = (col.label || labels[\"column_\" + col.name]);\n\t\t\tlabel = label || \"\";\n\n\t\t\tvar ariaAttrs = gantt._waiAria.gridScaleCellAttrString(col, label);\n\n\t\t\tvar cell = \"<div class='\" + cssClass + \"' style='\" + style + \"' \" + ariaAttrs + \" data-column-id='\" + col.name + \"' column_id='\" + col.name + \"'>\" + label + sort + \"</div>\";\n\t\t\tcells.push(cell);\n\t\t}\n\t\tthis.$grid_scale.style.height = (config.scale_height) + \"px\";\n\t\tthis.$grid_scale.style.lineHeight = lineHeigth + \"px\";\n\t\t//this.$grid_scale.style.width = \"inherit\";\n\t\tthis.$grid_scale.innerHTML = cells.join(\"\");\n\n\t\tif(this._renderHeaderResizers){\n\t\t\tthis._renderHeaderResizers();\n\t\t}\n\t},\n\n\t_getGridWidth: function(){\n\t\t// TODO: refactor/remove/comment some of _getGridWidth/this.$config.width/this.$state.width, it's not clear what they do\n\t\treturn this.$config.width;\n\t},\n\n\tdestructor: function(){\n\t\tthis._clearLayers(this.$gantt);\n\t\tthis._mouseDelegates.destructor();\n\t\tthis._mouseDelegates = null;\n\t\tthis.$grid = null;\n\t\tthis.$grid_scale = null;\n\t\tthis.$grid_data = null;\n\t\tthis.$gantt = null;\n\n\t\tif(this.$config.rowStore){\n\t\t\tthis.$config.rowStore.detachEvent(this._staticBgHandler);\n\t\t\tthis.$config.rowStore = null;\n\t\t}\n\n\t\tthis.callEvent(\"onDestroy\", []);\n\t\tthis.detachAllEvents();\n\t}\n};\n\nmodule.exports = Grid;\n","module.exports = function(gantt) {\n\tgantt.locale = {\n\t\tdate: {\n\t\t\tmonth_full: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n\t\t\tmonth_short: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n\t\t\tday_full: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n\t\t\tday_short: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"]\n\t\t},\n\t\tlabels: {\n\t\t\tnew_task: \"New task\",\n\t\t\ticon_save: \"Save\",\n\t\t\ticon_cancel: \"Cancel\",\n\t\t\ticon_details: \"Details\",\n\t\t\ticon_edit: \"Edit\",\n\t\t\ticon_delete: \"Delete\",\n\t\t\tconfirm_closing: \"\",//Your changes will be lost, are you sure?\n\t\t\tconfirm_deleting: \"Task will be deleted permanently, are you sure?\",\n\t\t\tsection_description: \"Description\",\n\t\t\tsection_time: \"Time period\",\n\t\t\tsection_type: \"Type\",\n\n\t\t\t/* grid columns */\n\t\t\tcolumn_wbs: \"WBS\",\n\t\t\tcolumn_text: \"Task name\",\n\t\t\tcolumn_start_date: \"Start time\",\n\t\t\tcolumn_duration: \"Duration\",\n\t\t\tcolumn_add: \"\",\n\n\t\t\t/* link confirmation */\n\t\t\tlink: \"Link\",\n\t\t\tconfirm_link_deleting: \"will be deleted\",\n\t\t\tlink_start: \" (start)\",\n\t\t\tlink_end: \" (end)\",\n\n\t\t\ttype_task: \"Task\",\n\t\t\ttype_project: \"Project\",\n\t\t\ttype_milestone: \"Milestone\",\n\n\t\t\tminutes: \"Minutes\",\n\t\t\thours: \"Hours\",\n\t\t\tdays: \"Days\",\n\t\t\tweeks: \"Week\",\n\t\t\tmonths: \"Months\",\n\t\t\tyears: \"Years\",\n\n\t\t\t/* message popup */\n\t\t\tmessage_ok: \"OK\",\n\t\t\tmessage_cancel: \"Cancel\"\n\n\t\t}\n\t};\n};\n\n","var utils = require(\"../../utils/utils\");\nvar dateHelper = require(\"../../utils/date_helpers\");\n\n\nfunction IsWorkTimeArgument(date, unit, task, id, calendar){\n\tthis.date = date;\n\tthis.unit = unit;\n\tthis.task = task;\n\tthis.id = id;\n\tthis.calendar = calendar;\n\treturn this;\n}\n\nfunction ClosestWorkTimeArgument(date, dir, unit, task, id, calendar){\n\tthis.date = date;\n\tthis.dir = dir;\n\tthis.unit = unit;\n\tthis.task = task;\n\tthis.id = id;\n\tthis.calendar = calendar;\n\treturn this;\n}\n\nfunction CalculateEndDateArgument(start_date, duration, unit, step, task, id, calendar){\n\tthis.start_date = start_date;\n\tthis.duration = duration;\n\tthis.unit = unit;\n\tthis.step = step;\n\tthis.task = task;\n\tthis.id = id;\n\tthis.calendar = calendar;\n\treturn this;\n}\n\nfunction GetDurationArgument(start, end, task, calendar) {\n\tthis.start_date = start;\n\tthis.end_date = end;\n\tthis.task = task;\n\tthis.calendar = calendar;\n\tthis.unit = null;\n\tthis.step = null;\n\treturn this;\n}\n\nvar calendarArgumentsHelper = function(gantt){\n\treturn {\n\t\tgetWorkHoursArguments: function () {\n\t\t\tvar config = arguments[0];\n\t\t\tif (dateHelper.isDate(config)) {\n\t\t\t\tconfig = {\n\t\t\t\t\tdate: config\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tconfig = utils.mixin({}, config);\n\t\t\t}\n\t\t\treturn config;\n\t\t},\n\t\tsetWorkTimeArguments: function () {\n\t\t\treturn arguments[0];\n\t\t},\n\t\tunsetWorkTimeArguments: function () {\n\t\t\treturn arguments[0];\n\t\t},\n\t\tisWorkTimeArguments: function () {\n\t\t\tvar config = arguments[0];\n\t\t\tif(config instanceof IsWorkTimeArgument){\n\t\t\t\treturn config;\n\t\t\t}\n\n\t\t\tvar processedConfig;\n\t\t\tif (!config.date) {\n\t\t\t\t//IsWorkTimeArgument(date, unit, task, id, calendar)\n\t\t\t\tprocessedConfig = new IsWorkTimeArgument(arguments[0], arguments[1], arguments[2], null, arguments[3]);\n\t\t\t} else {\n\t\t\t\tprocessedConfig = new IsWorkTimeArgument(config.date, config.unit, config.task, null, config.calendar);\n\t\t\t}\n\n\t\t\tprocessedConfig.unit = processedConfig.unit || gantt.config.duration_unit;\n\n\t\t\treturn processedConfig;\n\t\t},\n\t\tgetClosestWorkTimeArguments: function (arg) {\n\t\t\tvar config = arguments[0];\n\t\t\tif (config instanceof ClosestWorkTimeArgument)\n\t\t\t\treturn config;\n\n\t\t\tvar processedConfig;\n\t\t\tif (dateHelper.isDate(config)) {\n\t\t\t\tprocessedConfig = new ClosestWorkTimeArgument(config);\n\n\t\t\t} else {\n\t\t\t\tprocessedConfig = new ClosestWorkTimeArgument(\n\t\t\t\t\tconfig.date,\n\t\t\t\t\tconfig.dir,\n\t\t\t\t\tconfig.unit,\n\t\t\t\t\tconfig.task,\n\t\t\t\t\tnull,//config.id,\n\t\t\t\t\tconfig.calendar\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif(config.id){\n\t\t\t\tprocessedConfig.task = config;\n\t\t\t}\n\t\t\tprocessedConfig.dir = config.dir || 'any';\n\t\t\tprocessedConfig.unit = config.unit || gantt.config.duration_unit;\n\n\t\t\treturn processedConfig;\n\t\t},\n\n\t\t_getStartEndConfig: function (param) {\n\t\t\tvar argumentType = GetDurationArgument;\n\t\t\tvar config;\n\t\t\tif (param instanceof argumentType)\n\t\t\t\treturn param;\n\n\t\t\tif (dateHelper.isDate(param)) {\n\t\t\t\tconfig = new argumentType(arguments[0], arguments[1], arguments[2], arguments[3]);\n\t\t\t} else {\n\t\t\t\tconfig = new argumentType(param.start_date, param.end_date, param.task);\n\t\t\t\tif (param.id) {\n\t\t\t\t\tconfig.task = param;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconfig.unit = config.unit || gantt.config.duration_unit;\n\t\t\tconfig.step = config.step || gantt.config.duration_step;\n\t\t\tconfig.start_date = config.start_date || config.start || config.date;\n\n\t\t\treturn config;\n\t\t},\n\n\t\tgetDurationArguments: function (start, end, unit, step) {\n\t\t\treturn this._getStartEndConfig.apply(this, arguments);\n\t\t},\n\n\t\thasDurationArguments: function (start, end, unit, step) {\n\t\t\treturn this._getStartEndConfig.apply(this, arguments);\n\t\t},\n\n\t\tcalculateEndDateArguments: function (start, duration, unit, step) {\n\t\t\tvar config = arguments[0];\n\t\t\tif (config instanceof CalculateEndDateArgument)\n\t\t\t\treturn config;\n\n\t\t\tvar processedConfig;\n\t\t\t//CalculateEndDateArgument(start_date, duration, unit, step, task, id, calendar)\n\t\t\tif (dateHelper.isDate(config)) {\n\t\t\t\tprocessedConfig = new CalculateEndDateArgument(\n\t\t\t\t\targuments[0],\n\t\t\t\t\targuments[1],\n\t\t\t\t\targuments[2],\n\t\t\t\t\tundefined,\n\t\t\t\t\targuments[3],\n\t\t\t\t\tundefined,\n\t\t\t\t\targuments[4]\n\t\t\t\t);\n\n\t\t\t} else {\n\t\t\t\tprocessedConfig = new CalculateEndDateArgument(\n\t\t\t\t\tconfig.start_date,\n\t\t\t\t\tconfig.duration,\n\t\t\t\t\tconfig.unit,\n\t\t\t\t\tconfig.step,\n\t\t\t\t\tconfig.task,\n\t\t\t\t\tnull,//config.id,\n\t\t\t\t\tconfig.calendar\n\t\t\t\t);\n\t\t\t}\n\t\t\tif(config.id){\n\t\t\t\tprocessedConfig.task = config;\n\t\t\t}\n\n\t\t\tprocessedConfig.unit = processedConfig.unit || gantt.config.duration_unit;\n\t\t\tprocessedConfig.step = processedConfig.step || gantt.config.duration_step;\n\n\t\t\treturn processedConfig;\n\t\t}\n\t};\n};\n\n\nmodule.exports = calendarArgumentsHelper;","function copyLinkIdsArray(gantt, linkIds, targetHash){\n\tfor(var i = 0; i < linkIds.length; i++) {\n\t\tif(gantt.isLinkExists(linkIds[i])){\n\t\t\ttargetHash[linkIds[i]] = gantt.getLink(linkIds[i]);\n\t\t}\n\t}\n}\n\nfunction copyLinkIds(gantt, task, targetHash){\n\tcopyLinkIdsArray(gantt, task.$source, targetHash);\n\tcopyLinkIdsArray(gantt, task.$target, targetHash);\n}\n\nfunction getSubtreeLinks(gantt, rootId){\n\tvar res = {};\n\n\tif(gantt.isTaskExists(rootId)){\n\t\tcopyLinkIds(gantt, gantt.getTask(rootId), res);\n\t}\n\n\tgantt.eachTask(function(child){\n\t\tcopyLinkIds(gantt, child, res);\n\t}, rootId);\n\n\treturn res;\n}\n\nfunction getSubtreeTasks(gantt, rootId){\n\tvar res = {};\n\n\tgantt.eachTask(function(child){\n\t\tres[child.id] = child;\n\t}, rootId);\n\n\treturn res;\n}\n\nmodule.exports = {\n\tgetSubtreeLinks: getSubtreeLinks,\n\tgetSubtreeTasks: getSubtreeTasks\n};","var ScaleHelper = require(\"./ui/timeline/scales_ignore\");\n\n\nfunction dateRangeResolver(gantt){\n\t//reset project timing\n\t//_get_tasks_data(gantt);\n\treturn gantt.getSubtaskDates();\n}\n\nfunction defaultRangeResolver(){\n\treturn {\n\t\tstart_date: new Date(),\n\t\tend_date: new Date()\n\t};\n}\n\nfunction resolveConfigRange(unit, gantt){\n\tvar range = {\n\t\tstart_date:null,\n\t\tend_date:null\n\t};\n\n\tif (gantt.config.start_date && gantt.config.end_date) {\n\t\trange.start_date = gantt.date[unit + \"_start\"](new Date(gantt.config.start_date));\n\n\t\tvar end = new Date(gantt.config.end_date);\n\t\tvar start_interval = gantt.date[unit + \"_start\"](new Date(end));\n\t\tif (+end != +start_interval) {\n\t\t\tend = gantt.date.add(start_interval, 1, unit);\n\t\t} else {\n\t\t\tend = start_interval;\n\t\t}\n\n\t\trange.end_date = end;\n\t}\n\treturn range;\n}\n\nfunction _scale_range_unit(gantt) {\n\tvar unit = gantt.config.scale_unit;\n\tvar step = gantt.config.step;\n\tif (gantt.config.scale_offset_minimal) {\n\n\t\tvar helper = new ScaleHelper(gantt);\n\t\tvar scales = [helper.primaryScale()].concat(gantt.config.subscales);\n\n\t\thelper.sortScales(scales);\n\t\tunit = scales[scales.length - 1].unit;\n\t\tstep = scales[scales.length - 1].step || 1;\n\t}\n\treturn { unit:unit, step:step };\n}\n\nfunction _init_tasks_range(gantt) {\n\tvar cfg = _scale_range_unit(gantt);\n\tvar unit = cfg.unit,\n\t\tstep = cfg.step;\n\tvar range = resolveConfigRange(unit, gantt);\n\n\tif(!(range.start_date && range.end_date)){\n\t\trange = dateRangeResolver(gantt);\n\t\tif(!range.start_date || !range.end_date){\n\t\t\trange = defaultRangeResolver(gantt);\n\t\t}\n\n\t\trange.start_date = gantt.date[unit + \"_start\"](range.start_date);\n\t\trange.start_date = gantt.calculateEndDate({\n\t\t\tstart_date: gantt.date[unit + \"_start\"](range.start_date),\n\t\t\tduration: -1,\n\t\t\tunit: unit,\n\t\t\tstep:step\n\t\t});//one free column before first task\n\n\t\trange.end_date = gantt.date[unit + \"_start\"](range.end_date);\n\t\trange.end_date = gantt.calculateEndDate({start_date: range.end_date, duration: 2, unit: unit, step:step});//one free column after last task\n\t}\n\n\tgantt._min_date = range.start_date;\n\tgantt._max_date = range.end_date;\n}\n\nfunction _adjust_scales(gantt) {\n\tif (gantt.config.fit_tasks) {\n\t\tvar old_min = +gantt._min_date,\n\t\t\told_max = +gantt._max_date;\n\t\t//this._init_tasks_range();\n\t\tif (+gantt._min_date != old_min || +gantt._max_date != old_max) {\n\t\t\tgantt.render();\n\n\t\t\tgantt.callEvent(\"onScaleAdjusted\", []);\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nmodule.exports = function updateTasksRange(gantt){\n\t_init_tasks_range(gantt);\n\t_adjust_scales(gantt);\n};\n","var powerArray = require(\"./power_array\");\nvar utils = require(\"../../utils/utils\");\nvar eventable = require(\"../../utils/eventable\");\nvar DataStore = require(\"./datastore\");\n\nvar TreeDataStore = function(config){\n\tthis._branches = {};\n\n\tthis.pull = {};\n\tthis.$initItem = config.initItem;\n\tthis.$parentProperty = config.parentProperty || \"parent\";\n\n\tif(typeof config.rootId !== \"function\"){\n\t\tthis.$getRootId = (function(val){\n\t\t\treturn function(){return val;};\n\t\t})(config.rootId || 0);\n\t}else{\n\t\tthis.$getRootId = config.rootId;\n\t}\n\n\t// TODO: replace with live reference to gantt config\n\tthis.$openInitially = config.openInitially;\n\n\tthis.visibleOrder = powerArray.$create();\n\tthis.fullOrder = powerArray.$create();\n\tthis._searchVisibleOrder = {};\n\tthis._skip_refresh = false;\n\n\teventable(this);\n\n\tthis.attachEvent(\"onFilterItem\", function(id, item){\n\t\tvar open = true;\n\t\tthis.eachParent(function(parent){\n\t\t\topen = open && parent.$open && !(gantt.isSplitTask(parent));\n\t\t}, item);\n\t\treturn !!open;\n\t});\n\n\treturn this;\n};\n\nTreeDataStore.prototype = utils.mixin({\n\n\t\t_buildTree: function(data){\n\t\t\tvar item = null;\n\t\t\tvar rootId = this.$getRootId();\n\t\t\tfor (var i = 0, len = data.length; i < len; i++){\n\t\t\t\titem = data[i];\n\t\t\t\tthis.setParent(item, this.getParent(item) || rootId);\n\t\t\t}\n\n\t\t\t// calculating $level for each item\n\t\t\tfor (var i = 0, len = data.length; i < len; i++){\n\t\t\t\titem = data[i];\n\t\t\t\tthis._add_branch(item);\n\t\t\t\titem.$level = this.calculateItemLevel(item);\n\n\t\t\t\tif (!utils.defined(item.$open)) {\n\t\t\t\t\titem.$open = utils.defined(item.open) ? item.open : this.$openInitially();\n\t\t\t\t}\n\n\t\t\t}\n\t\t\tthis._updateOrder();\n\t\t},\n\n\t\tparse: function(data){\n\t\t\tthis.callEvent(\"onBeforeParse\", [data]);\n\t\t\tvar loaded = this._parseInner(data);\n\t\t\tthis._buildTree(loaded);\n\t\t\tthis.filter();\n\t\t\tthis.callEvent(\"onParse\", [loaded]);\n\t\t},\n\n\t\t_addItemInner: function(item, index){\n\n\t\t\tvar parent = this.getParent(item);\n\n\t\t\tif(!utils.defined(parent)){\n\t\t\t\tparent = this.$getRootId();\n\t\t\t\tthis.setParent(item, parent);\n\t\t\t}\n\n\t\t\tvar parentIndex = this.getIndexById(parent);\n\t\t\tvar targetIndex = parentIndex + Math.min(Math.max(index, 0), this.visibleOrder.length);\n\n\t\t\tif(targetIndex*1 !== targetIndex){\n\t\t\t\ttargetIndex = undefined;\n\t\t\t}\n\t\t\tDataStore.prototype._addItemInner.call(this, item, targetIndex);\n\t\t\tthis.setParent(item, parent);\n\n\t\t\tif(item.hasOwnProperty(\"$rendered_parent\")){\n\t\t\t\tthis._move_branch(item, item.$rendered_parent);\n\t\t\t}\n\t\t\tthis._add_branch(item, index);\n\t\t},\n\t\t_changeIdInner: function(oldId, newId){\n\t\t\tvar children = this.getChildren(oldId);\n\t\t\tvar visibleOrder = this._searchVisibleOrder[oldId];\n\n\t\t\tDataStore.prototype._changeIdInner.call(this, oldId, newId);\n\n\t\t\tvar parent = this.getParent(newId);\n\n\t\t\tthis._replace_branch_child(parent, oldId, newId);\n\t\t\tfor(var i = 0; i < children.length; i++){\n\t\t\t\tthis.setParent(this.getItem(children[i]), newId);\n\t\t\t}\n\n\t\t\tthis._searchVisibleOrder[newId] = visibleOrder;\n\t\t\tdelete this._branches[oldId];\n\t\t},\n\n\t\t_traverseBranches: function(code, parent){\n\t\t\tparent = parent || this.$getRootId();\n\t\t\tvar branch = this._branches[parent];\n\t\t\tif (branch) {\n\t\t\t\tfor (var i = 0; i < branch.length; i++) {\n\t\t\t\t\tvar itemId = branch[i];\n\t\t\t\t\tcode.call(this, itemId);\n\t\t\t\t\tif (this._branches[itemId])\n\t\t\t\t\t\tthis._traverseBranches(code, itemId);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_updateOrder: function(code){\n\n\t\t\tthis.fullOrder = powerArray.$create();\n\t\t\tthis._traverseBranches(function(taskId){\n\t\t\t\tthis.fullOrder.push(taskId);\n\t\t\t});\n\n\t\t\tif(code)\n\t\t\t\tDataStore.prototype._updateOrder.call(this, code);\n\t\t},\n\n\t\t_removeItemInner: function(id){\n\n\t\t\tvar items = [];\n\t\t\tthis.eachItem(function(child){\n\t\t\t\titems.push(child);\n\t\t\t}, id);\n\n\t\t\titems.push(this.getItem(id));\n\n\t\t\tfor(var i = 0; i < items.length; i++){\n\n\t\t\t\tthis._move_branch(items[i], this.getParent(items[i]), null);\n\t\t\t\tDataStore.prototype._removeItemInner.call(this, items[i].id);\n\t\t\t\tthis._move_branch(items[i], this.getParent(items[i]), null);\n\t\t\t}\n\t\t},\n\n\t\tmove: function(sid, tindex, parent){\n\t\t\t//target id as 4th parameter\n\t\t\tvar id = arguments[3];\n\t\t\tif (id) {\n\t\t\t\tif (id === sid) return;\n\n\t\t\t\tparent = this.getParent(id);\n\t\t\t\ttindex = this.getBranchIndex(id);\n\t\t\t}\n\t\t\tif(sid == parent){\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tparent = parent || this.$getRootId();\n\t\t\tvar source = this.getItem(sid);\n\t\t\tvar source_pid = this.getParent(source.id);\n\t\t\tvar sbranch = this.getChildren(this.getParent(source.id));\n\n\t\t\tvar tbranch = this.getChildren(parent);\n\n\t\t\tif (tindex == -1)\n\t\t\t\ttindex = tbranch.length + 1;\n\t\t\tif (source_pid == parent) {\n\t\t\t\tvar sindex = this.getBranchIndex(sid);\n\t\t\t\tif (sindex == tindex) return;\n\t\t\t}\n\n\t\t\tif(this.callEvent(\"onBeforeItemMove\", [sid, parent, tindex]) === false)\n\t\t\t\treturn;\n\n\t\t\tthis._replace_branch_child(source_pid, sid);\n\t\t\ttbranch = this.getChildren(parent);\n\n\t\t\tvar tid = tbranch[tindex];\n\t\t\tif (!tid) //adding as last element\n\t\t\t\ttbranch.push(sid);\n\t\t\telse\n\t\t\t\ttbranch = tbranch.slice(0, tindex).concat([ sid ]).concat(tbranch.slice(tindex));\n\n\t\t\tthis.setParent(source, parent);\n\t\t\tthis._branches[parent] = tbranch;\n\n\t\t\tvar diff = this.calculateItemLevel(source) - source.$level;\n\t\t\tsource.$level += diff;\n\t\t\tthis.eachItem(function(item){\n\t\t\t\titem.$level += diff;\n\t\t\t}, source.id, this);\n\n\n\t\t\tthis._moveInner(this.getIndexById(sid), this.getIndexById(parent) + tindex);\n\n\t\t\tthis.callEvent(\"onAfterItemMove\", [sid, parent, tindex]);\n\t\t\tthis.refresh();\n\t\t},\n\n\t\tgetBranchIndex: function(id){\n\t\t\tvar branch = this.getChildren(this.getParent(id));\n\t\t\tfor (var i = 0; i < branch.length; i++)\n\t\t\t\tif (branch[i] == id)\n\t\t\t\t\treturn i;\n\n\t\t\treturn -1;\n\t\t},\n\t\thasChild: function(id){\n\t\t\treturn (utils.defined(this._branches[id]) && this._branches[id].length);\n\t\t},\n\t\tgetChildren: function(id){\n\t\t\treturn utils.defined(this._branches[id]) ? this._branches[id] : powerArray.$create();\n\t\t},\n\n\t\tisChildOf: function(childId, parentId){\n\t\t\tif (!this.exists(childId))\n\t\t\t\treturn false;\n\t\t\tif (parentId === this.$getRootId())\n\t\t\t\treturn true;\n\n\t\t\tif (!this.hasChild(parentId))\n\t\t\t\treturn false;\n\n\t\t\tvar item = this.getItem(childId);\n\t\t\tvar pid = this.getParent(childId);\n\n\t\t\tvar parent = this.getItem(parentId);\n\t\t\tif(parent.$level >= item.$level){\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\twhile (item && this.exists(pid)) {\n\t\t\t\titem = this.getItem(pid);\n\n\t\t\t\tif (item && item.id == parentId)\n\t\t\t\t\treturn true;\n\t\t\t\tpid = this.getParent(item);\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\n\t\tgetSiblings: function(id){\n\t\t\tif(!this.exists(id)){\n\t\t\t\treturn powerArray.$create();\n\t\t\t}\n\t\t\tvar parent = this.getParent(id);\n\t\t\treturn this.getChildren(parent);\n\n\t\t},\n\t\tgetNextSibling: function(id){\n\t\t\tvar siblings = this.getSiblings(id);\n\t\t\tfor(var i= 0, len = siblings.length; i < len; i++){\n\t\t\t\tif(siblings[i] == id)\n\t\t\t\t\treturn siblings[i+1] || null;\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\t\tgetPrevSibling: function(id){\n\t\t\tvar siblings = this.getSiblings(id);\n\t\t\tfor(var i= 0, len = siblings.length; i < len; i++){\n\t\t\t\tif(siblings[i] == id)\n\t\t\t\t\treturn siblings[i-1] || null;\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\t\tgetParent: function(id){\n\t\t\tvar item = null;\n\t\t\tif(id.id !== undefined){\n\t\t\t\titem = id;\n\t\t\t}else{\n\t\t\t\titem = this.getItem(id);\n\t\t\t}\n\n\t\t\tvar parent;\n\t\t\tif(item){\n\t\t\t\tparent = item[this.$parentProperty];\n\t\t\t}else{\n\t\t\t\tparent = this.$getRootId();\n\t\t\t}\n\t\t\treturn parent;\n\n\t\t},\n\n\t\tclearAll: function(){\n\t\t\tthis._branches = {};\n\t\t\tDataStore.prototype.clearAll.call(this);\n\t\t},\n\n\t\tcalculateItemLevel: function(item){\n\t\t\tvar level = 0;\n\t\t\tthis.eachParent(function(){\n\t\t\t\tlevel++;\n\t\t\t}, item);\n\t\t\treturn level;\n\t\t},\n\n\t\t_setParentInner: function(item, new_pid, silent){\n\t\t\tif(!silent){\n\t\t\t\tif(item.hasOwnProperty(\"$rendered_parent\")){\n\t\t\t\t\tthis._move_branch(item, item.$rendered_parent, new_pid);\n\t\t\t\t}else{\n\t\t\t\t\tthis._move_branch(item, item[this.$parentProperty], new_pid);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tsetParent: function(item, new_pid, silent){\n\t\t\tthis._setParentInner(item, new_pid, silent);\n\n\t\t\titem[this.$parentProperty] = new_pid;\n\t\t},\n\t\teachItem: function(code, parent){\n\t\t\tparent = parent || this.$getRootId();\n\n\n\t\t\tvar branch = this.getChildren(parent);\n\t\t\tif (branch)\n\t\t\t\tfor (var i=0; i<branch.length; i++){\n\t\t\t\t\tvar item = this.pull[branch[i]];\n\t\t\t\t\tcode.call(this, item);\n\t\t\t\t\tif (this.hasChild(item.id))\n\t\t\t\t\t\tthis.eachItem(code, item.id);\n\t\t\t\t}\n\t\t},\n\t\teachParent: function(code, startItem){\n\t\t\tvar item = startItem;\n\t\t\tvar parent = this.getParent(item);\n\t\t\twhile (this.exists(parent)) {\n\t\t\t\titem = this.getItem(parent);\n\t\t\t\tcode.call(this, item);\n\t\t\t\tparent = this.getParent(item);\n\t\t\t}\n\t\t},\n\t\t_add_branch: function(item, index, parent){\n\t\t\tvar pid = parent === undefined ? this.getParent(item) : parent;\n\t\t\tif (!this.hasChild(pid))\n\t\t\t\tthis._branches[pid] = powerArray.$create();\n\t\t\tvar branch = this.getChildren(pid);\n\t\t\tvar added_already = false;\n\t\t\tfor(var i = 0, length = branch.length; i < length; i++){\n\t\t\t\tif(branch[i] == item.id){\n\t\t\t\t\tadded_already = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(!added_already){\n\t\t\t\tif(index*1 == index){\n\n\t\t\t\t\tbranch.splice(index, 0, item.id);\n\t\t\t\t}else{\n\t\t\t\t\tbranch.push(item.id);\n\t\t\t\t}\n\n\t\t\t\titem.$rendered_parent = pid;\n\t\t\t}\n\t\t},\n\t\t_move_branch: function(item, old_parent, new_parent){\n\t\t\t//this.setParent(item, new_parent);\n\t\t\t//this._sync_parent(task);\n\t\t\tthis._replace_branch_child(old_parent, item.id);\n\t\t\tif(this.exists(new_parent) || new_parent == this.$getRootId()){\n\n\t\t\t\tthis._add_branch(item, undefined, new_parent);\n\t\t\t}else{\n\t\t\t\tdelete this._branches[item.id];\n\t\t\t}\n\t\t\titem.$level =  this.calculateItemLevel(item);\n\t\t\tthis.eachItem(function(child){\n\t\t\t\tchild.$level = this.calculateItemLevel(child);\n\t\t\t}, item.id);\n\t\t},\n\n\t\t_replace_branch_child: function(node, old_id, new_id){\n\t\t\tvar branch = this.getChildren(node);\n\t\t\tif (branch && node !== undefined){\n\t\t\t\tvar newbranch = powerArray.$create();\n\t\t\t\tfor (var i=0; i<branch.length; i++){\n\t\t\t\t\tif (branch[i] != old_id)\n\t\t\t\t\t\tnewbranch.push(branch[i]);\n\t\t\t\t\telse if (new_id)\n\t\t\t\t\t\tnewbranch.push(new_id);\n\t\t\t\t}\n\t\t\t\tthis._branches[node] = newbranch;\n\t\t\t}\n\n\t\t},\n\n\t\tsort: function(field, desc, parent){\n\t\t\tif (!this.exists(parent)) {\n\t\t\t\tparent = this.$getRootId();\n\t\t\t}\n\n\t\t\tif (!field) field = \"order\";\n\t\t\tvar criteria = (typeof(field) == \"string\") ? (function(a, b) {\n\t\t\t\tif(a[field] == b[field]){\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\t\t\t\tvar result = a[field] > b[field];\n\t\t\t\treturn result ? 1 : -1;\n\t\t\t}) : field;\n\n\t\t\tif (desc) {\n\t\t\t\tvar original_criteria = criteria;\n\t\t\t\tcriteria = function (a, b) {\n\t\t\t\t\treturn original_criteria(b, a);\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar els = this.getChildren(parent);\n\t\t\tif (els){\n\t\t\t\tvar temp = [];\n\t\t\t\tfor (var i = els.length - 1; i >= 0; i--)\n\t\t\t\t\ttemp[i] = this.getItem(els[i]);\n\n\t\t\t\ttemp.sort(criteria);\n\n\t\t\t\tfor (var i = 0; i < temp.length; i++) {\n\t\t\t\t\tels[i] = temp[i].id;\n\t\t\t\t\tthis.sort(field, desc, els[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tfilter: function(rule){\n\t\t\tfor(var i  in this.pull){\n\t\t\t\tif(this.pull[i].$rendered_parent !== this.getParent(this.pull[i])){\n\t\t\t\t\tthis._move_branch(this.pull[i], this.pull[i].$rendered_parent, this.getParent(this.pull[i]));\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn DataStore.prototype.filter.apply(this, arguments);\n\t\t},\n\n\t\topen: function(id){\n\t\t\tif(this.exists(id)){\n\t\t\t\tthis.getItem(id).$open = true;\n\t\t\t\tthis.callEvent(\"onItemOpen\", [id]);\n\t\t\t}\n\t\t},\n\n\t\tclose: function(id){\n\t\t\tif(this.exists(id)){\n\t\t\t\tthis.getItem(id).$open = false;\n\t\t\t\tthis.callEvent(\"onItemClose\", [id]);\n\t\t\t}\n\t\t},\n\n\t\tdestructor: function(){\n\t\t\tDataStore.prototype.destructor.call(this);\n\t\t\tthis._branches = null;\n\t\t}\n\t},\n\tDataStore.prototype\n);\n\nmodule.exports = TreeDataStore;","var utils = require(\"../../utils/utils\");\n\nvar $powerArray  = {\n\t$create: function(array){\n\t\treturn utils.mixin(array || [], this);\n\t},\n\t//remove element at specified position\n\t$removeAt:function(pos,len){\n\t\tif (pos>=0) this.splice(pos,(len||1));\n\t},\n\t//find element in collection and remove it\n\t$remove:function(value){\n\t\tthis.$removeAt(this.$find(value));\n\t},\n\t//add element to collection at specific position\n\t$insertAt:function(data,pos){\n\t\tif (!pos && pos!==0) \t//add to the end by default\n\t\t\tthis.push(data);\n\t\telse {\n\t\t\tvar b = this.splice(pos,(this.length-pos));\n\t\t\tthis[pos] = data;\n\t\t\tthis.push.apply(this,b); //reconstruct array without loosing this pointer\n\t\t}\n\t},\n\t//return index of element, -1 if it doesn't exists\n\t$find:function(data){\n\t\tfor (var i=0; i<this.length; i++)\n\t\t\tif (data==this[i]) return i;\n\t\treturn -1;\n\t},\n\t//execute some method for each element of array\n\t$each:function(functor,master){\n\t\tfor (var i=0; i < this.length; i++)\n\t\t\tfunctor.call((master||this),this[i]);\n\t},\n\t//create new array from source, by using results of functor\n\t$map:function(functor,master){\n\t\tfor (var i=0; i < this.length; i++)\n\t\t\tthis[i]=functor.call((master||this),this[i]);\n\t\treturn this;\n\t},\n\t$filter:function(functor, master){\n\t\tfor (var i=0; i < this.length; i++)\n\t\t\tif (!functor.call((master||this),this[i])){\n\t\t\t\tthis.splice(i,1);\n\t\t\t\ti--;\n\t\t\t}\n\t\treturn this;\n\t}\n};\n\nmodule.exports = $powerArray;","var powerArray = require(\"./power_array\");\nvar utils = require(\"../../utils/utils\");\nvar eventable = require(\"../../utils/eventable\");\n\nvar DataStore = function(config){\n\tthis.pull = {};\n\tthis.$initItem = config.initItem;\n\tthis.visibleOrder = powerArray.$create();\n\tthis.fullOrder = powerArray.$create();\n\tthis._skip_refresh = false;\n\tthis._filterRule = null;\n\tthis._searchVisibleOrder = {};\n\teventable(this);\n\treturn this;\n};\nDataStore.prototype = {\n\n\t_parseInner: function(data){\n\t\tvar item = null,\n\t\t\tloaded = [];\n\t\tfor(var i = 0, len = data.length; i< len; i++){\n\t\t\titem = data[i];\n\t\t\tif(this.$initItem){\n\t\t\t\titem = this.$initItem(item);\n\t\t\t}\n\t\t\tif(this.callEvent(\"onItemLoading\", [item])){\n\t\t\t\tif (!this.pull.hasOwnProperty(item.id)) {\n\t\t\t\t\tthis.fullOrder.push(item.id);\n\t\t\t\t\tloaded.push(item);\n\t\t\t\t}\n\t\t\t\tthis.pull[item.id] = item;\n\t\t\t}\n\t\t}\n\t\treturn loaded;\n\t},\n\tparse: function(data){\n\t\tthis.callEvent(\"onBeforeParse\", [data]);\n\t\tvar loaded = this._parseInner(data);\n\t\tthis.refresh();\n\t\tthis.callEvent(\"onParse\", [loaded]);\n\t},\n\tgetItem: function(id){\n\t\treturn this.pull[id];\n\t},\n\n\t_updateOrder: function(code){\n\t\tcode.call(this.visibleOrder);\n\t\tcode.call(this.fullOrder);\n\t},\n\tupdateItem: function(id, item){\n\t\tif (!utils.defined(item)) item = this.getItem(id);\n\n\t\tif (!this._skip_refresh) {\n\t\t\tif (this.callEvent(\"onBeforeUpdate\", [item.id, item]) === false) return false;\n\t\t}\n\t\tthis.pull[id]=item;\n\t\tif (!this._skip_refresh) {\n\t\t\tthis.callEvent(\"onAfterUpdate\", [item.id, item]);\n\t\t\tthis.callEvent(\"onStoreUpdated\", [item.id, item, \"update\"]);\n\t\t}\n\t},\n\n\t_removeItemInner: function(id){\n\t\t//clear from collections\n\t\t//this.visibleOrder.$remove(id);\n\t\tthis._updateOrder(function(){ this.$remove(id);});\n\t\tdelete this.pull[id];\n\t},\n\n\tremoveItem: function(id){\n\t\t//utils.assert(this.exists(id), \"Not existing ID in remove command\"+id);\n\n\t\tvar obj = this.getItem(id);\t//save for later event\n\t\tif (!this._skip_refresh) {\n\t\t\tif (this.callEvent(\"onBeforeDelete\", [obj.id, obj]) === false) return false;\n\t\t}\n\n\t\tthis._removeItemInner(id);\n\n\t\tif (!this._skip_refresh) {\n\t\t\tthis.filter();\n\t\t\tthis.callEvent(\"onAfterDelete\", [obj.id, obj]);\n\t\t\t//repaint signal\n\t\t\tthis.callEvent(\"onStoreUpdated\", [obj.id, obj, \"delete\"]);\n\t\t}\n\t},\n\n\t_addItemInner: function(item, index){\n\t\t//in case of treetable order is sent as 3rd parameter\n\t\t//var order = index;\n\n\t\tif(this.exists(item.id)){\n\t\t\tthis.silent(function(){this.updateItem(item.id, item);});\n\t\t}else{\n\t\t\tvar order = this.visibleOrder;\n\n\t\t\t//by default item is added to the end of the list\n\t\t\tvar data_size = order.length;\n\n\t\t\tif (!utils.defined(index) || index < 0)\n\t\t\t\tindex = data_size;\n\t\t\t//check to prevent too big indexes\n\t\t\tif (index > data_size){\n\t\t\t\t//dhx.log(\"Warning\",\"DataStore:add\",\"Index of out of bounds\");\n\t\t\t\tindex = Math.min(order.length,index);\n\t\t\t}\n\t\t}\n\n\n\t\t//gantt.assert(!this.exists(id), \"Not unique ID\");\n\n\t\tthis.pull[item.id]=item;\n\t\tif (!this._skip_refresh){\n\t\t\tthis._updateOrder(function(){\n\t\t\t\tif(this.$find(item.id) === -1)\n\t\t\t\t\tthis.$insertAt(item.id,index);\n\t\t\t});\n\t\t}\n\t\tthis.filter();\n\t\t//order.$insertAt(item.id,index);\n\t},\n\n\n\tisVisible: function(id){\n\t\treturn this.visibleOrder.$find(id) > -1;\n\t},\n\tgetVisibleItems: function(){\n\t\treturn this.getIndexRange();\n\t},\n\n\taddItem: function(item, index){\n\t\tif (!utils.defined(item.id))\n\t\t\titem.id = utils.uid();\n\n\t\tif(this.$initItem){\n\t\t\titem = this.$initItem(item);\n\t\t}\n\n\t\tif (!this._skip_refresh){\n\t\t\tif (this.callEvent(\"onBeforeAdd\", [item.id, item]) === false) return false;\n\t\t}\n\n\n\t\tthis._addItemInner(item, index);\n\n\t\tif (!this._skip_refresh){\n\t\t\tthis.callEvent(\"onAfterAdd\",[item.id, item]);\n\t\t\t//repaint signal\n\t\t\tthis.callEvent(\"onStoreUpdated\",[item.id,item,\"add\"]);\n\t\t}\n\t\treturn item.id;\n\t},\n\n\t_changeIdInner: function(oldId, newId){\n\t\tif(this.pull[oldId])\n\t\t\tthis.pull[newId] = this.pull[oldId];\n\n\t\tvar visibleOrder = this._searchVisibleOrder[oldId];\n\t\tthis.pull[newId].id = newId;\n\t\tthis._updateOrder(function(){\n\t\t\tthis[this.$find(oldId)] = newId;\n\t\t});\n\t\tthis._searchVisibleOrder[newId] = visibleOrder;\n\t\tdelete this._searchVisibleOrder[oldId];\n\n\t\t//this.visibleOrder[this.visibleOrder.$find(oldId)]=newId;\n\t\tdelete this.pull[oldId];\n\t},\n\tchangeId: function(oldId, newId){\n\t\tthis._changeIdInner(oldId, newId);\n\n\t\tthis.callEvent(\"onIdChange\", [oldId, newId]);\n\n\t},\n\texists: function(id){\n\t\treturn !!(this.pull[id]);\n\t},\n\n\t_moveInner: function(sindex, tindex){\n\t\tvar id = this.getIdByIndex(sindex);\n\n\t\tthis._updateOrder(function(){\n\t\t\tthis.$removeAt(sindex);\n\t\t\tthis.$insertAt(id,Math.min(this.length, tindex));\n\t\t});\n\t\t//this.visibleOrder.$removeAt(sindex);\t//remove at old position\n\t\t//if (sindex<tindex) tindex--;\t//correct shift, caused by element removing\n\t\t//this.visibleOrder.$insertAt(id,Math.min(this.visibleOrder.length, tindex));\t//insert at new position\n\t},\n\n\tmove: function(sindex, tindex){\n\t\t//gantt.assert(sindex>=0 && tindex>=0, \"DataStore::move\",\"Incorrect indexes\");\n\n\t\tvar id = this.getIdByIndex(sindex);\n\t\tvar obj = this.getItem(id);\n\t\tthis._moveInner(sindex, tindex);\n\n\n\t\tif (!this._skip_refresh) {\n\t\t\t//repaint signal\n\t\t\tthis.callEvent(\"onStoreUpdated\", [obj.id, obj, \"move\"]);\n\t\t}\n\t},\n\tclearAll: function(){\n\t\tthis.pull = {};\n\t\tthis.visibleOrder = powerArray.$create();\n\t\tthis.fullOrder = powerArray.$create();\n\t\tif (this._skip_refresh) return;\n\t\tthis.callEvent(\"onClearAll\",[]);\n\t\tthis.refresh();\n\t},\n\n\tsilent:function(code, master){\n\t\tthis._skip_refresh = true;\n\t\tcode.call(master||this);\n\t\tthis._skip_refresh = false;\n\t},\n\n\tarraysEqual: function (arr1, arr2) {\n\t\tif(arr1.length !== arr2.length)\n\t\t\treturn false;\n\t\tfor(var i = 0; i < arr1.length; i++) {\n\t\t\tif(arr1[i] !== arr2[i])\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t},\n\n\trefresh: function(id, quick){\n\t\tif (this._skip_refresh) return;\n\n\t\tif(id){\n\t\t\t// if item changes visible order (e.g. expand-collapse branch) - do a complete repaint\n\t\t\tif(!quick){\n\t\t\t\tvar oldOrder = this.visibleOrder;\n\t\t\t\tthis.filter();\n\t\t\t\tif(!this.arraysEqual(oldOrder, this.visibleOrder)){\n\t\t\t\t\tid = undefined;\n\t\t\t\t}\n\t\t\t}\n\n\t\t}else{\n\t\t\tthis.filter();\n\t\t}\n\n\t\tif (id)\n\t\t\tthis.callEvent(\"onStoreUpdated\",[id, this.pull[id], \"paint\"]);\n\t\telse\n\t\t\tthis.callEvent(\"onStoreUpdated\",[null,null,null]);\n\t},\n\n\tcount: function(){\n\t\treturn this.fullOrder.length;\n\t},\n\tcountVisible: function(){\n\t\treturn this.visibleOrder.length;\n\t},\n\n\tsort: function(sort){},\n\n\tserialize: function(){},\n\n\teachItem: function(code){\n\t\tfor (var i=0; i<this.fullOrder.length; i++) {\n\t\t\tvar item = this.pull[this.fullOrder[i]];\n\t\t\tcode.call(this, item);\n\t\t}\n\t},\n\t\n\tfilter: function(rule){\n\t\tvar filteredOrder = powerArray.$create();\n\t\tthis.eachItem(function(item){\n\t\t\tif(this.callEvent(\"onFilterItem\", [item.id, item])){\n\t\t\t\tfilteredOrder.push(item.id);\n\t\t\t}\n\t\t});\n\n\t\tthis.visibleOrder = filteredOrder;\n\t\tthis._searchVisibleOrder = {};\n\t\tfor(var i = 0; i < this.visibleOrder.length; i++){\n\t\t\tthis._searchVisibleOrder[this.visibleOrder[i]] = i;\n\t\t}\n\t},\n\n\tgetIndexRange: function(from, to){\n\t\tto=Math.min((to||Infinity),this.countVisible()-1);\n\n\t\tvar ret= [];\n\t\tfor (var i=(from||0); i <= to; i++)\n\t\t\tret.push(this.getItem(this.visibleOrder[i]));\n\t\treturn ret;\n\t},\n\tgetItems: function(){\n\t\tvar res = [];\n\t\tfor(var i in this.pull){\n\t\t\tres.push(this.pull[i]);\n\t\t}\n\t/*\tfor(var i = 0; i < this.fullOrder.length; i++){\n\n\t\t}*/\n\t\treturn res;\n\t},\n\n\tgetIdByIndex: function(index){\n\t\treturn this.visibleOrder[index];\n\t},\n\tgetIndexById: function(id){\n\t\tvar res = this._searchVisibleOrder[id];\n\t\tif(res === undefined){\n\t\t\tres = -1;\n\t\t}\n\t\treturn res;\n\t},\n\t_getNullIfUndefined: function(value){\n\t\tif(value === undefined){\n\t\t\treturn null;\n\t\t}else{\n\t\t\treturn value;\n\t\t}\n\t},\n\tgetFirst: function(){\n\t\treturn this._getNullIfUndefined(this.visibleOrder[0]);\n\t},\n\tgetLast: function(){\n\t\treturn this._getNullIfUndefined(this.visibleOrder[this.visibleOrder.length-1]);\n\t},\n\tgetNext: function(id){\n\t\treturn this._getNullIfUndefined(this.visibleOrder[this.getIndexById(id) + 1]);\n\t},\n\tgetPrev: function(id){\n\t\treturn this._getNullIfUndefined(this.visibleOrder[this.getIndexById(id) - 1]);\n\t},\n\tdestructor: function(){\n\t\tthis.detachAllEvents();\n\t\tthis.pull = null;\n\t\tthis.$initItem = null;\n\t\tthis.visibleOrder = null;\n\t\tthis.fullOrder = null;\n\t\tthis._skip_refresh = null;\n\t\tthis._filterRule = null;\n\t\tthis._searchVisibleOrder = null;\n\t}\n};\n\nmodule.exports = DataStore;","function createTaskRenderer(gantt){\n\n\tfunction _render_task_element(task, view) {\n\t\tvar config = view.$getConfig();\n\t\tvar painters = config.type_renderers;\n\t\tvar renderer = painters[gantt.getTaskType(task.type)],\n\t\t\tdefaultRenderer = _task_default_render;\n\n\t\tif (!renderer) {\n\t\t\treturn defaultRenderer.call(gantt, task, view);\n\t\t}else{\n\t\t\treturn renderer.call(gantt, task, function(task){ return defaultRenderer.call(gantt, task, view);}, view);\n\t\t}\n\t}\n\n\tfunction _task_default_render(task, view) {\n\t\tif (gantt._isAllowedUnscheduledTask(task))\n\t\t\treturn;\n\n\n\t\tvar pos = view.getItemPosition(task);\n\n\t\tvar cfg = view.$getConfig(),\n\t\t\ttemplates = view.$getTemplates();\n\t\tvar height = view.getItemHeight();\n\n\t\tvar taskType = gantt.getTaskType(task.type);\n\n\t\tvar padd = Math.floor((gantt.config.row_height - height) / 2);\n\t\tif (taskType == cfg.types.milestone && cfg.link_line_width > 1) {\n\t\t\t//little adjust milestone position, so horisontal corners would match link arrow when thickness of link line is more than 1px\n\t\t\tpadd += 1;\n\t\t}\n\n\t\tif (taskType == cfg.types.milestone){\n\t\t\tpos.left -= Math.round(height / 2);\n\t\t\tpos.width = height;\n\t\t}\n\n\t\tvar div = document.createElement(\"div\");\n\n\t\tvar width = Math.round(pos.width);\n\n\t\tif(view.$config.item_attribute){\n\t\t\tdiv.setAttribute(view.$config.item_attribute, task.id);\n\t\t}\n\n\t\tif (cfg.show_progress && taskType != cfg.types.milestone) {\n\t\t\t_render_task_progress(task, div, width, cfg, templates);\n\t\t}\n\n\t\t//use separate div to display content above progress bar\n\t\tvar content = _render_task_content(task, width, templates);\n\t\tif (task.textColor) {\n\t\t\tcontent.style.color = task.textColor;\n\t\t}\n\t\tdiv.appendChild(content);\n\n\t\tvar css = _combine_item_class(\"gantt_task_line\",\n\t\t\ttemplates.task_class(task.start_date, task.end_date, task),\n\t\t\ttask.id,\n\t\t\tview);\n\t\tif (task.color || task.progressColor || task.textColor) {\n\t\t\tcss += \" gantt_task_inline_color\";\n\t\t}\n\t\tdiv.className = css;\n\n\t\tvar styles = [\n\t\t\t\"left:\" + pos.left + \"px\",\n\t\t\t\"top:\" + (padd + pos.top) + 'px',\n\t\t\t\"height:\" + height + 'px',\n\t\t\t\"line-height:\" + (Math.max(height < 30 ? height - 2 : height, 0)) + 'px',\n\t\t\t\"width:\" + width + 'px'\n\t\t];\n\t\tif (task.color) {\n\t\t\tstyles.push(\"background-color:\" + task.color);\n\t\t}\n\t\tif (task.textColor) {\n\t\t\tstyles.push(\"color:\" + task.textColor);\n\t\t}\n\n\t\tdiv.style.cssText = styles.join(\";\");\n\t\tvar side = _render_leftside_content(task, cfg, templates);\n\t\tif (side) div.appendChild(side);\n\n\t\tside = _render_rightside_content(task, cfg, templates);\n\t\tif (side) div.appendChild(side);\n\n\t\tgantt._waiAria.setTaskBarAttr(task, div);\n\n\t\tvar state = gantt.getState();\n\n\t\tif (!gantt.isReadonly(task)) {\n\t\t\tif (cfg.drag_resize && !gantt.isSummaryTask(task) && taskType != cfg.types.milestone) {\n\t\t\t\t_render_pair(div, \"gantt_task_drag\", task, function (css) {\n\t\t\t\t\tvar el = document.createElement(\"div\");\n\t\t\t\t\tel.className = css;\n\t\t\t\t\treturn el;\n\t\t\t\t}, cfg);\n\t\t\t}\n\t\t\tif (cfg.drag_links && cfg.show_links) {\n\t\t\t\t_render_pair(div, \"gantt_link_control\", task, function (css) {\n\t\t\t\t\tvar outer = document.createElement(\"div\");\n\t\t\t\t\touter.className = css;\n\t\t\t\t\touter.style.cssText = [\n\t\t\t\t\t\t\"height:\" + height + 'px',\n\t\t\t\t\t\t\"line-height:\" + height + 'px'\n\t\t\t\t\t].join(\";\");\n\t\t\t\t\tvar inner = document.createElement(\"div\");\n\t\t\t\t\tinner.className = \"gantt_link_point\";\n\n\t\t\t\t\tvar showLinkPoints = false;\n\t\t\t\t\tif(state.link_source_id && cfg.touch){\n\t\t\t\t\t\tshowLinkPoints = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tinner.style.display = showLinkPoints ? \"block\" : \"\";\n\t\t\t\t\touter.appendChild(inner);\n\t\t\t\t\treturn outer;\n\t\t\t\t}, cfg);\n\t\t\t}\n\t\t}\n\t\treturn div;\n\t}\n\n\tfunction _render_side_content(task, template, cssClass) {\n\t\tif (!template) return null;\n\n\t\tvar text = template(task.start_date, task.end_date, task);\n\t\tif (!text) return null;\n\t\tvar content = document.createElement(\"div\");\n\t\tcontent.className = \"gantt_side_content \" + cssClass;\n\t\tcontent.innerHTML = text;\n\t\treturn content;\n\t}\n\n\tfunction _render_leftside_content(task, cfg, templates) {\n\t\tvar css = \"gantt_left \" + _get_link_crossing_css(!cfg.rtl ? true : false, task, cfg);\n\t\treturn _render_side_content(task, templates.leftside_text, css);\n\t}\n\n\tfunction _render_rightside_content(task, cfg, templates) {\n\t\tvar css = \"gantt_right \" + _get_link_crossing_css(!cfg.rtl ? false : true, task, cfg);\n\t\treturn _render_side_content(task, templates.rightside_text, css);\n\t}\n\n\tfunction _get_link_crossing_css(left, task) {\n\t\tvar cond = _get_conditions(left);\n\n\t\tfor (var i in cond) {\n\t\t\tvar links = task[i];\n\t\t\tfor (var ln = 0; ln < links.length; ln++) {\n\t\t\t\tvar link = gantt.getLink(links[ln]);\n\n\t\t\t\tfor (var tp = 0; tp < cond[i].length; tp++) {\n\t\t\t\t\tif (link.type == cond[i][tp]) {\n\t\t\t\t\t\treturn \"gantt_link_crossing\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn \"\";\n\t}\n\n\n\tfunction _render_task_content(task, width, templates) {\n\t\tvar content = document.createElement(\"div\");\n\t\tif (gantt.getTaskType(task.type) != gantt.config.types.milestone)\n\t\t\tcontent.innerHTML = templates.task_text(task.start_date, task.end_date, task);\n\t\tcontent.className = \"gantt_task_content\";\n\t\t//content.style.width = width + 'px';\n\t\treturn content;\n\t}\n\n\tfunction _render_task_progress(task, element, maxWidth, cfg, templates) {\n\t\tvar done = task.progress * 1 || 0;\n\n\t\tmaxWidth = Math.max(maxWidth - 2, 0);//2px for borders\n\t\tvar pr = document.createElement(\"div\");\n\t\tvar width = Math.round(maxWidth * done);\n\n\t\twidth = Math.min(maxWidth, width);\n\t\tif (task.progressColor) {\n\t\t\tpr.style.backgroundColor = task.progressColor;\n\t\t\tpr.style.opacity = 1;\n\t\t}\n\t\tpr.style.width = width + 'px';\n\t\tpr.className = \"gantt_task_progress\";\n\t\tpr.innerHTML = templates.progress_text(task.start_date, task.end_date, task);\n\n\t\tif(cfg.rtl){\n\t\t\tpr.style.position = \"absolute\";\n\t\t\tpr.style.right = \"0px\";\n\t\t}\n\n\t\tvar wrapper = document.createElement(\"div\");\n\t\twrapper.className = \"gantt_task_progress_wrapper\";\n\t\twrapper.appendChild(pr);\n\t\telement.appendChild(wrapper);\n\n\t\tif (gantt.config.drag_progress && !gantt.isReadonly(task)) {\n\t\t\tvar drag = document.createElement(\"div\");\n\n\t\t\tvar markerPos = width;\n\t\t\tif(cfg.rtl){\n\t\t\t\tmarkerPos = maxWidth - width;\n\t\t\t}\n\n\t\t\tdrag.style.left = markerPos + 'px';\n\t\t\tdrag.className = \"gantt_task_progress_drag\";\n\t\t\tpr.appendChild(drag);\n\t\t\telement.appendChild(drag);\n\t\t}\n\t}\n\n\tfunction _get_conditions(leftside) {\n\t\tif (leftside) {\n\t\t\treturn {\n\t\t\t\t$source: [\n\t\t\t\t\tgantt.config.links.start_to_start\n\t\t\t\t],\n\t\t\t\t$target: [\n\t\t\t\t\tgantt.config.links.start_to_start,\n\t\t\t\t\tgantt.config.links.finish_to_start\n\t\t\t\t]\n\t\t\t};\n\t\t} else {\n\t\t\treturn {\n\t\t\t\t$source: [\n\t\t\t\t\tgantt.config.links.finish_to_start,\n\t\t\t\t\tgantt.config.links.finish_to_finish\n\t\t\t\t],\n\t\t\t\t$target: [\n\t\t\t\t\tgantt.config.links.finish_to_finish\n\t\t\t\t]\n\t\t\t};\n\t\t}\n\t}\n\n\tfunction _combine_item_class(basic, template, itemId, view) {\n\t\tvar cfg = view.$getConfig();\n\t\tvar css = [basic];\n\t\tif (template)\n\t\t\tcss.push(template);\n\n\t\tvar state = gantt.getState();\n\n\t\tvar task = gantt.getTask(itemId);\n\n\t\tif (gantt.getTaskType(task.type) == cfg.types.milestone) {\n\t\t\tcss.push(\"gantt_milestone\");\n\t\t}else if (gantt.getTaskType(task.type) == cfg.types.project) {\n\t\t\tcss.push(\"gantt_project\");\n\t\t}\n\n\t\tcss.push(\"gantt_bar_\" + gantt.getTaskType(task.type));\n\n\n\t\tif (gantt.isSummaryTask(task))\n\t\t\tcss.push(\"gantt_dependent_task\");\n\n\t\tif (gantt.isSplitTask(task)) {\n\t\t\tcss.push(\"gantt_split_parent\");\n\t\t}\n\n\t\tif (cfg.select_task && itemId == state.selected_task)\n\t\t\tcss.push(\"gantt_selected\");\n\n\t\tif (itemId == state.drag_id) {\n\t\t\tcss.push(\"gantt_drag_\" + state.drag_mode);\n\t\t\tif (state.touch_drag) {\n\t\t\t\tcss.push(\"gantt_touch_\" + state.drag_mode);\n\t\t\t}\n\t\t}\n\n\t\tif (state.link_source_id == itemId)\n\t\t\tcss.push(\"gantt_link_source\");\n\n\t\tif (state.link_target_id == itemId)\n\t\t\tcss.push(\"gantt_link_target\");\n\n\n\t\tif (cfg.highlight_critical_path && gantt.isCriticalTask) {\n\t\t\tif (gantt.isCriticalTask(task))\n\t\t\t\tcss.push(\"gantt_critical_task\");\n\t\t}\n\n\t\tif (state.link_landing_area &&\n\t\t\t(state.link_target_id && state.link_source_id) &&\n\t\t\t(state.link_target_id != state.link_source_id)) {\n\n\t\t\tvar from_id = state.link_source_id;\n\t\t\tvar from_start = state.link_from_start;\n\t\t\tvar to_start = state.link_to_start;\n\n\t\t\tvar allowDrag = gantt.isLinkAllowed(from_id, itemId, from_start, to_start);\n\n\t\t\tvar dragClass = \"\";\n\t\t\tif (allowDrag) {\n\t\t\t\tif (to_start)\n\t\t\t\t\tdragClass = \"link_start_allow\";\n\t\t\t\telse\n\t\t\t\t\tdragClass = \"link_finish_allow\";\n\t\t\t} else {\n\t\t\t\tif (to_start)\n\t\t\t\t\tdragClass = \"link_start_deny\";\n\t\t\t\telse\n\t\t\t\t\tdragClass = \"link_finish_deny\";\n\t\t\t}\n\t\t\tcss.push(dragClass);\n\t\t}\n\t\treturn css.join(\" \");\n\t}\n\n\tfunction _render_pair(parent, css, task, content, config) {\n\t\tvar state = gantt.getState();\n\t\tvar className, element;\n\t\tif (+task.start_date >= +state.min_date) {\n\t\t\tclassName = [css, config.rtl ? \"task_right\" : \"task_left\", \"task_start_date\"];\n\t\t\telement = content(className.join(\" \"));\n\t\t\telement.setAttribute(\"data-bind-property\", \"start_date\");\n\t\t\tparent.appendChild(element);\n\t\t}\n\n\t\tif (+task.end_date <= +state.max_date){\n\t\t\tclassName = [css, config.rtl ? \"task_left\" : \"task_right\", \"task_end_date\"];\n\t\t\telement = content(className.join(\" \"));\n\t\t\telement.setAttribute(\"data-bind-property\", \"end_date\");\n\t\t\tparent.appendChild(element);\n\t\t}\n\n\t}\n\n\treturn _render_task_element;\n}\n\nmodule.exports = createTaskRenderer;","function createMixin(_super){\n\treturn {\n\t\trefresh: function() {\n\t\t\tthis._linkToTaskStore();\n\t\t\t_super.prototype.refresh.apply(this, arguments);\n\t\t},\n\n\t\t_linkToTaskStore: function () {\n\n\t\t\tif (this.$config.rowStore && this.$gantt.$data.tasksStore) {\n\t\t\t\tvar tasks = this.$gantt.$data.tasksStore;\n\t\t\t\tvar ownStore = this.$config.rowStore;\n\n\t\t\t\tif (!tasks[\"_attached_\" + ownStore.name]) {\n\t\t\t\t\ttasks[\"_attached_\" + ownStore.name] = true;\n\t\t\t\t\tvar updateDelay;\n\t\t\t\t\ttasks.attachEvent(\"onStoreUpdated\", function (id, item, mode) {\n\t\t\t\t\t\tif(window.requestAnimationFrame){\n\t\t\t\t\t\t\tcancelAnimationFrame(updateDelay);\n\t\t\t\t\t\t\tupdateDelay = requestAnimationFrame(function(){\n\t\t\t\t\t\t\t\townStore.refresh();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\townStore.refresh();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tthis._linkToTaskStore = function () {\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t};\n}\n\nmodule.exports = createMixin;","\nvar ScaleHelper = require(\"./scales\");\n\nfunction ScaleIgnoreHelper(gantt){\n\tvar helper = new ScaleHelper(gantt);\n\n\thelper.processIgnores = function (config) {\n\t\tvar display_count = config.count;\n\t\tconfig.ignore_x = {};\n\t\tif (gantt.ignore_time || gantt.config.skip_off_time) {\n\t\t\tvar ignore = gantt.ignore_time || function () {\n\t\t\t\treturn false;\n\t\t\t};\n\t\t\tdisplay_count = 0;\n\n\t\t\tfor (var i = 0; i < config.trace_x.length; i++) {\n\n\t\t\t\tif (ignore.call(gantt, config.trace_x[i]) || this._ignore_time_config.call(gantt, config.trace_x[i], config)) {\n\t\t\t\t\tconfig.ignore_x[config.trace_x[i].valueOf()] = true;\n\t\t\t\t\tconfig.ignored_colls = true;\n\t\t\t\t} else {\n\t\t\t\t\tdisplay_count++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t\tconfig.display_count = display_count;\n\t};\n\n\treturn helper;\n}\n\nmodule.exports = ScaleIgnoreHelper;","var ScaleHelper = require(\"./scales_ignore\");\nvar eventable = require(\"../../../utils/eventable\");\nvar utils = require(\"../../../utils/utils\");\n\nvar canvasRender = require(\"./tasks_canvas_render\");\n\nvar Timeline = function(parent, config, factory, gantt){\n\tthis.$config = utils.mixin({}, config || {});\n\tthis.$scaleHelper = new ScaleHelper(gantt);\n\tthis.$gantt = gantt;\n\teventable(this);\n};\n\nTimeline.prototype = {\n\tinit: function(container){\n\t\tcontainer.innerHTML += \"<div class='gantt_task' style='width:inherit;height:inherit;'></div>\";\n\t\tthis.$task = container.childNodes[0];\n\n\t\tthis.$task.innerHTML = \"<div class='gantt_task_scale'></div><div class='gantt_data_area'></div>\";\n\t\tthis.$task_scale = this.$task.childNodes[0];\n\n\t\tthis.$task_data = this.$task.childNodes[1];\n\t\tthis.$task_data.innerHTML = \"<div class='gantt_task_bg'></div><div class='gantt_links_area'></div><div class='gantt_bars_area'></div>\";\n\t\tthis.$task_bg = this.$task_data.childNodes[0];\n\t\tthis.$task_links = this.$task_data.childNodes[1];\n\t\tthis.$task_bars = this.$task_data.childNodes[2];\n\n\t\tthis._tasks = {\n\t\t\tcol_width: 0,\n\t\t\twidth: [], // width of each column\n\t\t\tfull_width: 0, // width of all columns\n\t\t\ttrace_x: [],\n\t\t\trendered: {}\n\t\t};\n\n\t\tvar config = this.$getConfig();\n\t\tvar attr = config[this.$config.bind + \"_attribute\"];\n\t\tvar linksAttr = config[this.$config.bindLinks + \"_attribute\"];\n\t\tif(!attr && this.$config.bind){\n\t\t\tattr = this.$config.bind + \"_id\";\n\t\t}\n\t\tif(!linksAttr && this.$config.bindLinks){\n\t\t\tlinksAttr = this.$config.bindLinks + \"_id\";\n\t\t}\n\t\tthis.$config.item_attribute = attr || null;\n\t\tthis.$config.link_attribute = linksAttr || null;\n\n\t\tvar layers = this._createLayerConfig();\n\t\tif(!this.$config.layers){\n\t\t\tthis.$config.layers = layers.tasks;\n\t\t}\n\t\tif(!this.$config.linkLayers){\n\t\t\tthis.$config.linkLayers = layers.links;\n\t\t}\n\n\t\tthis._attachLayers(this.$gantt);\n\t\tthis.callEvent(\"onReady\", []);\n\t\t//this.refresh();\n\t},\n\n\tsetSize: function(width, height){\n\t\tvar config = this.$getConfig();\n\n\t\tif(width*1 === width){\n\t\t\tthis.$config.width = width;\n\t\t}\n\t\tif(height*1 === height){\n\n\t\t\tthis.$config.height = height;\n\t\t\tvar dataHeight = Math.max(this.$config.height - config.scale_height);\n\t\t\tthis.$task_data.style.height = dataHeight + 'px';\n\t\t}\n\n\t\tthis.refresh();\n\t\tthis.$task_bg.style.backgroundImage = \"\";\n\n\t\tif(config.smart_rendering && this.$config.rowStore){\n\t\t\tvar store = this.$config.rowStore;\n\t\t\tthis.$task_bg.style.height = config.row_height * store.countVisible() +\"px\";\n\t\t}else{\n\t\t\tthis.$task_bg.style.height = \"\";\n\t\t}\n\n\t\tvar scale = this._tasks;\n\t\t//timeline area layers\n\t\tvar data_els = this.$task_data.childNodes;\n\t\tfor(var i= 0, len = data_els.length; i < len; i++){\n\t\t\tvar el = data_els[i];\n\t\t\tif(el.hasAttribute(\"data-layer\") && el.style)\n\t\t\t\tel.style.width = scale.full_width + \"px\";\n\t\t}\n\t},\n\n\tisVisible: function(){\n\t\tif(this.$parent && this.$parent.$config){\n\t\t\treturn !this.$parent.$config.hidden;\n\t\t}else{\n\t\t\treturn this.$task.offsetWidth;\n\t\t}\n\t},\n\n\tgetSize: function(){\n\t\tvar config = this.$getConfig();\n\t\tvar store = this.$config.rowStore;\n\n\t\tvar contentHeight = store ? config.row_height * store.countVisible() : 0,\n\t\t\tcontentWidth = this._tasks.full_width;\n\n\t\treturn {\n\t\t\tx: this.$config.width,\n\t\t\ty: this.$config.height,\n\t\t\tcontentX: this.isVisible() ? contentWidth : 0,\n\t\t\tcontentY: this.isVisible() ? (config.scale_height + contentHeight) : 0,\n\t\t\tscrollHeight: this.isVisible() ? contentHeight : 0,\n\t\t\tscrollWidth: this.isVisible() ? contentWidth : 0\n\t\t};\n\t},\n\n\tscrollTo: function(left, top){\n\t\tif(!this.isVisible())\n\t\t\treturn;\n\n\t\tif(top*1 === top){\n\t\t\tthis.$config.scrollTop = top;\n\t\t\tthis.$task_data.scrollTop = this.$config.scrollTop;\n\t\t}\n\t\tif (left*1 === left){\n\t\t\tthis.$task.scrollLeft = left;\n\t\t\tthis.$config.scrollLeft = this.$task.scrollLeft;\n\t\t\tthis._refreshScales();\n\t\t}\n\t},\n\n\t_refreshScales: function _refreshScales() {\n\t\tif(!this.isVisible())\n\t\t\treturn;\n\n\t\tvar config = this.$getConfig();\n\t\tif (!config.smart_scales) return;\n\n\t\tvar x = this.$config.scrollLeft;\n\t\tvar width = this.$config.width;\n\n\t\tvar scales = this._scales;\n\t\tthis.$task_scale.innerHTML = this._getScaleChunkHtml(scales, x, x + width);\n\t},\n\t_createLayerConfig: function(){\n\t\tvar self = this;\n\t\tvar taskFilter = function(){\n\t\t\treturn self.isVisible();\n\t\t};\n\n\t\tvar taskLayers = [\n\t\t\t{\n\t\t\t\texpose: true,\n\t\t\t\trenderer: this.$gantt.$ui.layers.taskBar,\n\t\t\t\tcontainer: this.$task_bars,\n\t\t\t\tfilter: [taskFilter]\n\t\t\t},\n\t\t\t{\n\t\t\t\trenderer: this.$gantt.$ui.layers.taskSplitBar,\n\t\t\t\tfilter: [taskFilter],\n\t\t\t\tcontainer: this.$task_bars,\n\t\t\t\tappend: true\n\t\t\t},\n\t\t\t{\n\t\t\t\trenderer: this.$gantt.$ui.layers.taskBg,\n\t\t\t\tcontainer: this.$task_bg,\n\t\t\t\tfilter: [\n\t\t\t\t\tfunction(){\n\t\t\t\t\t\treturn !self.$getConfig().static_background;\n\t\t\t\t\t},\n\t\t\t\t\ttaskFilter\n\t\t\t\t]\n\t\t\t}\n\t\t];\n\n\t\tvar linkLayers = [\n\t\t\t{\n\t\t\t\texpose: true,\n\t\t\t\trenderer: this.$gantt.$ui.layers.link,\n\t\t\t\tcontainer: this.$task_links,\n\t\t\t\tfilter: [taskFilter]\n\t\t\t}\n\t\t];\n\n\t\treturn {\n\t\t\ttasks: taskLayers,\n\t\t\tlinks: linkLayers\n\t\t};\n\n\t},\n\n\t_attachLayers: function(gantt){\n\t\tthis._taskLayers = [];\n\t\tthis._linkLayers = [];\n\n\t\tvar self = this;\n\n\t\tvar layers = this.$gantt.$services.getService(\"layers\");\n\n\t\tif(this.$config.bind){\n\n\t\t\tself.$config.rowStore = self.$gantt.getDatastore(self.$config.bind);\n\n\t\t\tvar taskRenderer = layers.getDataRender(this.$config.bind);\n\n\t\t\tif(!taskRenderer){\n\t\t\t\ttaskRenderer = layers.createDataRender({\n\t\t\t\t\tname: this.$config.bind,\n\t\t\t\t\tdefaultContainer: function(){ return self.$task_data;}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\ttaskRenderer.container = function(){ return self.$task_data;};\n\n\t\t\tvar taskLayers = this.$config.layers;\n\t\t\tfor(var i = 0; taskLayers && i < taskLayers.length; i++){\n\t\t\t\tvar layer = taskLayers[i];\n\n\t\t\t\tif(typeof layer == \"string\"){\n\t\t\t\t\tlayer = this.$gantt.$ui.layers[layer];\n\t\t\t\t}\n\n\t\t\t\tif(typeof layer == \"function\"){\n\t\t\t\t\tlayer = {renderer: layer};\n\t\t\t\t}\n\n\t\t\t\tlayer.host = this;\n\t\t\t\tvar bar_layer = taskRenderer.addLayer(layer);\n\t\t\t\tthis._taskLayers.push(bar_layer);\n\t\t\t\tif(layer.expose){\n\t\t\t\t\tthis._taskRenderer = taskRenderer.getLayer(bar_layer);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._initStaticBackgroundRender();\n\t\t}\n\n\t\tif(this.$config.bindLinks){\n\t\t\tself.$config.linkStore = self.$gantt.getDatastore(self.$config.bindLinks);\n\n\t\t\tvar linkRenderer = layers.getDataRender(this.$config.bindLinks);\n\n\t\t\tif(!linkRenderer){\n\t\t\t\tlinkRenderer = layers.createDataRender({\n\t\t\t\t\tname: this.$config.bindLinks,\n\t\t\t\t\tdefaultContainer: function(){ return self.$task_data;}\n\t\t\t\t});\n\t\t\t}\n\t\t\tvar linkLayers = this.$config.linkLayers;\n\t\t\tfor(var i = 0; linkLayers && i < linkLayers.length; i++){\n\n\t\t\t\tif(typeof layer == \"string\"){\n\t\t\t\t\tlayer = this.$gantt.$ui.layers[layer];\n\t\t\t\t}\n\n\t\t\t\tvar layer = linkLayers[i];\n\t\t\t\tlayer.host = this;\n\t\t\t\tvar linkLayer = linkRenderer.addLayer(layer);\n\t\t\t\tthis._taskLayers.push(linkLayer);\n\t\t\t\tif(linkLayers[i].expose){\n\t\t\t\t\tthis._linkRenderer = linkRenderer.getLayer(linkLayer);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t_initStaticBackgroundRender: function(){\n\t\tvar self = this;\n\t\tvar staticRender = canvasRender.create();\n\t\tvar store = self.$config.rowStore;\n\t\tif(!store) return;\n\n\t\tthis._staticBgHandler = store.attachEvent(\"onStoreUpdated\", function(id, item, mode){\n\t\t\tif(id !== null) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif(!self.isVisible())\n\t\t\t\treturn;\n\t\t\tvar config = self.$getConfig();\n\t\t\tif(config.static_background) {\n\t\t\t\tvar store = self.$gantt.getDatastore(self.$config.bind);\n\t\t\t\tif (store) {\n\t\t\t\t\tstaticRender.render(self.$task_bg, config, self.getScale(), config.row_height * store.countVisible());\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis._initStaticBackgroundRender = function(){};//init once\n\t},\n\n\t_clearLayers: function(gantt){\n\t\tvar layers = this.$gantt.$services.getService(\"layers\");\n\t\tvar taskRenderer = layers.getDataRender(this.$config.bind);\n\t\tvar linkRenderer = layers.getDataRender(this.$config.bindLinks);\n\n\t\tfor(var i = 0; i < this._taskLayers.length; i++){\n\t\t\ttaskRenderer.removeLayer(this._taskLayers[i]);\n\t\t}\n\t\tfor(var i = 0; i < this._linkLayers.length; i++){\n\t\t\tlinkRenderer.removeLayer(this._linkLayers[i]);\n\t\t}\n\n\t\tthis._linkLayers = [];\n\t\tthis._taskLayers = [];\n\t},\n\n\t_render_tasks_scales: function _render_tasks_scales() {\n\t\tvar config = this.$getConfig();\n\n\t\tvar scales_html = \"\",\n\t\t\touter_width = 0,\n\t\t\tscale_height = 0;\n\n\t\tvar state = this.$gantt.getState();\n\n\t\tif (this.isVisible()) {\n\t\t\tvar helpers = this.$scaleHelper;\n\t\t\tvar scales = this._getScales();\n\t\t\tscale_height = config.scale_height;\n\n\t\t\tvar availWidth = this.$config.width;\n\t\t\tif(config.autosize == \"x\" || config.autosize == \"xy\"){\n\t\t\t\tavailWidth = Math.max(config.autosize_min_width, 0);\n\t\t\t}\n\n\t\t\tvar cfgs = helpers.prepareConfigs(scales, config.min_column_width, availWidth, scale_height - 1, state.min_date, state.max_date, config.rtl);\n\t\t\tvar cfg = this._tasks = cfgs[cfgs.length - 1];\n\t\t\tthis._scales = cfgs;\n\n\t\t\tscales_html = this._getScaleChunkHtml(cfgs, 0, this.$config.width);\n\n\t\t\touter_width = cfg.full_width + \"px\";//cfg.full_width + (this._scroll_sizes().y ? scrollSizes.scroll_size : 0) + \"px\";\n\t\t\tscale_height += \"px\";\n\t\t}\n\n\t\tthis.$task_scale.style.height = scale_height;\n\n\t\tthis.$task_data.style.width =\n\t\t\tthis.$task_scale.style.width = outer_width;\n\n\t\tthis.$task_scale.innerHTML = scales_html;\n\n\t},\n\n\t_getScaleChunkHtml: function _get_scale_chunk_html (scales, fromPos, toPos) {\n\t\tvar templates = this.$gantt.$services.templates();\n\t\tvar html = [];\n\n\t\tvar css = templates.scale_row_class;\n\t\tfor (var i = 0; i < scales.length; i++) {\n\t\t\tvar cssClass = \"gantt_scale_line\";\n\t\t\tvar tplClass = css(scales[i]);\n\t\t\tif (tplClass) {\n\t\t\t\tcssClass += \" \" + tplClass;\n\t\t\t}\n\n\t\t\thtml.push(\"<div class=\\\"\" + cssClass + \"\\\" style=\\\"height:\" + (scales[i].height) +\n\t\t\t\t\"px;position:relative;line-height:\" + (scales[i].height) + \"px\\\">\" + this._prepareScaleHtml(scales[i], fromPos, toPos) + \"</div>\");\n\t\t}\n\n\t\treturn html.join(\"\");\n\t},\n\t_prepareScaleHtml: function _prepare_scale_html(config, fromPos, toPos) {\n\t\tvar globalConfig = this.$getConfig();\n\t\tvar globalTemplates = this.$gantt.$services.templates();\n\n\t\tvar cells = [];\n\t\tvar date = null, content = null, css = null;\n\n\t\tif (config.template || config.date) {\n\t\t\tcontent = config.template || this.$gantt.date.date_to_str(config.date);\n\t\t}\n\n\t\tvar startIndex = 0,\n\t\t\tendIndex = config.count;\n\n\t\tif (globalConfig.smart_scales && (!isNaN(fromPos) && !isNaN(toPos))) {\n\t\t\tstartIndex = _findBinary(config.left, fromPos);\n\t\t\tendIndex = _findBinary(config.left, toPos) + 1;\n\t\t}\n\n\t\tcss = config.css || function () {\n\t\t\t};\n\t\tif (!config.css && globalConfig.inherit_scale_class) {\n\t\t\tcss = globalTemplates.scale_cell_class;\n\t\t}\n\n\t\tfor (var i = startIndex; i < endIndex; i++) {\n\t\t\tif (!config.trace_x[i]) break;\n\n\t\t\tdate = new Date(config.trace_x[i]);\n\t\t\tvar value = content.call(this, date),\n\t\t\t\twidth = config.width[i],\n\t\t\t\theight = config.height,\n\t\t\t\tleft = config.left[i],\n\t\t\t\tstyle = \"\",\n\t\t\t\ttemplate = \"\",\n\t\t\t\tcssclass = \"\";\n\n\t\t\tif (width) {\n\t\t\t\tvar position = globalConfig.smart_scales ? (\"position:absolute;left:\" + left + \"px\") : \"\";\n\n\t\t\t\tstyle = \"width:\" + (width) + \"px;height:\" + height + \"px;\" + position;\n\t\t\t\tcssclass = \"gantt_scale_cell\" + (i == config.count - 1 ? \" gantt_last_cell\" : \"\");\n\n\t\t\t\ttemplate = css.call(this, date);\n\t\t\t\tif (template) cssclass += \" \" + template;\n\n\t\t\t\tvar ariaAttr = this.$gantt._waiAria.getTimelineCellAttr(value);\n\t\t\t\tvar cell = \"<div class='\" + cssclass + \"'\" + ariaAttr + \" style='\" + style + \"'>\" + value + \"</div>\";\n\t\t\t\tcells.push(cell);\n\t\t\t} else {\n\t\t\t\t//do not render ignored cells\n\t\t\t}\n\n\t\t}\n\t\treturn cells.join(\"\");\n\t},\n\tdateFromPos: function dateFromPos(x) {\n\t\tvar scale = this._tasks;\n\t\tif (x < 0 || x > scale.full_width || !scale.full_width) {\n\t\t\treturn null;\n\t\t}\n\n\t\tvar ind = _findBinary(this._tasks.left, x);\n\t\tvar summ = this._tasks.left[ind];\n\n\t\tvar col_width = scale.width[ind] || scale.col_width;\n\t\tvar part = 0;\n\t\tif (col_width) {\n\t\t\tpart = (x - summ) / col_width;\n\t\t\tif(scale.rtl){\n\t\t\t\tpart = 1 - part;\n\t\t\t}\n\n\t\t}\n\n\t\tvar unit = 0;\n\t\tif (part) {\n\t\t\tunit = this._getColumnDuration(scale, scale.trace_x[ind]);\n\t\t}\n\n\t\tvar date = new Date(scale.trace_x[ind].valueOf() + Math.round(part * unit));\n\t\treturn date;\n\t},\n\tposFromDate: function posFromDate(date) {\n\t\tif (!this.isVisible())\n\t\t\treturn 0;\n\n\t\tvar ind = this.columnIndexByDate(date);\n\t\tthis.$gantt.assert(ind >= 0, \"Invalid day index\");\n\n\t\tvar wholeCells = Math.floor(ind);\n\t\tvar partCell = ind % 1;\n\n\t\tvar pos = this._tasks.left[Math.min(wholeCells, this._tasks.width.length - 1)];\n\t\tif (wholeCells == this._tasks.width.length)\n\t\t\tpos += this._tasks.width[this._tasks.width.length - 1];\n\t\t//for(var i=1; i <= wholeCells; i++)\n\t\t//\tpos += gantt._tasks.width[i-1];\n\n\t\tif (partCell) {\n\t\t\tif (wholeCells < this._tasks.width.length) {\n\t\t\t\tpos += this._tasks.width[wholeCells] * (partCell % 1);\n\t\t\t} else {\n\t\t\t\tpos += 1;\n\t\t\t}\n\n\t\t}\n\t\treturn Math.round(pos);\n\t},\n\tcolumnIndexByDate: function columnIndexByDate(date) {\n\t\tvar pos = new Date(date).valueOf();\n\t\tvar days = this._tasks.trace_x_ascending,\n\t\t\tignores = this._tasks.ignore_x;\n\n\t\tvar state = this.$gantt.getState();\n\n\t\tif (pos <= state.min_date) {\n\t\t\tif(this._tasks.rtl){\n\t\t\t\treturn days.length;\n\t\t\t}else{\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t}\n\n\t\tif (pos >= state.max_date) {\n\t\t\tif(this._tasks.rtl){\n\t\t\t\treturn 0;\n\t\t\t}else{\n\t\t\t\treturn days.length;\n\t\t\t}\n\t\t}\n\n\t\t/*var day = null;\n\t\t for (var xind = 0, length = days.length-1; xind < length; xind++) {\n\t\t // | 8:00, 8:30 | 8:15 should be checked against 8:30\n\t\t // clicking at the most left part of the cell, say 8:30 should create event in that cell, not previous one\n\t\t day = +days[xind+1];\n\t\t if (pos < day && !ignores[day])\n\t\t break;\n\t\t }*/\n\n\t\tvar day_ind = _findBinary(days, pos);\n\t\tvar day = +days[day_ind];\n\t\twhile (ignores[day]) {\n\t\t\tday = +days[++day_ind];\n\t\t}\n\n\t\tvar transition = this._tasks.trace_index_transition;\n\t\tvar index = day_ind;\n\t\tif(!day){\n\t\t\tif(transition){\n\t\t\t\treturn transition[0];\n\t\t\t}else{\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\n\t\tvar part = ((date - days[day_ind]) / this._getColumnDuration(this._tasks, days[day_ind]));\n\t\tif(transition){\n\t\t\treturn transition[index] + (1 - part);\n\t\t}else{\n\t\t\treturn index + part;\n\t\t}\n\n\t\t//return day_ind + ((date - days[day_ind]) / this._getColumnDuration(this._tasks, days[day_ind]));\n\t},\n\tgetItemPosition:function (task, start_date, end_date) {\n\t\tvar xLeft, xRight, width;\n\t\tif(this._tasks.rtl){\n\t\t\txRight = this.posFromDate(start_date || task.start_date);\n\t\t\txLeft = this.posFromDate(end_date || task.end_date);\n\t\t}else{\n\t\t\txLeft = this.posFromDate(start_date || task.start_date);\n\t\t\txRight = this.posFromDate(end_date || task.end_date);\n\t\t}\n\t\twidth =  Math.max((xRight - xLeft), 0);\n\n\t\tvar y = this.getItemTop(task.id);\n\t\tvar height = this.getItemHeight();\n\t\treturn {\n\t\t\tleft: xLeft,\n\t\t\ttop: y,\n\t\t\theight: height,\n\t\t\twidth: width\n\t\t};\n\t},\n\n\tgetItemHeight: function(){\n\t\tvar config = this.$getConfig();\n\n\t\t// height of the bar item\n\t\tvar height = config.task_height;\n\n\t\tif (height == \"full\") {\n\t\t\tvar offset = config.task_height_offset || 5;\n\t\t\theight = config.row_height - offset;\n\t\t}\n\t\t//item height cannot be bigger than row height\n\t\theight = Math.min(height, config.row_height);\n\t\treturn Math.max(height, 0);\n\t},\n\n\tgetRowTop: function(index){\n\t\treturn index * this.$getConfig().row_height;\n\t},\n\n\tgetItemTop: function (task_id) {\n\t\tif(this.$config.rowStore){\n\t\t\tvar store = this.$config.rowStore;\n\t\t\tif(!store) return 0;\n\n\t\t\tif(store.getParent && store.exists(task_id) && store.exists(store.getParent(task_id))){\n\t\t\t\tvar parent = store.getItem(store.getParent(task_id));\n\t\t\t\tif(this.$gantt.isSplitTask(parent)){\n\t\t\t\t\treturn store.getIndexById(parent.id) * this.$getConfig().row_height;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn store.getIndexById(task_id) * this.$getConfig().row_height;\n\n\t\t}else{\n\t\t\treturn 0;\n\t\t}\n\n\t},\n\n\tgetScale: function(){\n\t\treturn this._tasks;\n\t},\n\n\t_getScales: function _get_scales() {\n\t\tvar config = this.$getConfig();\n\t\tvar helpers = this.$scaleHelper;\n\t\tvar scales = [helpers.primaryScale()].concat(config.subscales);\n\n\t\thelpers.sortScales(scales);\n\t\treturn scales;\n\t},\n\n\t_getColumnDuration: function _get_coll_duration(scale, date) {\n\t\treturn this.$gantt.date.add(date, scale.step, scale.unit) - date;\n\t},\n\n\trefresh: function(){\n\t\tif(this.$config.bind) {\n\t\t\tthis.$config.rowStore = this.$gantt.getDatastore(this.$config.bind);\n\t\t}\n\n\t\tif(this.$config.bindLinks) {\n\t\t\tthis.$config.linkStore = this.$gantt.getDatastore(this.$config.bindLinks);\n\t\t}\n\n\t\tthis._initStaticBackgroundRender();\n\t\tthis._render_tasks_scales();\n\t},\n\n\tdestructor: function(){\n\t\tvar gantt = this.$gantt;\n\t\tthis._clearLayers(gantt);\n\n\t\tthis.$task = null;\n\t\tthis.$task_scale = null;\n\t\tthis.$task_data = null;\n\t\tthis.$task_bg = null;\n\t\tthis.$task_links = null;\n\t\tthis.$task_bars = null;\n\n\t\tthis.$gantt = null;\n\n\t\tif(this.$config.rowStore){\n\t\t\tthis.$config.rowStore.detachEvent(this._staticBgHandler);\n\t\t\tthis.$config.rowStore = null;\n\t\t}\n\t\tif(this.$config.linkStore){\n\t\t\tthis.$config.linkStore = null;\n\t\t}\n\n\t\tthis.callEvent(\"onDestroy\", []);\n\t\tthis.detachAllEvents();\n\n\t}\n};\n\nmodule.exports = Timeline;\n\nfunction _findBinary(array, target) {\n\t// modified binary search, target value not exactly match array elements, looking for closest one\n\n\tvar low = 0, high = array.length - 1, i, item, prev;\n\twhile (low <= high) {\n\n\t\ti = Math.floor((low + high) / 2);\n\t\titem = +array[i];\n\t\tprev = +array[i - 1];\n\t\tif (item < target) {\n\t\t\tlow = i + 1;\n\t\t\tcontinue;\n\t\t}\n\t\tif (item > target) {\n\t\t\tif (!(!isNaN(prev) && prev < target)) {\n\t\t\t\thigh = i - 1;\n\t\t\t\tcontinue;\n\t\t\t} else {\n\t\t\t\t// if target is between 'i' and 'i-1' return 'i - 1'\n\t\t\t\treturn i - 1;\n\t\t\t}\n\n\t\t}\n\t\twhile (+array[i] == +array[i + 1]) i++;\n\n\t\treturn i;\n\t}\n\treturn array.length - 1;\n}\n\n","var __extends = require(\"../../../utils/extends\"),\n\tdomHelpers = require(\"../../../utils/dom_helpers\"),\n\tutils = require(\"../../../utils/utils\"),\n\tCell = require(\"./cell\");\n\nvar Layout = (function (_super) {\n\t\"use strict\";\n\n\t__extends(Layout, _super);\n\tfunction Layout(parent, config, factory) {\n\t\tvar _this = _super.apply(this, arguments) || this;\n\n\t\tif(parent)\n\t\t\t_this.$root = true;\n\n\t\t_this._parseConfig(config);\n\t\t_this.$name = \"layout\";\n\t\treturn _this;\n\t}\n\n\tLayout.prototype.destructor = function () {\n\t\tif (this.$container && this.$view) {\n\t\t\tdomHelpers.removeNode(this.$view);\n\t\t}\n\n\t\tfor (var i = 0; i < this.$cells.length; i++) {\n\t\t\tvar child = this.$cells[i];\n\t\t\tchild.destructor();\n\t\t}\n\t\tthis.$cells = [];\n\n\t\t_super.prototype.destructor.call(this);\n\t};\n\n\tLayout.prototype._resizeScrollbars = function(autosize, scrollbars){\n\t\tvar scrollChanged = false;\n\t\tvar visibleScrollbars = [],\n\t\t\thiddenSrollbars = [];\n\n\t\tfunction showScrollbar(scrollbar){\n\t\t\tscrollbar.$parent.show();\n\t\t\tscrollChanged = true;\n\t\t\tvisibleScrollbars.push(scrollbar);\n\t\t}\n\t\tfunction hideScrollbar(scrollbar){\n\t\t\tscrollbar.$parent.hide();\n\t\t\tscrollChanged = true;\n\t\t\thiddenSrollbars.push(scrollbar);\n\t\t}\n\n\t\tvar scrollbar;\n\t\tfor(var i = 0; i < scrollbars.length; i++){\n\t\t\tscrollbar = scrollbars[i];\n\n\t\t\tif(autosize[scrollbar.$config.scroll]) {\n\t\t\t\thideScrollbar(scrollbar);\n\t\t\t}else if(scrollbar.shouldHide()){\n\t\t\t\thideScrollbar(scrollbar);\n\t\t\t}else if(scrollbar.shouldShow()){\n\t\t\t\tshowScrollbar(scrollbar);\n\t\t\t}else{\n\t\t\t\tif(scrollbar.isVisible()){\n\t\t\t\t\tvisibleScrollbars.push(scrollbar);\n\t\t\t\t}else{\n\t\t\t\t\thiddenSrollbars.push(scrollbar);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tvar visibleGroups = {};\n\t\tfor(var i = 0; i < visibleScrollbars.length; i++){\n\t\t\tif(visibleScrollbars[i].$config.group){\n\t\t\t\tvisibleGroups[visibleScrollbars[i].$config.group] = true;\n\t\t\t}\n\t\t}\n\n\t\tfor(var i = 0; i < hiddenSrollbars.length; i++){\n\t\t\tscrollbar = hiddenSrollbars[i];\n\n\t\t\tif(scrollbar.$config.group && visibleGroups[scrollbar.$config.group]){\n\t\t\t\tshowScrollbar(scrollbar);\n\t\t\t}\n\t\t}\n\n\t\treturn scrollChanged;\n\t};\n\n\tLayout.prototype._syncCellSizes = function(groupName, newSize){\n\t\tif(!groupName)\n\t\t\treturn;\n\n\t\tvar groups = {};\n\n\t\tthis._eachChild(function(cell){\n\t\t\tif(cell.$config.group && cell.$name != \"scrollbar\" && cell.$name != \"resizer\"){\n\t\t\t\tif(!groups[cell.$config.group]){\n\t\t\t\t\tgroups[cell.$config.group] = [];\n\t\t\t\t}\n\t\t\t\tgroups[cell.$config.group].push(cell);\n\t\t\t}\n\t\t});\n\n\t\tif(groups[groupName]){\n\t\t\tthis._syncGroupSize(groups[groupName], newSize);\n\t\t}\n\t\treturn groups[groupName];\n\t};\n\n\tLayout.prototype._syncGroupSize = function(cells, newSize){\n\t\tif(!cells.length) return;\n\n\t\tvar property = cells[0].$parent._xLayout ? \"width\" : \"height\";\n\t\tvar direction = cells[0].$parent.getNextSibling(cells[0].$id) ? 1 : -1;\n\n\t\tfor(var i = 0; i < cells.length; i++){\n\t\t\tvar ownSize = cells[i].getSize();\n\n\t\t\tvar resizeSibling = direction > 0 ? cells[i].$parent.getNextSibling(cells[i].$id) : cells[i].$parent.getPrevSibling(cells[i].$id);\n\t\t\tif(resizeSibling.$name == \"resizer\"){\n\t\t\t\tresizeSibling = direction > 0 ? resizeSibling.$parent.getNextSibling(resizeSibling.$id) : resizeSibling.$parent.getPrevSibling(resizeSibling.$id);\n\t\t\t}\n\t\t\tvar siblingSize = resizeSibling.getSize();\n\n\t\t\tif(resizeSibling[property]){\n\t\t\t\tvar totalGravity = ownSize.gravity + siblingSize.gravity;\n\t\t\t\tvar totalSize = ownSize[property] + siblingSize[property];\n\t\t\t\tvar k = totalGravity / totalSize;\n\t\t\t\tcells[i].$config.gravity = k * newSize;\n\n\t\t\t\tresizeSibling.$config[property] = totalSize - newSize;\n\t\t\t\tresizeSibling.$config.gravity = totalGravity - k * newSize;\n\t\t\t}else{\n\n\n\t\t\t\tcells[i].$config[property] = newSize;\n\t\t\t}\n\n\t\t\tvar mainGrid = this.$gantt.$ui.getView(\"grid\");\n\t\t\tif(mainGrid && cells[i].$content === mainGrid && !mainGrid.$config.scrollable){\n\t\t\t\tthis.$gantt.config.grid_width = newSize;\n\t\t\t}\n\t\t}\n\t};\n\n\tLayout.prototype.resize = function(startStage){\n\t\tvar mainCall = false;\n\t\tif(this.$root && !this._resizeInProgress){\n\t\t\tthis.callEvent(\"onBeforeResize\", []);\n\t\t\tmainCall = true;\n\t\t\tthis._resizeInProgress = true;\n\t\t}\n\n\t\t_super.prototype.resize.call(this, true);\n\t\t_super.prototype.resize.call(this, false);\n\n\t\tif(mainCall){\n\n\t\t\tvar contentViews = [];\n\t\t\tcontentViews = contentViews.concat(this.getCellsByType(\"viewCell\"));\n\t\t\tcontentViews = contentViews.concat(this.getCellsByType(\"viewLayout\"));\n\t\t\tcontentViews = contentViews.concat(this.getCellsByType(\"hostCell\"));\n\n\t\t\tvar scrollbars = this.getCellsByType(\"scroller\");\n\n\t\t\tfor(var i = 0; i < contentViews.length; i++){\n\t\t\t\tif(!contentViews[i].$config.hidden)\n\t\t\t\t\tcontentViews[i].setContentSize();\n\t\t\t}\n\n\t\t\tvar autosize = this._getAutosizeMode(this.$config.autosize);\n\n\t\t\tvar scrollChanged = this._resizeScrollbars(autosize, scrollbars);\n\n\t\t\tif(this.$config.autosize){\n\t\t\t\tthis.autosize(this.$config.autosize);\n\t\t\t\tscrollChanged = true;\n\t\t\t}\n\n\t\t\tif(scrollChanged){\n\t\t\t\tthis.resize();\n\t\t\t\tfor(var i = 0; i < contentViews.length; i++){\n\t\t\t\t\tif(!contentViews[i].$config.hidden)\n\t\t\t\t\t\tcontentViews[i].setContentSize();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.callEvent(\"onResize\", []);\n\t\t}\n\t\tif(mainCall){\n\t\t\tthis._resizeInProgress = false;\n\t\t}\n\t};\n\n\tLayout.prototype._eachChild = function(code, cell){\n\t\tcell = cell || this;\n\t\tcode(cell);\n\t\tif(cell.$cells){\n\t\t\tfor(var i = 0; i < cell.$cells.length; i++){\n\t\t\t\tthis._eachChild(code, cell.$cells[i]);\n\t\t\t}\n\t\t}\n\t};\n\n\tLayout.prototype.isChild = function(view){\n\t\tvar res = false;\n\t\tthis._eachChild(function(child){\n\t\t\tif(child === view || child.$content === view){\n\t\t\t\tres = true;\n\t\t\t}\n\t\t});\n\t\treturn res;\n\t};\n\n\tLayout.prototype.getCellsByType = function(type){\n\t\tvar res = [];\n\t\tif(type === this.$name){\n\t\t\tres.push(this);\n\t\t}\n\n\t\tif(this.$content && this.$content.$name == type){\n\t\t\tres.push(this.$content);\n\t\t}\n\n\t\tif(this.$cells){\n\t\t\tfor(var i = 0; i < this.$cells.length; i++){\n\t\t\t\tvar children = Layout.prototype.getCellsByType.call(this.$cells[i], type);\n\t\t\t\tif(children.length){\n\t\t\t\t\tres.push.apply(res, children);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t};\n\n\tLayout.prototype.getNextSibling = function(cellId){\n\t\tvar index = this.cellIndex(cellId);\n\t\tif(index >= 0 && this.$cells[index + 1]){\n\t\t\treturn this.$cells[index + 1];\n\t\t}else{\n\t\t\treturn null;\n\t\t}\n\t};\n\n\tLayout.prototype.getPrevSibling = function(cellId){\n\t\tvar index = this.cellIndex(cellId);\n\t\tif(index >= 0 && this.$cells[index - 1]){\n\t\t\treturn this.$cells[index - 1];\n\t\t}else{\n\t\t\treturn null;\n\t\t}\n\t};\n\n\n\tLayout.prototype.cell = function (id) {\n\t\tfor (var i = 0; i < this.$cells.length; i++) {\n\t\t\tvar child = this.$cells[i];\n\t\t\tif (child.$id === id) {\n\t\t\t\treturn child;\n\t\t\t}\n\t\t\tvar sub = child.cell(id);\n\t\t\tif (sub) {\n\t\t\t\treturn sub;\n\t\t\t}\n\t\t}\n\t};\n\tLayout.prototype.cellIndex = function (id) {\n\t\tfor (var i = 0; i < this.$cells.length; i++) {\n\t\t\tif (this.$cells[i].$id === id) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t};\n\tLayout.prototype.moveView = function (view, ind) {\n\t\tif (this.$cells[ind] !== view) {\n\t\t\treturn window.alert(\"Not implemented\");\n\t\t}\n\t\telse {\n\t\t\tind += this.$config.header ? 1 : 0;\n\t\t\tvar node = this.$view;\n\t\t\tif (ind >= node.childNodes.length) {\n\t\t\t\tnode.appendChild(view.$view);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tnode.insertBefore(view.$view, node.childNodes[ind]);\n\t\t\t}\n\t\t}\n\t};\n\tLayout.prototype._parseConfig = function (config) {\n\t\tthis.$cells = [];\n\t\tthis._xLayout = !config.rows;\n\t\tvar cells = config.rows || config.cols || config.views;\n\t\tfor (var i = 0; i < cells.length; i++) {\n\t\t\tvar cell = cells[i];\n\t\t\tcell.mode = this._xLayout ? \"x\" : \"y\";\n\t\t\tvar $content = this.$factory.initUI(cell, this);\n\t\t\tif(!$content){\n\t\t\t\tcells.splice(i, 1);\n\t\t\t\ti--;\n\t\t\t}else{\n\t\t\t\t$content.$parent = this;\n\t\t\t\tthis.$cells.push($content);\n\t\t\t}\n\t\t}\n\t};\n\tLayout.prototype.getCells = function () {\n\t\treturn this.$cells;\n\t};\n\tLayout.prototype.render = function () {\n\t\tvar view = domHelpers.insertNode(this.$container, this.$toHTML());\n\t\tthis.$fill(view, null);\n\t\tthis.callEvent(\"onReady\", []);\n\t\tthis.resize();\n\n\t\t// do simple repaint after the first call\n\t\tthis.render = this.resize;\n\t};\n\tLayout.prototype.$fill = function (node, parent) {\n\t\tthis.$view = node;\n\t\tthis.$parent = parent;\n\t\tvar cells = domHelpers.getChildNodes(node, \"gantt_layout_cell\");\n\t\tfor (var i = cells.length - 1; i >= 0; i--) {\n\t\t\tvar sub = this.$cells[i];\n\t\t\tsub.$fill(cells[i], this);\n\t\t\t// initially hidden cell\n\t\t\tif (sub.$config.hidden) {\n\t\t\t\tsub.$view.parentNode.removeChild(sub.$view);\n\t\t\t}\n\t\t}\n\t};\n\tLayout.prototype.$toHTML = function () {\n\t\tvar mode = this._xLayout ? \"x\" : \"y\";\n\t\tvar html = [];\n\t\tfor (var i = 0; i < this.$cells.length; i++) {\n\t\t\thtml.push(this.$cells[i].$toHTML());\n\t\t}\n\t\treturn _super.prototype.$toHTML.call(this, html.join(\"\"), (this.$root ? \"gantt_layout_root \" : \"\") + \"gantt_layout gantt_layout_\" + mode);\n\t};\n\n\tLayout.prototype.getContentSize = function(mode){\n\t\tvar contentWidth = 0,\n\t\t\tcontentHeight = 0;\n\n\t\tvar cellSize, cell, borders;\n\t\tfor (var i = 0; i < this.$cells.length; i++) {\n\t\t\tcell = this.$cells[i];\n\t\t\tif(cell.$config.hidden)\n\t\t\t\tcontinue;\n\n\t\t\tcellSize = cell.getContentSize(mode);\n\n\t\t\tif(cell.$config.view === \"scrollbar\" && mode[cell.$config.scroll]){\n\t\t\t\tcellSize.height = 0;\n\t\t\t\tcellSize.width = 0;\n\t\t\t}\n\n\t\t\tif(cell.$config.resizer){\n\t\t\t\tif(this._xLayout){\n\t\t\t\t\tcellSize.height = 0;\n\t\t\t\t}else{\n\t\t\t\t\tcellSize.width = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tborders = cell._getBorderSizes();\n\n\t\t\tif(this._xLayout){\n\t\t\t\tcontentWidth += (cellSize.width + borders.horizontal);\n\t\t\t\tcontentHeight = Math.max(contentHeight, (cellSize.height + borders.vertical));\n\t\t\t}else{\n\t\t\t\tcontentWidth = Math.max(contentWidth, cellSize.width + borders.horizontal);\n\t\t\t\tcontentHeight += cellSize.height + borders.vertical;\n\t\t\t}\n\t\t}\n\n\t\tborders = this._getBorderSizes();\n\t\tcontentWidth += borders.horizontal;\n\t\tcontentHeight += borders.vertical;\n\n\t\tif(this.$root){\n\t\t\tcontentWidth += 1;\n\t\t\tcontentHeight += 1;\n\t\t}\n\n\t\treturn {\n\t\t\twidth: contentWidth,\n\t\t\theight: contentHeight\n\t\t};\n\t};\n\n\tLayout.prototype._cleanElSize = function(value){\n\t\treturn ((value || \"\").toString().replace(\"px\", \"\") * 1 || 0);\n\t};\n\tLayout.prototype._getBoxStyles = function(div){\n\t\tvar computed = null;\n\t\tif(window.getComputedStyle){\n\t\t\tcomputed = window.getComputedStyle(div, null);\n\t\t}else{\n\t\t\t//IE with elem.currentStyle does not calculate sizes from %, so will use the default approach\n\t\t\tcomputed = {\n\t\t\t\t\"width\":div.clientWidth,\n\t\t\t\t\"height\":div.clientHeight\n\t\t\t};\n\t\t}\n\t\tvar properties = [\n\t\t\t\"width\",\n\t\t\t\"height\",\n\n\t\t\t\"paddingTop\",\n\t\t\t\"paddingBottom\",\n\t\t\t\"paddingLeft\",\n\t\t\t\"paddingRight\",\n\n\t\t\t\"borderLeftWidth\",\n\t\t\t\"borderRightWidth\",\n\t\t\t\"borderTopWidth\",\n\t\t\t\"borderBottomWidth\"\n\t\t];\n\t\tvar styles = {\n\t\t\tboxSizing:(computed.boxSizing == \"border-box\")\n\t\t};\n\n\t\tif(computed.MozBoxSizing){\n\t\t\tstyles.boxSizing = (computed.MozBoxSizing == \"border-box\");\n\t\t}\n\t\tfor(var i =0; i < properties.length; i++){\n\t\t\tstyles[properties[i]] = computed[properties[i]] ? this._cleanElSize(computed[properties[i]]) : 0;\n\t\t}\n\n\n\t\tvar box = {\n\t\t\thorPaddings : (styles.paddingLeft + styles.paddingRight + styles.borderLeftWidth + styles.borderRightWidth),\n\t\t\tvertPaddings : (styles.paddingTop + styles.paddingBottom + styles.borderTopWidth + styles.borderBottomWidth),\n\t\t\tborderBox: styles.boxSizing,\n\t\t\tinnerWidth : styles.width,\n\t\t\tinnerHeight : styles.height,\n\t\t\touterWidth : styles.width,\n\t\t\touterHeight : styles.height\n\t\t};\n\n\n\t\tif(box.borderBox){\n\t\t\tbox.innerWidth -= box.horPaddings;\n\t\t\tbox.innerHeight -= box.vertPaddings;\n\t\t}else{\n\t\t\tbox.outerWidth += box.horPaddings;\n\t\t\tbox.outerHeight += box.vertPaddings;\n\t\t}\n\n\t\treturn box;\n\t};\n\n\tLayout.prototype._getAutosizeMode = function(config){\n\t\tvar res = {x:false, y:false};\n\t\tif(config === \"xy\"){\n\t\t\tres.x = res.y = true;\n\t\t}else if(config === \"y\" || config === true){\n\t\t\tres.y = true;\n\t\t}else if(config === \"x\"){\n\t\t\tres.x = true;\n\t\t}\n\t\treturn res;\n\t};\n\n\tLayout.prototype.autosize = function(mode) {\n\t\tvar res = this._getAutosizeMode(mode);\n\t\tvar boxSizes = this._getBoxStyles(this.$container);\n\t\tvar contentSizes = this.getContentSize(mode);\n\n\t\tvar node = this.$container;\n\t\tif(res.x){\n\t\t\tif(boxSizes.borderBox){\n\t\t\t\tcontentSizes.width += boxSizes.horPaddings;\n\t\t\t}\n\t\t\tnode.style.width = contentSizes.width + \"px\";\n\t\t}\n\t\tif(res.y){\n\t\t\tif(boxSizes.borderBox){\n\t\t\t\tcontentSizes.height += boxSizes.vertPaddings;\n\t\t\t}\n\t\t\tnode.style.height = contentSizes.height + \"px\";\n\t\t}\n\t};\n\n\tLayout.prototype.getSize = function () {\n\t\tthis._sizes = [];\n\t\tvar width = 0;\n\t\tvar minWidth = 0;\n\t\tvar maxWidth = 100000;\n\t\tvar height = 0;\n\t\tvar maxHeight = 100000;\n\t\tvar minHeight = 0;\n\n\t\tfor (var i = 0; i < this.$cells.length; i++) {\n\n\t\t\tvar size = this._sizes[i] = this.$cells[i].getSize();\n\t\t\tif (this.$cells[i].$config.hidden) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (this._xLayout) {\n\t\t\t\tif (!size.width && size.minWidth) {\n\t\t\t\t\twidth += size.minWidth;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\twidth += size.width;\n\t\t\t\t}\n\t\t\t\tmaxWidth += size.maxWidth;\n\t\t\t\tminWidth += size.minWidth;\n\t\t\t\theight = Math.max(height, size.height);\n\t\t\t\tmaxHeight = Math.min(maxHeight, size.maxHeight); // min of maxHeight\n\t\t\t\tminHeight = Math.max(minHeight, size.minHeight); // max of minHeight\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!size.height && size.minHeight) {\n\t\t\t\t\theight += size.minHeight;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\theight += size.height;\n\t\t\t\t}\n\t\t\t\tmaxHeight += size.maxHeight;\n\t\t\t\tminHeight += size.minHeight;\n\t\t\t\twidth = Math.max(width, size.width);\n\t\t\t\tmaxWidth = Math.min(maxWidth, size.maxWidth); // min of maxWidth\n\t\t\t\tminWidth = Math.max(minWidth, size.minWidth); // max of minWidth\n\t\t\t}\n\t\t}\n\t\tvar self = _super.prototype.getSize.call(this);\n\t\t// maxWidth\n\t\tif (self.maxWidth >= 100000) {\n\t\t\tself.maxWidth = maxWidth;\n\t\t}\n\t\t// maxHeight\n\t\tif (self.maxHeight >= 100000) {\n\t\t\tself.maxHeight = maxHeight;\n\t\t}\n\t\t// minWidth\n\t\tself.minWidth = self.minWidth !== self.minWidth ? 0 : self.minWidth;// || self.width || Math.max(minWidth, width);\n\t\t// minHeight\n\t\tself.minHeight = self.minHeight !== self.minHeight ? 0 : self.minHeight;//self.minHeight || self.height || Math.max(minHeight, height);\n\t\t// sizes with paddings and margins\n\t\tif (this._xLayout) {\n\t\t\tself.minWidth += this.$config.margin * (this.$cells.length) || 0;\n\t\t\tself.minWidth += this.$config.padding * 2 || 0;\n\t\t\tself.minHeight += (this.$config.padding * 2) || 0;\n\t\t}\n\t\telse {\n\t\t\tself.minHeight += this.$config.margin * (this.$cells.length) || 0;\n\t\t\tself.minHeight += (this.$config.padding * 2) || 0;\n\t\t}\n\t\t\n\t\treturn self;\n\t};\n\t// calc total gravity and free space\n\tLayout.prototype._calcFreeSpace = function (s, cell, xLayout) {\n\t\tvar min = xLayout ? cell.minWidth : cell.minHeight;\n\t\tvar max = xLayout ? cell.maxWidth : cell.maxWidth;\n\t\tvar side = s;\n\t\tif (!side) {\n\t\t\tside = Math.floor(this._free / this._gravity * cell.gravity);\n\t\t\tif (side > max) {\n\t\t\t\tside = max;\n\t\t\t\tthis._free -= side;\n\t\t\t\tthis._gravity -= cell.gravity;\n\t\t\t}\n\t\t\tif (side < min) {\n\t\t\t\tside = min;\n\t\t\t\tthis._free -= side;\n\t\t\t\tthis._gravity -= cell.gravity;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (side > max) {\n\t\t\t\tside = max;\n\t\t\t}\n\t\t\tif (side < min) {\n\t\t\t\tside = min;\n\t\t\t}\n\t\t\tthis._free -= side;\n\t\t}\n\t\treturn side;\n\t};\n\tLayout.prototype._calcSize = function (s, size, xLayout) {\n\t\tvar side = s;\n\t\tvar min = xLayout ? size.minWidth : size.minHeight;\n\t\tvar max = xLayout ? size.maxWidth : size.maxHeight;\n\t\tif (!side) {\n\t\t\tside = Math.floor(this._free / this._gravity * size.gravity);\n\t\t}\n\t\tif (side > max) {\n\t\t\tside = max;\n\t\t}\n\t\tif (side < min) {\n\t\t\tside = min;\n\t\t}\n\t\treturn side;\n\t};\n\n\tLayout.prototype._configureBorders = function(){\n\t\tif(this.$root){\n\t\t\tthis._setBorders([\n\t\t\t\tthis._borders.left,\n\t\t\t\tthis._borders.top,\n\t\t\t\tthis._borders.right,\n\t\t\t\tthis._borders.bottom\n\t\t\t],\n\t\t\tthis);\n\t\t}\n\n\t\tvar borderClass = this._xLayout ? this._borders.right : this._borders.bottom;\n\n\t\tvar cells = this.$cells;\n\n\t\tvar lastVisibleIndex = cells.length - 1;\n\t\tfor(var i = lastVisibleIndex; i >= 0; i--){\n\t\t\tif (!cells[i].$config.hidden) {\n\t\t\t\tlastVisibleIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i < cells.length; i++) {\n\t\t\tif (cells[i].$config.hidden) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar lastCell = i >= lastVisibleIndex;\n\t\t\tvar borderColorClass = \"\";\n\t\t\tif(!lastCell && cells[i + 1]){\n\t\t\t\tif(cells[i + 1].$config.view == \"scrollbar\"){\n\t\t\t\t\tif(this._xLayout){\n\t\t\t\t\t\tlastCell = true;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tborderColorClass = \"gantt_layout_cell_border_transparent\";\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\tthis._setBorders(lastCell ? [] : [borderClass, borderColorClass], cells[i]);\n\t\t}\n\t};\n\n\tLayout.prototype._updateCellVisibility = function(){\n\t\tvar oldVisibleCells = this._visibleCells || {};\n\t\tvar firstCall = !this._visibleCells;\n\t\tvar visibleCells = {};\n\t\tvar cell;\n\t\tfor (var i = 0; i < this._sizes.length; i++) {\n\t\t\tcell = this.$cells[i];\n\n\t\t\tif (!firstCall && cell.$config.hidden && oldVisibleCells[cell.$id]) {\n\t\t\t\tcell._hide(true);\n\t\t\t}else if(!cell.$config.hidden && !oldVisibleCells[cell.$id]){\n\t\t\t\tcell._hide(false);\n\t\t\t}\n\n\t\t\tif(!cell.$config.hidden){\n\t\t\t\tvisibleCells[cell.$id] = true;\n\t\t\t}\n\t\t}\n\t\tthis._visibleCells = visibleCells;\n\t};\n\n\tLayout.prototype.setSize = function (x, y) {\n\t\tthis._configureBorders();\n\t\t_super.prototype.setSize.call(this, x, y);\n\t\ty = this.$lastSize.contentY;\n\t\tx = this.$lastSize.contentX;\n\n\t\tvar padding = (this.$config.padding || 0);\n\t\tthis.$view.style.padding = padding + \"px\";\n\t\tthis._gravity = 0;\n\t\tthis._free = this._xLayout ? x : y;\n\t\tthis._free -= padding * 2;\n\t\t// calc all gravity\n\n\t\tvar cell,\n\t\t\tsize;\n\n\t\tthis._updateCellVisibility();\n\n\t\tfor (var i = 0; i < this._sizes.length; i++) {\n\t\t\tcell = this.$cells[i];\n\n\t\t\tif (cell.$config.hidden) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tvar margin = (this.$config.margin || 0);\n\t\t\tif(cell.$name == \"resizer\" && !margin){\n\t\t\t\tmargin = -1;\n\t\t\t}\n\n\t\t\t// set margins to child cell\n\t\t\tvar cellView = cell.$view;\n\n\t\t\tvar marginSide = this._xLayout ? \"marginRight\" : \"marginBottom\";\n\t\t\tif (i !== this.$cells.length - 1) {\n\t\t\t\tcellView.style[marginSide] = margin + \"px\";\n\t\t\t\tthis._free -= margin; // calc free space without margin\n\t\t\t}\n\t\t\tsize = this._sizes[i];\n\t\t\tif (this._xLayout) {\n\t\t\t\tif (!size.width) {\n\t\t\t\t\tthis._gravity += size.gravity;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!size.height) {\n\t\t\t\t\tthis._gravity += size.gravity;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor (var i = 0; i < this._sizes.length; i++) {\n\t\t\tcell = this.$cells[i];\n\n\t\t\tif (cell.$config.hidden) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tsize = this._sizes[i];\n\t\t\tvar width = size.width;\n\t\t\tvar height = size.height;\n\t\t\tif (this._xLayout) {\n\t\t\t\tthis._calcFreeSpace(width, size, true);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._calcFreeSpace(height, size, false);\n\t\t\t}\n\t\t}\n\t\tfor (var i = 0; i < this.$cells.length; i++) {\n\t\t\tcell = this.$cells[i];\n\n\t\t\tif (cell.$config.hidden) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tsize = this._sizes[i];\n\t\t\tvar dx = void 0;\n\t\t\tvar dy = void 0;\n\t\t\tif (this._xLayout) {\n\t\t\t\tdx = this._calcSize(size.width, size, true);\n\t\t\t\tdy = y - padding * 2; // layout height without paddings\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdx = x - padding * 2; // layout width without paddings\n\t\t\t\tdy = this._calcSize(size.height, size, false);\n\t\t\t}\n\n\t\t\tcell.setSize(dx, dy);\n\t\t}\n\n\t};\n\n\treturn Layout;\n}(Cell));\n\nmodule.exports = Layout;","var utils = require(\"./utils\");\n\nfunction createScope(addEvent, removeEvent){\n\taddEvent = addEvent || utils.event;\n\tremoveEvent = removeEvent || utils.eventRemove;\n\n\tvar handlers = [];\n\n\treturn {\n\t\tattach: function(el, event, handler, capture){\n\t\t\thandlers.push({element: el, event:event, callback: handler, capture: capture});\n\t\t\taddEvent(el, event, handler, capture);\n\t\t},\n\t\tdetach: function(el, event, handler, capture){\n\t\t\tremoveEvent(el, event, handler, capture);\n\t\t\tfor(var i = 0; i < handlers.length; i++){\n\t\t\t\tvar handler = handlers[i];\n\t\t\t\tif(handler.element === el && handler.event === event && handler.callback === handler && handler.capture === capture){\n\t\t\t\t\thandlers.splice(i, 1);\n\t\t\t\t\ti--;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tdetachAll: function(){\n\t\t\tfor(var i = 0; i < handlers.length; i++){\n\t\t\t\tremoveEvent(handlers[i].element, handlers[i].event, handlers[i].callback, handlers[i].capture);\n\t\t\t\tremoveEvent(handlers[i].element, handlers[i].event, handlers[i].callback, undefined);\n\t\t\t\tremoveEvent(handlers[i].element, handlers[i].event, handlers[i].callback, false);\n\t\t\t\tremoveEvent(handlers[i].element, handlers[i].event, handlers[i].callback, true);\n\t\t\t}\n\t\t\thandlers = [];\n\t\t},\n\t\textend: function(){\n\t\t\treturn createScope(this.event, this.eventRemove);\n\t\t}\n\t};\n}\n\nmodule.exports = createScope;","function checkTimeout(host, updPerSecond){\n\tif (!updPerSecond)\n\t\treturn true;\n\t\n\tif (host._on_timeout)\n\t\treturn false;\n\t\n\tvar timeout = Math.ceil(1000/updPerSecond);\n\tif (timeout < 2) return true;\n\n\tsetTimeout(function(){\n\t\tdelete host._on_timeout;\n\t}, timeout);\n\n\thost._on_timeout = true;\n\treturn true;\n}\n\nmodule.exports = checkTimeout;","function extend(gantt){\n\n\tgantt.destructor = function(){\n\t\tgantt.callEvent(\"onDestroy\", []);\n\n\t\tthis.clearAll();\n\t\tthis.detachAllEvents();\n\n\t\tif(this.$root){\n\t\t\tdelete this.$root.gantt;\n\t\t}\n\n\t\tthis._eventRemoveAll();\n\t\tif(this.$layout){\n\t\t\tthis.$layout.destructor();\n\t\t}\n\n\t\tthis.resetLightbox();\n\n\t\tif(this._dp && this._dp.destructor){\n\t\t\tthis._dp.destructor();\n\t\t}\n\n\t\tthis.$services.destructor();\n\n\t\tfor(var i in this){\n\t\t\tif(i.indexOf(\"$\") === 0){\n\t\t\t\tdelete this[i];\n\t\t\t}\n\t\t}\n\t};\n}\n\nmodule.exports = extend;\n","/*\n \tasserts will be removed in final code, so you can place them anythere\n\twithout caring about performance impacts\n*/\n\nmodule.exports = function(gantt){\n\treturn function assert(check, message){\n\t\t//jshint -W087\n\t\tif (!check){\n\t\t\tif(gantt.config.show_errors && gantt.callEvent(\"onError\",[message]) !== false) {\n\t\t\t\tgantt.message({type: \"error\", text: message, expire: -1});\n\t\t\t\tdebugger;\n\t\t\t}\n\t\t}\n\t};\n};","var domHelpers = require(\"../utils/dom_helpers\"),\n\thelpers = require(\"../utils/helpers\");\n\nmodule.exports = function(gantt){\n\tvar calculateScaleRange = require(\"./gantt_data_range\");\n\n\tgantt.assert = require(\"./common/assert\")(gantt);\n\n//initial initialization\n\tgantt.init = function(node, from, to){\n\t\tif(from && to){\n\t\t\tthis.config.start_date = this._min_date = new Date(from);\n\t\t\tthis.config.end_date = this._max_date = new Date(to);\n\t\t}\n\t\tthis.date.init();\n\n\t\tif (!this.config.scroll_size)\n\t\t\tthis.config.scroll_size = domHelpers.getScrollSize() || 1;\n\n\t\tvar resizeDelay;\n\t\tgantt.event(window, \"resize\", function(){\n\t\t\tclearTimeout(resizeDelay);\n\t\t\tresizeDelay = setTimeout(function(){\n\t\t\t\tgantt.render();\n\t\t\t}, 300);\n\t\t});\n\n\t\t//can be called only once\n\t\tthis.init = function(node){\n\t\t\tif (this.$container && this.$container.parentNode){\n\t\t\t\tthis.$container.parentNode.removeChild(this.$container);\n\t\t\t\tthis.$container = null;\n\t\t\t}\n\n\t\t\tif(this.$layout){\n\t\t\t\tthis.$layout.clear();\n\t\t\t}\n\t\t\tthis._reinit(node);\n\t\t};\n\n\t\tthis._reinit(node);\n\t};\n\n\tgantt._reinit = function(node){\n\t\tthis.callEvent(\"onBeforeGanttReady\", []);\n\t\t//this._init_tasks_range();\n\t\tthis.resetLightbox();\n\t\tthis._update_flags();\n\n\n\t\tvar config = this.$services.getService(\"templateLoader\");\n\t\tconfig.initTemplates(this);\n\n\t\tthis._clearTaskLayers();\n\t\tthis._clearLinkLayers();\n\n\t\t//this.clear\n\t\tif(this.$layout){\n\t\t\tthis.$layout.destructor();\n\t\t\tthis.$ui.reset();\n\t\t}\n\n\t\tthis.$root = domHelpers.toNode(node);\n\t\tif(this.$root){\n\t\t\tthis.$root.innerHTML = \"\";\n\t\t}\n\t\tthis.$root.gantt = this;\n\t\tcalculateScaleRange(this);\n\t\tthis.config.layout.id = \"main\";\n\t\tthis.$layout = this.$ui.createView(\"layout\", node, this.config.layout);\n\n\t\tthis.$layout.attachEvent(\"onBeforeResize\", function(){\n\t\t\tvar storeNames = gantt.$services.getService(\"datastores\");\n\t\t\tfor(var i = 0; i < storeNames.length; i++){\n\t\t\t\tgantt.getDatastore(storeNames[i]).filter();\n\t\t\t}\n\t\t});\n\n\t\tthis.$layout.attachEvent(\"onResize\", function(){\n\t\t\tgantt.refreshData();\n\t\t});\n\n\t\tthis.callEvent(\"onGanttLayoutReady\", []);\n\t\tthis.$layout.render();\n\n\t\tgantt.$container = this.$layout.$container.firstChild;\n\t\tthis.callEvent(\"onTemplatesReady\",[]);\n\t\tthis.$mouseEvents.reset(this.$root);\n\t\tthis.callEvent(\"onGanttReady\", []);\n\n\t\tthis.render();\n\t};\n\n\tgantt.$click={\n\t\tbuttons:{\n\t\t\t\"edit\":function(id){\n\t\t\t\tgantt.showLightbox(id);\n\t\t\t},\n\t\t\t\"delete\":function(id){\n\t\t\t\tvar question = gantt.locale.labels.confirm_deleting;\n\t\t\t\tvar title = gantt.locale.labels.confirm_deleting_title;\n\n\t\t\t\tgantt._dhtmlx_confirm(question, title, function(){\n\t\t\t\t\tif(!gantt.isTaskExists(id)){\n\t\t\t\t\t\tgantt.hideLightbox();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar task = gantt.getTask(id);\n\t\t\t\t\tif(task.$new){\n\t\t\t\t\t\tgantt.silent(function(){\n\t\t\t\t\t\t\tgantt.deleteTask(id, true);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tgantt.refreshData();\n\t\t\t\t\t}else{\n\t\t\t\t\t\tgantt.deleteTask(id);\n\t\t\t\t\t}\n\n\t\t\t\t\tgantt.hideLightbox();\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n\n//renders self\n\tgantt.render = function(){\n\t\tthis.callEvent(\"onBeforeGanttRender\", []);\n\n\t\tif (!this.config.sort && this._sort) {\n\t\t\tthis._sort = undefined;\n\t\t}\n\n\t\tvar pos = this.getScrollState();\n\t\tvar posX = pos ? pos.x : 0;\n\t\tif(this._getHorizontalScrollbar()){\n\t\t\tvar scrollbar = this._getHorizontalScrollbar();\n\t\t\tposX = scrollbar.$config.codeScrollLeft || posX || 0;\n\t\t}\n\n\n\t\tvar visible_date = null;\n\t\tif(posX){\n\t\t\tvisible_date = gantt.dateFromPos(posX + this.config.task_scroll_offset);\n\t\t}\n\t\tcalculateScaleRange(this);\n\n\t\tthis.$layout.$config.autosize = this.config.autosize;\n\t\tthis.$layout.resize();\n\n\t\tif(this.config.preserve_scroll && pos){\n\n\t\t\tif(posX){\n\t\t\t\tvar new_pos = gantt.getScrollState();\n\t\t\t\tvar new_date = gantt.dateFromPos(new_pos.x);\n\t\t\t\tif(!(+visible_date == +new_date && new_pos.y == pos.y)){\n\t\t\t\t\tif(visible_date){\n\t\t\t\t\t\tthis.showDate(visible_date);\n\t\t\t\t\t}\n\t\t\t\t\tif(pos.y)\n\t\t\t\t\t\tgantt.scrollTo(undefined, pos.y);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.callEvent(\"onGanttRender\", []);\n\t};\n\n\t//TODO: add layout.resize method that wouldn't trigger data repaint\n\tgantt.setSizes = gantt.render;\n\n\tgantt.locate = function(e) {\n\t\tvar trg = domHelpers.getTargetNode(e);\n\n\t\t//ignore empty cells\n\t\tvar className = domHelpers.getClassName(trg);\n\t\tif ((className || \"\").indexOf(\"gantt_task_cell\") >= 0) return null;\n\n\t\tvar targetAttribute = arguments[1] || this.config.task_attribute;\n\n\t\tvar node = domHelpers.locateAttribute(trg, targetAttribute);\n\t\tif(node){\n\t\t\treturn node.getAttribute(targetAttribute);\n\t\t}else{\n\t\t\treturn null;\n\t\t}\n\t};\n\n\tgantt._locate_css = function(e, classname, strict){\n\t\treturn domHelpers.locateClassName(e, classname, strict);\n\t};\n\n\tgantt._locateHTML = function(e, attribute) {\n\t\treturn domHelpers.locateAttribute(e, attribute || this.config.task_attribute);\n\t};\n\n\tgantt.getTaskRowNode = function(id) {\n\t\tvar els = this.$grid_data.childNodes;\n\t\tvar attribute = this.config.task_attribute;\n\t\tfor (var i = 0; i < els.length; i++) {\n\t\t\tif (els[i].getAttribute) {\n\t\t\t\tvar value = els[i].getAttribute(attribute);\n\t\t\t\tif (value == id) return els[i];\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t};\n\n\tgantt.changeLightboxType = function(type){\n\t\tif(this.getLightboxType() == type)\n\t\t\treturn true;\n\t\tgantt._silent_redraw_lightbox(type);\n\t};\n\n\n\tgantt._get_link_type = function (from_start, to_start) {\n\t\tvar type = null;\n\t\tif (from_start && to_start) {\n\t\t\ttype = gantt.config.links.start_to_start;\n\t\t} else if (!from_start && to_start) {\n\t\t\ttype = gantt.config.links.finish_to_start;\n\t\t} else if (!from_start && !to_start) {\n\t\t\ttype = gantt.config.links.finish_to_finish;\n\t\t} else if (from_start && !to_start) {\n\t\t\ttype = gantt.config.links.start_to_finish;\n\t\t}\n\t\treturn type;\n\t};\n\n\tgantt.isLinkAllowed = function (from, to, from_start, to_start) {\n\t\tvar link = null;\n\t\tif (typeof(from) == \"object\") {\n\t\t\tlink = from;\n\t\t} else {\n\t\t\tlink = {source: from, target: to, type: this._get_link_type(from_start, to_start)};\n\t\t}\n\n\t\tif (!link) return false;\n\t\tif (!(link.source && link.target && link.type)) return false;\n\t\tif (link.source == link.target) return false;\n\n\t\tvar res = true;\n\t\t//any custom rules\n\t\tif (this.checkEvent(\"onLinkValidation\"))\n\t\t\tres = this.callEvent(\"onLinkValidation\", [link]);\n\n\t\treturn res;\n\t};\n\n\n\tgantt._correct_dst_change = function(date, prevOffset, step, unit){\n\t\tvar time_unit = helpers.getSecondsInUnit(unit) * step;\n\t\tif(time_unit > 60*60 && time_unit < 60*60*24){\n\t\t\t//correct dst change only if current unit is more than one hour and less than day (days have own checking), e.g. 12h\n\t\t\tvar offsetChanged = date.getTimezoneOffset() - prevOffset;\n\t\t\tif(offsetChanged){\n\t\t\t\tdate = gantt.date.add(date, offsetChanged, \"minute\");\n\t\t\t}\n\t\t}\n\t\treturn date;\n\t};\n\n\tgantt.getGridColumns = function(){\n\t\treturn gantt.config.columns.slice();\n\t};\n\n\tgantt.isSplitTask = function(task){\n\t\treturn (task.render == \"split\" && gantt.hasChild(task.id));\n\t};\n\n\tgantt._is_icon_open_click = function(e) {\n\t\tif (!e)\n\t\t\treturn false;\n\t\tvar target = e.target || e.srcElement;\n\t\tif (!(target && target.className))\n\t\t\treturn false;\n\t\tvar className = domHelpers.getClassName(target);\n\t\tif (className.indexOf(\"gantt_tree_icon\") !== -1 && (className.indexOf(\"gantt_close\") !== -1 || className.indexOf(\"gantt_open\") !== -1))\n\t\t\treturn true;\n\t\treturn false;\n\t};\n\n};","module.exports = function(gantt) {\n\n\tgantt.config.touch_drag = 500; //nearly immediate dnd\n\tgantt.config.touch = true;\n\tgantt.config.touch_feedback = true;\n\tgantt.config.touch_feedback_duration = 1;\n\tgantt._prevent_touch_scroll = false;\n\n\n\tgantt._touch_feedback = function () {\n\t\tif (gantt.config.touch_feedback) {\n\t\t\tif (navigator.vibrate)\n\t\t\t\tnavigator.vibrate(gantt.config.touch_feedback_duration);\n\t\t}\n\t};\n\n\tgantt.attachEvent(\"onGanttReady\", gantt.bind(function(){\n\t\tif (this.config.touch != \"force\")\n\t\t\tthis.config.touch = this.config.touch &&\n\t\t\t\t((navigator.userAgent.indexOf(\"Mobile\") != -1) ||\n\t\t\t\t\t(navigator.userAgent.indexOf(\"iPad\") != -1) ||\n\t\t\t\t\t(navigator.userAgent.indexOf(\"Android\") != -1) ||\n\t\t\t\t\t(navigator.userAgent.indexOf(\"Touch\") != -1));\n\n\t\tif (this.config.touch) {\n\n\t\t\tvar touchEventsSupported = true;\n\t\t\ttry {\n\t\t\t\tdocument.createEvent(\"TouchEvent\");\n\t\t\t} catch (e) {\n\t\t\t\ttouchEventsSupported = false;\n\t\t\t}\n\n\t\t\tif (touchEventsSupported) {\n\t\t\t\tthis._touch_events([\"touchmove\", \"touchstart\", \"touchend\"], function (ev) {\n\t\t\t\t\tif (ev.touches && ev.touches.length > 1) return null;\n\t\t\t\t\tif (ev.touches[0])\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttarget: ev.target,\n\t\t\t\t\t\t\tpageX: ev.touches[0].pageX,\n\t\t\t\t\t\t\tpageY: ev.touches[0].pageY,\n\t\t\t\t\t\t\tclientX: ev.touches[0].clientX,\n\t\t\t\t\t\t\tclientY: ev.touches[0].clientY\n\t\t\t\t\t\t};\n\t\t\t\t\telse\n\t\t\t\t\t\treturn ev;\n\t\t\t\t}, function () {\n\t\t\t\t\treturn false;\n\t\t\t\t});\n\t\t\t} else if (window.navigator.pointerEnabled) {\n\t\t\t\tthis._touch_events([\"pointermove\", \"pointerdown\", \"pointerup\"], function (ev) {\n\t\t\t\t\tif (ev.pointerType == \"mouse\") return null;\n\t\t\t\t\treturn ev;\n\t\t\t\t}, function (ev) {\n\t\t\t\t\treturn (!ev || (ev.pointerType == \"mouse\" ));\n\t\t\t\t});\n\t\t\t} else if (window.navigator.msPointerEnabled) {\n\t\t\t\tthis._touch_events([\"MSPointerMove\", \"MSPointerDown\", \"MSPointerUp\"], function (ev) {\n\t\t\t\t\tif (ev.pointerType == ev.MSPOINTER_TYPE_MOUSE) return null;\n\t\t\t\t\treturn ev;\n\t\t\t\t}, function (ev) {\n\t\t\t\t\treturn (!ev || ev.pointerType == ev.MSPOINTER_TYPE_MOUSE);\n\t\t\t\t});\n\t\t\t}\n\n\t\t}\n\t}, gantt));\n\n\n\tfunction getTaskDND(){\n\t\tvar _tasks_dnd;\n\t\tif(gantt.$ui.getView(\"timeline\")){\n\t\t\t_tasks_dnd = gantt.$ui.getView(\"timeline\")._tasks_dnd;\n\t\t}\n\t\treturn _tasks_dnd;\n\t}\n\n\tvar touchHandlers = [];\n\n//we can't use native scrolling, as we need to sync momentum between different parts\n//so we will block native scroll and use the custom one\n//in future we can add custom momentum\n\tgantt._touch_events = function (names, accessor, ignore) {\n\t\t//webkit on android need to be handled separately\n\t\tvar dblclicktime = 0;\n\t\tvar action_mode = false;\n\t\tvar scroll_mode = false;\n\t\tvar dblclick_timer = 0;\n\t\tvar action_start = null;\n\t\tvar scroll_state;\n\t\tvar long_tap_timer = null;\n\t\tvar current_target = null;\n\n\n\n\t\tfor(var i = 0; i < touchHandlers.length; i++){\n\t\t\tgantt.eventRemove(touchHandlers[i][0], touchHandlers[i][1], touchHandlers[i][2]);\n\t\t}\n\t\ttouchHandlers = [];\n\n\t\t//touch move\n\t\ttouchHandlers.push([gantt.$container, names[0], function (e) {\n\t\t\tvar _tasks_dnd = getTaskDND();\n\n\t\t\t\tif (ignore(e)) return;\n\n\t\t\t\t//ignore common and scrolling moves\n\t\t\t\tif (!action_mode) return;\n\n\t\t\t\tif (long_tap_timer) clearTimeout(long_tap_timer);\n\n\t\t\t\tvar source = accessor(e);\n\t\t\t\tif (_tasks_dnd && (_tasks_dnd.drag.id || _tasks_dnd.drag.start_drag)) {\n\t\t\t\t\t_tasks_dnd.on_mouse_move(source);\n\t\t\t\t\tif (e.preventDefault)\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\te.cancelBubble = true;\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (!gantt._prevent_touch_scroll) {\n\t\t\t\t\tif (source && action_start) {\n\t\t\t\t\t\tvar dx = action_start.pageX - source.pageX;\n\t\t\t\t\t\tvar dy = action_start.pageY - source.pageY;\n\t\t\t\t\t\tif (!scroll_mode && (Math.abs(dx) > 5 || Math.abs(dy) > 5)) {\n\t\t\t\t\t\t\tgantt._touch_scroll_active = scroll_mode = true;\n\t\t\t\t\t\t\tdblclicktime = 0;\n\t\t\t\t\t\t\tscroll_state = gantt.getScrollState();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (scroll_mode) {\n\t\t\t\t\t\t\tgantt.scrollTo(scroll_state.x + dx, scroll_state.y + dy);\n\t\t\t\t\t\t\tvar new_scroll_state = gantt.getScrollState();\n\n\t\t\t\t\t\t\tif ((scroll_state.x != new_scroll_state.x && dy > 2 * dx) ||\n\t\t\t\t\t\t\t\t(scroll_state.y != new_scroll_state.y && dx > 2 * dy )) {\n\t\t\t\t\t\t\t\treturn block_action(e);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn block_action(e);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}]);\n\n\n\t\t//block touch context menu in IE10\n\t\ttouchHandlers.push([this.$container, \"contextmenu\", function (e) {\n\t\t\tif (action_mode)\n\t\t\t\treturn block_action(e);\n\t\t}]);\n\n\t\t//touch start\n\t\ttouchHandlers.push([this.$container, names[1], function (e) {\n\t\t\tif (ignore(e)) return;\n\t\t\tif (e.touches && e.touches.length > 1) {\n\t\t\t\taction_mode = false;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\taction_start = accessor(e);\n\t\t\tif (!gantt._locate_css(action_start, \"gantt_hor_scroll\") && !gantt._locate_css(action_start, \"gantt_ver_scroll\")) {\n\t\t\t\taction_mode = true;\n\t\t\t}\n\t\t\tvar _tasks_dnd = getTaskDND();\n\n\t\t\t//long tap\n\t\t\tlong_tap_timer = setTimeout(function () {\n\t\t\t\tvar taskId = gantt.locate(action_start);\n\t\t\t\tif (_tasks_dnd && (taskId && !gantt._locate_css(action_start, \"gantt_link_control\") && !gantt._locate_css(action_start, \"gantt_grid_data\"))) {\n\t\t\t\t\t_tasks_dnd.on_mouse_down(action_start);\n\n\t\t\t\t\tif (_tasks_dnd.drag && _tasks_dnd.drag.start_drag) {\n\t\t\t\t\t\tcloneTaskRendered(taskId);\n\t\t\t\t\t\t_tasks_dnd._start_dnd(action_start);\n\t\t\t\t\t\tgantt._touch_drag = true;\n\n\t\t\t\t\t\tgantt.refreshTask(taskId);\n\n\t\t\t\t\t\tgantt._touch_feedback();\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tlong_tap_timer = null;\n\t\t\t}, gantt.config.touch_drag);\n\t\t}]);\n\n\t\t//touch end\n\t\ttouchHandlers.push([this.$container, names[2], function (e) {\n\t\t\tif (ignore(e)) return;\n\t\t\tif (long_tap_timer) clearTimeout(long_tap_timer);\n\t\t\tgantt._touch_drag = false;\n\t\t\taction_mode = false;\n\t\t\tvar source = accessor(e);\n\n\t\t\tvar _tasks_dnd = getTaskDND();\n\n\t\t\tif(_tasks_dnd)\n\t\t\t\t_tasks_dnd.on_mouse_up(source);\n\n\t\t\tif (current_target) {\n\t\t\t\tgantt.refreshTask(gantt.locate(current_target));\n\t\t\t\tif (current_target.parentNode) {\n\t\t\t\t\tcurrent_target.parentNode.removeChild(current_target);\n\t\t\t\t\tgantt._touch_feedback();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tgantt._touch_scroll_active = action_mode = scroll_mode = false;\n\t\t\tcurrent_target = null;\n\n\t\t\t//dbl-tap handling\n\t\t\tif (action_start && dblclicktime) {\n\t\t\t\tvar now = new Date();\n\t\t\t\tif ((now - dblclicktime) < 500) {\n\n\t\t\t\t\tvar mouseEvents = gantt.$services.getService(\"mouseEvents\");\n\t\t\t\t\tmouseEvents.onDoubleClick(action_start);\n\t\t\t\t\tblock_action(e);\n\t\t\t\t} else\n\t\t\t\t\tdblclicktime = now;\n\t\t\t} else {\n\t\t\t\tdblclicktime = new Date();\n\t\t\t}\n\t\t}]);\n\n\t\tfor(var i = 0; i < touchHandlers.length; i++){\n\t\t\tgantt.event(touchHandlers[i][0], touchHandlers[i][1], touchHandlers[i][2]);\n\t\t}\n\n\t\t//common helper, prevents event\n\t\tfunction block_action(e) {\n\t\t\tif (e && e.preventDefault)\n\t\t\t\te.preventDefault();\n\t\t\t(e || event).cancelBubble = true;\n\t\t\treturn false;\n\t\t}\n\n\t\tfunction cloneTaskRendered(taskId) {\n\t\t\tvar renders = gantt._getTaskLayers();\n\t\t\tvar task = gantt.getTask(taskId);\n\t\t\tif (task && gantt.isTaskVisible(taskId)) {\n\t\t\t\tfor (var i = 0; i < renders.length; i++) {\n\t\t\t\t\ttask = renders[i].rendered[taskId];\n\t\t\t\t\tif (task && task.getAttribute(gantt.config.task_attribute) && task.getAttribute(gantt.config.task_attribute) == taskId) {\n\t\t\t\t\t\tvar copy = task.cloneNode(true);\n\t\t\t\t\t\tcurrent_target = task;\n\t\t\t\t\t\trenders[i].rendered[taskId] = copy;\n\t\t\t\t\t\ttask.style.display = \"none\";\n\t\t\t\t\t\tcopy.className += \" gantt_drag_move \";\n\t\t\t\t\t\ttask.parentNode.appendChild(copy);\n\t\t\t\t\t\t//return copy;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n};","module.exports = function(gantt) {\ngantt.skins[\"contrast_white\"] = {\n\tconfig:{\n\t\tgrid_width:360,\n\t\trow_height: 35,\n\t\tscale_height: 35,\n\t\tlink_line_width:2,\n\t\tlink_arrow_size:6,\n\t\tlightbox_additional_height:75\n\t},\n\t_second_column_width:100,\n\t_third_column_width:80\n};\n\n};","module.exports = function(gantt) {\ngantt.skins[\"contrast_black\"] = {\n\tconfig:{\n\t\tgrid_width:360,\n\t\trow_height: 35,\n\t\tscale_height: 35,\n\t\tlink_line_width:2,\n\t\tlink_arrow_size:6,\n\t\tlightbox_additional_height:75\n\t},\n\t_second_column_width:100,\n\t_third_column_width:80\n};\n\n};","module.exports = function(gantt) {\n\tgantt.skins.material = {\n\t\tconfig: {\n\t\t\tgrid_width: 411,\n\t\t\trow_height: 34,\n\t\t\ttask_height_offset: 6,\n\t\t\tscale_height: 36,\n\t\t\tlink_line_width: 2,\n\t\t\tlink_arrow_size: 6,\n\t\t\tlightbox_additional_height: 80\n\t\t},\n\t\t_second_column_width: 110,\n\t\t_third_column_width: 75,\n\t\t_redefine_lightbox_buttons: {\n\t\t\t\"buttons_left\": [\"dhx_delete_btn\"],\n\t\t\t\"buttons_right\": [\"dhx_save_btn\", \"dhx_cancel_btn\"]\n\t\t}\n\t};\n\n\tgantt.attachEvent(\"onAfterTaskDrag\", function (id) {\n\t\tvar t = gantt.getTaskNode(id);\n\t\tif (t) {\n\t\t\tt.className += \" gantt_drag_animation\";\n\t\t\tsetTimeout(function () {\n\t\t\t\tvar indx = t.className.indexOf(\" gantt_drag_animation\");\n\t\t\t\tif (indx > -1) {\n\t\t\t\t\tt.className = t.className.slice(0, indx);\n\t\t\t\t}\n\t\t\t}, 200);\n\t\t}\n\t});\n\n};","module.exports = function(gantt) {\n\tgantt.skins.broadway = {\n\t\tconfig: {\n\t\t\tgrid_width: 360,\n\t\t\trow_height: 35,\n\t\t\tscale_height: 35,\n\t\t\tlink_line_width: 1,\n\t\t\tlink_arrow_size: 7,\n\t\t\tlightbox_additional_height: 86\n\t\t},\n\t\t_second_column_width: 90,\n\t\t_third_column_width: 80,\n\n\t\t_lightbox_template: \"<div class='gantt_cal_ltitle'><span class='gantt_mark'>&nbsp;</span><span class='gantt_time'></span><span class='gantt_title'></span><div class='gantt_cancel_btn'></div></div><div class='gantt_cal_larea'></div>\",\n\t\t_config_buttons_left: {},\n\t\t_config_buttons_right: {\n\t\t\t\"gantt_delete_btn\": \"icon_delete\",\n\t\t\t\"gantt_save_btn\": \"icon_save\"\n\t\t}\n\t};\n};","module.exports = function(gantt) {\ngantt.skins.terrace = {\n\tconfig:{\n\t\tgrid_width:360,\n\t\trow_height: 35,\n\t\tscale_height: 35,\n\t\tlink_line_width:2,\n\t\tlink_arrow_size:6,\n\t\tlightbox_additional_height:75\n\t},\n\t_second_column_width:90,\n\t_third_column_width:70\t\t\n};\n\n};","module.exports = function(gantt) {\ngantt.skins.meadow = {\n\tconfig:{\n\t\tgrid_width:350,\n\t\trow_height: 27,\n\t\tscale_height: 30,\n\t\tlink_line_width:2,\n\t\tlink_arrow_size:6,\n\t\tlightbox_additional_height:72\n\t},\n\t_second_column_width:95,\n\t_third_column_width:80\n};\n\n};","module.exports = function(gantt) {\ngantt.skins.skyblue = {\n\tconfig:{\n\t\tgrid_width:350,\n\t\trow_height: 27,\n\t\tscale_height: 27,\n\t\tlink_line_width:1,\n\t\tlink_arrow_size:8,\n\t\tlightbox_additional_height:75\n\t},\n\t_second_column_width:95,\n\t_third_column_width:80\n};\n\n};","function _configure(col, data, force) {\n\tfor (var key in data)\n\t\tif (typeof col[key] == \"undefined\" || force)\n\t\t\tcol[key] = data[key];\n}\n\nfunction _get_skin(force, gantt) {\n\tvar skin = gantt.skin;\n\tif (!skin || force) {\n\t\tvar links = document.getElementsByTagName(\"link\");\n\t\tfor (var i = 0; i < links.length; i++) {\n\t\t\tvar res = links[i].href.match(\"dhtmlxgantt_([a-z\\_]+).css\");\n\t\t\tif (res) {\n\t\t\t\tif (gantt.skins[res[1]] || !skin) {\n\t\t\t\t\tskin = res[1];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tgantt.skin = skin || \"terrace\";\n\tvar skinset = gantt.skins[gantt.skin] || gantt.skins[\"terrace\"];\n\n\t//apply skin related settings\n\t_configure(gantt.config, skinset.config, force);\n\n\tvar config = gantt.getGridColumns();\n\tif (config[1] && !gantt.defined(config[1].width))\n\t\tconfig[1].width = skinset._second_column_width;\n\tif (config[2] && !gantt.defined(config[2].width))\n\t\tconfig[2].width = skinset._third_column_width;\n\t\n\tfor (var i=0; i<config.length; i++) {\n\t\tvar column = config[i];\n\t\tif (column.name == \"add\") {\n\t\t\tif(!column.width){\n\t\t\t\tcolumn.width = 44;\n\t\t\t}\n\t\t\tif (!(gantt.defined(column.min_width) && gantt.defined(column.max_width))) {\n\t\t\t\tcolumn.min_width = column.min_width || column.width;\n\t\t\t\tcolumn.max_width = column.max_width || column.width;\n\t\t\t}\n\t\t\tif (column.min_width)\n\t\t\t\tcolumn.min_width = +column.min_width;\n\t\t\tif (column.max_width)\n\t\t\t\tcolumn.max_width = +column.max_width;\n\t\t\tif (column.width) {\n\t\t\t\tcolumn.width = +column.width;\n\t\t\t\tcolumn.width = (column.min_width && column.min_width > column.width) ? column.min_width : column.width;\n\t\t\t\tcolumn.width = (column.max_width && column.max_width < column.width) ? column.max_width : column.width;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (skinset.config.task_height)\n\t\tgantt.config.task_height = skinset.config.task_height || \"full\"; \n\n\tif (skinset._lightbox_template)\n\t\tgantt._lightbox_template = skinset._lightbox_template;\n\n\tif (skinset._redefine_lightbox_buttons) {\n\t\tgantt.config.buttons_right = skinset._redefine_lightbox_buttons[\"buttons_right\"];\n\t\tgantt.config.buttons_left = skinset._redefine_lightbox_buttons[\"buttons_left\"];\n\t}\n\n\n\tgantt.resetLightbox();\n}\n\nmodule.exports = function(gantt) {\n\tif(!gantt.resetSkin){\n\t\tgantt.resetSkin = function () {\n\t\t\tthis.skin = \"\";\n\t\t\t_get_skin(true, this);\n\t\t};\n\t\tgantt.skins = {};\n\n\t\tgantt.attachEvent(\"onGanttLayoutReady\", function(){\n\t\t\t_get_skin(false, this);\n\t\t});\n\t}\n};","/*\n reuse results of functions that can be recalculated during rendering\n greatly increases the rendering speed when critical path enabled\n Sample - 94_dev/critical_path.html\n\n */\nmodule.exports = function(gantt){\n\ngantt._cached_functions = {\n\tcache: {},\n\tmode: false,\n\tcritical_path_mode: false,\n\twrap_methods : function(methods, object){\n\t\tif(object._prefetch_originals){\n\t\t\tfor(var i in object._prefetch_originals){\n\t\t\t\tobject[i] = object._prefetch_originals[i];\n\t\t\t}\n\t\t}\n\t\tobject._prefetch_originals = {};\n\t\tfor(var i = 0; i < methods.length; i++)\n\t\t\tthis.prefetch(methods[i], object);\n\n\t},\n\tprefetch : function(methodname, host){\n\t\tvar original = host[methodname];\n\t\tif(original){\n\t\t\tvar optimizer = this;\n\n\t\t\thost._prefetch_originals[methodname] = original;\n\t\t\thost[methodname] = function get_prefetched_value(){\n\n\t\t\t\tvar argumentsArray = new Array(arguments.length);\n\t\t\t\tfor (var i = 0, l = arguments.length; i < l; i++) {\n\t\t\t\t\targumentsArray[i] = arguments[i];\n\t\t\t\t}\n\n\t\t\t\tif(optimizer.active){\n\t\t\t\t\tvar args = optimizer.get_arguments_hash(Array.prototype.slice.call(argumentsArray));\n\t\t\t\t\tif(!optimizer.cache[methodname]){\n\t\t\t\t\t\toptimizer.cache[methodname] = {};\n\t\t\t\t\t}\n\n\t\t\t\t\tvar cached_values = optimizer.cache[methodname];\n\n\t\t\t\t\tif(optimizer.has_cached_value(cached_values, args)){\n\t\t\t\t\t\treturn optimizer.get_cached_value(cached_values, args);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tvar value = original.apply(this, argumentsArray);\n\t\t\t\t\t\toptimizer.cache_value(cached_values, args, value);\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn original.apply(this, argumentsArray);\n\t\t\t};\n\t\t}\n\t\treturn original;\n\t},\n\tcache_value: function(cache, arguments_hash, value){\n\t\tif(this.is_date(value))\n\t\t\tvalue = new Date(value);\n\t\tcache[arguments_hash] = value;\n\t},\n\thas_cached_value: function(cache, arguments_hash){\n\t\treturn cache.hasOwnProperty(arguments_hash);\n\t},\n\tget_cached_value: function(cache, arguments_hash){\n\t\tvar data = cache[arguments_hash];\n\n\t\t//for cached dates - return copy\n\t\tif(this.is_date(data)){\n\t\t\tdata = new Date(data);\n\t\t}\n\t\treturn data;\n\t},\n\tis_date: function(value){\n\t\treturn (value && value.getUTCDate);\n\t},\n\tget_arguments_hash:function(args){\n\t\tvar values = [];\n\t\tfor(var i = 0; i < args.length; i++){\n\t\t\tvalues.push(this.stringify_argument(args[i]));\n\t\t}\n\t\treturn \"(\" + values.join(\";\") + \")\";\n\t},\n\tstringify_argument: function(value){\n\t\t//expecting task or link, or any other data entries, dates and primitive values\n\t\tvar ret = \"\";\n\t\tif(value.id){\n\t\t\tret = value.id;\n\t\t}else if(this.is_date(value)){\n\t\t\tret = value.valueOf();\n\t\t}else{\n\t\t\tret = value;\n\t\t}\n\t\treturn ret + \"\";\n\t},\n\tactivate: function(){\n\t\tthis.clear();\n\t\tthis.active = true;\n\t},\n\tdeactivate: function(){\n\t\tthis.clear();\n\t\tthis.active = false;\n\t},\n\tclear: function(){\n\t\tthis.cache = {};\n\t},\n\n\tsetup: function(gantt){\n\t\tvar override_gantt = [];\n\n\t\tvar gantt_methods  = [\n\t\t\t'_isCriticalTask',\n\t\t\t'isCriticalLink',\n\t\t\t'_isProjectEnd',\n\t\t\t'_getProjectEnd',\n\t\t\t'_getSlack'\n\t\t];\n\n\n\n\t\tif(this.mode == 'auto'){\n\t\t\tif(gantt.config.highlight_critical_path){\n\t\t\t\toverride_gantt = gantt_methods;\n\t\t\t}\n\t\t}else if(this.mode === true){\n\t\t\toverride_gantt = gantt_methods;\n\t\t}\n\n\t\tthis.wrap_methods(override_gantt, gantt);\n\n\t},\n\tupdate_if_changed: function(gantt){\n\t\tvar changed = (this.critical_path_mode != gantt.config.highlight_critical_path ||\n\t\t\t\t\t\tthis.mode !== gantt.config.optimize_render);\n\t\tif(changed){\n\t\t\tthis.critical_path_mode = gantt.config.highlight_critical_path;\n\t\t\tthis.mode = gantt.config.optimize_render;\n\t\t\tthis.setup(gantt);\n\t\t}\n\t}\n};\n\nfunction activate(){\n\tgantt._cached_functions.update_if_changed(gantt);\n\tif(!gantt._cached_functions.active){\n\t\tgantt._cached_functions.activate();\n\t}\n\treturn true;\n}\ngantt.attachEvent(\"onBeforeGanttRender\", activate);\ngantt.attachEvent(\"onBeforeDataRender\", activate);\ngantt.attachEvent(\"onBeforeSmartRender\",  function(){\n\tactivate();\n});\ngantt.attachEvent(\"onBeforeParse\", activate);\ngantt.attachEvent(\"onDataRender\", function(){\n\tgantt._cached_functions.deactivate();\n});\nvar deactivTimeout = null;\ngantt.attachEvent(\"onSmartRender\", function(){\n\tif(deactivTimeout)\n\t\tclearTimeout(deactivTimeout);\n\tdeactivTimeout = setTimeout(function(){\n\t\tgantt._cached_functions.deactivate();\n\t}, 1000);\n});\n\ngantt.attachEvent(\"onBeforeGanttReady\", function(){\n\tgantt._cached_functions.update_if_changed(gantt);\n\treturn true;\n});\n\n};","var __extends = require(\"../../../utils/extends\");\n\nmodule.exports = function(gantt) {\n\tvar _super = require(\"./select_control\")(gantt);\n\n\tfunction TypeselectControl() {\n\t\tvar self = _super.apply(this, arguments) || this;\n\n\t\treturn self; \n\t}\n\n\t__extends(TypeselectControl, _super);\n\n\tTypeselectControl.prototype.render = function(sns) {\n\t\tvar types = gantt.config.types,\n\t\t\tlocale = gantt.locale.labels,\n\t\t\toptions = [];\n\n\t\tvar filter = sns.filter || function() {\n\t\t\treturn true;\n\t\t};\n\t\tfor (var i in types) {\n\t\t\tif (!filter(i, types[i]) === false) {\n\t\t\t\toptions.push({ key: types[i], label: locale[\"type_\" + i] });\n\t\t\t}\n\t\t}\n\t\tsns.options = options;\n\n\t\tvar oldOnChange = sns.onchange;\n\t\tsns.onchange = function () {\n\t\t\tvar tId = gantt.getState().lightbox;\n\n\t\t\tgantt.changeLightboxType(this.value);\n\t\t\tif (typeof oldOnChange == 'function') {\n\t\t\t\toldOnChange.apply(this, arguments);\n\t\t\t}\n\t\t};\n\n\t\treturn _super.prototype.render.apply(this, arguments);\n\t};\n\n\treturn TypeselectControl;\n}\n","module.exports = function(gantt) {\n\tvar TypeselectControl = require(\"./lightbox/controls/typeselect_control\")(gantt);\n\n\tgantt.getTaskType = function (type) {\n\t\tvar checkType = type;\n\t\tif(type && typeof type == \"object\"){\n\t\t\tcheckType = type.type;\n\t\t}\n\n\t\tfor (var i in this.config.types) {\n\t\t\tif (this.config.types[i] == checkType) {\n\t\t\t\treturn checkType;\n\t\t\t}\n\t\t}\n\t\treturn gantt.config.types.task;\n\t};\n\n\tgantt.form_blocks.typeselect = new TypeselectControl();\n\n};","module.exports = function(gantt) {\n\n\tgantt._extend_to_optional = function (lightbox_block) {\n\n\t\tvar duration = lightbox_block;\n\t\tvar optional_time = {\n\t\t\trender: duration.render,\n\t\t\tfocus: duration.focus,\n\t\t\tset_value: function (node, value, task, section) {\n\t\t\t\tvar mapping = gantt._resolve_default_mapping(section);\n\t\t\t\tif (!task[mapping.start_date] || (mapping.start_date == \"start_date\" && this._isAllowedUnscheduledTask(task))) {\n\t\t\t\t\toptional_time.disable(node, section);\n\t\t\t\t\tvar val = {};\n\n\t\t\t\t\tfor (var i in mapping) {\n\t\t\t\t\t\t//take default values from the time control from task start/end dates\n\t\t\t\t\t\tval[mapping[i]] = task[i];\n\t\t\t\t\t}\n\n\t\t\t\t\treturn duration.set_value.call(gantt, node, value, val, section);//set default value\n\t\t\t\t} else {\n\t\t\t\t\toptional_time.enable(node, section);\n\t\t\t\t\treturn duration.set_value.call(gantt, node, value, task, section);\n\t\t\t\t}\n\t\t\t},\n\t\t\tget_value: function (node, task, section) {\n\t\t\t\tif (section.disabled) {\n\t\t\t\t\treturn {start_date: null};\n\t\t\t\t} else {\n\t\t\t\t\treturn duration.get_value.call(gantt, node, task, section);\n\t\t\t\t}\n\t\t\t},\n\t\t\tupdate_block: function (node, section) {\n\t\t\t\tgantt.callEvent(\"onSectionToggle\", [gantt._lightbox_id, section]);\n\t\t\t\tnode.style.display = section.disabled ? \"none\" : \"block\";\n\n\t\t\t\tif (section.button) {\n\t\t\t\t\tvar button = node.previousSibling.querySelector(\".gantt_custom_button_label\"),\n\t\t\t\t\t\tlabels = gantt.locale.labels;\n\n\t\t\t\t\tvar button_text = section.disabled ? labels[section.name + \"_enable_button\"] : labels[section.name + \"_disable_button\"];\n\n\t\t\t\t\tbutton.innerHTML = button_text;\n\t\t\t\t}\n\t\t\t\tgantt.resizeLightbox();\n\t\t\t},\n\t\t\tdisable: function (node, section) {\n\t\t\t\tsection.disabled = true;\n\t\t\t\toptional_time.update_block(node, section);\n\n\t\t\t},\n\t\t\tenable: function (node, section) {\n\t\t\t\tsection.disabled = false;\n\t\t\t\toptional_time.update_block(node, section);\n\t\t\t},\n\t\t\tbutton_click: function (index, el, section, container) {\n\t\t\t\tif (gantt.callEvent(\"onSectionButton\", [gantt._lightbox_id, section]) === false) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar config = gantt._get_typed_lightbox_config()[index];\n\t\t\t\tif (config.disabled) {\n\t\t\t\t\toptional_time.enable(container, config);\n\t\t\t\t} else {\n\t\t\t\t\toptional_time.disable(container, config);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn optional_time;\n\t};\n\n\tgantt.form_blocks.duration_optional = gantt._extend_to_optional(gantt.form_blocks.duration);\n\tgantt.form_blocks.time_optional = gantt._extend_to_optional(gantt.form_blocks.time);\n\n};","var __extends = require(\"../../../utils/extends\");\n\nmodule.exports = function(gantt) {\n\tvar _super = require(\"./select_control\")(gantt);\n\n\tfunction ParentControl() {\n\t\tvar self = _super.apply(this, arguments) || this; \n\n\t\treturn self; \n\t}\n\n\t__extends(ParentControl, _super);\n\n\n\tParentControl.prototype.render = function(sns) {\n\t\treturn _display(sns, false);\n\t};\n\n\tParentControl.prototype.set_value = function(node, value, ev, config) {\n\t\tvar tmpDom = document.createElement(\"div\");\n\t\ttmpDom.innerHTML = _display(config, ev.id);\n\t\tvar newOptions = tmpDom.removeChild(tmpDom.firstChild);\n\t\tnode.onselect = null;\n\t\tnode.parentNode.replaceChild(newOptions, node);\n\n\t\treturn gantt.form_blocks.select.set_value.apply(gantt, [newOptions, value, ev, config]);\n\t};\n\n\tfunction _display(config, item_id) {\n\t\tvar tasks = [],\n\t\t\toptions = [];\n\t\tif (item_id) {\n\t\t\ttasks = gantt.getTaskByTime();\n\t\t\tif (config.allow_root) {\n\t\t\t\ttasks.unshift({id: gantt.config.root_id, text: config.root_label || \"\"});\n\t\t\t}\n\t\t\ttasks = _filter(tasks, config, item_id);\n\t\t\tif (config.sort) {\n\t\t\t\ttasks.sort(config.sort);\n\t\t\t}\n\t\t}\n\t\tvar text = config.template || gantt.templates.task_text;\n\t\tfor (var i = 0; i < tasks.length; i++) {\n\t\t\tvar label = text.apply(gantt, [tasks[i].start_date, tasks[i].end_date, tasks[i]]);\n\t\t\tif (label === undefined) {\n\t\t\t\tlabel = \"\";\n\t\t\t}\n\t\t\toptions.push({\n\t\t\t\tkey: tasks[i].id,\n\t\t\t\tlabel: label\n\t\t\t});\n\t\t}\n\t\tconfig.options = options;\n\t\tconfig.map_to = config.map_to || \"parent\";\n\t\treturn gantt.form_blocks.select.render.apply(this, arguments);\n\t}\n\n\tfunction _filter(options, config, item_id) {\n\t\tvar filter = config.filter || function() {\n\t\t\treturn true;\n\t\t};\n\n\t\toptions = options.slice(0);\n\n\t\tfor (var i = 0; i < options.length; i++) {\n\t\t\tvar task = options[i];\n\t\t\tif (task.id == item_id || gantt.isChildOf(task.id, item_id) || filter(task.id, task) === false) {\n\t\t\t\toptions.splice(i, 1);\n\t\t\t\ti--;\n\t\t\t}\n\t\t}\n\t\treturn options;\n\t}\n\treturn ParentControl;\n};","var __extends = require(\"../../../utils/extends\");\n\nmodule.exports = function(gantt) {\n\tvar _super = require(\"./base_control\")(gantt);\n\n\tfunction DurationControl() {\n\t\tvar self = _super.apply(this, arguments) || this; \n\n\t\treturn self; \n\t}\n\n\t__extends(DurationControl, _super);\n\n\tDurationControl.prototype.render = function(sns) {\n\t\tvar time = \"<div class='gantt_time_selects'>\" + gantt.form_blocks.getTimePicker.call(this, sns) + \"</div>\";\n\t\tvar label = gantt.locale.labels[gantt.config.duration_unit + \"s\"];\n\t\tvar singleDate = sns.single_date ? \" style='display:none'\" : \"\";\n\t\tvar readonly = sns.readonly ? \" disabled='disabled'\" : \"\";\n\t\tvar ariaAttr = gantt._waiAria.lightboxDurationInputAttrString(sns);\n\t\tvar duration = \"<div class='gantt_duration' \" + singleDate + \">\" +\n\t\t\t\"<input type='button' class='gantt_duration_dec' value='−'\" + readonly + \">\" +\n\t\t\t\"<input type='text' value='5' class='gantt_duration_value'\" + readonly + \" \" + ariaAttr + \">\" +\n\t\t\t\"<input type='button' class='gantt_duration_inc' value='+'\" + readonly + \"> \" + label + \" <span></span>\" +\n\t\t\t\"</div>\";\n\t\tvar html = \"<div style='height:\" + (sns.height || 30) + \"px;padding-top:0px;font-size:inherit;' class='gantt_section_time'>\" + time + \" \" + duration + \"</div>\";\n\t\treturn html;\n\t};\n\n\tDurationControl.prototype.set_value = function(node, value, ev, config) {\n\t\tvar cfg = config;\n\t\tvar s = node.getElementsByTagName(\"select\");\n\t\tvar inps = node.getElementsByTagName(\"input\");\n\t\tvar duration = inps[1];\n\t\tvar btns = [inps[0], inps[2]];\n\t\tvar endspan = node.getElementsByTagName(\"span\")[0];\n\t\tvar map = config._time_format_order;\n\t\tvar mapping;\n\t\tvar start_date;\n\t\tvar end_date;\n\t\tvar duration_val;\n\n\t\tfunction _calc_date() {\n\t\t\tvar start_date = _getStartDate.call(gantt, node, config);\n\t\t\tvar duration = _getDuration.call(gantt, node, config);\n\t\t\tvar end_date = gantt.calculateEndDate({start_date: start_date, duration: duration, task: ev});\n\n\t\t\tendspan.innerHTML = gantt.templates.task_date(end_date);\n\t\t}\n\n\t\tfunction _change_duration(step) {\n\t\t\tvar value = duration.value;\n\n\t\t\tvalue = parseInt(value, 10);\n\t\t\tif (window.isNaN(value))\n\t\t\t\tvalue = 0;\n\t\t\tvalue += step;\n\t\t\tif (value < 1) value = 1;\n\t\t\tduration.value = value;\n\t\t\t_calc_date();\n\t\t}\n\n\t\tbtns[0].onclick = gantt.bind(function() {\n\t\t\t_change_duration(-1 * gantt.config.duration_step);\n\t\t}, this);\n\t\tbtns[1].onclick = gantt.bind(function() {\n\t\t\t_change_duration(1 * gantt.config.duration_step);\n\t\t}, this);\n\t\ts[0].onchange = _calc_date;\n\t\ts[1].onchange = _calc_date;\n\t\ts[2].onchange = _calc_date;\n\t\tif (s[3]) s[3].onchange = _calc_date;\n\n\t\tduration.onkeydown = gantt.bind(function(e) {\n\t\t\tvar code; \n\n\t\t\te = e || window.event;\n\t\t\tcode = (e.charCode || e.keyCode || e.which);\n\t\t\t\n\t\t\tif (code == gantt.constants.KEY_CODES.DOWN) {\n\t\t\t\t_change_duration(-1 * gantt.config.duration_step);\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (code == gantt.constants.KEY_CODES.UP) {\n\t\t\t\t_change_duration(1 * gantt.config.duration_step);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\twindow.setTimeout(_calc_date, 1);\n\t\t}, this);\n\n\t\tduration.onchange = gantt.bind(_calc_date, this);\n\n\t\tmapping = gantt._resolve_default_mapping(config);\n\t\tif (typeof(mapping) === \"string\") mapping = {start_date: mapping};\n\n\t\tstart_date = ev[mapping.start_date] || new Date();\n\t\tend_date = ev[mapping.end_date] || gantt.calculateEndDate({\n\t\t\tstart_date: start_date,\n\t\t\tduration: 1,\n\t\t\ttask: ev\n\t\t});\n\t\tduration_val = Math.round(ev[mapping.duration]) || gantt.calculateDuration({\n\t\t\tstart_date: start_date,\n\t\t\tend_date: end_date,\n\t\t\ttask: ev\n\t\t});\n\n\t\tgantt.form_blocks._fill_lightbox_select(s, 0, start_date, map, cfg);\n\t\tduration.value = duration_val;\n\t\t_calc_date();\n\t};\n\n\tDurationControl.prototype.get_value = function(node, ev, config) {\n\t\tvar startDate = _getStartDate(node, config);\n\t\tvar duration = _getDuration(node, config);\n\t\tvar endDate = gantt.calculateEndDate({start_date: startDate, duration: duration, task: ev});\n\n\t\tif (typeof gantt._resolve_default_mapping(config) == \"string\") {\n\t\t\treturn startDate;\n\t\t}\n\n\t\treturn {\n\t\t\tstart_date: startDate,\n\t\t\tend_date: endDate,\n\t\t\tduration: duration\n\t\t};\n\t};\n\n\tDurationControl.prototype.focus = function(node) {\n\t\tgantt._focus(node.getElementsByTagName(\"select\")[0]);\n\t};\n\n\n\tfunction _getStartDate(node, config) {\n\t\tvar s = node.getElementsByTagName(\"select\");\n\t\tvar map = config._time_format_order;\n\t\tvar hours = 0;\n\t\tvar minutes = 0;\n\n\t\tif (gantt.defined(map[3])) {\n\t\t\tvar input = s[map[3]];\n\t\t\tvar time = parseInt(input.value, 10);\n\t\t\tif (isNaN(time) && input.hasAttribute(\"data-value\")) {\n\t\t\t\ttime = parseInt(input.getAttribute(\"data-value\"), 10);\n\t\t\t}\n\n\t\t\thours = Math.floor(time / 60);\n\t\t\tminutes = time % 60;\n\t\t}\n\t\treturn new Date(s[map[2]].value, s[map[1]].value, s[map[0]].value, hours, minutes);\n\t}\n\n\tfunction _getDuration(node) {\n\t\tvar duration = node.getElementsByTagName(\"input\")[1];\n\n\t\tduration = parseInt(duration.value, 10);\n\t\tif (!duration || window.isNaN(duration)) duration = 1;\n\t\tif (duration < 0) duration *= -1;\n\t\treturn duration;\n\t}\n\n\n\treturn DurationControl; \n};","var __extends = require(\"../../../utils/extends\");\n\nmodule.exports = function(gantt) {\n\tvar _super = require(\"./base_control\")(gantt);\n\n\tfunction RadioControl() {\n\t\tvar self = _super.apply(this, arguments) || this;\n\n\t\treturn self; \n\t}\n\n\t__extends(RadioControl, _super);\n\n\tRadioControl.prototype.render = function(sns) {\n\t\tvar height = (sns.height || \"23\") + \"px\";\n\t\tvar html = \"<div class='gantt_cal_ltext' style='height:\" + height + \";'>\";\n\n\t\tif (sns.options && sns.options.length) {\n\t\t\tfor (var i = 0; i < sns.options.length; i++) {\n\t\t\t\thtml += \"<label><input type='radio' value='\" + sns.options[i].key + \"' name='\" + sns.name + \"'>\" + sns.options[i].label + \"</label>\";\n\t\t\t}\n\t\t}\n\n\t\thtml += \"</div>\";\n\t\treturn html;\n\t};\n\n\tRadioControl.prototype.set_value = function(node, value, ev, sns) {\n\t\tvar radio;\n\n\t\tif (!sns.options || !sns.options.length) return;\n\n\t\tradio = node.querySelector(\"input[type=radio][value='\" + value + \"']\") ||\n\t\t\t\tnode.querySelector(\"input[type=radio][value='\" + sns.default_value + \"']\");\n\n\t\tif (!radio) return;\n\n\t\tif (!node._dhx_onchange && sns.onchange) {\n\t\t\tnode.onchange = sns.onchange;\n\t\t\tnode._dhx_onchange = true;\n\t\t}\n\n\t\tradio.checked = true;\n\t};\n\n\tRadioControl.prototype.get_value = function(node, ev) {\n\t\tvar result = node.querySelector(\"input[type=radio]:checked\");\n\n\t\treturn result ? result.value : \"\";\n\t};\n\n\tRadioControl.prototype.focus = function(node) {\n\t\tgantt._focus(node.querySelector(\"input[type=radio]\"));\n\t};\n\n\treturn RadioControl;\n};","var helpers = require(\"../../../utils/helpers\");\nvar __extends = require(\"../../../utils/extends\");\n\nmodule.exports = function(gantt) {\n\tvar _super = require(\"./base_control\")(gantt);\n\n\tfunction CheckboxControl() {\n\t\tvar self = _super.apply(this, arguments) || this;\n\n\t\treturn self; \n\t}\n\n\t__extends(CheckboxControl, _super);\n\n\tCheckboxControl.prototype.render = function(sns) {\n\t\tvar height = (sns.height || \"23\") + \"px\";\n\t\tvar html = \"<div class='gantt_cal_ltext' style='height:\" + height + \";'>\";\n\n\t\tif (sns.options && sns.options.length) {\n\t\t\tfor (var i = 0; i < sns.options.length; i++) {\n\t\t\t\thtml += \"<label><input type='checkbox' value='\" + sns.options[i].key + \"' name='\" + sns.name + \"'>\" + sns.options[i].label + \"</label>\";\n\t\t\t}\n\t\t}\n\t\thtml += \"</div>\";\n\t\treturn html;\n\t};\n\n\tCheckboxControl.prototype.set_value = function(node, value, ev, sns) {\n\t\tvar checkboxes = Array.prototype.slice.call(node.querySelectorAll(\"input[type=checkbox]\"));\n\n\t\tif (!node._dhx_onchange && sns.onchange) {\n\t\t\tnode.onchange = sns.onchange;\n\t\t\tnode._dhx_onchange = true;\n\t\t}\n\n\t\thelpers.forEach(checkboxes, function(entry) {\n\t\t\tentry.checked = value ? value.indexOf(entry.value) >= 0 : false;\n\t\t});\n\t};\n\n\tCheckboxControl.prototype.get_value = function(node) {\n\t\treturn helpers.arrayMap(Array.prototype.slice.call(node.querySelectorAll(\"input[type=checkbox]:checked\")), function(entry) {\n\t\t\treturn entry.value;\n\t\t});\n\t};\n\n\tCheckboxControl.prototype.focus = function(node) {\n\t\tgantt._focus(node.querySelector(\"input[type=checkbox]\"));\n\t};\n\n\treturn CheckboxControl;\n};","var __extends = require(\"../../../utils/extends\");\n\nmodule.exports = function(gantt) {\n\tvar _super = require(\"./base_control\")(gantt);\n\n\tfunction TimeControl() {\n\t\tvar self = _super.apply(this, arguments) || this;\n\n\t\treturn self; \n\t}\n\n\t__extends(TimeControl, _super);\n\n\n\tTimeControl.prototype.render = function(sns) {\n\t\tvar time = gantt.form_blocks.getTimePicker.call(this, sns);\n\t\tvar html = \"<div style='height:\" + (sns.height || 30) + \"px;padding-top:0px;font-size:inherit;text-align:center;' class='gantt_section_time'>\";\n\t\thtml += time;\n\n\t\tif (sns.single_date) {\n\t\t\ttime = gantt.form_blocks.getTimePicker.call(this, sns, true);\n\t\t\thtml += \"<span></span>\";\n\t\t} else {\n\t\t\thtml += \"<span style='font-weight:normal; font-size:10pt;'> &nbsp;&ndash;&nbsp; </span>\";\n\t\t}\n\n\t\thtml += time;\n\t\thtml += \"</div>\";\n\t\treturn html;\n\t};\n\n\tTimeControl.prototype.set_value = function(node, value, ev, config) {\n\t\tvar cfg = config;\n\t\tvar s = node.getElementsByTagName(\"select\");\n\t\tvar map = config._time_format_order;\n\n\t\tif (cfg.auto_end_date) {\n\t\t\tvar _update_lightbox_select = function() {\n\t\t\t\tstart_date = new Date(s[map[2]].value, s[map[1]].value, s[map[0]].value, 0, 0);\n\t\t\t\tend_date = gantt.calculateEndDate({start_date: start_date, duration: 1, task: ev});\n\t\t\t\tgantt.form_blocks._fill_lightbox_select(s, map.size, end_date, map, cfg);\n\t\t\t};\n\t\t\tfor (var i = 0; i < 4; i++) {\n\t\t\t\ts[i].onchange = _update_lightbox_select;\n\t\t\t}\n\t\t}\n\n\t\tvar mapping = gantt._resolve_default_mapping(config);\n\n\t\tif (typeof(mapping) === \"string\") mapping = {start_date: mapping};\n\n\t\tvar start_date = ev[mapping.start_date] || new Date();\n\t\tvar end_date = ev[mapping.end_date] || gantt.calculateEndDate({\n\t\t\tstart_date: start_date,\n\t\t\tduration: 1,\n\t\t\ttask: ev\n\t\t});\n\n\t\tgantt.form_blocks._fill_lightbox_select(s, 0, start_date, map, cfg);\n\t\tgantt.form_blocks._fill_lightbox_select(s, map.size, end_date, map, cfg);\n\t};\n\n\tTimeControl.prototype.get_value = function(node, ev, config) {\n\t\tvar selects = node.getElementsByTagName(\"select\");\n\t\tvar map = config._time_format_order;\n\t\tvar needSetTime = gantt.defined(map[3]);\n\t\tvar startDate;\n\n\t\tfunction _getEndDate(selects, map, needSetTime, startDate) {\n\t\t\tvar endDate = _getDate(selects, map, needSetTime, map.size);\n\n\t\t\tif (endDate <= startDate) {\n\t\t\t\treturn gantt.date.add(startDate, gantt._get_timepicker_step(), \"minute\");\n\t\t\t}\n\t\t\treturn endDate;\n\t\t}\n\n\t\tfunction _getDate(selects, map, needSetTime, mapOffset) {\n\t\t\tvar time;\n\t\t\tvar hours = 0;\n\t\t\tvar minutes = 0;\n\n\t\t\tmapOffset = mapOffset || 0;\n\n\t\t\tif (needSetTime) {\n\t\t\t\ttime = parseInt(selects[map[3] + mapOffset].value, 10);\n\t\t\t\thours = Math.floor(time / 60);\n\t\t\t\tminutes = time % 60;\n\t\t\t}\n\t\t\treturn new Date(selects[map[2] + mapOffset].value, selects[map[1] + mapOffset].value, selects[map[0] + mapOffset].value, hours, minutes);\n\t\t}\n\n\t\tstartDate = _getDate(selects, map, needSetTime);\n\n\t\tif (typeof gantt._resolve_default_mapping(config) === \"string\") {\n\t\t\treturn startDate;\n\t\t}\n\n\t\treturn {\n\t\t\tstart_date: startDate,\n\t\t\tend_date: _getEndDate(selects, map, needSetTime, startDate)\n\t\t};\n\t};\n\n\tTimeControl.prototype.focus = function(node) {\n\t\tgantt._focus(node.getElementsByTagName(\"select\")[0]);\n\t};\n\n\treturn TimeControl;\n};","var __extends = require(\"../../../utils/extends\");\n\nmodule.exports = function(gantt) {\n\tvar _super = require(\"./base_control\")(gantt);\n\n\tfunction TextareaControl() {\n\t\tvar self = _super.apply(this, arguments) || this;\n\n\t\treturn self; \n\t}\n\n\t__extends(TextareaControl, _super);\n\n\tTextareaControl.prototype.render = function(sns) {\n\t\tvar height = (sns.height || \"130\") + \"px\";\n\t\treturn \"<div class='gantt_cal_ltext' style='height:\" + height + \";'><textarea></textarea></div>\";\n\t};\n\n\tTextareaControl.prototype.set_value = function(node, value) {\n\t\tgantt.form_blocks.textarea._get_input(node).value = value || \"\";\n\t};\n\n\tTextareaControl.prototype.get_value = function(node) {\n\t\treturn gantt.form_blocks.textarea._get_input(node).value;\n\t};\n\n\tTextareaControl.prototype.focus = function(node) {\n\t\tvar a = gantt.form_blocks.textarea._get_input(node);\n\t\tgantt._focus(a, true);\n\t};\n\n\tTextareaControl.prototype._get_input = function(node) {\n\t\treturn node.querySelector(\"textarea\");\n\t};\n\n\treturn TextareaControl;\n};","var __extends = require(\"../../../utils/extends\");\n\nmodule.exports = function(gantt) {\n\tvar _super = require(\"./base_control\")(gantt);\n\n\tfunction TemplateControl() {\n\t\tvar self = _super.apply(this, arguments) || this; \n\t\treturn self; \n\t}\n\n\t__extends(TemplateControl, _super);\n\n\n\tTemplateControl.prototype.render = function(sns) {\n\t\tvar height = (sns.height || \"30\") + \"px\";\n\t\treturn \"<div class='gantt_cal_ltext gantt_cal_template' style='height:\" + height + \";'></div>\";\n\t};\n\n\tTemplateControl.prototype.set_value = function(node, value) {\n\t\tnode.innerHTML = value || \"\";\n\t};\n\n\tTemplateControl.prototype.get_value = function(node) {\n\t\treturn node.innerHTML || \"\";\n\t};\n\n\tTemplateControl.prototype.focus = function() {};\n\n\treturn TemplateControl;\n};","module.exports = function(gantt) {\n\tvar domHelpers = require(\"../../utils/dom_helpers\");\n\tvar helpers = require(\"../../utils/helpers\");\n\tvar TemplateControl = require(\"./controls/template_control\")(gantt);\n\tvar TextareaControl = require(\"./controls/textarea_control\")(gantt);\n\tvar TimeControl = require(\"./controls/time_control\")(gantt);\n\tvar SelectControl = require(\"./controls/select_control\")(gantt);\n\tvar CheckboxControl = require(\"./controls/checkbox_control\")(gantt);\n\tvar RadioControl = require(\"./controls/radio_control\")(gantt);\n\tvar DurationControl = require(\"./controls/duration_control\")(gantt);\n\tvar ParentControl = require(\"./controls/parent_control\")(gantt);\n\n\tgantt._lightbox_methods = {};\n\tgantt._lightbox_template = \"<div class='gantt_cal_ltitle'><span class='gantt_mark'>&nbsp;</span><span class='gantt_time'></span><span class='gantt_title'></span></div><div class='gantt_cal_larea'></div>\";\n\n\n\t//TODO: gantt._lightbox_id is changed from data.js and accessed from autoscheduling, check if it can be removed from gantt object\n\tvar state = gantt.$services.getService(\"state\");\n\tstate.registerProvider(\"lightbox\", function(){\n\t\treturn {\n\t\t\tlightbox: gantt._lightbox_id\n\t\t};\n\t});\n\n\tgantt.showLightbox = function(id) {\n\t\tif (!id || gantt.isReadonly(this.getTask(id))) return;\n\t\tif (!this.callEvent(\"onBeforeLightbox\", [id])) return;\n\n\t\tvar task = this.getTask(id);\n\n\t\tvar box = this.getLightbox(this.getTaskType(task.type));\n\t\tthis._center_lightbox(box);\n\t\tthis.showCover();\n\t\tthis._fill_lightbox(id, box);\n\n\t\tthis._waiAria.lightboxVisibleAttr(box);\n\n\t\tthis.callEvent(\"onLightbox\", [id]);\n\t};\n\n\tfunction _is_chart_visible(gantt) {\n\t\tvar timeline = gantt.$ui.getView(\"timeline\");\n\t\tif(timeline && timeline.isVisible()){\n\t\t\treturn true;\n\t\t}else{\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tgantt._get_timepicker_step = function() {\n\t\tif (this.config.round_dnd_dates) {\n\t\t\tvar step;\n\t\t\tif (_is_chart_visible(this)) {\n\t\t\t\tvar scale = gantt.getScale();\n\t\t\t\tstep = (helpers.getSecondsInUnit(scale.unit) * scale.step) / 60;//timepicker step is measured in minutes\n\t\t\t}\n\n\t\t\tif(!step || step >= 60 * 24){\n\t\t\t\tstep = this.config.time_step;\n\t\t\t}\n\t\t\treturn step;\n\t\t}\n\t\treturn this.config.time_step;\n\t};\n\tgantt.getLabel = function(property, key) {\n\t\tvar sections = this._get_typed_lightbox_config();\n\t\tfor (var i = 0; i < sections.length; i++) {\n\t\t\tif (sections[i].map_to == property) {\n\t\t\t\tvar options = sections[i].options;\n\t\t\t\tfor (var j = 0; j < options.length; j++) {\n\t\t\t\t\tif (options[j].key == key) {\n\t\t\t\t\t\treturn options[j].label;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn \"\";\n\t};\n\n\tgantt.updateCollection = function(list_name, collection) {\n\t\tcollection = collection.slice(0);\n\t\tvar list = gantt.serverList(list_name);\n\t\tif (!list) return false;\n\t\tlist.splice(0, list.length);\n\t\tlist.push.apply(list, collection || []);\n\t\tgantt.resetLightbox();\n\t};\n\tgantt.getLightboxType = function() {\n\t\treturn this.getTaskType(this._lightbox_type);\n\t};\n\tgantt.getLightbox = function(type) {\n\t\tvar lightboxDiv;\n\t\tvar fullWidth;\n\t\tvar html;\n\t\tvar sns;\n\t\tvar ds;\n\t\tvar classNames = \"\";\n\n\t\tif (type === undefined)\n\t\t\ttype = this.getLightboxType();\n\n\t\tif (!this._lightbox || this.getLightboxType() != this.getTaskType(type)) {\n\t\t\tthis._lightbox_type = this.getTaskType(type);\n\t\t\tlightboxDiv = document.createElement(\"div\");\n\t\t\tclassNames = \"gantt_cal_light\";\n\t\t\tfullWidth = this._is_lightbox_timepicker();\n\n\t\t\tif (gantt.config.wide_form || fullWidth)\n\t\t\t\tclassNames += \" gantt_cal_light_wide\";\n\n\t\t\tif (fullWidth) {\n\t\t\t\tgantt.config.wide_form = true;\n\t\t\t\tclassNames += \" gantt_cal_light_full\";\n\t\t\t}\n\n\t\t\tlightboxDiv.className = classNames;\n\n\t\t\tlightboxDiv.style.visibility = \"hidden\";\n\t\t\thtml = this._lightbox_template;\n\n\t\t\thtml += getHtmlButtons(this.config.buttons_left);\n\t\t\thtml += getHtmlButtons(this.config.buttons_right, true);\n\n\t\t\tlightboxDiv.innerHTML = html;\n\n\t\t\tgantt._waiAria.lightboxAttr(lightboxDiv);\n\n\t\t\tif (gantt.config.drag_lightbox) {\n\t\t\t\tlightboxDiv.firstChild.onmousedown = gantt._ready_to_dnd;\n\t\t\t\tlightboxDiv.firstChild.onselectstart = function() {\n\t\t\t\t\treturn false;\n\t\t\t\t};\n\t\t\t\tlightboxDiv.firstChild.style.cursor = \"pointer\";\n\t\t\t\tgantt._init_dnd_events();\n\t\t\t}\n\n\t\t\tdocument.body.insertBefore(lightboxDiv, document.body.firstChild);\n\t\t\tthis._lightbox = lightboxDiv;\n\n\t\t\tsns = this._get_typed_lightbox_config(type);\n\t\t\thtml = this._render_sections(sns);\n\n\t\t\tds = lightboxDiv.querySelector(\"div.gantt_cal_larea\");\n\t\t\tds.innerHTML = html;\n\n\t\t\tbindLabelsToInputs(sns);\n\n\t\t\t//sizes\n\t\t\tthis.resizeLightbox();\n\n\t\t\tthis._init_lightbox_events(this);\n\t\t\tlightboxDiv.style.display = \"none\";\n\t\t\tlightboxDiv.style.visibility = \"visible\";\n\t\t}\n\t\treturn this._lightbox;\n\t};\n\n\tgantt._render_sections = function(sns) {\n\t\tvar html = \"\";\n\t\tfor (var i = 0; i < sns.length; i++) {\n\t\t\tvar block = this.form_blocks[sns[i].type];\n\t\t\tif (!block) continue; //ignore incorrect blocks\n\t\t\tsns[i].id = \"area_\" + this.uid();\n\n\t\t\tvar display = sns[i].hidden ? \" style='display:none'\" : \"\";\n\t\t\tvar button = \"\";\n\t\t\tif (sns[i].button) {\n\t\t\t\tbutton = \"<div class='gantt_custom_button' data-index='\" + i + \"'><div class='gantt_custom_button_\" + sns[i].button + \"'></div><div class='gantt_custom_button_label'>\" + this.locale.labels[\"button_\" + sns[i].button] + \"</div></div>\";\n\t\t\t}\n\t\t\tif (this.config.wide_form) {\n\t\t\t\thtml += \"<div class='gantt_wrap_section' \" + display + \">\";\n\t\t\t}\n\t\t\thtml += \"<div id='\" + sns[i].id + \"' class='gantt_cal_lsection'><label>\" + button + this.locale.labels[\"section_\" + sns[i].name] + \"</label></div>\" + block.render.call(this, sns[i]);\n\t\t\thtml += \"</div>\";\n\t\t}\n\t\treturn html;\n\t};\n\n\n\tgantt.resizeLightbox = function() {\n\t\tif (!this._lightbox) return;\n\n\t\tvar con = this._lightbox.childNodes[1];\n\t\tcon.style.height = \"0px\";\n\t\tcon.style.height = con.scrollHeight + \"px\";\n\t\tthis._lightbox.style.height = con.scrollHeight + this.config.lightbox_additional_height + \"px\";\n\t\tcon.style.height = con.scrollHeight + \"px\"; //it is incredible , how ugly IE can be\n\t};\n\n\tgantt._center_lightbox = function(box) {\n\t\tif (box) {\n\t\t\tbox.style.display = \"block\";\n\n\t\t\tvar scroll_top = window.pageYOffset || document.body.scrollTop || document.documentElement.scrollTop;\n\t\t\tvar scroll_left = window.pageXOffset || document.body.scrollLeft || document.documentElement.scrollLeft;\n\n\t\t\tvar view_height = window.innerHeight || document.documentElement.clientHeight;\n\n\t\t\tif (scroll_top) // if vertical scroll on window\n\t\t\t\tbox.style.top = Math.round(scroll_top + Math.max((view_height - box.offsetHeight) / 2, 0)) + \"px\";\n\t\t\telse // vertical scroll on body\n\t\t\t\tbox.style.top = Math.round(Math.max(((view_height - box.offsetHeight) / 2), 0) + 9) + \"px\"; // +9 for compatibility with auto tests\n\n\t\t\t// not quite accurate but used for compatibility reasons\n\t\t\tif (document.documentElement.scrollWidth > document.body.offsetWidth) // if horizontal scroll on the window\n\t\t\t\tbox.style.left = Math.round(scroll_left + (document.body.offsetWidth - box.offsetWidth) / 2) + \"px\";\n\t\t\telse // horizontal scroll on the body\n\t\t\t\tbox.style.left = Math.round((document.body.offsetWidth - box.offsetWidth) / 2) + \"px\";\n\t\t}\n\t};\n\tgantt.showCover = function() {\n\t\tif (this._cover) return;\n\n\t\tthis._cover = document.createElement(\"DIV\");\n\t\tthis._cover.className = \"gantt_cal_cover\";\n\t\tvar _document_height = ((document.height !== undefined) ? document.height : document.body.offsetHeight);\n\t\tvar _scroll_height = ((document.documentElement) ? document.documentElement.scrollHeight : 0);\n\t\tthis._cover.style.height = Math.max(_document_height, _scroll_height) + \"px\";\n\t\tdocument.body.appendChild(this._cover);\n\t};\n\n\n\tgantt._init_lightbox_events = function() {\n\t\tgantt.lightbox_events = {};\n\n\n\t\tgantt.lightbox_events.gantt_save_btn = function() {\n\t\t\tgantt._save_lightbox();\n\t\t};\n\n\n\t\tgantt.lightbox_events.gantt_delete_btn = function() {\n\t\t\tif (!gantt.callEvent(\"onLightboxDelete\", [gantt._lightbox_id]))\n\t\t\t\treturn;\n\n\t\t\tif (gantt.isTaskExists(gantt._lightbox_id)) {\n\t\t\t\tgantt.$click.buttons[\"delete\"](gantt._lightbox_id);\n\t\t\t} else {\n\t\t\t\tgantt.hideLightbox();\n\t\t\t}\n\n\t\t};\n\n\n\t\tgantt.lightbox_events.gantt_cancel_btn = function() {\n\t\t\tgantt._cancel_lightbox();\n\t\t};\n\n\n\t\tgantt.lightbox_events[\"default\"] = function(e, src) {\n\t\t\tif (src.getAttribute(\"data-dhx-button\")) {\n\t\t\t\tgantt.callEvent(\"onLightboxButton\", [src.className, src, e]);\n\t\t\t} else {\n\t\t\t\tvar index, block, sec;\n\n\t\t\t\tvar className = domHelpers.getClassName(src);\n\t\t\t\tif (className.indexOf(\"gantt_custom_button\") != -1) {\n\t\t\t\t\tif (className.indexOf(\"gantt_custom_button_\") != -1) {\n\t\t\t\t\t\tindex = src.parentNode.getAttribute(\"data-index\");\n\t\t\t\t\t\tsec = src;\n\t\t\t\t\t\twhile (sec && domHelpers.getClassName(sec).indexOf(\"gantt_cal_lsection\") == -1) {\n\t\t\t\t\t\t\tsec = sec.parentNode;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tindex = src.getAttribute(\"data-index\");\n\t\t\t\t\t\tsec = src.parentNode;\n\t\t\t\t\t\tsrc = src.firstChild;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar sections = gantt._get_typed_lightbox_config();\n\n\t\t\t\tif (index) {\n\t\t\t\t\tindex = index * 1;\n\t\t\t\t\tblock = gantt.form_blocks[sections[index * 1].type];\n\t\t\t\t\tblock.button_click(index, src, sec, sec.nextSibling);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tthis.event(gantt.getLightbox(), \"click\", function(e) {\n\t\t\te = e || window.event;\n\t\t\tvar src = e.target ? e.target : e.srcElement;\n\n\t\t\tvar className = domHelpers.getClassName(src);\n\t\t\tif (!className) {\n\t\t\t\tsrc = src.previousSibling;\n\t\t\t\tclassName = domHelpers.getClassName(src);\n\t\t\t}\n\t\t\tif (src && className && className.indexOf(\"gantt_btn_set\") === 0) {\n\t\t\t\tsrc = src.firstChild;\n\t\t\t\tclassName = domHelpers.getClassName(src);\n\t\t\t}\n\t\t\tif (src && className) {\n\t\t\t\tvar func = gantt.defined(gantt.lightbox_events[src.className]) ? gantt.lightbox_events[src.className] : gantt.lightbox_events[\"default\"];\n\t\t\t\treturn func(e, src);\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\n\t\tgantt.getLightbox().onkeydown = function(e) {\n\t\t\tvar event = e || window.event;\n\t\t\tvar target = e.target || e.srcElement;\n\t\t\tvar buttonTarget = domHelpers.getClassName(target).indexOf(\"gantt_btn_set\") > -1;\n\n\t\t\tswitch ((e || event).keyCode) {\n\t\t\tcase gantt.constants.KEY_CODES.SPACE: {\n\t\t\t\tif ((e || event).shiftKey) return;\n\t\t\t\tif (buttonTarget && target.click) {\n\t\t\t\t\ttarget.click();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase gantt.keys.edit_save:\n\t\t\t\tif ((e || event).shiftKey) return;\n\t\t\t\tif (buttonTarget && target.click) {\n\t\t\t\t\ttarget.click();\n\t\t\t\t} else {\n\t\t\t\t\tgantt._save_lightbox();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase gantt.keys.edit_cancel:\n\t\t\t\tgantt._cancel_lightbox();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t\t}\n\t\t};\n\t};\n\n\tgantt._cancel_lightbox = function() {\n\t\tvar task = this.getLightboxValues();\n\t\tthis.callEvent(\"onLightboxCancel\", [this._lightbox_id, task.$new]);\n\t\tif (gantt.isTaskExists(task.id) && task.$new) {\n\t\t\tthis.silent(function(){\n\t\t\t\tgantt.$data.tasksStore.removeItem(task.id);\n\t\t\t\tgantt._update_flags(task.id, null);\n\t\t\t});\n\t\t}\n\n\t\tthis.refreshData();\n\t\tthis.hideLightbox();\n\t};\n\n\tgantt._save_lightbox = function() {\n\t\tvar task = this.getLightboxValues();\n\t\tif (!this.callEvent(\"onLightboxSave\", [this._lightbox_id, task, !!task.$new]))\n\t\t\treturn;\n\n\t\tif (task.$new) {\n\t\t\tdelete task.$new;\n\t\t\tthis.addTask(task);\n\t\t}else if(this.isTaskExists(task.id)){\n\t\t\tthis.mixin(this.getTask(task.id), task, true);\n\t\t\tthis.refreshTask(task.id);\n\t\t\tthis.updateTask(task.id);\n\t\t}\n\t\tthis.refreshData();\n\n\t\t// TODO: do we need any blockable events here to prevent closing lightbox?\n\t\tthis.hideLightbox();\n\t};\n\n\tgantt._resolve_default_mapping = function(section) {\n\t\tvar mapping = section.map_to;\n\t\tvar time_controls = {\"time\": true, \"time_optional\": true, \"duration\": true, \"duration_optional\": true};\n\t\tif (time_controls[section.type]) {\n\t\t\tif (section.map_to == \"auto\") {\n\t\t\t\tmapping = {start_date: \"start_date\", end_date: \"end_date\", duration: \"duration\"};\n\t\t\t} else if (typeof(section.map_to) === \"string\") {\n\t\t\t\tmapping = {start_date: section.map_to};\n\t\t\t}\n\t\t}\n\n\t\treturn mapping;\n\t};\n\n\tgantt.getLightboxValues = function() {\n\t\tvar task = {};\n\n\t\tif (gantt.isTaskExists(this._lightbox_id)) {\n\t\t\ttask = this.mixin({}, this.getTask(this._lightbox_id));\n\t\t}\n\n\t\tvar sns = this._get_typed_lightbox_config();\n\t\tfor (var i = 0; i < sns.length; i++) {\n\t\t\tvar node = document.getElementById(sns[i].id);\n\t\t\tnode = (node ? node.nextSibling : node);\n\t\t\tvar block = this.form_blocks[sns[i].type];\n\t\t\tif (!block) continue;\n\t\t\tvar res = block.get_value.call(this, node, task, sns[i]);\n\t\t\tvar map_to = gantt._resolve_default_mapping(sns[i]);\n\t\t\tif (typeof map_to == \"string\" && map_to != \"auto\") {\n\t\t\t\ttask[map_to] = res;\n\t\t\t} else if (typeof map_to == \"object\") {\n\t\t\t\tfor (var property in map_to) {\n\t\t\t\t\tif (map_to[property])\n\t\t\t\t\t\ttask[map_to[property]] = res[property];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn task;\n\t};\n\n\n\tgantt.hideLightbox = function() {\n\t\tvar box = this.getLightbox();\n\t\tif (box) box.style.display = \"none\";\n\n\t\tthis._waiAria.lightboxHiddenAttr(box);\n\t\tthis._lightbox_id = null;\n\n\t\tthis.hideCover();\n\t\tthis.callEvent(\"onAfterLightbox\", []);\n\t};\n\tgantt.hideCover = function() {\n\t\tif (this._cover)\n\t\t\tthis._cover.parentNode.removeChild(this._cover);\n\t\tthis._cover = null;\n\t};\n\n\tgantt.resetLightbox = function() {\n\t\tif (gantt._lightbox && !gantt._custom_lightbox)\n\t\t\tgantt._lightbox.parentNode.removeChild(gantt._lightbox);\n\t\tgantt._lightbox = null;\n\t};\n\tgantt._set_lightbox_values = function(data, box) {\n\t\tvar task = data;\n\t\tvar s = box.getElementsByTagName(\"span\");\n\t\tvar lightboxHeader = [];\n\t\tif (gantt.templates.lightbox_header) {\n\t\t\tlightboxHeader.push(\"\");\n\t\t\tlightboxHeader.push(gantt.templates.lightbox_header(task.start_date, task.end_date, task));\n\t\t\ts[1].innerHTML = \"\";\n\t\t\ts[2].innerHTML = gantt.templates.lightbox_header(task.start_date, task.end_date, task);\n\t\t} else {\n\t\t\tlightboxHeader.push(this.templates.task_time(task.start_date, task.end_date, task));\n\t\t\tlightboxHeader.push((this.templates.task_text(task.start_date, task.end_date, task) || \"\").substr(0, 70)); //IE6 fix\n\t\t\ts[1].innerHTML = this.templates.task_time(task.start_date, task.end_date, task);\n\t\t\ts[2].innerHTML = (this.templates.task_text(task.start_date, task.end_date, task) || \"\").substr(0, 70); //IE6 fix\n\t\t}\n\t\ts[1].innerHTML = lightboxHeader[0];\n\t\ts[2].innerHTML = lightboxHeader[1];\n\n\t\tgantt._waiAria.lightboxHeader(box, lightboxHeader.join(\" \"));\n\n\t\tvar sns = this._get_typed_lightbox_config(this.getLightboxType());\n\t\tfor (var i = 0; i < sns.length; i++) {\n\t\t\tvar section = sns[i];\n\n\t\t\tif (!this.form_blocks[section.type]) {\n\t\t\t\tcontinue;//skip incorrect sections, same check is done during rendering\n\t\t\t}\n\n\n\t\t\tvar node = document.getElementById(section.id).nextSibling;\n\t\t\tvar block = this.form_blocks[section.type];\n\t\t\tvar map_to = gantt._resolve_default_mapping(sns[i]);\n\t\t\tvar value = this.defined(task[map_to]) ? task[map_to] : section.default_value;\n\t\t\tblock.set_value.call(gantt, node, value, task, section);\n\n\t\t\tif (section.focus)\n\t\t\t\tblock.focus.call(gantt, node);\n\t\t}\n\t\tif (data.id)\n\t\t\tgantt._lightbox_id = data.id;\n\t};\n\tgantt._fill_lightbox = function(id, box) {\n\t\tvar task = this.getTask(id);\n\t\tthis._set_lightbox_values(task, box);\n\t};\n\n\n\tgantt.getLightboxSection = function(name) {\n\t\tvar config = this._get_typed_lightbox_config();\n\t\tvar i = 0;\n\t\tfor (i; i < config.length; i++)\n\t\t\tif (config[i].name == name)\n\t\t\t\tbreak;\n\t\tvar section = config[i];\n\t\tif (!section)\n\t\t\treturn null;\n\n\t\tif (!this._lightbox)\n\t\t\tthis.getLightbox();\n\t\tvar header = document.getElementById(section.id);\n\t\tvar node = header.nextSibling;\n\n\t\tvar result = {\n\t\t\tsection: section,\n\t\t\theader: header,\n\t\t\tnode: node,\n\t\t\tgetValue: function(ev) {\n\t\t\t\treturn gantt.form_blocks[section.type].get_value.call(gantt, node, (ev || {}), section);\n\t\t\t},\n\t\t\tsetValue: function(value, ev) {\n\t\t\t\treturn gantt.form_blocks[section.type].set_value.call(gantt, node, value, (ev || {}), section);\n\t\t\t}\n\t\t};\n\n\t\tvar handler = this._lightbox_methods[\"get_\" + section.type + \"_control\"];\n\t\treturn handler ? handler(result) : result;\n\t};\n\n\tgantt._lightbox_methods.get_template_control = function(result) {\n\t\tresult.control = result.node;\n\t\treturn result;\n\t};\n\tgantt._lightbox_methods.get_select_control = function(result) {\n\t\tresult.control = result.node.getElementsByTagName(\"select\")[0];\n\t\treturn result;\n\t};\n\tgantt._lightbox_methods.get_textarea_control = function(result) {\n\t\tresult.control = result.node.getElementsByTagName(\"textarea\")[0];\n\t\treturn result;\n\t};\n\tgantt._lightbox_methods.get_time_control = function(result) {\n\t\tresult.control = result.node.getElementsByTagName(\"select\"); // array\n\t\treturn result;\n\t};\n\n\n\tgantt._init_dnd_events = function() {\n\t\tthis.event(document.body, \"mousemove\", gantt._move_while_dnd);\n\t\tthis.event(document.body, \"mouseup\", gantt._finish_dnd);\n\t\tgantt._init_dnd_events = function() {\n\t\t};\n\t};\n\tgantt._move_while_dnd = function(e) {\n\t\tif (gantt._dnd_start_lb) {\n\t\t\tif (!document.gantt_unselectable) {\n\t\t\t\tdocument.body.className += \" gantt_unselectable\";\n\t\t\t\tdocument.gantt_unselectable = true;\n\t\t\t}\n\t\t\tvar lb = gantt.getLightbox();\n\t\t\tvar now = (e && e.target) ? [e.pageX, e.pageY] : [event.clientX, event.clientY];\n\t\t\tlb.style.top = gantt._lb_start[1] + now[1] - gantt._dnd_start_lb[1] + \"px\";\n\t\t\tlb.style.left = gantt._lb_start[0] + now[0] - gantt._dnd_start_lb[0] + \"px\";\n\t\t}\n\t};\n\tgantt._ready_to_dnd = function(e) {\n\t\tvar lb = gantt.getLightbox();\n\t\tgantt._lb_start = [parseInt(lb.style.left, 10), parseInt(lb.style.top, 10)];\n\t\tgantt._dnd_start_lb = (e && e.target) ? [e.pageX, e.pageY] : [event.clientX, event.clientY];\n\t};\n\tgantt._finish_dnd = function() {\n\t\tif (gantt._lb_start) {\n\t\t\tgantt._lb_start = gantt._dnd_start_lb = false;\n\t\t\tdocument.body.className = document.body.className.replace(\" gantt_unselectable\", \"\");\n\t\t\tdocument.gantt_unselectable = false;\n\t\t}\n\t};\n\n\n\tgantt._focus = function(node, select) {\n\t\tif (node && node.focus) {\n\t\t\tif (gantt.config.touch) {\n\t\t\t\t//do not focus editor, to prevent auto-zoom\n\t\t\t} else {\n\t\t\t\ttry {\n\t\t\t\t\tif (select && node.select) node.select();\n\t\t\t\t\tnode.focus();\n\t\t\t\t} catch (e) {\n\t\t\t\t\t// silent errors\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\n\tgantt.form_blocks = {\n\t\tgetTimePicker: function(sns, hidden) {\n\t\t\tvar html = \"\";\n\t\t\tvar cfg = this.config;\n\t\t\tvar i;\n\t\t\tvar options;\n\t\t\tvar ariaAttrs;\n\t\t\tvar readonly;\n\t\t\tvar display;\n\t\t\tvar settings = {\n\t\t\t\tfirst: 0,\n\t\t\t\tlast: 24 * 60,\n\t\t\t\tdate: this.date.date_part(new Date(gantt._min_date.valueOf())),\n\t\t\t\ttimeFormat: getTimeFormat(sns)\n\t\t\t};\n\n\t\t\t// map: default order => real one\n\t\t\tsns._time_format_order = {size: 0};\n\n\t\t\tif (gantt.config.limit_time_select) {\n\t\t\t\tsettings.first = 60 * cfg.first_hour;\n\t\t\t\tsettings.last = 60 * cfg.last_hour + 1;\n\t\t\t\tsettings.date.setHours(cfg.first_hour);\n\t\t\t}\n\n\t\t\tfor (i = 0; i < settings.timeFormat.length; i++) {\n\t\t\t\t// adding spaces between selects\n\t\t\t\tif (i > 0) {\n\t\t\t\t\thtml += \" \";\n\t\t\t\t}\n\n\t\t\t\toptions = getHtmlTimePickerOptions(sns, i, settings);\n\n\t\t\t\tif (options) {\n\t\t\t\t\tariaAttrs = gantt._waiAria.lightboxSelectAttrString(settings.timeFormat[i]);\n\t\t\t\t\treadonly = sns.readonly ? \"disabled='disabled'\" : \"\";\n\t\t\t\t\tdisplay = hidden ? \" style='display:none' \" : \"\";\n\t\t\t\t\thtml += \"<select \" + readonly + display + ariaAttrs + \">\" + options + \"</select>\";\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn html;\n\t\t},\n\t\t_fill_lightbox_select: function(s, i, d, map) {\n\t\t\ts[i + map[0]].value = d.getDate();\n\t\t\ts[i + map[1]].value = d.getMonth();\n\t\t\ts[i + map[2]].value = d.getFullYear();\n\t\t\tif (gantt.defined(map[3])) {\n\t\t\t\tvar v = d.getHours() * 60 + d.getMinutes();\n\t\t\t\tv = Math.round(v / gantt._get_timepicker_step()) * gantt._get_timepicker_step();\n\t\t\t\tvar input = s[i + map[3]];\n\t\t\t\tinput.value = v;\n\t\t\t\t//in case option not shown\n\t\t\t\tinput.setAttribute(\"data-value\", v);\n\t\t\t}\n\t\t},\n\t\ttemplate: new TemplateControl(),\n\t\ttextarea: new TextareaControl(),\n\t\tselect: new SelectControl(),\n\t\ttime: new TimeControl(),\n\t\tduration: new DurationControl(),\n\t\tparent: new ParentControl(),\n\t\tradio: new RadioControl(),\n\t\tcheckbox: new CheckboxControl()\n\t};\n\n\tgantt._is_lightbox_timepicker = function() {\n\t\tvar s = this._get_typed_lightbox_config();\n\t\tfor (var i = 0; i < s.length; i++)\n\t\t\tif (s[i].name == \"time\" && s[i].type == \"time\")\n\t\t\t\treturn true;\n\t\treturn false;\n\t};\n\n\tgantt._dhtmlx_confirm = function(message, title, callback, ok) {\n\t\tif (!message)\n\t\t\treturn callback();\n\t\tvar opts = {text: message};\n\t\tif (title)\n\t\t\topts.title = title;\n\t\tif (ok) {\n\t\t\topts.ok = ok;\n\t\t}\n\t\tif (callback) {\n\t\t\topts.callback = function(result) {\n\t\t\t\tif (result)\n\t\t\t\t\tcallback();\n\t\t\t};\n\t\t}\n\t\tgantt.confirm(opts);\n\t};\n\n\tfunction _get_type_name(type_value) {\n\t\tfor (var i in this.config.types) {\n\t\t\tif (this.config.types[i] == type_value) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn \"task\";\n\t}\n\n\tgantt._get_typed_lightbox_config = function(type) {\n\t\tif (type === undefined) {\n\t\t\ttype = this.getLightboxType();\n\t\t}\n\n\t\tvar field = _get_type_name.call(this, type);\n\n\t\tif (gantt.config.lightbox[field + \"_sections\"]) {\n\t\t\treturn gantt.config.lightbox[field + \"_sections\"];\n\t\t} else {\n\t\t\treturn gantt.config.lightbox.sections;\n\t\t}\n\t};\n\n\tgantt._silent_redraw_lightbox = function(type) {\n\t\tvar oldType = this.getLightboxType();\n\n\t\tif (this.getState().lightbox) {\n\t\t\tvar taskId = this.getState().lightbox;\n\t\t\tvar formData = this.getLightboxValues(),\n\t\t\t\ttask = this.copy(this.getTask(taskId));\n\n\t\t\tthis.resetLightbox();\n\n\t\t\tvar updTask = this.mixin(task, formData, true);\n\t\t\tvar box = this.getLightbox(type ? type : undefined);\n\t\t\tthis._center_lightbox(this.getLightbox());\n\t\t\tthis._set_lightbox_values(updTask, box);\n\t\t} else {\n\t\t\tthis.resetLightbox();\n\t\t\tthis.getLightbox(type ? type : undefined);\n\t\t}\n\t\tthis.callEvent(\"onLightboxChange\", [oldType, this.getLightboxType()]);\n\t};\n\n\tfunction bindLabelsToInputs(sns) {\n\t\tvar section;\n\t\tvar label;\n\t\tvar labelBlock;\n\t\tvar inputBlock;\n\t\tvar input;\n\t\tvar i;\n\n\t\tfor (i = 0; i < sns.length; i++) {\n\t\t\tsection = sns[i];\n\t\t\tlabelBlock = document.getElementById(section.id);\n\t\t\t\n\t\t\tif (!section.id || !labelBlock) continue;\n\n\t\t\tlabel = labelBlock.querySelector(\"label\");\n\t\t\tinputBlock = labelBlock.nextSibling;\n\t\t\t\n\t\t\tif (!inputBlock) continue;\n\n\t\t\tinput = inputBlock.querySelector(\"input, select, textarea\");\n\t\t\tif (input) {\n\t\t\t\tinput.id = input.id || \"input_\" + gantt.uid();\n\t\t\t\tsection.inputId = input.id;\n\t\t\t\tlabel.setAttribute(\"for\", section.inputId);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction getHtmlButtons(buttons, floatRight) {\n\t\tvar button;\n\t\tvar ariaAttr;\n\t\tvar html = \"\";\n\t\tvar i;\n\n\t\tfor (i = 0; i < buttons.length; i++) {\n\t\t\t// needed to migrate from 'dhx_something' to 'gantt_something' naming in a lightbox\n\t\t\tbutton = gantt.config._migrate_buttons[buttons[i]] ? gantt.config._migrate_buttons[buttons[i]] : buttons[i];\n\n\t\t\tariaAttr = gantt._waiAria.lightboxButtonAttrString(button);\n\t\t\thtml += \"<div \" + ariaAttr + \" class='gantt_btn_set gantt_left_btn_set \" + button + \"_set'\" + (floatRight ? \" style='float:right;'\" : \"\") + \"><div dhx_button='1' data-dhx-button='1' class='\" + button + \"'></div><div>\" + gantt.locale.labels[button] + \"</div></div>\";\n\t\t}\n\t\treturn html;\n\t}\n\n\tfunction getTimeFormat(sns) {\n\t\tvar scale;\n\t\tvar unit;\n\t\tvar result;\n\n\t\tif (sns.time_format) return sns.time_format;\n\n\t\t// default order\n\t\tresult = [\"%d\", \"%m\", \"%Y\"];\n\t\tscale = gantt.getScale();\n\t\tunit = scale ? scale.unit : gantt.config.duration_unit;\n\t\tif (helpers.getSecondsInUnit(unit) < helpers.getSecondsInUnit(\"day\")) {\n\t\t\tresult.push(\"%H:%i\");\n\t\t}\n\t\treturn result;\n\t}\n\n\tfunction getHtmlTimePickerOptions(sns, index, settings) {\n\t\tvar range;\n\t\tvar offset;\n\t\tvar start_year;\n\t\tvar end_year;\n\t\tvar i;\n\t\tvar time;\n\t\tvar diff;\n\t\tvar tdate;\n\t\tvar html = \"\";\n\n\t\tswitch (settings.timeFormat[index]) {\n\t\tcase \"%Y\":\n\t\t\tsns._time_format_order[2] = index;\n\t\t\tsns._time_format_order.size++;\n\t\t\t//year\n\n\t\t\tif (sns.year_range) {\n\t\t\t\tif (!isNaN(sns.year_range)) {\n\t\t\t\t\trange = sns.year_range;\n\t\t\t\t} else if (sns.year_range.push) {\n\t\t\t\t\t// if\n\t\t\t\t\tstart_year = sns.year_range[0];\n\t\t\t\t\tend_year = sns.year_range[1];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\trange = range || 10;\n\t\t\toffset = offset || Math.floor(range / 2);\n\t\t\tstart_year = start_year || settings.date.getFullYear() - offset;\n\t\t\tend_year = end_year || start_year + range;\n\n\t\t\tfor (i = start_year; i < end_year; i++)\n\t\t\t\thtml += \"<option value='\" + (i) + \"'>\" + (i) + \"</option>\";\n\t\t\tbreak;\n\t\tcase \"%m\":\n\t\t\tsns._time_format_order[1] = index;\n\t\t\tsns._time_format_order.size++;\n\t\t\t//month\n\t\t\tfor (i = 0; i < 12; i++)\n\t\t\t\thtml += \"<option value='\" + i + \"'>\" + gantt.locale.date.month_full[i] + \"</option>\";\n\t\t\tbreak;\n\t\tcase \"%d\":\n\t\t\tsns._time_format_order[0] = index;\n\t\t\tsns._time_format_order.size++;\n\t\t\t//days\n\t\t\tfor (i = 1; i < 32; i++)\n\t\t\t\thtml += \"<option value='\" + i + \"'>\" + i + \"</option>\";\n\t\t\tbreak;\n\t\tcase \"%H:%i\":\n\t\t\t//  var last = 24*60, first = 0;\n\t\t\tsns._time_format_order[3] = index;\n\t\t\tsns._time_format_order.size++;\n\t\t\t//hours\n\t\t\ti = settings.first;\n\t\t\ttdate = settings.date.getDate();\n\t\t\tsns._time_values = [];\n\n\t\t\twhile (i < settings.last) {\n\t\t\t\ttime = gantt.templates.time_picker(settings.date);\n\t\t\t\thtml += \"<option value='\" + i + \"'>\" + time + \"</option>\";\n\t\t\t\tsns._time_values.push(i);\n\t\t\t\tsettings.date.setTime(settings.date.valueOf() + gantt._get_timepicker_step() * 60 * 1000);\n\t\t\t\tdiff = (settings.date.getDate() != tdate) ? 1 : 0; // moved or not to the next day\n\t\t\t\ti = diff * 24 * 60 + settings.date.getHours() * 60 + settings.date.getMinutes();\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t\t}\n\t\treturn html;\n\t}\n};","var dateHelper = require(\"../utils/date_helpers\"),\n\thelpers = require(\"../utils/helpers\");\n\nmodule.exports = function(gantt) {\n\n\tgantt.isUnscheduledTask = function (task) {\n\t\treturn (!!task.unscheduled || !task.start_date);\n\t};\n\n\tgantt._isAllowedUnscheduledTask = function (task) {\n\t\treturn !!(task.unscheduled && gantt.config.show_unscheduled);\n\t};\n\n\tgantt.isTaskVisible = function (id) {\n\t\tif (!this.isTaskExists(id))\n\t\t\treturn false;\n\n\t\tvar task = this.getTask(id),\n\t\t\ttype = this.getTaskType(task.type);\n\n\t\tvar taskStart = task.start_date ? task.start_date.valueOf() : null;\n\t\tvar taskEnd = task.end_date ? task.end_date.valueOf() : null;\n\n\t\tif (!(gantt._isAllowedUnscheduledTask(task) || (taskStart && taskEnd && taskStart <= this._max_date.valueOf() && taskEnd >= this._min_date.valueOf()))){\n\t\t\treturn false;\n\t\t}\n\n\t\treturn !!(gantt.getGlobalTaskIndex(id) >= 0);\n\t};\n\n\tgantt._defaultTaskDate = function (item, parent_id) {\n\t\tvar parent = (parent_id && parent_id != this.config.root_id) ? this.getTask(parent_id) : false,\n\t\t\tstartDate = '';\n\t\tif (parent) {\n\t\t\tstartDate = parent.start_date;\n\t\t} else {\n\t\t\tvar first = this.getTaskByIndex(0);\n\t\t\tstartDate = first ? (first.start_date ? first.start_date : (first.end_date ? this.calculateEndDate({\n\t\t\t\tstart_date: first.end_date,\n\t\t\t\tduration: -this.config.duration_step\n\t\t\t}) : '')) : this.config.start_date || this.getState().min_date;\n\t\t}\n\t\tgantt.assert(startDate, \"Invalid dates\");\n\t\treturn new Date(startDate);\n\t};\n\n\tgantt._set_default_task_timing = function (task) {\n\t\ttask.start_date = task.start_date || gantt._defaultTaskDate(task, this.getParent(task));\n\t\ttask.duration = task.duration || this.config.duration_step;\n\t\ttask.end_date = task.end_date || this.calculateEndDate(task);\n\t};\n\n\tgantt.createTask = function (item, parent, index) {\n\t\titem = item || {};\n\t\tif (!gantt.defined(item.id))\n\t\t\titem.id = gantt.uid();\n\n\t\tif (!item.start_date) {\n\t\t\titem.start_date = gantt._defaultTaskDate(item, parent);\n\t\t}\n\t\tif (item.text === undefined) {\n\t\t\titem.text = gantt.locale.labels.new_task;\n\t\t}\n\t\tif (item.duration === undefined) {\n\t\t\titem.duration = 1;\n\t\t}\n\n\t\tif (parent) {\n\t\t\tthis.setParent(item, parent, true);\n\t\t\tvar parentObj = this.getTask(parent);\n\t\t\tparentObj.$open = true;\n\t\t}\n\n\t\tif (!this.callEvent(\"onTaskCreated\", [item])) {\n\t\t\treturn null;\n\t\t}\n\t\tif (this.config.details_on_create) {\n\t\t\titem.$new = true;\n\t\t\tthis.silent(function(){\n\t\t\t\tgantt.$data.tasksStore.addItem(item, index);\n\t\t\t});\n\t\t\tthis.selectTask(item.id);\n\t\t\tthis.refreshData();\n\t\t\tthis.showLightbox(item.id);\n\t\t} else {\n\t\t\tif (this.addTask(item, parent, index)) {\n\t\t\t\tthis.showTask(item.id);\n\t\t\t\tthis.selectTask(item.id);\n\t\t\t}\n\t\t}\n\t\treturn item.id;\n\t};\n\n\tgantt._update_flags = function (oldid, newid) {\n\t\t//  TODO: need a proper way to update all possible flags\n\t\tvar store = gantt.$data.tasksStore;\n\t\tif (oldid === undefined) {\n\t\t\tthis._lightbox_id = null;\n\n\t\t\tstore.silent(function(){\n\t\t\t\tstore.unselect();\n\t\t\t});\n\n\t\t\tif (this._tasks_dnd && this._tasks_dnd.drag) {\n\t\t\t\tthis._tasks_dnd.drag.id = null;\n\t\t\t}\n\t\t} else {\n\t\t\tif (this._lightbox_id == oldid)\n\t\t\t\tthis._lightbox_id = newid;\n\n\t\t\t// TODO: probably can be removed\n\t\t\tif (store.getSelectedId() == oldid) {\n\t\t\t\tstore.silent(function(){\n\t\t\t\t\tstore.unselect(oldid);\n\t\t\t\t\tstore.select(newid);\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (this._tasks_dnd && this._tasks_dnd.drag && this._tasks_dnd.drag.id == oldid) {\n\t\t\t\tthis._tasks_dnd.drag.id = newid;\n\t\t\t}\n\t\t}\n\t};\n\n\tgantt._get_task_timing_mode = function (task, force) {\n\t\tvar task_type = this.getTaskType(task.type);\n\n\t\tvar state = {\n\t\t\ttype: task_type,\n\t\t\t$no_start: false,\n\t\t\t$no_end: false\n\t\t};\n\n\t\tif (!force && task_type == task.$rendered_type) {\n\t\t\tstate.$no_start = task.$no_start;\n\t\t\tstate.$no_end = task.$no_end;\n\t\t\treturn state;\n\t\t}\n\n\t\tif (task_type == this.config.types.project) {\n\t\t\t//project duration is always defined by children duration\n\t\t\tstate.$no_end = state.$no_start = true;\n\t\t} else if (task_type != this.config.types.milestone) {\n\t\t\t//tasks can have fixed duration, children duration(as projects), or one date fixed, and other defined by nested items\n\t\t\tstate.$no_end = !(task.end_date || task.duration);\n\t\t\tstate.$no_start = !task.start_date;\n\n\t\t\tif (this._isAllowedUnscheduledTask(task)) {\n\t\t\t\tstate.$no_end = state.$no_start = false;\n\t\t\t}\n\t\t}\n\n\t\treturn state;\n\t};\n\n\tgantt._init_task_timing = function (task) {\n\t\tvar task_mode = gantt._get_task_timing_mode(task, true);\n\n\t\tvar dirty = task.$rendered_type != task_mode.type;\n\n\t\tvar task_type = task_mode.type;\n\n\t\tif (dirty) {\n\t\t\ttask.$no_start = task_mode.$no_start;\n\t\t\ttask.$no_end = task_mode.$no_end;\n\t\t\ttask.$rendered_type = task_mode.type;\n\t\t}\n\n\t\tif (dirty && task_type != this.config.types.milestone) {\n\t\t\tif (task_type == this.config.types.project) {\n\t\t\t\t//project duration is always defined by children duration\n\t\t\t\tthis._set_default_task_timing(task);\n\t\t\t}\n\t\t}\n\n\t\tif (task_type == this.config.types.milestone) {\n\t\t\ttask.end_date = task.start_date;\n\t\t}\n\t\tif (task.start_date && task.end_date) {\n\t\t\ttask.duration = this.calculateDuration(task);\n\t\t}\n\n\t\tif (!task.end_date) {\n\t\t\ttask.end_date = task.start_date;\n\t\t}\n\n\t\ttask.duration = task.duration || 0;\n\t};\n\n\tgantt.isSummaryTask = function (task) {\n\t\tvar mode = gantt._get_task_timing_mode(task);\n\n\t\treturn !!(mode.$no_end || mode.$no_start);\n\t};\n\n// downward calculation of project duration\n\tgantt.resetProjectDates = function (task) {\n\t\tvar taskMode = this._get_task_timing_mode(task);\n\t\tif (taskMode.$no_end || taskMode.$no_start) {\n\t\t\tvar dates = this.getSubtaskDates(task.id);\n\t\t\tthis._assign_project_dates(task, dates.start_date, dates.end_date);\n\t\t}\n\t};\n\n\tgantt.getSubtaskDuration = function (task_id) {\n\t\tvar res = 0,\n\t\t\troot = task_id !== undefined ? task_id : gantt.config.root_id;\n\n\t\tthis.eachTask(function (child) {\n\t\t\tif (this.getTaskType(child.type) == gantt.config.types.project || this.isUnscheduledTask(child))\n\t\t\t\treturn;\n\n\t\t\tres += child.duration;\n\t\t}, root);\n\n\t\treturn res;\n\t};\n\n\tgantt.getSubtaskDates = function (task_id) {\n\t\tvar min = null,\n\t\t\tmax = null,\n\t\t\troot = task_id !== undefined ? task_id : gantt.config.root_id;\n\n\t\tthis.eachTask(function (child) {\n\t\t\tif (this.getTaskType(child.type) == gantt.config.types.project || this.isUnscheduledTask(child))\n\t\t\t\treturn;\n\n\t\t\tif ((child.start_date && !child.$no_start) && (!min || min > child.start_date.valueOf()))\n\t\t\t\tmin = child.start_date.valueOf();\n\t\t\tif ((child.end_date && !child.$no_end) && (!max || max < child.end_date.valueOf()))\n\t\t\t\tmax = child.end_date.valueOf();\n\t\t}, root);\n\n\t\treturn {\n\t\t\tstart_date: min ? new Date(min) : null,\n\t\t\tend_date: max ? new Date(max) : null\n\t\t};\n\t};\n\n\tgantt._assign_project_dates = function (task, from, to) {\n\t\tvar taskTiming = this._get_task_timing_mode(task);\n\t\tif (taskTiming.$no_start) {\n\t\t\tif (from && from != Infinity) {\n\t\t\t\ttask.start_date = new Date(from);\n\t\t\t} else {\n\t\t\t\ttask.start_date = this._defaultTaskDate(task, this.getParent(task));\n\t\t\t}\n\t\t}\n\n\t\tif (taskTiming.$no_end) {\n\t\t\tif (to && to != -Infinity) {\n\t\t\t\ttask.end_date = new Date(to);\n\t\t\t} else {\n\t\t\t\ttask.end_date = this.calculateEndDate({\n\t\t\t\t\tstart_date: task.start_date,\n\t\t\t\t\tduration: this.config.duration_step,\n\t\t\t\t\ttask: task\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tif (taskTiming.$no_start || taskTiming.$no_end) {\n\t\t\tthis._init_task_timing(task);\n\t\t}\n\t};\n\n// upward calculation of project duration\n\tgantt._update_parents = function (taskId, silent) {\n\t\tif (!taskId) return;\n\n\t\tvar task = this.getTask(taskId);\n\t\tvar pid = this.getParent(task);\n\n\t\tvar taskTiming = this._get_task_timing_mode(task);\n\n\t\tvar has_changed = true;\n\n\t\tif (taskTiming.$no_start || taskTiming.$no_end) {\n\t\t\tvar oldStart = task.start_date.valueOf(),\n\t\t\t\toldEnd = task.end_date.valueOf();\n\n\t\t\tgantt.resetProjectDates(task);\n\n\t\t\t// not refresh parent projects if dates hasn't changed\n\t\t\tif (oldStart == task.start_date.valueOf() && oldEnd == task.end_date.valueOf()) {\n\t\t\t\thas_changed = false;\n\t\t\t}\n\n\t\t\tif (has_changed && !silent) {\n\t\t\t\tthis.refreshTask(task.id, true);\n\t\t\t}\n\t\t}\n\n\n\t\tif (has_changed && pid && this.isTaskExists(pid)) {\n\t\t\tthis._update_parents(pid, silent);\n\t\t}\n\t};\n\n\tgantt.roundDate = function (config) {\n\t\tvar scale = gantt.getScale();\n\n\t\tif (dateHelper.isDate(config)) {\n\t\t\tconfig = {\n\t\t\t\tdate: config,\n\t\t\t\tunit: scale ? scale.unit : gantt.config.duration_unit,\n\t\t\t\tstep: scale ?  scale.step : gantt.config.duration_step\n\t\t\t};\n\t\t}\n\t\tvar date = config.date,\n\t\t\tsteps = config.step,\n\t\t\tunit = config.unit;\n\n\t\tif(!scale){\n\t\t\treturn date;\n\t\t}\n\n\t\tvar upper, lower, colIndex;\n\t\tif (unit == scale.unit && steps == scale.step &&\n\t\t\t+date >= +scale.min_date && +date <= +scale.max_date) {\n\t\t\t//find date in time scale config\n\t\t\tcolIndex = Math.floor(gantt.columnIndexByDate(date));\n\n\t\t\tif (!scale.trace_x[colIndex]) {\n\t\t\t\tcolIndex -= 1;// end of time scale\n\t\t\t\tif(scale.rtl){\n\t\t\t\t\tcolIndex = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlower = new Date(scale.trace_x[colIndex]);\n\t\t\tupper = gantt.date.add(lower, steps, unit);\n\t\t} else {\n\t\t\tcolIndex = Math.floor(gantt.columnIndexByDate(date));\n\n\t\t\tupper = gantt.date[unit + \"_start\"](new Date(scale.min_date));\n\t\t\tif (scale.trace_x[colIndex]) {\n\t\t\t\tupper = gantt.date[unit + \"_start\"](scale.trace_x[colIndex]);// end of time scale\n\t\t\t}\n\n\t\t\twhile (+upper < +date) {\n\t\t\t\tupper = gantt.date[unit + \"_start\"](gantt.date.add(upper, steps, unit));\n\n\t\t\t\tvar tzOffset = upper.getTimezoneOffset();\n\n\t\t\t\tupper = gantt._correct_dst_change(upper, tzOffset, upper, unit);\n\t\t\t\tif (gantt.date[unit + '_start'])\n\t\t\t\t\tupper = gantt.date[unit + '_start'](upper);\n\t\t\t}\n\n\t\t\tlower = gantt.date.add(upper, -1 * steps, unit);\n\n\t\t}\n\t\tif (config.dir && config.dir == 'future')\n\t\t\treturn upper;\n\t\tif (config.dir && config.dir == 'past')\n\t\t\treturn lower;\n\n\t\tif (Math.abs(date - lower) < Math.abs(upper - date)) {\n\t\t\treturn lower;\n\t\t} else {\n\t\t\treturn upper;\n\t\t}\n\n\t};\n\n\tgantt.correctTaskWorkTime = function (task) {\n\t\tif (gantt.config.work_time && gantt.config.correct_work_time) {\n\t\t\tif (!this.isWorkTime(task.start_date, undefined, task)) {\n\t\t\t\ttask.start_date = this.getClosestWorkTime({date: task.start_date, dir: 'future', task: task});\n\t\t\t\ttask.end_date = this.calculateEndDate(task);\n\t\t\t} else if (!this.isWorkTime(new Date(+task.end_date - 1), undefined, task)) {\n\t\t\t\ttask.end_date = this.calculateEndDate(task);\n\t\t\t}\n\t\t}\n\t};\n\n\tgantt.attachEvent(\"onBeforeTaskUpdate\", function (id, task) {\n\t\tgantt._init_task_timing(task);\n\t\treturn true;\n\t});\n\tgantt.attachEvent(\"onBeforeTaskAdd\", function (id, task) {\n\t\tgantt._init_task_timing(task);\n\t\treturn true;\n\t});\n\n};","// TODO: rework public api for date methods\nvar utils = require(\"../../utils/utils\");\n\nvar createWorktimeFacade = function(calendarManager, timeCalculator){\n\treturn {\n\t\tgetWorkHours: function (date) {\n\t\t\treturn timeCalculator.getWorkHours(date);\n\t\t},\n\n\t\tsetWorkTime: function (config) {\n\t\t\treturn timeCalculator.setWorkTime(config);\n\t\t},\n\n\t\tunsetWorkTime: function (config) {\n\t\t\ttimeCalculator.unsetWorkTime(config);\n\t\t},\n\n\t\tisWorkTime: function (date, unit, task) {\n\t\t\treturn timeCalculator.isWorkTime(date, unit, task);\n\t\t},\n\n\t\tgetClosestWorkTime: function (config) {\n\t\t\treturn timeCalculator.getClosestWorkTime(config);\n\t\t},\n\n\t\tcalculateDuration: function (start_date, end_date, task) {\n\t\t\treturn timeCalculator.calculateDuration(start_date, end_date, task);\n\t\t},\n\t\t_hasDuration: function (start_date, end_date, task) {\n\t\t\treturn timeCalculator.hasDuration(start_date, end_date, task);\n\t\t},\n\n\t\tcalculateEndDate: function (start, duration, unit, task) {\n\t\t\treturn timeCalculator.calculateEndDate(start, duration, unit, task);\n\t\t},\n\n\t\tcreateCalendar: utils.bind(calendarManager.createCalendar, calendarManager),\n\t\taddCalendar: utils.bind(calendarManager.addCalendar, calendarManager),\n\t\tgetCalendar: utils.bind(calendarManager.getCalendar, calendarManager),\n\t\tgetCalendars: utils.bind(calendarManager.getCalendars, calendarManager),\n\t\tgetTaskCalendar: utils.bind(calendarManager.getTaskCalendar, calendarManager),\n\t\tdeleteCalendar: utils.bind(calendarManager.deleteCalendar, calendarManager)\n\t};\n};\n\n\nmodule.exports = { create: createWorktimeFacade };\n","function CalendarDisabledTimeStrategy(gantt, argumentsHelper){\n\tthis.argumentsHelper = argumentsHelper;\n\tthis.$gantt = gantt;\n}\n\nCalendarDisabledTimeStrategy.prototype = {\n\tgetWorkHours: function () {\n\t\treturn [0, 24];\n\t},\n\tsetWorkTime: function () {\n\t\treturn true;\n\t},\n\tunsetWorkTime: function () {\n\t\treturn true;\n\t},\n\tisWorkTime: function () {\n\t\treturn true;\n\t},\n\tgetClosestWorkTime: function (config) {\n\t\tvar config = this.argumentsHelper.getClosestWorkTimeArguments.apply(this.argumentsHelper, arguments);\n\t\treturn config.date;\n\t},\n\n\tcalculateDuration: function () {\n\t\tvar config = this.argumentsHelper.getDurationArguments.apply(this.argumentsHelper, arguments);\n\t\tvar from = config.start_date,\n\t\t\tto = config.end_date,\n\t\t\tunit = config.unit,\n\t\t\tstep = config.step;\n\n\t\treturn this._calculateDuration(from, to, unit, step);\n\t},\n\t_calculateDuration: function (start, end, unit, step) {\n\t\tvar dateHelper = this.$gantt.date;\n\t\tvar fixedUnits = {\n\t\t\t\"week\": 1000 * 60 * 60 * 24 * 7,\n\t\t\t\"day\": 1000 * 60 * 60 * 24,\n\t\t\t\"hour\": 1000 * 60 * 60,\n\t\t\t\"minute\": 1000 * 60\n\t\t};\n\n\t\tvar res = 0;\n\t\tif (fixedUnits[unit]) {\n\t\t\tres = Math.round((end - start) / (step * fixedUnits[unit]));\n\t\t} else {\n\t\t\tvar from = new Date(start),\n\t\t\t\tto = new Date(end);\n\t\t\twhile (from.valueOf() < to.valueOf()) {\n\t\t\t\tres += 1;\n\t\t\t\tfrom = dateHelper.add(from, step, unit);\n\t\t\t}\n\n\t\t\tif (from.valueOf() != end.valueOf()) {\n\t\t\t\tres += (to - from) / (dateHelper.add(from, step, unit) - from);\n\t\t\t}\n\t\t}\n\n\t\treturn Math.round(res);\n\t},\n\n\thasDuration: function () {\n\t\tvar config = this.argumentsHelper.getDurationArguments.apply(this.argumentsHelper, arguments);\n\t\tvar from = config.start_date,\n\t\t\tto = config.end_date,\n\t\t\tunit = config.unit,\n\t\t\tstep = config.step;\n\n\t\tif (!unit) {\n\t\t\treturn false;\n\t\t}\n\t\tfrom = new Date(from);\n\t\tto = new Date(to);\n\n\t\treturn (from.valueOf() < to.valueOf());\n\t},\n\n\tcalculateEndDate: function () {\n\t\tvar config = this.argumentsHelper.calculateEndDateArguments.apply(this.argumentsHelper, arguments);\n\n\t\tvar start = config.start_date,\n\t\t\tduration = config.duration,\n\t\t\tunit = config.unit,\n\t\t\tstep = config.step;\n\n\t\treturn this.$gantt.date.add(start, step * duration, unit);\n\t}\n};\n\nmodule.exports = CalendarDisabledTimeStrategy;","var createArgumentsHelper = require(\"./calendar_arguments_helper\"),\n\tNoWorkTimeCalendar = require(\"./strategy/no_work_time\");\n\nfunction TimeCalculator(calendarManager){\n\n\tthis.$gantt = calendarManager.$gantt;\n\tthis.argumentsHelper = createArgumentsHelper(this.$gantt);\n\tthis.calendarManager = calendarManager;\n\tthis.$disabledCalendar = new NoWorkTimeCalendar(this.$gantt, this.argumentsHelper);\n}\n\nTimeCalculator.prototype = {\n\t_getCalendar: function (config) {\n\t\tvar calendar;\n\t\tif (!this.$gantt.$services.config().work_time) {\n\t\t\tcalendar = this.$disabledCalendar;\n\t\t} else {\n\t\t\tvar manager = this.calendarManager;\n\t\t\tif (config.task) {\n\t\t\t\tcalendar = manager.getTaskCalendar(config.task);\n\t\t\t} else if (config.id) {\n\t\t\t\tcalendar = manager.getTaskCalendar(config);\n\t\t\t} else if (config.calendar) {\n\t\t\t\tcalendar = config.calendar;\n\t\t\t}\n\t\t\tif (!calendar) {\n\t\t\t\tcalendar = manager.getTaskCalendar();\n\t\t\t}\n\t\t}\n\t\treturn calendar;\n\t},\n\n\tgetWorkHours: function (config) {\n\t\tconfig = this.argumentsHelper.getWorkHoursArguments.apply(this.argumentsHelper, arguments);\n\n\t\tvar calendar = this._getCalendar(config);\n\n\t\treturn calendar.getWorkHours(config.date);\n\t},\n\n\tsetWorkTime: function (config, calendar) {\n\t\tconfig = this.argumentsHelper.setWorkTimeArguments.apply(this.argumentsHelper, arguments);\n\n\t\tif (!calendar)\n\t\t\tcalendar = this.calendarManager.getCalendar(); // Global\n\t\treturn calendar.setWorkTime(config);\n\t},\n\n\tunsetWorkTime: function (config, calendar) {\n\t\tconfig = this.argumentsHelper.unsetWorkTimeArguments.apply(this.argumentsHelper, arguments);\n\n\t\tif (!calendar)\n\t\t\tcalendar = this.calendarManager.getCalendar(); // Global\n\t\treturn calendar.unsetWorkTime(config);\n\t},\n\tisWorkTime: function (date, unit, task, calendar) {\n\t\tvar config = this.argumentsHelper.isWorkTimeArguments.apply(this.argumentsHelper, arguments);\n\n\t\tcalendar = this._getCalendar(config);\n\t\treturn calendar.isWorkTime(config);\n\t},\n\tgetClosestWorkTime: function (config) {\n\t\tconfig = this.argumentsHelper.getClosestWorkTimeArguments.apply(this.argumentsHelper, arguments);\n\n\t\tvar calendar = this._getCalendar(config);\n\n\t\treturn calendar.getClosestWorkTime(config);\n\t},\n\n\tcalculateDuration: function () { // start_date_date, end_date, task\n\t\tvar config = this.argumentsHelper.getDurationArguments.apply(this.argumentsHelper, arguments);\n\n\n\t\tvar calendar = this._getCalendar(config);\n\t\treturn calendar.calculateDuration(config);\n\t},\n\thasDuration: function () {\n\t\tvar config = this.argumentsHelper.hasDurationArguments.apply(this.argumentsHelper, arguments);\n\n\t\tvar calendar = this._getCalendar(config);\n\n\t\treturn calendar.hasDuration(config);\n\t},\n\tcalculateEndDate: function (config) { // start_date, duration, unit, task\n\t\tvar config = this.argumentsHelper.calculateEndDateArguments.apply(this.argumentsHelper, arguments);\n\n\t\tvar calendar = this._getCalendar(config);\n\t\treturn calendar.calculateEndDate(config);\n\t}\n};\n\nmodule.exports = TimeCalculator;\n\n","function WorkUnitsCache() {\n\tthis._cache = {};\n}\n\nWorkUnitsCache.prototype = {\n\t// cache previously calculated worktime\n\tget: function (unit, date) {\n\t\tvar result = -1;// default value (if not existed in the cache)\n\n\t\tvar cache = this._cache;\n\t\tif (cache && cache[unit]) {\n\t\t\tvar units = cache[unit];\n\t\t\tvar time = date.getTime();\n\t\t\tif (units[time] !== undefined)\n\t\t\t\tresult = units[time];\n\t\t}\n\t\treturn result;\n\t},\n\n\tput: function (unit, date, value) {\n\t\tif (!unit || !date) return false;\n\n\t\tvar cache = this._cache;\n\n\t\tvar time = date.getTime();\n\n\t\tvalue = !!value;\n\n\t\tif (!cache) return false;\n\t\tif (!cache[unit]) cache[unit] = {};\n\t\tcache[unit][time] = value;\n\t\treturn true;\n\t},\n\n\tclear: function () {\n\t\tthis._cache = {};\n\t}\n};\n\nmodule.exports = WorkUnitsCache;","var Cache = require(\"./calendar_workunit_cache\"),\n\tutils = require(\"../../../utils/utils\");\n\nfunction CalendarWorkTimeStrategy(gantt, argumentsHelper){\n\tthis.argumentsHelper = argumentsHelper;\n\tthis.$gantt = gantt;\n\tthis._workingUnitsCache = new Cache();\n}\n\nCalendarWorkTimeStrategy.prototype = {\n\tunits: [\n\t\t\"year\",\n\t\t\"month\",\n\t\t\"week\",\n\t\t\"day\",\n\t\t\"hour\",\n\t\t\"minute\"\n\t],\n\t// cache previously calculated worktime\n\t_getUnitOrder: function (unit) {\n\t\tfor (var i = 0, len = this.units.length; i < len; i++) {\n\t\t\tif (this.units[i] == unit)\n\t\t\t\treturn i;\n\t\t}\n\t},\n\t_timestamp: function (settings) {\n\n\t\tvar timestamp = null;\n\t\tif ((settings.day || settings.day === 0)) {\n\t\t\ttimestamp = settings.day;\n\t\t} else if (settings.date) {\n\t\t\t// store worktime datestamp in utc so it could be recognized in different timezones (e.g. opened locally and sent to the export service in different timezone)\n\t\t\ttimestamp = Date.UTC(settings.date.getFullYear(), settings.date.getMonth(), settings.date.getDate());\n\t\t}\n\t\treturn timestamp;\n\t},\n\t_checkIfWorkingUnit: function (date, unit, order) {\n\t\tif (order === undefined) {\n\t\t\torder = this._getUnitOrder(unit);\n\t\t}\n\n\t\t// disable worktime check for custom time units\n\t\tif (order === undefined) {\n\t\t\treturn true;\n\t\t}\n\t\tif (order) {\n\t\t\t//check if bigger time unit is a work time (hour < day < month...)\n\t\t\t//i.e. don't check particular hour if the whole day is marked as not working\n\t\t\tif (!this._isWorkTime(date, this.units[order - 1], order - 1))\n\t\t\t\treturn false;\n\t\t}\n\t\tif (!this[\"_is_work_\" + unit])\n\t\t\treturn true;\n\t\treturn this[\"_is_work_\" + unit](date);\n\t},\n\t//checkings for particular time units\n\t//methods for month-year-week can be defined, otherwise always return 'true'\n\t_is_work_day: function (date) {\n\t\tvar val = this._getWorkHours(date);\n\n\t\tif (val instanceof Array) {\n\t\t\treturn val.length > 0;\n\t\t}\n\t\treturn false;\n\t},\n\t_is_work_hour: function (date) {\n\t\tvar hours = this._getWorkHours(date); // [7,12] or []\n\t\tvar hour = date.getHours();\n\t\tfor (var i = 0; i < hours.length; i += 2) {\n\t\t\tif (hours[i + 1] === undefined) {\n\t\t\t\treturn hours[i] == hour;\n\t\t\t} else {\n\t\t\t\tif (hour >= hours[i] && hour < hours[i + 1])\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\t_internDatesPull: {},\n\t_nextDate: function (start, unit, step) {\n\t\tvar dateHelper = this.$gantt.date;\n\t\treturn dateHelper.add(start, step, unit);\n\n\t\t/*var start_value = +start,\n\t\t\tkey = unit + \"_\" + step;\n\t\tvar interned = this._internDatesPull[key];\n\t\tif(!interned){\n\t\t\tinterned = this._internDatesPull[key] = {};\n\t\t}\n\t\tvar calculated;\n\t\tif(!interned[start_value]){\n\t\t\tinterned[start_value] = calculated = dateHelper.add(start, step, unit);\n\t\t\t//interned[start_value] = dateHelper.add(start, step, unit);\n\t\t}\n\t\treturn calculated || interned[start_value];*/\n\t},\n\t_getWorkUnitsBetweenGeneric: function (from, to, unit, step) {\n\t\tvar dateHelper = this.$gantt.date;\n\t\tvar start = new Date(from),\n\t\t\tend = new Date(to);\n\t\tstep = step || 1;\n\t\tvar units = 0;\n\n\n\t\tvar next = null;\n\t\tvar stepStart,\n\t\t\tstepEnd;\n\n\t\t// calculating decimal durations, i.e. 2016-09-20 00:05:00 - 2016-09-20 01:00:00 ~ 0.95 instead of 1\n\t\t// and also  2016-09-20 00:00:00 - 2016-09-20 00:05:00 ~ 0.05 instead of 1\n\t\t// durations must be rounded later\n\t\tvar checkFirst = false;\n\t\tstepStart = dateHelper[unit + \"_start\"](new Date(start));\n\t\tif (stepStart.valueOf() != start.valueOf()) {\n\t\t\tcheckFirst = true;\n\t\t}\n\t\tvar checkLast = false;\n\t\tstepEnd = dateHelper[unit + \"_start\"](new Date(to));\n\t\tif (stepEnd.valueOf() != to.valueOf()) {\n\t\t\tcheckLast = true;\n\t\t}\n\n\t\tvar isLastStep = false;\n\t\twhile (start.valueOf() < end.valueOf()) {\n\t\t\tnext = this._nextDate(start, unit, step);\n\t\t\tisLastStep = (next.valueOf() > end.valueOf());\n\n\t\t\tif (this._isWorkTime(start, unit)) {\n\t\t\t\tif (checkFirst || (checkLast && isLastStep)) {\n\t\t\t\t\tstepStart = dateHelper[unit + \"_start\"](new Date(start));\n\t\t\t\t\tstepEnd = dateHelper.add(stepStart, step, unit);\n\t\t\t\t}\n\n\t\t\t\tif (checkFirst) {\n\t\t\t\t\tcheckFirst = false;\n\t\t\t\t\tnext = this._nextDate(stepStart, unit, step);\n\t\t\t\t\tunits += ((stepEnd.valueOf() - start.valueOf()) / (stepEnd.valueOf() - stepStart.valueOf()));\n\t\t\t\t} else if (checkLast && isLastStep) {\n\t\t\t\t\tcheckLast = false;\n\t\t\t\t\tunits += ((end.valueOf() - start.valueOf()) / (stepEnd.valueOf() - stepStart.valueOf()));\n\n\t\t\t\t} else {\n\t\t\t\t\tunits++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tstart = next;\n\t\t}\n\t\treturn units;\n\t},\n\t_getHoursPerDay: function (date) {\n\t\tvar hours = this._getWorkHours(date);\n\t\tvar res = 0;\n\t\tfor (var i = 0; i < hours.length; i += 2) {\n\t\t\tres += ((hours[i + 1] - hours[i]) || 0);\n\t\t}\n\t\treturn res;\n\t},\n\t_getWorkHoursForRange: function (from, to) {\n\t\tvar hours = 0;\n\t\tvar start = new Date(from),\n\t\t\tend = new Date(to);\n\n\t\twhile (start.valueOf() < end.valueOf()) {\n\t\t\tif (this._isWorkTime(start, \"day\"))\n\t\t\t\thours += this._getHoursPerDay(start);\n\t\t\tstart = this._nextDate(start, \"day\", 1);\n\t\t}\n\t\treturn hours;\n\t},\n\t_getWorkUnitsBetweenHours: function (from, to, unit, step) {\n\t\tvar start = new Date(from),\n\t\t\tend = new Date(to);\n\t\tstep = step || 1;\n\n\t\tvar firstDayStart = new Date(start);\n\t\tvar firstDayEnd = this.$gantt.date.add(this.$gantt.date.day_start(new Date(start)), 1, \"day\");\n\n\t\tif (end.valueOf() <= firstDayEnd.valueOf()) {\n\t\t\treturn this._getWorkUnitsBetweenGeneric(from, to, unit, step);\n\t\t} else {\n\n\t\t\tvar lastDayStart = this.$gantt.date.day_start(new Date(end));\n\t\t\tvar lastDayEnd = end;\n\n\t\t\tvar startPart = this._getWorkUnitsBetweenGeneric(firstDayStart, firstDayEnd, unit, step);\n\t\t\tvar endPart = this._getWorkUnitsBetweenGeneric(lastDayStart, lastDayEnd, unit, step);\n\n\t\t\tvar hourRange = this._getWorkHoursForRange(firstDayEnd, lastDayStart);\n\t\t\thourRange = ((hourRange / step) + startPart + endPart);\n\n\t\t\treturn hourRange;\n\t\t}\n\t},\n\n\t_getCalendar: function () {\n\t\treturn this.worktime;\n\t},\n\t_setCalendar: function (settings) {\n\t\tthis.worktime = settings;\n\t},\n\n\t_tryChangeCalendarSettings: function (payload) {\n\t\tvar backup = JSON.stringify(this._getCalendar());\n\t\tpayload();\n\t\tif (this._isEmptyCalendar(this._getCalendar())) {\n\t\t\tthis.$gantt.assert(false, \"Invalid calendar settings, no worktime available\");\n\t\t\tthis._setCalendar(JSON.parse(backup));\n\t\t\tthis._workingUnitsCache.clear();\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\n\t},\n\n\t_isEmptyCalendar: function (settings) {\n\t\tvar result = false,\n\t\t\tdatesArray = [],\n\t\t\tisFullWeekSet = true;\n\t\tfor (var i in settings.dates) {\n\t\t\tresult |= !!settings.dates[i];\n\t\t\tdatesArray.push(i);\n\t\t}\n\n\t\tvar checkFullArray = [];\n\t\tfor (var i = 0; i < datesArray.length; i++) {\n\t\t\tif (datesArray[i] < 10) {\n\t\t\t\tcheckFullArray.push(datesArray[i]);\n\t\t\t}\n\t\t}\n\t\tcheckFullArray.sort();\n\n\t\tfor (var i = 0; i < 7; i++) {\n\t\t\tif (checkFullArray[i] != i)\n\t\t\t\tisFullWeekSet = false;\n\t\t}\n\t\tif (isFullWeekSet)\n\t\t\treturn !result;\n\t\treturn !(result || !!settings.hours); // can still return false if separated dates are set to true\n\t},\n\n\tgetWorkHours: function () {\n\t\tvar config = this.argumentsHelper.getWorkHoursArguments.apply(this.argumentsHelper, arguments);\n\t\treturn this._getWorkHours(config.date);\n\t},\n\t_getWorkHours: function (date) {\n\t\tvar t = this._timestamp({date: date});\n\t\tvar hours = true;\n\t\tvar calendar = this._getCalendar();\n\t\tif (calendar.dates[t] !== undefined) {\n\t\t\thours = calendar.dates[t];//custom day\n\t\t} else if (calendar.dates[date.getDay()] !== undefined) {\n\t\t\thours = calendar.dates[date.getDay()];//week day\n\t\t}\n\t\tif (hours === true) {\n\t\t\treturn calendar.hours;\n\t\t} else if (hours) {\n\t\t\treturn hours;\n\t\t}\n\t\treturn [];\n\t},\n\n\tsetWorkTime: function (settings) {\n\t\treturn this._tryChangeCalendarSettings(utils.bind(function () {\n\t\t\tvar hours = settings.hours !== undefined ? settings.hours : true;\n\t\t\tvar timestamp = this._timestamp(settings);\n\t\t\tif (timestamp !== null) {\n\t\t\t\tthis._getCalendar().dates[timestamp] = hours;\n\t\t\t} else {\n\t\t\t\tthis._getCalendar().hours = hours;\n\t\t\t}\n\t\t\tthis._workingUnitsCache.clear();\n\t\t}, this));\n\t},\n\n\tunsetWorkTime: function (settings) {\n\t\treturn this._tryChangeCalendarSettings(utils.bind(function () {\n\t\t\tif (!settings) {\n\t\t\t\tthis.reset_calendar();\n\t\t\t} else {\n\n\t\t\t\tvar timestamp = this._timestamp(settings);\n\n\t\t\t\tif (timestamp !== null) {\n\t\t\t\t\tdelete this._getCalendar().dates[timestamp];\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Clear work units cache\n\t\t\tthis._workingUnitsCache.clear();\n\t\t}, this));\n\t},\n\n\t_isWorkTime: function (date, unit, order) {\n\t\t//Check if this item has in the cache\n\t\tvar is_work_unit = this._workingUnitsCache.get(unit, date);\n\n\t\tif (is_work_unit == -1) {\n\t\t\t// calculate if not cached\n\t\t\tis_work_unit = this._checkIfWorkingUnit(date, unit, order);\n\t\t\tthis._workingUnitsCache.put(unit, date, is_work_unit);\n\t\t}\n\n\t\treturn is_work_unit;\n\t},\n\n\tisWorkTime: function () {\n\t\tvar config =  this.argumentsHelper.isWorkTimeArguments.apply( this.argumentsHelper, arguments);\n\t\treturn this._isWorkTime(config.date, config.unit);\n\t},\n\n\tcalculateDuration: function () {\n\t\tvar config =  this.argumentsHelper.getDurationArguments.apply( this.argumentsHelper, arguments);\n\n\t\tif (!config.unit) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar res = 0;\n\t\tif (config.unit == \"hour\") {\n\t\t\tres = this._getWorkUnitsBetweenHours(config.start_date, config.end_date, config.unit, config.step);\n\t\t} else {\n\t\t\tres = this._getWorkUnitsBetweenGeneric(config.start_date, config.end_date, config.unit, config.step);\n\t\t}\n\n\t\t// getDuration.. returns decimal durations\n\t\treturn Math.round(res);\n\t},\n\thasDuration: function () {\n\t\tvar config =  this.argumentsHelper.getDurationArguments.apply( this.argumentsHelper, arguments);\n\n\t\tvar from = config.start_date,\n\t\t\tto = config.end_date,\n\t\t\tunit = config.unit,\n\t\t\tstep = config.step;\n\n\t\tif (!unit) {\n\t\t\treturn false;\n\t\t}\n\t\tvar start = new Date(from),\n\t\t\tend = new Date(to);\n\t\tstep = step || 1;\n\n\t\twhile (start.valueOf() < end.valueOf()) {\n\t\t\tif (this._isWorkTime(start, unit))\n\t\t\t\treturn true;\n\t\t\tstart = this._nextDate(start, unit, step);\n\t\t}\n\t\treturn false;\n\t},\n\n\tcalculateEndDate: function () {\n\t\tvar config =  this.argumentsHelper.calculateEndDateArguments.apply( this.argumentsHelper, arguments);\n\n\t\tvar from = config.start_date,\n\t\t\tduration = config.duration,\n\t\t\tunit = config.unit,\n\t\t\tstep = config.step;\n\n\t\tvar mult = (config.duration >= 0) ? 1 : -1;\n\t\treturn this._calculateEndDate(from, duration, unit, step * mult);\n\t},\n\t_calculateEndDate: function (from, duration, unit, step) {\n\t\tif (!unit)\n\t\t\treturn false;\n\n\t\tvar start = new Date(from),\n\t\t\tadded = 0;\n\t\tstep = step || 1;\n\t\tduration = Math.abs(duration * 1);\n\n\t\twhile (added < duration) {\n\t\t\tvar next = this._nextDate(start, unit, step);\n\t\t\t//if(this.isWorkTime(step > 0 ? start : next, unit))\n\t\t\tif (this._isWorkTime(step > 0 ? new Date(next.valueOf() - 1) : new Date(next.valueOf() + 1), unit))\n\t\t\t\tadded++;\n\t\t\tstart = next;\n\t\t}\n\t\treturn start;\n\t},\n\n\tgetClosestWorkTime: function () {\n\t\tvar config =  this.argumentsHelper.getClosestWorkTimeArguments.apply( this.argumentsHelper, arguments);\n\t\treturn this._getClosestWorkTime(config);\n\t},\n\n\t_getClosestWorkTime: function (settings) {\n\t\tif (this._isWorkTime(settings.date, settings.unit))\n\t\t\treturn settings.date;\n\n\t\tvar unit = settings.unit;\n\n\t\tvar curr = this.$gantt.date[unit + '_start'](new Date(settings.date));\n\n\t\tvar future_target = new Date(curr),\n\t\t\tprev_target = new Date(curr),\n\t\t\ttick = true,\n\t\t\tmaximum_loop = 3000,//be extra sure we won't fall into infinite loop, 3k seems big enough\n\t\t\tcount = 0,\n\t\t\tboth_directins = (settings.dir == 'any' || !settings.dir);\n\n\t\tvar inc = 1;\n\t\tif (settings.dir == 'past')\n\t\t\tinc = -1;\n\n\t\tvar unitOrder = this._getUnitOrder(unit),\n\t\t\tbiggerTimeUnit = this.units[unitOrder - 1];\n\n\t\t//will seek closest working hour in future or in past, one step in one direction per iteration\n\t\twhile (!this._isWorkTime(curr, unit)) {\n\n\t\t\tif(biggerTimeUnit && !this._isWorkTime(curr, biggerTimeUnit)){\n\t\t\t\t// no need to check every hour/minute if we know that the whole day is not working\n\t\t\t\tvar biggerTimeUnitSettings = this.$gantt.copy(settings);\n\t\t\t\tbiggerTimeUnitSettings.date = curr;\n\t\t\t\tbiggerTimeUnitSettings.unit = biggerTimeUnit;\n\n\t\t\t\tcurr = this._getClosestWorkTime(biggerTimeUnitSettings);\n\t\t\t}\n\n\t\t\tif (both_directins) {\n\t\t\t\tcurr = tick ? future_target : prev_target;\n\t\t\t\tinc = inc * (-1);\n\t\t\t}\n\t\t\tvar tzOffset = curr.getTimezoneOffset();\n\t\t\tcurr = this.$gantt.date.add(curr, inc, unit);\n\n\t\t\tcurr = this.$gantt._correct_dst_change(curr, tzOffset, inc, unit);\n\t\t\tif (this.$gantt.date[unit + '_start'])\n\t\t\t\tcurr = this.$gantt.date[unit + '_start'](curr);\n\n\t\t\tif (both_directins) {\n\t\t\t\tif (tick) {\n\t\t\t\t\tfuture_target = curr;\n\t\t\t\t} else {\n\t\t\t\t\tprev_target = curr;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttick = !tick;\n\t\t\tcount++;\n\t\t\tif (count > maximum_loop) {\n\t\t\t\tthis.$gantt.assert(false, \"Invalid working time check\");\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tif (curr == prev_target || settings.dir == 'past') {\n\t\t\tcurr = this.$gantt.date.add(curr, 1, unit);\n\t\t}\n\n\t\treturn curr;\n\t}\n};\n\nmodule.exports = CalendarWorkTimeStrategy;","var utils = require(\"../../utils/utils\");\nvar createArgumentsHelper = require(\"./calendar_arguments_helper\");\nvar CalendarWorktimeStrategy = require(\"./strategy/calendar_strategy\");\n\nfunction CalendarManager (gantt){\n\tthis.$gantt = gantt;\n\tthis._calendars = {};\n}\n\nCalendarManager.prototype = {\n\t_calendars: {},\n\t_getDayHoursForMultiple: function (calendars, date) {\n\t\tvar units = [],\n\t\t\ttick = true,\n\t\t\tcurrPos = 0,\n\t\t\tis_work_hour = false,\n\t\t\tstart = this.$gantt.date.day_start(new Date(date));\n\t\tfor (var hour = 0; hour < 24; hour++) {\n\t\t\tis_work_hour = calendars.reduce(function (acc, calendar) {\n\t\t\t\treturn acc && calendar._is_work_hour(start);\n\t\t\t}, true);\n\t\t\tif (is_work_hour) {\n\t\t\t\tif (tick) {\n\t\t\t\t\tunits[currPos] = hour;\n\t\t\t\t\tunits[currPos + 1] = (hour + 1);\n\t\t\t\t\tcurrPos += 2;\n\t\t\t\t} else {\n\t\t\t\t\tunits[currPos - 1] += 1;\n\t\t\t\t}\n\t\t\t\ttick = false;\n\t\t\t} else if (!tick) {\n\t\t\t\ttick = true;\n\t\t\t}\n\t\t\tstart = this.$gantt.date.add(start, 1, \"hour\");\n\t\t}\n\t\tif (!units.length)\n\t\t\tunits = false;\n\t\treturn units;\n\t},\n\tmergeCalendars: function () {\n\t\tvar newCalendar = this.createCalendar(),\n\t\t\tday,\n\t\t\tunits = [];\n\t\tvar calendars = Array.prototype.slice.call(arguments, 0);\n\t\tnewCalendar.worktime.hours = [0, 24];\n\t\tnewCalendar.worktime.dates = {};\n\t\tvar start = this.$gantt.date.day_start(new Date(259200000)); // 1970 day=0\n\t\tfor (day = 0; day < 7; day++) {\n\t\t\tunits = this._getDayHoursForMultiple(calendars, start);\n\t\t\tnewCalendar.worktime.dates[day] = units;\n\t\t\tstart = this.$gantt.date.add(start, 1, \"day\");\n\t\t}\n\t\tfor (var i = 0; i < calendars.length; i++) {\n\t\t\tfor (var value in calendars[i].worktime.dates) if (+value > 10000) {\n\t\t\t\tunits = this._getDayHoursForMultiple(calendars, new Date(+value));\n\t\t\t\tnewCalendar.worktime.dates[value] = units;\n\t\t\t}\n\t\t}\n\t\treturn newCalendar;\n\t},\n\n\t_convertWorktimeSettings: function (settings) {\n\t\tvar days = settings.days;\n\t\tif (days) {\n\t\t\tsettings.dates = settings.dates || {};\n\t\t\tfor (var i = 0; i < days.length; i++) {\n\t\t\t\tsettings.dates[i] = days[i];\n\t\t\t\tif (!(days[i] instanceof Array)) {\n\t\t\t\t\tsettings.dates[i] = !!days[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\tdelete settings.days;\n\t\t}\n\t\treturn settings;\n\t},\n\n\tcreateCalendar: function (parentCalendar) {\n\t\tvar settings;\n\n\t\tif (!parentCalendar) {\n\t\t\tparentCalendar = {};\n\t\t}\n\n\t\tif (parentCalendar.worktime) {\n\t\t\tsettings = utils.copy(parentCalendar.worktime);\n\t\t} else {\n\t\t\tsettings = utils.copy(parentCalendar);\n\t\t}\n\n\t\tvar defaults = utils.copy(this.defaults.fulltime.worktime);\n\t\tutils.mixin(settings, defaults);\n\n\t\tvar id = utils.uid();\n\t\tvar calendar = {\n\t\t\tid: id + \"\",\n\t\t\tworktime: this._convertWorktimeSettings(settings)\n\t\t};\n\n\t\tvar apiCore = new CalendarWorktimeStrategy(this.$gantt, createArgumentsHelper(this.$gantt));\n\t\tutils.mixin(apiCore, calendar);\n\n\t\t// validate/check if empty calendar\n\t\tif (!apiCore._tryChangeCalendarSettings(function () {\n\t\t\t})) {\n\t\t\treturn null;\n\t\t} else {\n\t\t\treturn apiCore;\n\t\t}\n\t},\n\n\tgetCalendar: function (id) {\n\t\tid = id || \"global\";\n\t\tthis.createDefaultCalendars();\n\t\treturn this._calendars[id];\n\t},\n\n\tgetCalendars: function () {\n\t\tvar res = [];\n\t\tfor (var i in this._calendars) {\n\t\t\tres.push(this.getCalendar(i));\n\t\t}\n\t\treturn res;\n\t},\n\n\tgetTaskCalendar: function (task) {\n\t\tvar config = this.$gantt.$services.config();\n\t\tif (!task) {\n\t\t\treturn this.getCalendar();\n\t\t} else if (task[config.calendar_property]) {\n\t\t\treturn this.getCalendar(task[config.calendar_property]);\n\t\t} else if (config.resource_calendars) {\n\n\t\t\tfor (var field in config.resource_calendars) {\n\t\t\t\tvar resource = config.resource_calendars[field];\n\t\t\t\tif (task[field]) {\n\t\t\t\t\tvar calendarId = resource[task[field]];\n\t\t\t\t\tif (calendarId) {\n\t\t\t\t\t\treturn this.getCalendar(calendarId);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this.getCalendar();\n\t},\n\n\taddCalendar: function (calendar) { // puts new calendar to Global Storage - gantt.calendarManager._calendars {}\n\t\tif (!(calendar instanceof CalendarWorktimeStrategy)) {\n\t\t\tvar id = calendar.id;\n\t\t\tcalendar = this.createCalendar(calendar);\n\t\t\tcalendar.id = id;\n\t\t}\n\t\tvar config = this.$gantt.$services.config();\n\n\t\tcalendar.id = calendar.id || utils.uid();\n\t\tthis._calendars[calendar.id] = calendar;\n\t\tif (!config.worktimes)\n\t\t\tconfig.worktimes = {};\n\t\tconfig.worktimes[calendar.id] = calendar.worktime;\n\t\treturn calendar.id;\n\t},\n\n\tdeleteCalendar: function (calendar) {\n\t\tvar config = this.$gantt.$services.config();\n\t\tif (!calendar) return false;\n\t\tif (this._calendars[calendar]) {\n\t\t\tdelete this._calendars[calendar];\n\t\t\tif (config.worktimes && config.worktimes[calendar])\n\t\t\t\tdelete config.worktimes[calendar];\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\t},\n\n\trestoreConfigCalendars: function (configs) {\n\t\tfor (var i in configs) {\n\t\t\tif (this._calendars[i])\n\t\t\t\tcontinue;\n\n\t\t\tvar settings = configs[i];\n\t\t\tvar calendar = this.createCalendar(settings);\n\t\t\tcalendar.id = i;\n\t\t\tthis.addCalendar(calendar);\n\t\t}\n\t},\n\n\tdefaults: {\n\t\tglobal: {\n\t\t\tid: \"global\",\n\t\t\tworktime: {\n\t\t\t\thours: [8, 17],\n\t\t\t\tdays: [0, 1, 1, 1, 1, 1, 0]\n\t\t\t}\n\t\t},\n\t\tfulltime: {\n\t\t\tid: \"fulltime\",\n\t\t\tworktime: {\n\t\t\t\thours: [0, 24],\n\t\t\t\tdays: [1, 1, 1, 1, 1, 1, 1]\n\t\t\t}\n\t\t}\n\t},\n\n\tcreateDefaultCalendars: function () {\n\t\tvar config = this.$gantt.$services.config();\n\t\tthis.restoreConfigCalendars(this.defaults);\n\t\tthis.restoreConfigCalendars(config.worktimes);\n\t}\n};\n\nmodule.exports = CalendarManager;","var CalendarManager = require(\"./calendar_manager\"),\n\tTimeCalculator = require(\"./time_calculator\"),\n\tworktimeFacadeFactory = require(\"../facades/worktime_calendars\"),\n\tutils = require(\"../../utils/utils\");\n\nmodule.exports = function (gantt) {\n\tvar manager = new CalendarManager(gantt),\n\ttimeCalculator = new TimeCalculator(manager);\n\tvar facade = worktimeFacadeFactory.create(manager, timeCalculator);\n\tutils.mixin(gantt, facade);\n};\n","var utils = require(\"../utils/utils\");\nvar dateHelper = require(\"../utils/date_helpers\");\n\nmodule.exports = function(gantt) {\n\n\tgantt.load = function (url, type, callback) {\n\t\tthis._load_url = url;\n\t\tthis.assert(arguments.length, \"Invalid load arguments\");\n\n\t\tvar tp = 'json', cl = null;\n\t\tif (arguments.length >= 3) {\n\t\t\ttp = type;\n\t\t\tcl = callback;\n\t\t} else {\n\t\t\tif (typeof arguments[1] == \"string\")\n\t\t\t\ttp = arguments[1];\n\t\t\telse if (typeof arguments[1] == \"function\")\n\t\t\t\tcl = arguments[1];\n\t\t}\n\n\t\tthis._load_type = tp;\n\n\t\tthis.callEvent(\"onLoadStart\", [url, tp]);\n\n\t\tthis.ajax.get(url, gantt.bind(function (l) {\n\t\t\tthis.on_load(l, tp);\n\t\t\tthis.callEvent(\"onLoadEnd\", [url, tp]);\n\t\t\tif (typeof cl == \"function\")\n\t\t\t\tcl.call(this);\n\t\t}, this));\n\t};\n\tgantt.parse = function (data, type) {\n\t\tthis.on_load({xmlDoc: {responseText: data}}, type);\n\t};\n\n\tgantt.serialize = function (type) {\n\t\ttype = type || \"json\";\n\t\treturn this[type].serialize();\n\t};\n\n\t/*\n\ttasks and relations\n\t{\n\tdata:[\n\t\t{\n\t\t\t\"id\":\"string\",\n\t\t\t\"text\":\"...\",\n\t\t\t\"start_date\":\"Date or string\",\n\t\t\t\"end_date\":\"Date or string\",\n\t\t\t\"duration\":\"number\",\n\t\t\t\"progress\":\"0..1\",\n\t\t\t\"parent_id\":\"string\",\n\t\t\t\"order\":\"number\"\n\t\t},...],\n\tlinks:[\n\t\t{\n\t\t\tid:\"string\",\n\t\t\tsource:\"string\",\n\t\t\ttarget:\"string\",\n\t\t\ttype:\"string\"\n\t\t},...],\n\tcollections:{\n\t\t\tcollectionName:[\n\t\t\t\t{key:, label:, optional:...},...\n\t\t\t],...\n\t\t}\n\t}\n\n\t* */\n\n\tgantt.on_load = function (resp, type) {\n\t\tthis.callEvent(\"onBeforeParse\", []);\n\t\tif (!type)\n\t\t\ttype = \"json\";\n\t\tthis.assert(this[type], \"Invalid data type:'\" + type + \"'\");\n\n\t\tvar raw = resp.xmlDoc.responseText;\n\n\t\tvar data = this[type].parse(raw, resp);\n\t\tthis._process_loading(data);\n\t};\n\n\tgantt._process_loading = function (data) {\n\t\tif(data.collections)\n\t\t\tthis._load_collections(data.collections);\n\n\t\tthis.$data.tasksStore.parse(data.data);\n\t\tvar links = data.links || (data.collections ? data.collections.links : []);\n\t\tthis.$data.linksStore.parse(links);\n\n\t\t//this._sync_links();\n\t\tthis.callEvent(\"onParse\", []);\n\t\tthis.render();\n\t\tif(this.config.initial_scroll){\n\t\t\tvar firstTask = this.getTaskByIndex(0);\n\t\t\tvar id = firstTask ? firstTask.id : this.config.root_id;\n\t\t\tif(this.isTaskExists(id))\n\t\t\t\tthis.showTask(id);\n\t\t}\n\t};\n\n\n\tgantt._load_collections = function (collections) {\n\t\tvar collections_loaded = false;\n\t\tfor (var key in collections) {\n\t\t\tif (collections.hasOwnProperty(key)) {\n\t\t\t\tcollections_loaded = true;\n\t\t\t\tvar collection = collections[key];\n\t\t\t\tvar arr = this.serverList[key];\n\t\t\t\tif (!arr) continue;\n\t\t\t\tarr.splice(0, arr.length); //clear old options\n\t\t\t\tfor (var j = 0; j < collection.length; j++) {\n\t\t\t\t\tvar option = collection[j];\n\t\t\t\t\tvar obj = this.copy(option);\n\t\t\t\t\tobj.key = obj.value;// resulting option object\n\n\t\t\t\t\tfor (var option_key in option) {\n\t\t\t\t\t\tif (option.hasOwnProperty(option_key)) {\n\t\t\t\t\t\t\tif (option_key == \"value\" || option_key == \"label\")\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\tobj[option_key] = option[option_key]; // obj['value'] = option['value']\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tarr.push(obj);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (collections_loaded)\n\t\t\tthis.callEvent(\"onOptionsLoad\", []);\n\t};\n\n\tgantt.attachEvent(\"onBeforeTaskDisplay\", function (id, task) {\n\t\treturn !task.$ignore;\n\t});\n\n\tgantt.json = {\n\t\tparse: function (data) {\n\t\t\tgantt.assert(data, \"Invalid data\");\n\n\t\t\tif (typeof data == \"string\") {\n\t\t\t\tif (window.JSON)\n\t\t\t\t\tdata = JSON.parse(data);\n\t\t\t\telse {\n\t\t\t\t\tgantt.assert(false, \"JSON is not supported\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (data.dhx_security)\n\t\t\t\tgantt.security_key = data.dhx_security;\n\t\t\treturn data;\n\t\t},\n\t\tserializeTask: function (task) {\n\t\t\treturn this._copyObject(task);\n\t\t},\n\t\tserializeLink: function (link) {\n\t\t\treturn this._copyLink(link);\n\t\t},\n\t\t_copyLink: function (obj) {\n\t\t\tvar copy = {};\n\t\t\tfor (var key in obj)\n\t\t\t\tcopy[key] = obj[key];\n\t\t\treturn copy;\n\t\t},\n\t\t_copyObject: function (obj) {\n\t\t\tvar copy = {};\n\t\t\tfor (var key in obj) {\n\t\t\t\tif (key.charAt(0) == \"$\")\n\t\t\t\t\tcontinue;\n\t\t\t\tcopy[key] = obj[key];\n\n\t\t\t\tif (dateHelper.isDate(copy[key])) {\n\t\t\t\t\tcopy[key] = gantt.templates.xml_format(copy[key]);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn copy;\n\t\t},\n\t\tserialize: function () {\n\t\t\tvar tasks = [];\n\t\t\tvar links = [];\n\n\t\t\tgantt.eachTask(function (obj) {\n\t\t\t\tgantt.resetProjectDates(obj);\n\t\t\t\ttasks.push(this.serializeTask(obj));\n\t\t\t}, gantt.config.root_id, this);\n\n\t\t\tvar rawLinks = gantt.getLinks();\n\t\t\tfor (var i = 0; i < rawLinks.length; i++) {\n\t\t\t\tlinks.push(this.serializeLink(rawLinks[i]));\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdata: tasks,\n\t\t\t\tlinks: links\n\t\t\t};\n\t\t}\n\t};\n\n\t/*\n\t<data>\n\t\t<task id:\"some\" parent_id=\"0\" progress=\"0.5\">\n\t\t\t<text>My task 1</text>\n\t\t\t<start_date>16.08.2013</start_date>\n\t\t\t<end_date>22.08.2013</end_date>\n\t\t</task>\n\t\t<coll_options>\n\t\t\t<links>\n\t\t\t\t<link source='a1' target='b2' type='c3' />\n\t\t\t</links>\n\t\t</coll_options>\n\t</data>\n\t*/\n\n\tgantt.xml = {\n\t\t_xmlNodeToJSON: function (node, attrs_only) {\n\t\t\tvar t = {};\n\t\t\tfor (var i = 0; i < node.attributes.length; i++)\n\t\t\t\tt[node.attributes[i].name] = node.attributes[i].value;\n\n\t\t\tif (!attrs_only) {\n\t\t\t\tfor (var i = 0; i < node.childNodes.length; i++) {\n\t\t\t\t\tvar child = node.childNodes[i];\n\t\t\t\t\tif (child.nodeType == 1)\n\t\t\t\t\t\tt[child.tagName] = child.firstChild ? child.firstChild.nodeValue : \"\";\n\t\t\t\t}\n\n\t\t\t\tif (!t.text) t.text = node.firstChild ? node.firstChild.nodeValue : \"\";\n\t\t\t}\n\n\t\t\treturn t;\n\t\t},\n\t\t_getCollections: function (loader) {\n\t\t\tvar collection = {};\n\t\t\tvar opts = gantt.ajax.xpath(\"//coll_options\", loader);\n\t\t\tfor (var i = 0; i < opts.length; i++) {\n\t\t\t\tvar bind = opts[i].getAttribute(\"for\");\n\t\t\t\tvar arr = collection[bind] = [];\n\t\t\t\tvar itms = gantt.ajax.xpath(\".//item\", opts[i]);\n\t\t\t\tfor (var j = 0; j < itms.length; j++) {\n\t\t\t\t\tvar itm = itms[j];\n\t\t\t\t\tvar attrs = itm.attributes;\n\t\t\t\t\tvar obj = {key: itms[j].getAttribute(\"value\"), label: itms[j].getAttribute(\"label\")};\n\t\t\t\t\tfor (var k = 0; k < attrs.length; k++) {\n\t\t\t\t\t\tvar attr = attrs[k];\n\t\t\t\t\t\tif (attr.nodeName == \"value\" || attr.nodeName == \"label\")\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\tobj[attr.nodeName] = attr.nodeValue;\n\t\t\t\t\t}\n\t\t\t\t\tarr.push(obj);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn collection;\n\t\t},\n\t\t_getXML: function (text, loader, toptag) {\n\t\t\ttoptag = toptag || \"data\";\n\t\t\tif (!loader.getXMLTopNode) {\n\t\t\t\tloader = gantt.ajax.parse(loader);\n\t\t\t}\n\n\t\t\tvar xml = gantt.ajax.xmltop(toptag, loader.xmlDoc);\n\t\t\tif (!xml || xml.tagName != toptag) throw \"Invalid XML data\";\n\n\t\t\tvar skey = xml.getAttribute(\"dhx_security\");\n\t\t\tif (skey)\n\t\t\t\tgantt.security_key = skey;\n\n\t\t\treturn xml;\n\t\t},\n\t\tparse: function (text, loader) {\n\t\t\tloader = this._getXML(text, loader);\n\t\t\tvar data = {};\n\n\t\t\tvar evs = data.data = [];\n\t\t\tvar xml = gantt.ajax.xpath(\"//task\", loader);\n\n\t\t\tfor (var i = 0; i < xml.length; i++)\n\t\t\t\tevs[i] = this._xmlNodeToJSON(xml[i]);\n\n\t\t\tdata.collections = this._getCollections(loader);\n\t\t\treturn data;\n\t\t},\n\t\t_copyLink: function (obj) {\n\t\t\treturn \"<item id='\" + obj.id + \"' source='\" + obj.source + \"' target='\" + obj.target + \"' type='\" + obj.type + \"' />\";\n\t\t},\n\t\t_copyObject: function (obj) {\n\t\t\treturn \"<task id='\" + obj.id + \"' parent='\" + (obj.parent || \"\") + \"' start_date='\" + obj.start_date + \"' duration='\" + obj.duration + \"' open='\" + (!!obj.open) + \"' progress='\" + obj.progress + \"' end_date='\" + obj.end_date + \"'><![CDATA[\" + obj.text + \"]]></task>\";\n\t\t},\n\t\tserialize: function () {\n\t\t\tvar tasks = [];\n\t\t\tvar links = [];\n\n\t\t\tvar json = gantt.json.serialize();\n\t\t\tfor (var i = 0, len = json.data.length; i < len; i++) {\n\t\t\t\ttasks.push(this._copyObject(json.data[i]));\n\t\t\t}\n\t\t\tfor (var i = 0, len = json.links.length; i < len; i++) {\n\t\t\t\tlinks.push(this._copyLink(json.links[i]));\n\t\t\t}\n\t\t\treturn \"<data>\" + tasks.join(\"\") + \"<coll_options for='links'>\" + links.join(\"\") + \"</coll_options></data>\";\n\t\t}\n\t};\n\n\n\tgantt.oldxml = {\n\t\tparse: function (text, loader) {\n\t\t\tloader = gantt.xml._getXML(text, loader, \"projects\");\n\t\t\tvar data = {collections: {links: []}};\n\n\t\t\tvar evs = data.data = [];\n\t\t\tvar xml = gantt.ajax.xpath(\"//task\", loader);\n\n\t\t\tfor (var i = 0; i < xml.length; i++) {\n\t\t\t\tevs[i] = gantt.xml._xmlNodeToJSON(xml[i]);\n\t\t\t\tvar parent = xml[i].parentNode;\n\n\t\t\t\tif (parent.tagName == \"project\")\n\t\t\t\t\tevs[i].parent = \"project-\" + parent.getAttribute(\"id\");\n\t\t\t\telse\n\t\t\t\t\tevs[i].parent = parent.parentNode.getAttribute(\"id\");\n\t\t\t}\n\n\t\t\txml = gantt.ajax.xpath(\"//project\", loader);\n\t\t\tfor (var i = 0; i < xml.length; i++) {\n\t\t\t\tvar ev = gantt.xml._xmlNodeToJSON(xml[i], true);\n\t\t\t\tev.id = \"project-\" + ev.id;\n\t\t\t\tevs.push(ev);\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < evs.length; i++) {\n\t\t\t\tvar ev = evs[i];\n\t\t\t\tev.start_date = ev.startdate || ev.est;\n\t\t\t\tev.end_date = ev.enddate;\n\t\t\t\tev.text = ev.name;\n\t\t\t\tev.duration = ev.duration / 8;\n\t\t\t\tev.open = 1;\n\t\t\t\tif (!ev.duration && !ev.end_date) ev.duration = 1;\n\t\t\t\tif (ev.predecessortasks)\n\t\t\t\t\tdata.collections.links.push({\n\t\t\t\t\t\ttarget: ev.id,\n\t\t\t\t\t\tsource: ev.predecessortasks,\n\t\t\t\t\t\ttype: gantt.config.links.finish_to_start\n\t\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn data;\n\t\t},\n\t\tserialize: function () {\n\t\t\tgantt.message(\"Serialization to 'old XML' is not implemented\");\n\t\t}\n\t};\n\n\tgantt.serverList = function (name, array) {\n\t\tif (array) {\n\t\t\tthis.serverList[name] = array.slice(0);\n\t\t} else if (!this.serverList[name]) {\n\t\t\tthis.serverList[name] = [];\n\t\t}\n\t\treturn this.serverList[name];\n\t};\n\n};","module.exports = function(gantt) {\n\tgantt.isReadonly = function (item) {\n\t\tif (item && item[this.config.editable_property]) {\n\t\t\treturn false;\n\t\t} else {\n\t\t\treturn (item && item[this.config.readonly_property]) || this.config.readonly;\n\t\t}\n\t};\n};","module.exports = function(gantt){\n\n\tvar htmlTags = new RegExp(\"<(?:.|\\n)*?>\", \"gm\");\n\tvar extraSpaces = new RegExp(\" +\", \"gm\");\n\n\tfunction stripHTMLLite(htmlText){\n\t\treturn (htmlText + \"\")\n\t\t\t.replace(htmlTags, \" \").\n\t\t\treplace(extraSpaces, \" \");\n\t}\n\n\tvar singleQuotes = new RegExp(\"'\", \"gm\");\n\tfunction escapeQuotes(text){\n\t\treturn (text + \"\").replace(singleQuotes, \"&#39;\");\n\t}\n\n\tgantt._waiAria = {\n\t\tgetAttributeString: function(attr){\n\t\t\tvar attributes = [\" \"];\n\t\t\tfor(var i in attr){\n\t\t\t\tvar text = escapeQuotes(stripHTMLLite(attr[i]));\n\t\t\t\tattributes.push(i + \"='\" + text + \"'\");\n\t\t\t}\n\t\t\tattributes.push(\" \");\n\t\t\treturn attributes.join(\" \");\n\n\t\t},\n\n\t\tgetTimelineCellAttr:function(dateString){\n\n\t\t\treturn gantt._waiAria.getAttributeString({\"aria-label\": dateString});\n\t\t},\n\n\n\t\t_taskCommonAttr: function(task, div){\n\n\t\t\tif(!(task.start_date && task.end_date))\n\t\t\t\treturn;\n\n\t\t\tdiv.setAttribute(\"aria-label\", stripHTMLLite(gantt.templates.tooltip_text(task.start_date, task.end_date, task)));\n\n\t\t\tif(gantt.isReadonly(task)){\n\t\t\t\tdiv.setAttribute(\"aria-readonly\", true);\n\n\n\t\t\t}\n\n\t\t\tif(task.$dataprocessor_class){\n\t\t\t\tdiv.setAttribute(\"aria-busy\", true);\n\t\t\t}\n\n\n\t\t\tdiv.setAttribute(\"aria-selected\",\n\t\t\t\t(gantt.getState().selected_task == task.id || (gantt.isSelectedTask && gantt.isSelectedTask(task.id))) ? \"true\" : \"false\");\n\t\t},\n\n\t\tsetTaskBarAttr: function(task, div){\n\t\t\tthis._taskCommonAttr(task, div);\n\n\t\t\tif(!gantt.isReadonly(task) && gantt.config.drag_move){\n\t\t\t\tif(task.id != gantt.getState().drag_id){\n\t\t\t\t\tdiv.setAttribute(\"aria-grabbed\", false);\n\t\t\t\t}else{\n\t\t\t\t\tdiv.setAttribute(\"aria-grabbed\", true);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\ttaskRowAttr: function(task, div){\n\n\t\t\tthis._taskCommonAttr(task, div);\n\n\t\t\tif(!gantt.isReadonly(task) && gantt.config.order_branch){\n\t\t\t\tdiv.setAttribute(\"aria-grabbed\", false);\n\t\t\t}\n\n\t\t\tdiv.setAttribute(\"role\", \"row\");\n\n\t\t\tdiv.setAttribute(\"aria-level\", task.$level);\n\n\t\t\tif(gantt.hasChild(task.id)){\n\t\t\t\tdiv.setAttribute(\"aria-expanded\", task.$open ? \"true\" : \"false\");\n\t\t\t}\n\t\t},\n\n\t\tlinkAttr: function(link, div){\n\n\t\t\tvar linkTypes = gantt.config.links;\n\n\t\t\tvar toStart = link.type == linkTypes.finish_to_start || link.type == linkTypes.start_to_start;\n\t\t\tvar fromStart = link.type == linkTypes.start_to_start || link.type == linkTypes.start_to_finish;\n\n\t\t\tvar content = gantt.locale.labels.link + \" \" +  gantt.templates.drag_link(link.source, fromStart, link.target, toStart);\n\n\t\t\tdiv.setAttribute(\"aria-label\", stripHTMLLite(content));\n\t\t\tif(gantt.isReadonly(link)){\n\t\t\t\tdiv.setAttribute(\"aria-readonly\", true);\n\t\t\t}\n\t\t},\n\n\t\tgridSeparatorAttr: function(div){\n\t\t\tdiv.setAttribute(\"role\", \"separator\");\n\t\t},\n\n\t\tlightboxHiddenAttr: function(div){\n\t\t\tdiv.setAttribute(\"aria-hidden\", \"true\");\n\t\t},\n\n\t\tlightboxVisibleAttr: function(div){\n\t\t\tdiv.setAttribute(\"aria-hidden\", \"false\");\n\t\t},\n\n\t\tlightboxAttr: function(div){\n\t\t\tdiv.setAttribute(\"role\", \"dialog\");\n\t\t\tdiv.setAttribute(\"aria-hidden\", \"true\");\n\t\t\tdiv.firstChild.setAttribute(\"role\", \"heading\");\n\t\t},\n\n\t\tlightboxButtonAttrString:function(buttonName){\n\t\t\treturn this.getAttributeString({\"role\":\"button\", \"aria-label\":gantt.locale.labels[buttonName], \"tabindex\":\"0\"});\n\t\t},\n\n\t\tlightboxHeader: function(div, headerText){\n\t\t\tdiv.setAttribute(\"aria-label\", headerText);\n\t\t},\n\n\t\tlightboxSelectAttrString: function(time_option){\n\t\t\tvar label = \"\";\n\n\t\t\tswitch (time_option) {\n\t\t\t\tcase \"%Y\":\n\t\t\t\t\tlabel = gantt.locale.labels.years;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"%m\":\n\t\t\t\t\tlabel = gantt.locale.labels.months;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"%d\":\n\t\t\t\t\tlabel = gantt.locale.labels.days;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"%H:%i\":\n\t\t\t\t\tlabel = gantt.locale.labels.hours + gantt.locale.labels.minutes;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\treturn gantt._waiAria.getAttributeString({\"aria-label\": label});\n\t\t},\n\n\t\tlightboxDurationInputAttrString: function(section){\n\t\t\treturn this.getAttributeString({\"aria-label\": gantt.locale.labels.column_duration, \"aria-valuemin\": \"0\"});\n\t\t},\n\n\t\tgridAttrString: function(){\n\t\t\treturn [\" role='treegrid'\", gantt.config.multiselect ? \"aria-multiselectable='true'\" : \"aria-multiselectable='false'\", \" \"].join(\" \");\n\t\t},\n\n\n\t\tgridScaleRowAttrString: function(){\n\t\t\treturn \"role='row'\";\n\t\t},\n\n\t\tgridScaleCellAttrString: function(column, label){\n\t\t\tvar attrs = \"\";\n\t\t\tif(column.name == \"add\"){\n\t\t\t\tattrs = this.getAttributeString({\"role\":\"button\", \"aria-label\": gantt.locale.labels.new_task});\n\t\t\t}else{\n\n\t\t\t\tvar attributes = {\n\t\t\t\t\t\"role\":\"columnheader\",\n\t\t\t\t\t\"aria-label\": label\n\t\t\t\t};\n\n\t\t\t\tif(gantt._sort && gantt._sort.name == column.name){\n\t\t\t\t\tif(gantt._sort.direction == \"asc\"){\n\t\t\t\t\t\tattributes[\"aria-sort\"] = \"ascending\";\n\t\t\t\t\t}else{\n\t\t\t\t\t\tattributes[\"aria-sort\"] = \"descending\";\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tattrs = this.getAttributeString(attributes);\n\t\t\t}\n\t\t\treturn attrs;\n\t\t},\n\n\t\tgridDataAttrString: function(){\n\t\t\treturn \"role='rowgroup'\";\n\t\t},\n\n\t\tgridCellAttrString: function(column, textValue){\n\t\t\treturn this.getAttributeString({\"role\":\"gridcell\", \"aria-label\": textValue});\n\t\t},\n\n\t\tgridAddButtonAttrString: function(column){\n\t\t\treturn this.getAttributeString({\"role\":\"button\", \"aria-label\": gantt.locale.labels.new_task});\n\t\t},\n\n\t\tmessageButtonAttrString: function(buttonLabel){\n\t\t\treturn \"tabindex='0' role='button' aria-label='\"+buttonLabel+\"'\";\n\t\t},\n\n\t\tmessageInfoAttr: function(div){\n\t\t\tdiv.setAttribute(\"role\", \"alert\");\n\t\t\t//div.setAttribute(\"tabindex\", \"-1\");\n\t\t},\n\n\t\tmessageModalAttr: function(div, uid){\n\t\t\tdiv.setAttribute(\"role\", \"dialog\");\n\t\t\tif(uid){\n\t\t\t\tdiv.setAttribute(\"aria-labelledby\", uid);\n\t\t\t}\n\n\t\t//\tdiv.setAttribute(\"tabindex\", \"-1\");\n\t\t},\n\n\t\tquickInfoAttr: function(div){\n\t\t\tdiv.setAttribute(\"role\", \"dialog\");\n\t\t},\n\n\t\tquickInfoHeaderAttrString: function(){\n\t\t\treturn \" role='heading' \";\n\t\t},\n\n\t\tquickInfoHeader: function(div, header){\n\t\t\tdiv.setAttribute(\"aria-label\", header);\n\t\t},\n\n\t\tquickInfoButtonAttrString: function(label){\n\t\t\treturn gantt._waiAria.getAttributeString({\"role\":\"button\", \"aria-label\":label, \"tabindex\":\"0\"});\n\t\t},\n\n\t\ttooltipAttr: function(div){\n\t\t\tdiv.setAttribute(\"role\", \"tooltip\");\n\t\t},\n\n\t\ttooltipVisibleAttr: function(div){\n\t\t\tdiv.setAttribute(\"aria-hidden\", \"false\");\n\t\t},\n\n\t\ttooltipHiddenAttr: function(div){\n\t\t\tdiv.setAttribute(\"aria-hidden\", \"true\");\n\t\t}\n\t};\n\n\tfunction isDisabled(){\n\t\treturn !gantt.config.wai_aria_attributes;\n\t}\n\n\tfor(var i in gantt._waiAria){\n\t\tgantt._waiAria[i] = (function(payload){\n\t\t\treturn function(){\n\t\t\t\tif(isDisabled()){\n\t\t\t\t\treturn \"\";\n\t\t\t\t}\n\t\t\t\treturn payload.apply(this, arguments);\n\t\t\t};\n\t\t})(gantt._waiAria[i]);\n\t}\n\n\n};","module.exports = function(gantt) {\n\tgantt.getGridColumn = function (name) {\n\t\tvar columns = gantt.config.columns;\n\n\t\tfor (var i = 0; i < columns.length; i++) {\n\t\t\tif (columns[i].name == name)\n\t\t\t\treturn columns[i];\n\t\t}\n\n\t\treturn null;\n\t};\n};","var Grid = require(\"./ui/grid/grid\");\n\nmodule.exports = function(gantt) {\n\trequire(\"./grid_column_api.gpl\")(gantt);\n\tGrid.prototype.getGridColumns = function () {\n\t\tvar config = this.$getConfig();\n\t\tvar columns = config.columns,\n\t\t\tvisibleColumns = [];\n\n\t\tfor (var i = 0; i < columns.length; i++) {\n\t\t\tif (!columns[i].hide)\n\t\t\t\tvisibleColumns.push(columns[i]);\n\t\t}\n\n\t\treturn visibleColumns;\n\t};\n};","module.exports = function(gantt) {\n\tvar TreeDataStore = require(\"./datastore/treedatastore\");\n\n\tvar old_has_children = TreeDataStore.prototype.hasChild;\n\tgantt.$data.tasksStore.hasChild = function (id) {\n\t\tif (old_has_children.apply(this, arguments))\n\t\t\treturn true;\n\t\tif (this.exists(id)) {\n\t\t\treturn this.getItem(id)[gantt.config.branch_loading_property];\n\t\t}\n\t\treturn false;\n\t};\n\n\tfunction needLoading(id) {\n\t\tif (gantt.config.branch_loading && gantt._load_url) {\n\t\t\tvar was_rendered = gantt.getUserData(id, \"was_rendered\");\n\t\t\t// call ajax only if branch has children\n\t\t\tif (!was_rendered && (!gantt.getChildren(id).length && gantt.hasChild(id))) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tgantt.attachEvent(\"onTaskOpened\", function (id) {\n\t\tif (gantt.config.branch_loading && gantt._load_url) {\n\t\t\t// call ajax only if branch has children\n\t\t\tif (needLoading(id)) {\n\t\t\t\tvar url = gantt._load_url;\n\t\t\t\turl = url.replace(/(\\?|&)?parent_id=.+&?/, \"\");\n\t\t\t\tvar param = url.indexOf(\"?\") >= 0 ? \"&\" : \"?\";\n\t\t\t\tvar y = gantt.getScrollState().y || 0;\n\n\t\t\t\tgantt.load(url + param + \"parent_id=\" + encodeURIComponent(id), this._load_type, function () {\n\t\t\t\t\tif (y) {\n\t\t\t\t\t\tgantt.scrollTo(null, y);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tgantt.setUserData(id, \"was_rendered\", true);\n\t\t\t}\n\t\t}\n\t});\n\n};","module.exports = function(gantt){\n\tfunction isEnabled(){\n\t\treturn gantt.config.auto_types && // if enabled\n\t\t\t(gantt.getTaskType(gantt.config.types.project) == gantt.config.types.project);// and supported\n\t}\n\n\tfunction callIfEnabled(callback){\n\t\treturn function(){\n\t\t\tif(!isEnabled()){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn callback.apply(this, arguments);\n\t\t};\n\t}\n\n\tfunction updateParents(childId){\n\t\tgantt.batchUpdate(function () {\n\t\t\tcheckParent(childId);\n\t\t});\n\t}\n\n\tvar delTaskParent;\n\n\tfunction checkParent(id) {\n\t\tsetTaskType(id);\n\t\tvar parent = gantt.getParent(id);\n\t\tif (parent != gantt.config.root_id) {\n\t\t\tcheckParent(parent);\n\t\t}\n\t}\n\n\tfunction setTaskType(id) {\n\t\tid = id.id ? id.id : id;\n\t\tvar task = gantt.getTask(id);\n\t\tvar allTypes = gantt.config.types;\n\t\tvar targetType = gantt.hasChild(task.id) ? allTypes.project : allTypes.task;\n\t\tvar taskType = gantt.getTaskType(task.type);\n\t\tif ((taskType == allTypes.task && targetType == allTypes.project) ||\n\t\t\t(taskType == allTypes.project && targetType == allTypes.task)\n\t\t) {\n\t\t\ttask.type = targetType;\n\t\t\tgantt.updateTask(id);\n\t\t}\n\t}\n\n\tgantt.attachEvent(\"onParse\", callIfEnabled(function () {\n\t\tgantt.eachTask(function (task) {\n\t\t\tsetTaskType(task);\n\t\t});\n\t}));\n\n\tgantt.attachEvent(\"onAfterTaskAdd\",  callIfEnabled(updateParents));\n\n\tgantt.attachEvent(\"onAfterTaskUpdate\", callIfEnabled(updateParents));\n\n\n\tfunction updateAfterRemoveChild(id){\n\t\tif (id != gantt.config.root_id && gantt.isTaskExists(id)) {\n\t\t\tupdateParents(id);\n\t\t}\n\t}\n\n\tgantt.attachEvent(\"onBeforeTaskDelete\",  callIfEnabled(function(id, task) {\n\t\tdelTaskParent = gantt.getParent(id);\n\t\treturn true;\n\t}));\n\n\tgantt.attachEvent(\"onAfterTaskDelete\", callIfEnabled(function(id, task) {\n\t\tupdateAfterRemoveChild(delTaskParent);\n\t}));\n\n\n\tvar originalRowDndParent;\n\tgantt.attachEvent(\"onRowDragStart\", callIfEnabled(function(id, target, e) {\n\t\toriginalRowDndParent = gantt.getParent(id);\n\t\treturn true;\n\t}));\n\tgantt.attachEvent(\"onRowDragEnd\", callIfEnabled(function(id, target) {\n\t\tupdateAfterRemoveChild(originalRowDndParent);\n\t\tupdateParents(id);\n\t}));\n\n\tvar originalMoveTaskParent;\n\tgantt.attachEvent(\"onBeforeTaskMove\", callIfEnabled(function(sid, parent, tindex){\n\t\toriginalMoveTaskParent = gantt.getParent(sid);\n\t\treturn true;\n\t}));\n\tgantt.attachEvent(\"onAfterTaskMove\", callIfEnabled(function(id, parent, tindex){\n\t\tif(document.querySelector(\".gantt_drag_marker\")){\n\t\t\t// vertical dnd in progress\n\t\t\treturn;\n\t\t}\n\t\tupdateAfterRemoveChild(originalMoveTaskParent);\n\t\tupdateParents(id);\n\t}));\n\n};","module.exports = function addPlaceholder(gantt){\n\tfunction isEnabled(){\n\t\treturn gantt.config.placeholder_task;\n\t}\n\n\tfunction callIfEnabled(callback){\n\t\treturn function(){\n\t\t\tif(!isEnabled()){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn callback.apply(this, arguments);\n\t\t};\n\t}\n\n\tfunction silenceDataProcessor(){\n\t\tvar dataProcessor = gantt._dp;\n\n\t\tif(dataProcessor && !dataProcessor._silencedPlaceholder){\n\t\t\tdataProcessor._silencedPlaceholder = true;\n\t\t\tdataProcessor.attachEvent(\"onBeforeUpdate\", callIfEnabled(function(id, state, data){\n\t\t\t\tif(data.type == gantt.config.types.placeholder){\n\t\t\t\t\tdataProcessor.setUpdated(id, false);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}));\n\t\t}\n\t}\n\n\tfunction insertPlaceholder(){\n\t\tvar placeholders = gantt.getTaskBy(\"type\", gantt.config.types.placeholder)\n\t\tif(!placeholders.length || !gantt.isTaskExists(placeholders[0].id)){\n\t\t\tvar placeholder = {\n\t\t\t\tunscheduled: true,\n\t\t\t\ttype: gantt.config.types.placeholder,\n\t\t\t\tduration:0,\n\t\t\t\ttext: gantt.locale.labels.new_task\n\t\t\t};\n\t\t\tif(gantt.callEvent(\"onTaskCreated\", [placeholder]) === false){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tgantt.addTask(placeholder);\n\t\t}\n\t}\n\n\tfunction afterEdit(id){\n\t\tvar item = gantt.getTask(id);\n\t\tif(item.type == gantt.config.types.placeholder) {\n\t\t\tif(item.start_date && item.end_date && item.unscheduled){\n\t\t\t\titem.unscheduled = false;\n\t\t\t}\n\n\t\t\tgantt.batchUpdate(function(){\n\t\t\t\tvar newTask = gantt.copy(item);\n\t\t\t\tgantt.silent(function(){\n\t\t\t\t\tgantt.deleteTask(item.id);\n\t\t\t\t});\n\n\t\t\t\tdelete newTask[\"!nativeeditor_status\"];\n\t\t\t\tnewTask.type = gantt.config.types.task;\n\t\t\t\tnewTask.id = gantt.uid();\n\t\t\t\tgantt.addTask(newTask);\n\n\t\t\t\t//insertPlaceholder();\n\t\t\t});\n\n\t\t}\n\t}\n\n\tgantt.config.types.placeholder = \"placeholder\";\n\n\tgantt.attachEvent(\"onGanttReady\", function(){\n\t\tgantt.attachEvent(\"onBeforeDataRender\", callIfEnabled(silenceDataProcessor));\n\t\tgantt.attachEvent(\"onAfterTaskUpdate\", callIfEnabled(afterEdit));\n\t\tgantt.attachEvent(\"onAfterTaskAdd\", callIfEnabled(function(id, task){\n\t\t\tif(task.type != gantt.config.types.placeholder){\n\t\t\t\tvar placeholders = gantt.getTaskBy(\"type\", gantt.config.types.placeholder);\n\t\t\t\tplaceholders.forEach(function(p){\n\t\t\t\t\tgantt.silent(function(){\n\t\t\t\t\t\tif(gantt.isTaskExists(p.id))\n\t\t\t\t\t\t\tgantt.deleteTask(p.id);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\tinsertPlaceholder()\n\t\t\t}\n\t\t}));\n\t\tgantt.attachEvent(\"onParse\", callIfEnabled(insertPlaceholder));\n\t});\n\n};","function createResourceMethods(gantt){\n\n\tvar resourceTaskCache = {},\n\t\tresourceLoadCache = {};\n\n\tgantt.$data.tasksStore.attachEvent(\"onStoreUpdated\", function(){\n\t\tresourceTaskCache = {};\n\t\tresourceLoadCache = {};\n\t});\n\n\tfunction getTaskBy(propertyName, propertyValue){\n\t\tif(typeof propertyName == \"function\"){\n\t\t\treturn filterResourceTasks(propertyName);\n\t\t}else{\n\t\t\tif(propertyValue instanceof Array){\n\t\t\t\treturn getResourceTasks(propertyName, propertyValue);\n\t\t\t}else{\n\t\t\t\treturn getResourceTasks(propertyName, [propertyValue]);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction filterResourceTasks(filter){\n\t\tvar res = [];\n\t\tgantt.eachTask(function (task) {\n\t\t\tif (filter(task)) {\n\t\t\t\tres.push(task);\n\t\t\t}\n\t\t});\n\t\treturn res;\n\t}\n\n\tfunction getResourceTasks(property, resourceIds) {\n\t\tvar res;\n\n\t\tvar cacheKey = resourceIds.join(\"_\") + \"_\" + property;\n\n\t\tvar resourceHash = {};\n\t\tfor(var i = 0; i < resourceIds.length; i++){\n\t\t\tresourceHash[resourceIds[i]] = true;\n\t\t}\n\n\t\tif(!resourceTaskCache[cacheKey]){\n\t\t\tres = resourceTaskCache[cacheKey] = [];\n\t\t\tgantt.eachTask(function (task) {\n\t\t\t\tif (resourceHash[task[property]] && task.type != gantt.config.types.project) {\n\t\t\t\t\tres.push(task);\n\t\t\t\t}\n\t\t\t});\n\t\t}else{\n\t\t\tres = resourceTaskCache[cacheKey];\n\t\t}\n\n\t\treturn res;\n\t}\n\n\tfunction getResourceLoad(resourceId, resourceProperty, scale, timeline){\n\t\tvar cacheKey = [resourceId, resourceProperty, scale.unit, scale.step].join(\"_\");\n\t\tvar res;\n\t\tif(!resourceTaskCache[cacheKey]){\n\t\t\tres = resourceTaskCache[cacheKey] = calculateResourceLoad(resourceId, resourceProperty, scale, timeline);\n\n\t\t}else{\n\t\t\tres = resourceTaskCache[cacheKey];\n\t\t}\n\t\treturn res;\n\t}\n\n\tfunction calculateResourceLoad(resourceProperty, resourceId, scale, timeline) {\n\n\t\tvar tasks = getTaskBy(resourceProperty, resourceId);\n\t\tvar step = scale.unit;\n\t\tvar timegrid = {};\n\n\t\tfor (var i = 0; i < tasks.length; i++) {\n\t\t\tvar task = tasks[i];\n\n\t\t\tvar currDate = gantt.date[step + \"_start\"](new Date(task.start_date));\n\n\t\t\twhile (currDate < task.end_date) {\n\n\t\t\t\tvar date = currDate;\n\t\t\t\tcurrDate = gantt.date.add(currDate, 1, step);\n\n\t\t\t\tif (!gantt.isWorkTime({date: date, task: task, unit: step})) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tvar timestamp = date.valueOf();\n\t\t\t\tif (!timegrid[timestamp]){\n\t\t\t\t\ttimegrid[timestamp] = [];\n\t\t\t\t}\n\n\t\t\t\ttimegrid[timestamp].push(task);\n\t\t\t}\n\t\t}\n\n\t\tvar timetable = [];\n\t\tvar start, end, tasks;\n\t\tvar config = timeline.$getConfig();\n\n\t\tfor(var i = 0; i < scale.trace_x.length; i++){\n\t\t\tstart = new Date(scale.trace_x[i]);\n\t\t\tend = gantt.date.add(start, 1, step);\n\t\t\ttasks = timegrid[start.valueOf()] || [];\n\t\t\tif(tasks.length || config.resource_render_empty_cells){\n\t\t\t\ttimetable.push({\n\t\t\t\t\tstart_date: start,\n\t\t\t\t\tend_date: end,\n\t\t\t\t\ttasks: tasks\n\t\t\t\t});\n\t\t\t}\n\n\t\t}\n\n\t\treturn timetable;\n\t}\n\n\tfunction renderResourceLine(resource, timeline) {\n\t\tvar config = timeline.$getConfig(),\n\t\t\ttemplates = timeline.$getTemplates();\n\t\tvar timetable = getResourceLoad(config.resource_property, resource.id, timeline.getScale(), timeline);\n\n\t\tvar cells = [];\n\t\tfor (var i = 0; i < timetable.length; i++) {\n\n\t\t\tvar day = timetable[i];\n\n\t\t\tvar css = templates.resource_cell_class(day.start_date, day.end_date, resource, day.tasks);\n\t\t\tvar content = templates.resource_cell_value(day.start_date, day.end_date, resource, day.tasks);\n\n\t\t\tif(css || content){\n\t\t\t\tvar sizes = timeline.getItemPosition(resource, day.start_date, day.end_date);\n\t\t\t\tvar el = document.createElement('div');\n\t\t\t\tel.className = [\"gantt_resource_marker\", css].join(\" \");\n\n\t\t\t\tel.style.cssText = [\n\t\t\t\t\t'left:' + sizes.left + 'px',\n\t\t\t\t\t'width:' + sizes.width + 'px',\n\t\t\t\t\t'height:' + (config.row_height - 1) + 'px',\n\t\t\t\t\t'line-height:' + (config.row_height - 1) + 'px',\n\t\t\t\t\t'top:' + sizes.top + 'px'\n\t\t\t\t].join(\";\");\n\n\t\t\t\tif(content)\n\t\t\t\t\tel.innerHTML = content;\n\n\t\t\t\tcells.push(el);\n\t\t\t}\n\n\t\t}\n\n\t\tvar row = null;\n\t\tif(cells.length){\n\t\t\trow = document.createElement(\"div\");\n\t\t\tfor(var i = 0; i < cells.length; i++){\n\t\t\t\trow.appendChild(cells[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn row;\n\t}\n\treturn {\n\t\trenderLine: renderResourceLine,\n\t\tfilterTasks: getTaskBy\n\t};\n}\n\nmodule.exports = function(gantt){\n\tvar methods = createResourceMethods(gantt);\n\n\tgantt.getTaskBy = methods.filterTasks;\n\tgantt.$ui.layers.resourceRow = methods.renderLine;\n\tgantt.config.resource_property = \"owner_id\";\n\tgantt.config.resource_store = \"resource\";\n\tgantt.config.resource_render_empty_cells = false;\n\n\tgantt.templates.resource_cell_class = function(start, end, resource, tasks){\n\t\tvar css = \"\";\n\t\tif (tasks.length <= 1) {\n\t\t\tcss = \"gantt_resource_marker_ok\";\n\t\t} else {\n\t\t\tcss = \"gantt_resource_marker_overtime\";\n\t\t}\n\t\treturn css;\n\t};\n\n\tgantt.templates.resource_cell_value = function(start, end, resource, tasks){\n\t\treturn tasks.length * 8;\n\t};\n};\n\n\n","if (window.dhtmlx){\n\n\tif (!dhtmlx.attaches)\n\t\tdhtmlx.attaches = {};\n\n\tdhtmlx.attaches.attachGantt=function(start, end, gantt){\n\t\tvar obj = document.createElement(\"DIV\");\n\n\t\tgantt = gantt || window.gantt;\n\n\t\tobj.id = \"gantt_\"+ gantt.uid();\n\t\tobj.style.width = \"100%\";\n\t\tobj.style.height = \"100%\";\n\t\tobj.cmp = \"grid\";\n\n\t\tdocument.body.appendChild(obj);\n\t\tthis.attachObject(obj.id);\n\t\tthis.dataType = \"gantt\";\n\t\tthis.dataObj = gantt;\n\n\t\tvar that = this.vs[this.av];\n\t\tthat.grid = gantt;\n\n\t\tgantt.init(obj.id, start, end);\n\t\tobj.firstChild.style.border = \"none\";\n\n\t\tthat.gridId = obj.id;\n\t\tthat.gridObj = obj;\n\n\t\tvar method_name=\"_viewRestore\";\n\t\treturn this.vs[this[method_name]()].grid;\n\t};\n\n}\nif (typeof(window.dhtmlXCellObject) != \"undefined\") {\n\n\tdhtmlXCellObject.prototype.attachGantt=function(start, end, gantt){\n\t\tgantt = gantt || window.gantt;\n\n\t\tvar obj = document.createElement(\"DIV\");\n\t\tobj.id = \"gantt_\"+gantt.uid();\n\t\tobj.style.width = \"100%\";\n\t\tobj.style.height = \"100%\";\n\t\tobj.cmp = \"grid\";\n\n\t\tdocument.body.appendChild(obj);\n\t\tthis.attachObject(obj.id);\n\n\t\tthis.dataType = \"gantt\";\n\t\tthis.dataObj = gantt;\n\n\t\tgantt.init(obj.id, start, end);\n\t\tobj.firstChild.style.border = \"none\";\n\t\tvar method_name=\"_viewRestore\";\n\t\tobj = null;\n\t\tthis.callEvent(\"_onContentAttach\",[]);\n\n\t\treturn this.dataObj;\n\t};\n}\n\nmodule.exports = null;","if (window.jQuery){\n\n\t(function( $ ){\n\n\t\tvar methods = [];\n\t\t$.fn.dhx_gantt = function(config){\n\t\t\tconfig = config || {};\n\t\t\tif (typeof(config) === 'string') {\n\t\t\t\tif (methods[config] ) {\n\t\t\t\t\treturn methods[config].apply(this, []);\n\t\t\t\t}else {\n\t\t\t\t\t$.error('Method ' +  config + ' does not exist on jQuery.dhx_gantt');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar views = [];\n\t\t\t\tthis.each(function() {\n\t\t\t\t\tif (this && this.getAttribute){\n\t\t\t\t\t\tif (!this.gantt && !(window.gantt.$root == this)){\n\n\t\t\t\t\t\t\tvar newgantt = (window.gantt.$container && window.Gantt) ? window.Gantt.getGanttInstance():window.gantt;\n\t\t\t\t\t\t\tfor (var key in config)\n\t\t\t\t\t\t\t\tif (key!=\"data\")\n\t\t\t\t\t\t\t\t\tnewgantt.config[key] = config[key];\n\n\t\t\t\t\t\t\tnewgantt.init(this);\n\t\t\t\t\t\t\tif (config.data)\n\t\t\t\t\t\t\t\tnewgantt.parse(config.data);\n\n\t\t\t\t\t\t\tviews.push(newgantt);\n\t\t\t\t\t\t} else\n\t\t\t\t\t\t\tviews.push(typeof this.gantt == \"object\" ? this.gantt : window.gantt);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\n\t\t\t\tif (views.length === 1) return views[0];\n\t\t\t\treturn views;\n\t\t\t}\n\t\t};\n\n\t})(jQuery);\n\n}\n\n\nmodule.exports = null;","var createWbs = (function(gantt){\n\treturn {\n\t_needRecalc: true,\n\treset: function(){\n\t\tthis._needRecalc = true;\n\t},\n\t_isRecalcNeeded: function(){\n\t\treturn (!this._isGroupSort() && this._needRecalc);\n\t},\n\t_isGroupSort: function() {\n\t\treturn !!(gantt._groups && gantt._groups.is_active());\n\t},\n\t_getWBSCode: function(task) {\n\t\tif(!task) return \"\";\n\n\t\tif(this._isRecalcNeeded()){\n\t\t\tthis._calcWBS();\n\t\t}\n\n\t\tif(task.$virtual) return \"\";\n\t\tif(this._isGroupSort()) return task.$wbs || \"\";\n\n\t\tif(!task.$wbs) {\n\t\t\tthis.reset();\n\t\t\tthis._calcWBS();\n\t\t}\n\t\treturn task.$wbs;\n\t},\n\t_setWBSCode: function(task, value) {\n\t\ttask.$wbs = value;\n\t},\n\tgetWBSCode: function(task) {\n\t\treturn this._getWBSCode(task);\n\t},\n\tgetByWBSCode: function(code){\n\t\tvar parts = code.split(\".\");\n\t\tvar currentNode = gantt.config.root_id;\n\t\tfor(var i = 0; i < parts.length; i++){\n\t\t\tvar children = gantt.getChildren(currentNode);\n\t\t\tvar index = parts[i]*1 - 1;\n\t\t\tif(gantt.isTaskExists(children[index])){\n\t\t\t\tcurrentNode = children[index];\n\t\t\t}else{\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t\tif(gantt.isTaskExists(currentNode)){\n\t\t\treturn gantt.getTask(currentNode);\n\t\t}else{\n\t\t\treturn null;\n\t\t}\n\t},\n\t_calcWBS: function() {\n\t\tif(!this._isRecalcNeeded()) return;\n\n\t\tvar _isFirst = true;\n\t\tgantt.eachTask(function(ch) {\n\t\t\tif(_isFirst) {\n\t\t\t\t_isFirst = false;\n\t\t\t\tthis._setWBSCode(ch, \"1\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar _prevSibling = gantt.getPrevSibling(ch.id);\n\t\t\tif (_prevSibling !== null) {\n\t\t\t\tvar _wbs = gantt.getTask(_prevSibling).$wbs;\n\t\t\t\tif(_wbs) {\n\t\t\t\t\t_wbs = _wbs.split(\".\");\n\t\t\t\t\t_wbs[_wbs.length-1]++;\n\t\t\t\t\tthis._setWBSCode(ch, _wbs.join(\".\"));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar _parent = gantt.getParent(ch.id);\n\t\t\t\tthis._setWBSCode(ch, gantt.getTask(_parent).$wbs + \".1\");\n\t\t\t}\n\t\t}, gantt.config.root_id, this);\n\n\t\tthis._needRecalc = false;\n\t}\n};\n});\n\nmodule.exports = function(gantt){\n\tvar wbs = createWbs(gantt);\n\tgantt.getWBSCode = function getWBSCode(task) {\n\t\treturn wbs.getWBSCode(task);\n\t};\n\n\tgantt.getTaskByWBSCode = function(code) {\n\t\treturn wbs.getByWBSCode(code);\n\t};\n\n\tgantt.attachEvent(\"onAfterTaskMove\", function() {\n\t\twbs.reset();\n\t\treturn true;\n\t});\n\n\tgantt.attachEvent(\"onBeforeParse\", function() {\n\t\twbs.reset();\n\t\treturn true;\n\t});\n\n\tgantt.attachEvent(\"onAfterTaskDelete\", function() {\n\t\twbs.reset();\n\t\treturn true;\n\t});\n\n\tgantt.attachEvent(\"onAfterTaskAdd\", function() {\n\t\twbs.reset();\n\t\treturn true;\n\t});\n};\n","function createMethod(gantt){\n\tvar methods = {};\n\tvar isActive = false;\n\tfunction disableMethod(methodName, dummyMethod){\n\t\tdummyMethod = typeof dummyMethod == \"function\" ? dummyMethod : function(){};\n\n\t\tif(!methods[methodName]){\n\t\t\tmethods[methodName] = this[methodName];\n\t\t\tthis[methodName] = dummyMethod;\n\t\t}\n\t}\n\tfunction restoreMethod(methodName){\n\t\tif(methods[methodName]){\n\t\t\tthis[methodName] = methods[methodName];\n\t\t\tmethods[methodName] = null;\n\t\t}\n\t}\n\tfunction disableMethods(methodsHash){\n\t\tfor(var i in methodsHash){\n\t\t\tdisableMethod.call(this, i, methodsHash[i]);\n\t\t}\n\t}\n\t function restoreMethods(){\n\t\tfor(var i in methods){\n\t\t\trestoreMethod.call(this, i);\n\t\t}\n\t}\n\n\tfunction batchUpdatePayload(callback){\n\t\ttry{\n\t\t\tcallback();\n\t\t}catch(e){\n\t\t\twindow.console.error(e);\n\t\t}\n\t}\n\n\tvar state = gantt.$services.getService(\"state\");\n\tstate.registerProvider(\"batchUpdate\", function(){\n\t\treturn {\n\t\t\tbatch_update: isActive\n\t\t};\n\t}, true);\n\n\treturn function batchUpdate(callback, noRedraw) {\n\t\tif(isActive){\n\t\t\t// batch mode is already active\n\t\t\tbatchUpdatePayload(callback);\n\t\t\treturn;\n\t\t}\n\n\t\tvar call_dp = (this._dp && this._dp.updateMode != \"off\");\n\t\tvar dp_mode;\n\t\tif (call_dp){\n\t\t\tdp_mode = this._dp.updateMode;\n\t\t\tthis._dp.setUpdateMode(\"off\");\n\t\t}\n\n\t\t// temporary disable some methods while updating multiple tasks\n\t\tvar resetProjects = {};\n\t\tvar methods = {\n\t\t\t\"render\":true,\n\t\t\t\"refreshData\":true,\n\t\t\t\"refreshTask\":true,\n\t\t\t\"refreshLink\":true,\n\t\t\t\"resetProjectDates\":function(task){\n\t\t\t\tresetProjects[task.id] = task;\n\t\t\t}\n\t\t};\n\n\t\tdisableMethods.call(this, methods);\n\n\t\tisActive = true;\n\t\tthis.callEvent(\"onBeforeBatchUpdate\", []);\n\n\t\tbatchUpdatePayload(callback);\n\n\t\tthis.callEvent(\"onAfterBatchUpdate\", []);\n\n\t\trestoreMethods.call(this);\n\n\t\t// do required updates after changes applied\n\t\tfor(var i in resetProjects){\n\t\t\tthis.resetProjectDates(resetProjects[i]);\n\t\t}\n\n\t\tisActive = false;\n\n\t\tif(!noRedraw){\n\t\t\tthis.render();\n\t\t}\n\n\t\tif (call_dp) {\n\t\t\tthis._dp.setUpdateMode(dp_mode);\n\t\t\tthis._dp.setGanttMode(\"tasks\");\n\t\t\tthis._dp.sendData();\n\t\t\tthis._dp.setGanttMode(\"links\");\n\t\t\tthis._dp.sendData();\n\t\t}\n\t};\n\n\n\n}\n\nmodule.exports = function(gantt){\n\tgantt.batchUpdate = createMethod(gantt);\n};","var domHelpers = require(\"../../utils/dom_helpers\");\n\nmodule.exports = function(gantt){\n\n\tvar scrollRange = 50,\n\t\tscrollStep = 30,\n\t\tscrollDelay = 10,\n\t\tscrollSpeed = 50;\n\n\tvar interval = null,\n\t\tisMove = false,\n\t\tdelayTimeout = null,\n\t\tbox = {},\n\t\tstartPos = {\n\t\t\tstarted: false\n\t\t},\n\t\teventPos = {};\n\n\tfunction getAutoscrollContainer(){\n\t\treturn gantt.$task || gantt.$grid || gantt.$root;\n\t}\n\n\tfunction isScrollState() {\n\t\tvar dragMarker = !!document.querySelector(\".gantt_drag_marker\");\n\t\tvar isResize = !!document.querySelector(\".gantt_drag_marker.gantt_grid_resize_area\");\n\t\tvar isLink = !!document.querySelector(\".gantt_link_direction\");\n\t\tisMove = dragMarker && !isResize && !isLink;\n\t\treturn !((!gantt.getState().drag_mode && !dragMarker) || isResize);\n\t}\n\n\tfunction defineDelayTimeout(state) {\n\t\tif (delayTimeout) {\n\t\t\tclearTimeout(delayTimeout);\n\t\t\tdelayTimeout = null;\n\t\t}\n\t\tif (state) {\n\t\t\tvar speed = gantt.config.autoscroll_speed;\n\t\t\tif (speed && speed < 10) // limit speed value to 10 \n\t\t\t\tspeed = 10;\n\n\t\t\tdelayTimeout = setTimeout(function() {\n\t\t\t\tinterval = setInterval(tick, speed || scrollSpeed);\n\t\t\t\tbox = domHelpers.getNodePosition(getAutoscrollContainer());\n\t\t\t}, gantt.config.autoscroll_delay || scrollDelay);\n\t\t}\n\t}\n\n\tfunction defineScrollInterval(state) {\n\t\tif (state) {\n\t\t\tdefineDelayTimeout(true);\n\t\t\tif (!startPos.started) {\n\t\t\t\tstartPos.x = eventPos.x;\n\t\t\t\tstartPos.y = eventPos.y;\n\t\t\t\tstartPos.started = true;\n\t\t\t}\n\t\t} else {\n\t\t\tif (interval) {\n\t\t\t\tclearInterval(interval);\n\t\t\t\tinterval = null;\n\t\t\t}\n\t\t\tdefineDelayTimeout(false);\n\t\t\tstartPos.started = false;\n\t\t}\n\t}\n\n\tfunction autoscrollInterval(event) {\n\n\t\tvar isScroll = isScrollState();\n\n\t\tif ((interval || delayTimeout) && !isScroll) { \n\t\t\tdefineScrollInterval(false);\n\t\t}\n\n\t\tif (!gantt.config.autoscroll || !isScroll) {\n\t\t\treturn false;\n\t\t}\n\n\t\teventPos = {\n\t\t\tx: event.clientX,\n\t\t\ty: event.clientY\n\t\t};\n\n\t\tif (!interval && isScroll) {\n\t\t\tdefineScrollInterval(true);\n\t\t}\n\t}\n\n\tfunction tick() {\n\n\t\tif (!isScrollState()) {\n\t\t\tdefineScrollInterval(false);\n\t\t\treturn false;\n\t\t}\n\n\t\tvar box = domHelpers.getNodePosition(getAutoscrollContainer());\n\t\tvar posX = eventPos.x - box.x; \n\t\tvar posY = eventPos.y - box.y;\n\n\t\tvar scrollLeft = isMove ? 0 : need_scroll(posX, box.width, startPos.x - box.x);\n\t\tvar scrollTop = need_scroll(posY, box.height, startPos.y - box.y);\n\n\t\tvar scrollState = gantt.getScrollState();\n\n\t\tvar currentScrollTop = scrollState.y,\n\t\t\tscrollOuterHeight = scrollState.inner_height,\n\t\t\tscrollInnerHeight = scrollState.height,\n\t\t\tcurrentScrollLeft = scrollState.x,\n\t\t\tscrollOuterWidth = scrollState.inner_width,\n\t\t\tscrollInnerWidth = scrollState.width;\n\n\t\t// do scrolling only if we have scrollable area to do so\n\t\tif (scrollTop && !scrollOuterHeight) {\n\t\t\tscrollTop = 0;\n\t\t} else if (scrollTop < 0 && !currentScrollTop) {\n\t\t\tscrollTop = 0;\n\t\t} else if (scrollTop > 0 && currentScrollTop + scrollOuterHeight >= scrollInnerHeight + 2) {\n\t\t\tscrollTop = 0;\n\t\t}\n\n\t\tif (scrollLeft && !scrollOuterWidth) {\n\t\t\tscrollLeft = 0;\n\t\t} else if (scrollLeft < 0 && !currentScrollLeft) {\n\t\t\tscrollLeft = 0;\n\t\t} else if (scrollLeft > 0 && currentScrollLeft + scrollOuterWidth >= scrollInnerWidth) {\n\t\t\tscrollLeft = 0;\n\t\t}\n\n\t\tvar step = gantt.config.autoscroll_step;\n\n\t\tif (step && step < 2) // limit step value to 2\n\t\t\tstep = 2;\n\n\t\tscrollLeft = scrollLeft * (step || scrollStep);\n\t\tscrollTop = scrollTop * (step || scrollStep);\n\n\t\tif (scrollLeft || scrollTop) {\n\t\t\tscroll(scrollLeft, scrollTop);\n\t\t} \n\n\t}\n\n\tfunction need_scroll(pos, boxSize, startCoord) {\n\t\tif ((pos - scrollRange < 0) && (pos < startCoord))\n\t\t\treturn -1;\n\t\telse if ((pos > boxSize - scrollRange) && (pos > startCoord))\n\t\t\treturn 1;\n\t\treturn 0;\n\t}\n\n\tfunction scroll(left, top) {\n\t\tvar scrollState = gantt.getScrollState();\n\n\t\tvar scrollLeft = null,\n\t\t\tscrollTop = null;\n\n\t\tif (left) {\n\t\t\tscrollLeft = scrollState.x + left;\n\t\t\tscrollLeft = Math.min(scrollState.width, scrollLeft);\n\t\t\tscrollLeft = Math.max(0, scrollLeft);\n\t\t}\n\n\t\tif (top) {\n\t\t\tscrollTop = scrollState.y + top;\n\t\t\tscrollTop = Math.min(scrollState.height, scrollTop);\n\t\t\tscrollTop = Math.max(0, scrollTop);\n\t\t}\n\n\t\tgantt.scrollTo(scrollLeft, scrollTop);\n\t}\n\n\tgantt.attachEvent(\"onGanttReady\", function() {\n\t\tgantt.eventRemove(document.body, \"mousemove\", autoscrollInterval);\n\t\tgantt.event(document.body, \"mousemove\", autoscrollInterval);\n\t});\n\n};","module.exports = function(gantt){\n\tvar modules = [\n\t\trequire(\"./autoscroll\"),\n\t\trequire(\"./batch_update\"),\n\t\trequire(\"./wbs\"),\n\t\trequire(\"./jquery_hooks\"),\n\t\trequire(\"./dhtmlx_hooks\"),\n\t\trequire(\"./resources\"),\n\t\trequire(\"./new_task_placeholder\"),\n\t\trequire(\"./auto_task_types\")\n\t];\n\n\tfor(var i = 0; i < modules.length; i++){\n\t\tif(modules[i])\n\t\t\tmodules[i](gantt);\n\t}\n};","var utils = require(\"../../utils/utils\");\nvar eventable = require(\"../../utils/eventable\");\n\n/**\n\t* \t@desc: constructor, data processor object \n\t*\t@param: serverProcessorURL - url used for update\n\t*\t@type: public\n\t*/\nvar dataProcessor = function(serverProcessorURL){\n    this.serverProcessor = serverProcessorURL;\n    this.action_param=\"!nativeeditor_status\";\n    \n\tthis.object = null;\n\tthis.updatedRows = []; //ids of updated rows\n\t\n\tthis.autoUpdate = true;\n\tthis.updateMode = \"cell\";\n\tthis._tMode=\"GET\"; \n\tthis._headers = null;\n\tthis._payload = null;\n\tthis.post_delim = \"_\";\n\t\n    this._waitMode=0;\n    this._in_progress={};//?\n    this._invalid={};\n    this.mandatoryFields=[];\n    this.messages=[];\n    \n    this.styles={\n    \tupdated:\"font-weight:bold;\",\n    \tinserted:\"font-weight:bold;\",\n    \tdeleted:\"text-decoration : line-through;\",\n    \tinvalid:\"background-color:FFE0E0;\",\n    \tinvalid_cell:\"border-bottom:2px solid red;\",\n    \terror:\"color:red;\",\n    \tclear:\"font-weight:normal;text-decoration:none;\"\n    };\n    \n    this.enableUTFencoding(true);\n\teventable(this);\n\n    return this;\n};\n\ndataProcessor.prototype={\n\tsetTransactionMode:function(mode,total){\n\t\tif (typeof mode == \"object\"){\n\t\t\tthis._tMode = mode.mode || this._tMode;\n\n\t\t\tif(utils.defined(mode.headers)){\n\t\t\t\tthis._headers = mode.headers;\n\t\t\t}\n\n\t\t\tif(utils.defined(mode.payload)){\n\t\t\t\tthis._payload = mode.payload;\n\t\t\t}\n\t\t\t\n\t\t} else {\n     \t    this._tMode=mode;\n\t\t\tthis._tSend=total;\n\t\t}\n\n\t\tif (this._tMode == \"REST\"){\n\t\t\tthis._tSend = false;\n\t\t\tthis._endnm = true;\n\t\t}\n\n\t\tif (this._tMode == \"JSON\"){\n\t\t\tthis._tSend = false;\n\t\t\tthis._endnm = true;\n\t\t\tthis._headers = this._headers || {};\n\t\t\tthis._headers[\"Content-type\"] = \"application/json\";\n\t\t}\n    },\n    escape:function(data){\n    \tif (this._utf)\n    \t\treturn encodeURIComponent(data);\n    \telse\n        \treturn escape(data);\n\t},\n    /**\n\t* \t@desc: allows to set escaping mode\n\t*\t@param: true - utf based escaping, simple - use current page encoding\n\t*\t@type: public\n\t*/\t\n\tenableUTFencoding:function(mode){\n        this._utf=!!mode;\n    },\n    /**\n\t* \t@desc: allows to define, which column may trigger update\n\t*\t@param: val - array or list of true/false values\n\t*\t@type: public\n\t*/\n\tsetDataColumns:function(val){\n\t\tthis._columns=(typeof val == \"string\")?val.split(\",\"):val;\n    },\n    /**\n\t* \t@desc: get state of updating\n\t*\t@returns:   true - all in sync with server, false - some items not updated yet.\n\t*\t@type: public\n\t*/\n\tgetSyncState:function(){\n\t\treturn !this.updatedRows.length;\n\t},\n\t/**\n\t* \t@desc: enable/disable named field for data syncing, will use column ids for grid\n\t*\t@param:   mode - true/false\n\t*\t@type: public\n\t*/\n\tenableDataNames:function(mode){\n\t\tthis._endnm= !!mode;\n\t},\n\t/**\n\t* \t@desc: enable/disable mode , when only changed fields and row id send to the server side, instead of all fields in default mode\n\t*\t@param:   mode - true/false\n\t*\t@type: public\n\t*/\n\tenablePartialDataSend:function(mode){\n\t\tthis._changed= !!mode;\n\t},\n\t/**\n\t* \t@desc: set if rows should be send to server automaticaly\n\t*\t@param: mode - \"row\" - based on row selection changed, \"cell\" - based on cell editing finished, \"off\" - manual data sending\n\t*\t@type: public\n\t*/\n\tsetUpdateMode:function(mode,dnd){\n\t\tthis.autoUpdate = (mode==\"cell\");\n\t\tthis.updateMode = mode;\n\t\tthis.dnd=dnd;\n\t},\n\tignore:function(code,master){\n\t\tthis._silent_mode=true;\n\t\tcode.call(master||window);\n\t\tthis._silent_mode=false;\n\t},\n\t/**\n\t* \t@desc: mark row as updated/normal. check mandatory fields,initiate autoupdate (if turned on)\n\t*\t@param: rowId - id of row to set update-status for\n\t*\t@param: state - true for \"updated\", false for \"not updated\"\n\t*\t@param: mode - update mode name\n\t*\t@type: public\n\t*/\n\tsetUpdated:function(rowId,state,mode){\n\t\tif (this._silent_mode) return;\n\t\tvar ind=this.findRow(rowId);\n\t\t\n\t\tmode=mode||\"updated\";\n\t\tvar existing = this.obj.getUserData(rowId,this.action_param);\n\t\tif (existing && mode == \"updated\") mode=existing;\n\t\tif (state){\n\t\t\tthis.set_invalid(rowId,false); //clear previous error flag\n\t\t\tthis.updatedRows[ind]=rowId;\n\t\t\tthis.obj.setUserData(rowId,this.action_param,mode);\n\t\t\tif (this._in_progress[rowId]) \n\t\t\t\tthis._in_progress[rowId]=\"wait\";\n\t\t} else{\n\t\t\tif (!this.is_invalid(rowId)){\n\t\t\t\tthis.updatedRows.splice(ind,1);\n\t\t\t\tthis.obj.setUserData(rowId,this.action_param,\"\");\n\t\t\t}\n\t\t}\n\n\t\t//clear changed flag\n\t\tif (!state)\n\t\t\tthis._clearUpdateFlag(rowId);\n     \t\t\t\n\t\tthis.markRow(rowId,state,mode);\n\t\tif (state && this.autoUpdate) this.sendData(rowId);\n\t},\n\t_clearUpdateFlag:function(id){},\n\tmarkRow:function(id,state,mode){ \n\t\tvar str=\"\";\n\t\tvar invalid=this.is_invalid(id);\n\t\tif (invalid){\n        \tstr=this.styles[invalid];\n        \tstate=true;\n    \t}\n\t\tif (this.callEvent(\"onRowMark\",[id,state,mode,invalid])){\n\t\t\t//default logic\n\t\t\tstr=this.styles[state?mode:\"clear\"]+str;\n\t\t\t\n        \tthis.obj[this._methods[0]](id,str);\n\n\t\t\tif (invalid && invalid.details){\n\t\t\t\tstr+=this.styles[invalid+\"_cell\"];\n\t\t\t\tfor (var i=0; i < invalid.details.length; i++)\n\t\t\t\t\tif (invalid.details[i])\n        \t\t\t\tthis.obj[this._methods[1]](id,i,str);\n\t\t\t}\n\t\t}\n\t},\n\tgetState:function(id){\n\t\treturn this.obj.getUserData(id,this.action_param);\n\t},\n\tis_invalid:function(id){\n\t\treturn this._invalid[id];\n\t},\n\tset_invalid:function(id,mode,details){ \n\t\tif (details) mode={value:mode, details:details, toString:function(){ return this.value.toString(); }};\n\t\tthis._invalid[id]=mode;\n\t},\n\t/**\n\t* \t@desc: check mandatory fields and varify values of cells, initiate update (if specified)\n\t*\t@param: rowId - id of row to set update-status for\n\t*\t@type: public\n\t*/\n\tcheckBeforeUpdate:function(rowId){ \n\t\treturn true;\n\t},\n\t/**\n\t* \t@desc: send row(s) values to server\n\t*\t@param: rowId - id of row which data to send. If not specified, then all \"updated\" rows will be send\n\t*\t@type: public\n\t*/\n\tsendData:function(rowId){\n\t\tif (this._waitMode && (this.obj.mytype==\"tree\" || this.obj._h2)) return;\n\t\tif (this.obj.editStop) this.obj.editStop();\n\t\n\t\t\n\t\tif(typeof rowId == \"undefined\" || this._tSend) return this.sendAllData();\n\t\tif (this._in_progress[rowId]) return false;\n\t\t\n\t\tthis.messages=[];\n\t\tif (!this.checkBeforeUpdate(rowId) && this.callEvent(\"onValidationError\",[rowId,this.messages])) return false;\n\t\tthis._beforeSendData(this._getRowData(rowId),rowId);\n    },\n    _beforeSendData:function(data,rowId){\n    \tif (!this.callEvent(\"onBeforeUpdate\",[rowId,this.getState(rowId),data])) return false;\t\n\t\tthis._sendData(data,rowId);\n    },\n    serialize:function(data, id){\n    \tif (typeof data == \"string\")\n    \t\treturn data;\n    \tif (typeof id != \"undefined\")\n    \t\treturn this.serialize_one(data,\"\");\n    \telse{\n    \t\tvar stack = [];\n    \t\tvar keys = [];\n    \t\tfor (var key in data)\n    \t\t\tif (data.hasOwnProperty(key)){\n    \t\t\t\tstack.push(this.serialize_one(data[key],key+this.post_delim));\n    \t\t\t\tkeys.push(key);\n\t\t\t\t}\n    \t\tstack.push(\"ids=\"+this.escape(keys.join(\",\")));\n    \t\tif (this.$gantt.security_key)\n\t\t\t\tstack.push(\"dhx_security=\"+this.$gantt.security_key);\n    \t\treturn stack.join(\"&\");\n    \t}\n    },\n    serialize_one:function(data, pref){\n    \tif (typeof data == \"string\")\n    \t\treturn data;\n    \tvar stack = [];\n    \tfor (var key in data)\n    \t\tif (data.hasOwnProperty(key)){\n    \t\t\tif ((key == \"id\" || key == this.action_param) && this._tMode == \"REST\") continue;\n    \t\t\tstack.push(this.escape((pref||\"\")+key)+\"=\"+this.escape(data[key]));\n    \t\t}\n\t\treturn stack.join(\"&\");\n    },\n\t_applyPayload:function(url){\n\t\tvar ajax = this.$gantt.ajax;\n\t\tif (this._payload)\n\t\t\tfor (var key in this._payload)\n\t\t\t\turl = url + ajax.urlSeparator(url) + this.escape(key) + \"=\" + this.escape(this._payload[key]);\n\t\treturn url;\n\t},\n    _sendData:function(a1,rowId){\n    \tif (!a1) return; //nothing to send\n\t\tif (!this.callEvent(\"onBeforeDataSending\",rowId?[rowId,this.getState(rowId),a1]:[null, null, a1])) return false;\t\t\t\t\n\t\t\n    \tif (rowId)\n\t\t\tthis._in_progress[rowId]=(new Date()).valueOf();\n\n\t\tvar that = this;\n\t\tvar back = function(xml){\n\t\t\tvar ids = [];\n\t\t\tif (rowId)\n\t\t\t\tids.push(rowId);\n\t\t\telse if (a1)\n\t\t\t\tfor (var key in a1)\n\t\t\t\t\tids.push(key);\n\n\t\t\treturn that.afterUpdate(that,xml,ids);\n\t\t};\n\t\tvar ajax = this.$gantt.ajax;\n\n\t\tvar a3 = this.serverProcessor+(this._user?(ajax.urlSeparator(this.serverProcessor)+[\"dhx_user=\"+this._user,\"dhx_version=\"+this.obj.getUserData(0,\"version\")].join(\"&\")):\"\");\n\t\tvar a4 = this._applyPayload(a3);\n\n\t\tif (this._tMode==\"GET\") {\n\t\t\tajax.query({\n\t\t\t\turl: a4 + ajax.urlSeparator(a4) + this.serialize(a1, rowId),\n\t\t\t\tmethod: \"GET\",\n\t\t\t\tcallback: back,\n\t\t\t\theaders: this._headers\n\t\t\t});\n\t\t} else if (this._tMode == \"POST\") {\n\t\t\tajax.query({\n\t\t\t\turl: a4,\n\t\t\t\tmethod: \"POST\",\n\t\t\t\theaders: this._headers,\n\t\t\t\tdata: this.serialize(a1, rowId),\n\t\t\t\tcallback: back\n\t\t\t});\n\t\t} else if (this._tMode == \"JSON\"){\n\t\t\tvar action = a1[this.action_param];\n\t\t\tvar data = {};\n\t\t\tfor (var key in a1) data[key] = a1[key];\n\t\t\tdelete data[this.action_param];\n\t\t\tdelete data.id;\n\t\t\tdelete data.gr_id;\n\n\t\t\tajax.query({\n\t\t\t\turl:a4,\n\t\t\t\tmethod:\"POST\",\n\t\t\t\theaders:this._headers,\n\t\t\t\tcallback:back,\n\t\t\t\tdata:JSON.stringify({\n\t\t\t\t\tid: rowId,\n\t\t\t\t\taction: action,\n\t\t\t\t\tdata: data\n\t\t\t\t})\n\t\t\t});\n\t\t}\n        else if (this._tMode == \"REST\"){\n        \tvar state = this.getState(rowId);\n        \tvar url = a3.replace(/(\\&|\\?)editing\\=true/,\"\");\n        \tvar data = \"\";\n        \tvar method = \"post\";\n\n        \tif (state == \"inserted\"){\n        \t\tdata = this.serialize(a1, rowId);\n        \t} else if (state == \"deleted\"){\n        \t\tmethod = \"DELETE\";\n        \t\turl = url + (url.slice(-1) == \"/\" ? \"\" : \"/\") + rowId;\n        \t} else {\n        \t\tmethod = \"PUT\";\n        \t\tdata = this.serialize(a1, rowId);\n        \t\turl = url + (url.slice(-1) == \"/\" ? \"\" : \"/\") + rowId;\n        \t}\n\n\n        \turl = this._applyPayload(url);\n        \tajax.query({\n        \t\turl:url,\n        \t\tmethod:method,\n        \t\theaders:this._headers,\n        \t\tdata:data,\n        \t\tcallback:back\n        \t});\n        }\n\n\t\tthis._waitMode++;\n    },\n\tsendAllData:function(){\n\t\tif (!this.updatedRows.length) return;\t\t\t\n\n\t\tthis.messages=[]; var valid=true;\n\t\tfor (var i=0; i<this.updatedRows.length; i++)\n\t\t\tvalid&=this.checkBeforeUpdate(this.updatedRows[i]);\n\t\tif (!valid && !this.callEvent(\"onValidationError\",[\"\",this.messages])) return false;\n\t\n\t\tif (this._tSend) \n\t\t\tthis._sendData(this._getAllData());\n\t\telse\n\t\t\tfor (var i=0; i<this.updatedRows.length; i++)\n\t\t\t\tif (!this._in_progress[this.updatedRows[i]]){\n\t\t\t\t\tif (this.is_invalid(this.updatedRows[i])) continue;\n\t\t\t\t\tthis._beforeSendData(this._getRowData(this.updatedRows[i]),this.updatedRows[i]);\n\t\t\t\t\tif (this._waitMode && (this.obj.mytype==\"tree\" || this.obj._h2)) return; //block send all for tree\n\t\t\t\t}\n\t},\n\n\t_getAllData:function(rowId){\n\t\tvar out={};\n\t\tvar has_one = false;\n\t\tfor(var i=0;i<this.updatedRows.length;i++){\n\t\t\tvar id=this.updatedRows[i];\n\t\t\tif (this._in_progress[id] || this.is_invalid(id)) continue;\n\t\t\tvar row = this._getRowData(id);\n\t\t\tif (!this.callEvent(\"onBeforeUpdate\",[id,this.getState(id), row])) continue;\n\t\t\tout[id]=row;\n\t\t\thas_one = true;\n\t\t\tthis._in_progress[id]=(new Date()).valueOf();\n\t\t}\n\t\treturn has_one?out:null;\n\t},\n\t\n\t\n\t/**\n\t* \t@desc: specify column which value should be varified before sending to server\n\t*\t@param: ind - column index (0 based)\n\t*\t@param: verifFunction - function (object) which should verify cell value (if not specified, then value will be compared to empty string). Two arguments will be passed into it: value and column name\n\t*\t@type: public\n\t*/\n\tsetVerificator:function(ind,verifFunction){\n\t\tthis.mandatoryFields[ind] = verifFunction||(function(value){return (value!==\"\");});\n\t},\n\t/**\n\t* \t@desc: remove column from list of those which should be verified\n\t*\t@param: ind - column Index (0 based)\n\t*\t@type: public\n\t*/\n\tclearVerificator:function(ind){\n\t\tthis.mandatoryFields[ind] = false;\n\t},\n\t\n\t\n\t\n\t\n\t\n\tfindRow:function(pattern){\n\t\tvar i=0;\n    \tfor(i=0;i<this.updatedRows.length;i++)\n\t\t    if(pattern==this.updatedRows[i]) break;\n\t    return i;\n    },\n\n   \n\t\n\n\n    \n\n\n\n\n\n\t/**\n\t* \t@desc: define custom actions\n\t*\t@param: name - name of action, same as value of action attribute\n\t*\t@param: handler - custom function, which receives a XMl response content for action\n\t*\t@type: private\n\t*/\n\tdefineAction:function(name,handler){\n        if (!this._uActions) this._uActions=[];\n            this._uActions[name]=handler;\n\t},\n\n\n\n\n\t/**\n*     @desc: used in combination with setOnBeforeUpdateHandler to create custom client-server transport system\n*     @param: sid - id of item before update\n*     @param: tid - id of item after up0ate\n*     @param: action - action name\n*     @type: public\n*     @topic: 0\n*/\n\tafterUpdateCallback:function(sid, tid, action, btag) {\n\t\tvar marker = sid;\n\t\tvar correct=(action!=\"error\" && action!=\"invalid\");\n\t\tif (!correct) this.set_invalid(sid,action);\n\t\tif ((this._uActions)&&(this._uActions[action])&&(!this._uActions[action](btag)))\n\t\t\treturn (delete this._in_progress[marker]);\n\n\t\tif (this._in_progress[marker]!=\"wait\")\n\t\t\tthis.setUpdated(sid, false);\n\n\t\tvar soid = sid;\n\n\t\tswitch (action) {\n\t\t\tcase \"inserted\":\n\t\t\tcase \"insert\":\n\t\t\t\tif (tid != sid) {\n\t\t\t\t\tthis.setUpdated(sid,false);\n\t\t\t\t\tthis.obj[this._methods[2]](sid, tid);\n\t\t\t\t\tsid = tid;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"delete\":\n\t\t\tcase \"deleted\":\n\t\t\t\tthis.obj.setUserData(sid, this.action_param, \"true_deleted\");\n\t\t\t\tthis.obj[this._methods[3]](sid);\n\t\t\t\tdelete this._in_progress[marker];\n\t\t\t\treturn this.callEvent(\"onAfterUpdate\", [sid, action, tid, btag]);\n\t\t}\n\n\t\tif (this._in_progress[marker]!=\"wait\"){\n\t\t\tif (correct) this.obj.setUserData(sid, this.action_param,'');\n\t\t\tdelete this._in_progress[marker];\n\t\t} else {\n\t\t\tdelete this._in_progress[marker];\n\t\t\tthis.setUpdated(tid,true,this.obj.getUserData(sid,this.action_param));\n\t\t}\n\n\t\tthis.callEvent(\"onAfterUpdate\", [soid, action, tid, btag]);\n\t},\n\n\t/**\n\t* \t@desc: response from server\n\t*\t@param: xml - XMLLoader object with response XML\n\t*\t@type: private\n\t*/\n\tafterUpdate:function(that,xml,id){\n\t\tvar ajax = this.$gantt.ajax;\n\t\t//try to use json first\n\t\tif (window.JSON){\n\t\t\tvar tag;\n\n\t\t\ttry{\n\t\t\t\ttag = JSON.parse(xml.xmlDoc.responseText);\n\t\t\t} catch(e){\n\n\t\t\t\t// empty response also can be processed by json handler\n\t\t\t\tif(!xml.xmlDoc.responseText.length){\n\t\t\t\t\ttag = {};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(tag){\n\t\t\t\tvar action = tag.action || this.getState(id) || \"updated\";\n\t\t\t\tvar sid = tag.sid || id[0];\n\t\t\t\tvar tid = tag.tid || id[0];\n\t\t\t\tthat.afterUpdateCallback(sid, tid, action, tag);\n\t\t\t\tthat.finalizeUpdate();\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t//xml response\n\t\tvar top = ajax.xmltop(\"data\", xml.xmlDoc); //fix incorrect content type in IE\n\t\tif (!top) return this.cleanUpdate(id);\n\t\tvar atag=ajax.xpath(\"//data/action\", top);\n\t\tif (!atag.length) return this.cleanUpdate(id);\n\n\t\tfor (var i=0; i<atag.length; i++){\n        \tvar btag=atag[i];\n\t\t\tvar action = btag.getAttribute(\"type\");\n\t\t\tvar sid = btag.getAttribute(\"sid\");\n\t\t\tvar tid = btag.getAttribute(\"tid\");\n\t\t\t\n\t\t\tthat.afterUpdateCallback(sid,tid,action,btag);\n\t\t}\n\t\tthat.finalizeUpdate();\n\t},\n\tcleanUpdate:function(id){\n\t\tif (id)\n\t\t\tfor (var i = 0; i < id.length; i++)\n\t\t\t\tdelete this._in_progress[id[i]];\n\t},\n\tfinalizeUpdate:function(){\n\t\tif (this._waitMode) this._waitMode--;\n\t\t\n\t\tif ((this.obj.mytype==\"tree\" || this.obj._h2) && this.updatedRows.length) \n\t\t\tthis.sendData();\n\t\tthis.callEvent(\"onAfterUpdateFinish\",[]);\n\t\tif (!this.updatedRows.length)\n\t\t\tthis.callEvent(\"onFullSync\",[]);\n\t},\n\n\n\n\n\t\n\t/**\n\t* \t@desc: initializes data-processor\n\t*\t@param: anObj - dhtmlxGrid object to attach this data-processor to\n\t*\t@type: public\n\t*/\n\tinit:function(anObj){\n\t\tthis.obj = anObj;\n\t\tif (this.obj._dp_init) \n\t\t\tthis.obj._dp_init(this);\n\t},\n\t\n\t\n\tsetOnAfterUpdate:function(ev){\n\t\tthis.attachEvent(\"onAfterUpdate\",ev);\n\t},\n\tenableDebug:function(mode){\n\t},\n\tsetOnBeforeUpdateHandler:function(func){  \n\t\tthis.attachEvent(\"onBeforeDataSending\",func);\n\t},\n\n\n\n\t/* starts autoupdate mode\n\t\t@param interval\n\t\t\ttime interval for sending update requests\n\t*/\n\tsetAutoUpdate: function(interval, user) {\n\t\tinterval = interval || 2000;\n\t\t\n\t\tthis._user = user || (new Date()).valueOf();\n\t\tthis._need_update = false;\n\t\t//this._loader = null;\n\t\tthis._update_busy = false;\n\t\t\n\t\tthis.attachEvent(\"onAfterUpdate\",function(sid,action,tid,xml_node){\n\t\t\tthis.afterAutoUpdate(sid, action, tid, xml_node);\n\t\t});\n\t\tthis.attachEvent(\"onFullSync\",function(){\n\t\t\tthis.fullSync();\n\t\t});\n\t\t\n\t\tvar self = this;\n\t\twindow.setInterval(function(){\n\t\t\tself.loadUpdate();\n\t\t}, interval);\n\t},\n\n\n\t/* process updating request answer\n\t\tif status == collision version is depricated\n\t\tset flag for autoupdating immidiatly\n\t*/\n\tafterAutoUpdate: function(sid, action, tid, xml_node) {\n\t\tif (action == 'collision') {\n\t\t\tthis._need_update = true;\n\t\t\treturn false;\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t},\n\n\n\t/* callback function for onFillSync event\n\t\tcall update function if it's need\n\t*/\n\tfullSync: function() {\n\t\tif (this._need_update) {\n\t\t\tthis._need_update = false;\n\t\t\tthis.loadUpdate();\n\t\t}\n\t\treturn true;\n\t},\n\n\n\t/* sends query to the server and call callback function\n\t*/\n\tgetUpdates: function(url,callback){\n\t\tvar ajax = this.$gantt.ajax;\n\t\tif (this._update_busy) \n\t\t\treturn false;\n\t\telse\n\t\t\tthis._update_busy = true;\n\t\t\n\t\t//this._loader = this._loader || new dtmlXMLLoaderObject(true);\n\t\t\n\t\t//this._loader.async=true;\n\t\t//this._loader.waitCall=callback;\n\t\t//this._loader.loadXML(url);\n\t\tajax.get(url, callback);\n\n\t},\n\n\n\t/* returns xml node value\n\t\t@param node\n\t\t\txml node\n\t*/\n\t_v: function(node) {\n\t\tif (node.firstChild) return node.firstChild.nodeValue;\n\t\treturn \"\";\n\t},\n\n\n\t/* returns values array of xml nodes array\n\t\t@param arr\n\t\t\tarray of xml nodes\n\t*/\n\t_a: function(arr) {\n\t\tvar res = [];\n\t\tfor (var i=0; i < arr.length; i++) {\n\t\t\tres[i]=this._v(arr[i]);\n\t\t}\n\t\treturn res;\n\t},\n\n\n\t/* loads updates and processes them\n\t*/\n\tloadUpdate: function(){\n\t\tvar ajax = this.$gantt.ajax;\n\t\tvar self = this;\n\t\tvar version = this.obj.getUserData(0,\"version\");\n\t\tvar url = this.serverProcessor+ajax.urlSeparator(this.serverProcessor)+[\"dhx_user=\"+this._user,\"dhx_version=\"+version].join(\"&\");\n\t\turl = url.replace(\"editing=true&\",\"\");\n\t\tthis.getUpdates(url, function(xml){\n\t\t\tvar vers = ajax.xpath(\"//userdata\", xml);\n\t\t\tself.obj.setUserData(0,\"version\",self._v(vers[0]));\n\t\t\t\n\t\t\tvar upds = ajax.xpath(\"//update\", xml);\n\t\t\tif (upds.length){\n\t\t\t\tself._silent_mode = true;\n\t\t\t\t\n\t\t\t\tfor (var i=0; i<upds.length; i++) {\n\t\t\t\t\tvar status = upds[i].getAttribute('status');\n\t\t\t\t\tvar id = upds[i].getAttribute('id');\n\t\t\t\t\tvar parent = upds[i].getAttribute('parent');\n\t\t\t\t\tswitch (status) {\n\t\t\t\t\t\tcase 'inserted':\n\t\t\t\t\t\t\tself.callEvent(\"insertCallback\",[upds[i], id, parent]);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'updated':\n\t\t\t\t\t\t\tself.callEvent(\"updateCallback\",[upds[i], id, parent]);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'deleted':\n\t\t\t\t\t\t\tself.callEvent(\"deleteCallback\",[upds[i], id, parent]);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tself._silent_mode = false;\n\t\t\t}\n\t\t\t\n\t\t\tself._update_busy = false;\n\t\t\tself = null;\n\t\t});\n\t},\n\n\tdestructor: function(){\n\t\tthis.callEvent(\"onDestroy\", []);\n\t\tthis.detachAllEvents();\n\n\t\tthis.updatedRows = [];\n\t\tthis._in_progress={};//?\n\t\tthis._invalid={};\n\t\tthis._headers = null;\n\t\tthis._payload = null;\n\t\tthis.obj = null;\n\t}\n\n\n\n};\n\nmodule.exports = dataProcessor;","var utils = require (\"../../utils/utils\");\n\nfunction updateCallback(upd, id) {\n\tvar data = upd.data || this.xml._xmlNodeToJSON(upd.firstChild);\n\tif(!this.isTaskExists(id))\n\t\treturn;\n\tvar objData = this.getTask(id);\n\tfor(var key in data) {\n\t\tvar property = data[key];\n\t\tswitch(key) {\n\t\t\tcase \"id\":\n\t\t\t\tcontinue;\n\t\t\tcase \"start_date\":\n\t\t\tcase \"end_date\":\n\t\t\t\tproperty = this.templates.xml_date(property);\n\t\t\t\tbreak;\n\t\t\tcase \"duration\":\n\t\t\t\tobjData.end_date = this.calculateEndDate({start_date: objData.start_date, duration: property, task:objData});\n\t\t\t\tbreak;\n\t\t}\n\t\tobjData[key] = property;\n\t}\n\tthis.updateTask(id);\n\tthis.refreshData();\n}\n\nfunction insertCallback(upd, id, parent, mode) {\n\tvar data = upd.data || this.xml._xmlNodeToJSON(upd.firstChild),\n\t\tmethods = {\n\t\t\tadd: this.addTask,\n\t\t\tisExist: this.isTaskExists\n\t\t};\n\tif(mode == \"links\") {\n\t\tmethods.add = this.addLink;\n\t\tmethods.isExist = this.isLinkExists;\n\t}\n\tif(methods.isExist.call(this, id))\n\t\treturn;\n\tdata.id = id;\n\tmethods.add.call(this, data);\n}\n\nfunction deleteCallback(upd, id, parent, mode) {\n\tvar methods = {\n\t\t\"delete\": this.deleteTask,\n\t\t\"isExist\": this.isTaskExists\n\t};\n\tif(mode == \"links\") {\n\t\tmethods[\"delete\"] = this.deleteLink;\n\t\tmethods.isExist = this.isLinkExists;\n\t}\n\tif(methods.isExist.call(this, id))\n\t\tmethods[\"delete\"].call(this, id);\n}\n\nfunction patchDataProcessor(gantt, dataprocessor){\n\tdataprocessor.attachEvent(\"insertCallback\", utils.bind(insertCallback, gantt));\n\tdataprocessor.attachEvent(\"updateCallback\",  utils.bind(deleteCallback, gantt));\n\tdataprocessor.attachEvent(\"deleteCallback\",  utils.bind(deleteCallback, gantt));\n}\n\nmodule.exports = patchDataProcessor;","var liveUpdateHooks = require(\"./live_update_hooks\");\nvar dateHelper = require(\"../../utils/date_helpers\");\nvar helpers = require(\"../../utils/helpers\");\n\nfunction addDataProcessorHooks(gantt) {\n\n\tgantt.dataProcessor = require(\"./dataprocessor\");\n\n\tfunction detachDataProcessor(gantt, dp){\n\t\tdelete dp.$gantt;\n\t\tdelete dp.setGanttMode;\n\t\tdelete dp._getRowData;\n\t\tdp.afterUpdate = oldAfterUpdate;\n\n\t\tdelete gantt._dp;\n\t\tdelete gantt._change_id;\n\t\tdelete gantt._row_style;\n\t\tdelete gantt._delete_task;\n\t\tdelete gantt._sendTaskOrder;\n\n\t\thelpers.forEach(dataProcessorHandlers, function(e){\n\t\t\tgantt.detachEvent(e);\n\t\t});\n\t\tdataProcessorHandlers = [];\n\t}\n\n\tvar oldAfterUpdate;\n\tfunction extendDataProcessor(gantt, dp){\n\t\tdp.setGanttMode = function(mode){\n\t\t\tvar modes = dp.modes || {};\n\t\t\tif(dp._ganttMode){\n\t\t\t\tmodes[dp._ganttMode] = {\n\t\t\t\t\t_in_progress : dp._in_progress,\n\t\t\t\t\t_invalid : dp._invalid,\n\t\t\t\t\tupdatedRows : dp.updatedRows\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar newState = modes[mode];\n\t\t\tif(!newState){\n\t\t\t\tnewState = modes[mode] = {\n\t\t\t\t\t_in_progress : {},\n\t\t\t\t\t_invalid : {},\n\t\t\t\t\tupdatedRows : []\n\t\t\t\t};\n\t\t\t}\n\t\t\tdp._in_progress = newState._in_progress;\n\t\t\tdp._invalid = newState._invalid;\n\t\t\tdp.updatedRows = newState.updatedRows;\n\t\t\tdp.modes = modes;\n\t\t\tdp._ganttMode = mode;\n\t\t};\n\n\t\toldAfterUpdate = dp.afterUpdate;\n\t\tdp.afterUpdate = function(){\n\t\t\tvar xml;\n\t\t\tif(arguments.length == 3){\n\t\t\t\txml = arguments[1];\n\t\t\t}else{\n\t\t\t\t// old dataprocessor\n\t\t\t\txml = arguments[4];\n\t\t\t}\n\t\t\tvar mode = dp._ganttMode;\n\t\t\tvar reqUrl = xml.filePath;\n\n\t\t\tif(this._tMode != \"REST\"){\n\t\t\t\tif (reqUrl.indexOf(\"gantt_mode=links\") != -1) {\n\t\t\t\t\tmode = \"links\";\n\t\t\t\t}else{\n\t\t\t\t\tmode = \"tasks\";\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tif(reqUrl.indexOf(\"/link\") > reqUrl.indexOf(\"/task\")){\n\t\t\t\t\tmode = \"links\";\n\t\t\t\t}else{\n\t\t\t\t\tmode = \"tasks\";\n\t\t\t\t}\n\t\t\t}\n\t\t\tdp.setGanttMode(mode);\n\n\t\t\tvar res = oldAfterUpdate.apply(dp, arguments);\n\t\t\tdp.setGanttMode(mode);\n\t\t\treturn res;\n\t\t};\n\n\t\tdp._getRowData=gantt.bind(function(id, pref) {\n\t\t\tvar task;\n\t\t\tif (dp._ganttMode == \"tasks\")\n\t\t\t\ttask = this.isTaskExists(id) ? this.getTask(id) : { id: id };\n\t\t\telse\n\t\t\t\ttask = this.isLinkExists(id) ? this.getLink(id) : { id: id };\n\n\t\t\ttask = gantt.copy(task);\n\n\t\t\tvar data = {};\n\t\t\tfor (var key in task) {\n\t\t\t\tif (key.substr(0, 1) == \"$\") continue;\n\t\t\t\tvar value = task[key];\n\t\t\t\tif (dateHelper.isDate(value))\n\t\t\t\t\tdata[key] = this.templates.xml_format(value);\n\t\t\t\telse if(value === null)\n\t\t\t\t\tdata[key] = \"\";\n\t\t\t\telse\n\t\t\t\t\tdata[key] = value;\n\t\t\t}\n\n\t\t\tvar taskTiming = this._get_task_timing_mode(task);\n\t\t\tif(taskTiming.$no_start){\n\t\t\t\ttask.start_date = \"\";\n\t\t\t\ttask.duration = \"\";\n\t\t\t}\n\t\t\tif(taskTiming.$no_end){\n\t\t\t\ttask.end_date = \"\";\n\t\t\t\ttask.duration = \"\";\n\t\t\t}\n\t\t\tdata[dp.action_param] = this.getUserData(id, dp.action_param);\n\t\t\treturn data;\n\t\t}, gantt);\n\t}\n\n\tfunction extendGantt(gantt, dp){\n\t\tgantt._change_id = gantt.bind(function(oldid, newid) {\n\t\t\tif (dp._ganttMode != \"tasks\")\n\t\t\t\tthis.changeLinkId(oldid, newid);\n\t\t\telse\n\t\t\t\tthis.changeTaskId(oldid, newid);\n\t\t}, this);\n\n\t\tgantt._row_style = function(row_id, classname){\n\t\t\tif (dp._ganttMode != \"tasks\") return;\n\t\t\tif(!gantt.isTaskExists(row_id))\n\t\t\t\treturn;\n\n\t\t\tvar task = gantt.getTask(row_id);\n\t\t\ttask.$dataprocessor_class = classname;\n\t\t\tgantt.refreshTask(row_id);\n\t\t};\n\n\t\t// fake method for dataprocessor\n\t\tgantt._delete_task = function(row_id, node){};\n\n\t\tgantt._sendTaskOrder = function(id, item){\n\t\t\tif(item.$drop_target){\n\t\t\t\tdp.setGanttMode(\"tasks\");\n\t\t\t\tthis.getTask(id).target = item.$drop_target;\n\t\t\t\tdp.setUpdated(id, true,\"order\");\n\t\t\t\tdelete this.getTask(id).$drop_target;\n\t\t\t}\n\t\t};\n\n\t\tthis._dp = dp;\n\t}\n\n\tfunction attachDataProcessorEvents(gantt, dp){\n\t\tfunction clientSideDelete(id){\n\t\t\tvar updated = dp.updatedRows.slice();\n\t\t\tvar clientOnly = false;\n\n\t\t\tfor(var i = 0; i < updated.length && !dp._in_progress[id]; i++){\n\t\t\t\tif(updated[i] == id ){\n\t\t\t\t\tif(gantt.getUserData(id, \"!nativeeditor_status\") == \"inserted\"){\n\t\t\t\t\t\tclientOnly = true;\n\t\t\t\t\t}\n\t\t\t\t\tdp.setUpdated(id,false);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn clientOnly;\n\t\t}\n\n\t\tfunction getTaskLinks(task){\n\t\t\tvar links = [];\n\n\t\t\tif (task.$source) {\n\t\t\t\tlinks = links.concat(task.$source);\n\t\t\t}\n\t\t\tif (task.$target) {\n\t\t\t\tlinks = links.concat(task.$target);\n\t\t\t}\n\n\t\t\treturn links;\n\t\t}\n\n\t\tdataProcessorHandlers.push(this.attachEvent(\"onAfterTaskAdd\", function(id, item) {\n\t\t\tdp.setGanttMode(\"tasks\");\n\t\t\tdp.setUpdated(id,true,\"inserted\");\n\t\t}));\n\t\tdataProcessorHandlers.push(this.attachEvent(\"onAfterTaskUpdate\", function(id, item) {\n\t\t\tdp.setGanttMode(\"tasks\");\n\t\t\tdp.setUpdated(id,true);\n\n\t\t\tgantt._sendTaskOrder(id, item);\n\t\t}));\n\n\t\tvar treeHelper = require(\"../../utils/task_tree_helpers\");\n\t\tvar cascadeDelete = {};\n\n\t\tdataProcessorHandlers.push(this.attachEvent(\"onBeforeTaskDelete\", function(id, item){\n\t\t\tif(!gantt.config.cascade_delete){\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tcascadeDelete[id] = {\n\t\t\t\ttasks: treeHelper.getSubtreeTasks(gantt, id),\n\t\t\t\tlinks: treeHelper.getSubtreeLinks(gantt, id)\n\t\t\t};\n\t\t\treturn true;\n\t\t}));\n\n\t\tdataProcessorHandlers.push(this.attachEvent(\"onAfterTaskDelete\", function(id, item) {\n\t\t\tdp.setGanttMode(\"tasks\");\n\n\t\t\t// not send delete request if item is not inserted into the db - just remove it from the client\n\t\t\tvar needDbDelete = !clientSideDelete(id);\n\t\t\tif(!needDbDelete)\n\t\t\t\treturn;\n\t\t\t\n\t\t\tif(gantt.config.cascade_delete && cascadeDelete[id]){\n\t\t\t\tvar dpMode = dp.updateMode;\n\t\t\t\tdp.setUpdateMode(\"off\");\n\n\t\t\t\tvar cascade = cascadeDelete[id];\n\t\t\t\tfor(var i in cascade.tasks){\n\t\t\t\t\tif(!clientSideDelete(i)){\n\t\t\t\t\t\tdp.setUpdated(i, true, \"deleted\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tdp.setGanttMode(\"links\");\n\t\t\t\tfor(var i in cascade.links){\n\t\t\t\t\tif(!clientSideDelete(i)){\n\t\t\t\t\t\tdp.setUpdated(i, true, \"deleted\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcascadeDelete[id] = null;\n\n\t\t\t\tif(dpMode != \"off\"){\n\t\t\t\t\tdp.sendAllData();\n\t\t\t\t}\n\t\t\t\tdp.setGanttMode(\"tasks\");\n\n\t\t\t\tdp.setUpdateMode(dpMode);\n\n\t\t\t}\n\n\t\t\tdp.setUpdated(id,true,\"deleted\");\n\n\t\t\tif(dp.updateMode != 'off' && !dp._tSend){\n\t\t\t\tdp.sendAllData();\n\t\t\t}\n\n\t\t}));\n\t\tdataProcessorHandlers.push(this.attachEvent(\"onAfterLinkUpdate\", function(id, item) {\n\t\t\tdp.setGanttMode(\"links\");\n\t\t\tdp.setUpdated(id, true);\n\t\t}));\n\t\tdataProcessorHandlers.push(this.attachEvent(\"onAfterLinkAdd\", function(id, item) {\n\t\t\tdp.setGanttMode(\"links\");\n\t\t\tdp.setUpdated(id, true,\"inserted\");\n\t\t}));\n\t\tdataProcessorHandlers.push(this.attachEvent(\"onAfterLinkDelete\", function(id, item) {\n\t\t\tdp.setGanttMode(\"links\");\n\n\t\t\tvar needDbDelete = !clientSideDelete(id);\n\t\t\tif(!needDbDelete)\n\t\t\t\treturn;\n\n\t\t\tdp.setUpdated(id, true,\"deleted\");\n\t\t}));\n\t\tdataProcessorHandlers.push(this.attachEvent(\"onRowDragEnd\", function(id, target) {\n\t\t\tgantt._sendTaskOrder(id, gantt.getTask(id));\n\t\t}));\n\n\t\tvar tasks = null,\n\t\t\tlinks = null;\n\t\tdataProcessorHandlers.push(this.attachEvent(\"onTaskIdChange\",function(oldId, newId){\n\t\t\tif(!dp._waitMode) return;\n\n\t\t\tvar children = gantt.getChildren(newId);\n\t\t\tif(children.length) {\n\t\t\t\ttasks = tasks || {};\n\n\t\t\t\tfor (var i = 0; i < children.length; i++) {\n\t\t\t\t\tvar ch = this.getTask(children[i]);\n\t\t\t\t\ttasks[ch.id] = ch;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar item = this.getTask(newId),\n\t\t\t\titemLinks = getTaskLinks(item);\n\n\t\t\tif(itemLinks.length) {\n\t\t\t\tlinks = links || {};\n\n\t\t\t\tfor (var i = 0; i < itemLinks.length; i++) {\n\t\t\t\t\tvar link = this.getLink(itemLinks[i]);\n\t\t\t\t\tlinks[link.id] = link;\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\tdp.attachEvent(\"onAfterUpdateFinish\", function(){\n\t\t\tif(tasks || links){\n\t\t\t\tgantt.batchUpdate(function(){\n\t\t\t\t\tfor(var id in tasks){\n\t\t\t\t\t\tgantt.updateTask(tasks[id].id);\n\t\t\t\t\t}\n\n\t\t\t\t\tfor(var id in links){\n\t\t\t\t\t\tgantt.updateLink(links[id].id);\n\t\t\t\t\t}\n\t\t\t\t\ttasks = null;\n\t\t\t\t\tlinks = null;\n\t\t\t\t});\n\t\t\t\tif(tasks) {\n\t\t\t\t\tgantt._dp.setGanttMode(\"tasks\");\n\t\t\t\t}else{\n\t\t\t\t\tgantt._dp.setGanttMode(\"links\");\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tdp.attachEvent(\"onBeforeDataSending\", function() {\n\t\t\tvar url = this._serverProcessor;\n\t\t\tif(this._tMode == \"REST\"){\n\t\t\t\tvar mode = this._ganttMode.substr(0, this._ganttMode.length - 1);// links, tasks -> /link/id, /task/id\n\n\t\t\t\turl = url.substring(0, url.indexOf(\"?\") > -1 ? url.indexOf(\"?\") : url.length);\n\t\t\t\t//editing=true&\n\t\t\t\tthis.serverProcessor = url + (url.slice(-1) == \"/\" ? \"\" : \"/\") + mode;\n\t\t\t}else{\n\t\t\t\tthis.serverProcessor = url + gantt.ajax.urlSeparator(url) + \"gantt_mode=\" + this._ganttMode;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t});\n\t}\n\n\tvar dataProcessorHandlers = [];\n\n\tgantt._dp_init = function(dp) {\n\t\tgantt.assert(!this._dp, \"The dataProcessor is already attached to this gantt instance\");\n\n\t\tdp.setTransactionMode(\"POST\", true);\n\t\tdp.serverProcessor += (dp.serverProcessor.indexOf(\"?\") != -1 ? \"&\" : \"?\") + \"editing=true\";\n\t\tdp._serverProcessor = dp.serverProcessor;\n\t\tdp.$gantt = this;\n\t\tdp.styles = {\n\t\t\tupdated:\"gantt_updated\",\n\t\t\torder:\"gantt_updated\",\n\t\t\tinserted:\"gantt_inserted\",\n\t\t\tdeleted:\"gantt_deleted\",\n\t\t\tinvalid:\"gantt_invalid\",\n\t\t\terror:\"gantt_error\",\n\t\t\tclear:\"\"\n\t\t};\n\n\t\tdp._methods=[\"_row_style\",\"setCellTextStyle\",\"_change_id\",\"_delete_task\"];\n\n\t\textendDataProcessor.call(this, gantt, dp);\n\t\textendGantt.call(this, gantt, dp);\n\t\tattachDataProcessorEvents.call(this, gantt, dp);\n\n\t\tdp.attachEvent(\"onDestroy\", function(){\n\t\t\tdetachDataProcessor(gantt, dp);\n\t\t});\n\t\tliveUpdateHooks(gantt, dp);\n\t};\n\n\tgantt.getUserData = function(id, name) {\n\t\tif (!this.userdata) this.userdata = {};\n\t\tif (this.userdata[id] && this.userdata[id][name]) return this.userdata[id][name];\n\t\treturn \"\";\n\t};\n\tgantt.setUserData = function(id, name, value) {\n\t\tif (!this.userdata) this.userdata = {};\n\t\tif (!this.userdata[id]) this.userdata[id] = {};\n\t\tthis.userdata[id][name] = value;\n\t};\n}\n\nmodule.exports = addDataProcessorHooks;\n","var storeRenderCreator = function(name, gantt){\n\tvar store = gantt.getDatastore(name);\n\n\tvar itemRepainter = {\n\t\trenderItem: function(id, renderer){\n\n\t\t\tvar renders = renderer.getLayers();\n\n\t\t\tvar item = store.getItem(id);\n\t\t\tif(item && store.isVisible(id)) {\n\t\t\t\tfor (var i = 0; i < renders.length; i++)\n\t\t\t\t\trenders[i].render_item(item);\n\t\t\t}\n\t\t},\n\t\trenderItems: function(renderer){\n\t\t\tvar renderers = renderer.getLayers();\n\t\t\tfor (var i = 0; i < renderers.length; i++) {\n\t\t\t\trenderers[i].clear();\n\t\t\t}\n\n\t\t\tvar data = store.getVisibleItems();\n\n\t\t\tfor (var i = 0; i < renderers.length; i++) {\n\t\t\t\trenderers[i].render_items(data);\n\t\t\t}\n\t\t}\n\t};\n\n\tfunction skipRepaint(gantt){\n\t\tvar state = gantt.$services.getService(\"state\");\n\t\tif(state.getState(\"batchUpdate\").batch_update){\n\t\t\treturn true;\n\t\t}else{\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tstore.attachEvent(\"onStoreUpdated\", function(id, item, action){\n\t\tif(skipRepaint(gantt)){\n\t\t\treturn;\n\t\t}\n\n\t\tvar renderer = gantt.$services.getService(\"layers\").getDataRender(name);\n\n\t\tif(renderer){\n\t\t\tif(!id || action == \"move\" || action == \"delete\"){\n\t\t\t\tstore.callEvent(\"onBeforeRefreshAll\", []);\n\t\t\t\titemRepainter.renderItems(renderer);\n\t\t\t\tstore.callEvent(\"onAfterRefreshAll\", []);\n\t\t\t}else{\n\t\t\t\tstore.callEvent(\"onBeforeRefreshItem\", [item.id]);\n\t\t\t\titemRepainter.renderItem(item.id, renderer);\n\t\t\t\tstore.callEvent(\"onAfterRefreshItem\", [item.id]);\n\t\t\t}\n\t\t}\n\n\t});\n\n\t// TODO: probably can be done more in a more efficient way\n\tstore.attachEvent(\"onItemOpen\", function(){\n\t\tgantt.render();\n\t});\n\n\tstore.attachEvent(\"onItemClose\", function(){\n\t\tgantt.render();\n\t});\n\n\tfunction refreshId(renders, oldId, newId, item) {\n\t\tfor (var i = 0; i < renders.length; i++) {\n\t\t\trenders[i].change_id(oldId, newId);\n\t\t}\n\t}\n\n\tstore.attachEvent(\"onIdChange\", function(oldId, newId){\n\n\t\t// in case of linked datastores (tasks <-> links), id change should recalculate something in linked datastore before any repaint\n\t\t// use onBeforeIdChange for this hook.\n\t\t// TODO: use something more reasonable instead\n\t\tstore.callEvent(\"onBeforeIdChange\", [oldId, newId]);\n\n\t\tif(skipRepaint(gantt)){\n\t\t\treturn;\n\t\t}\n\t\tvar renderer = gantt.$services.getService(\"layers\").getDataRender(name);\n\t\trefreshId(renderer.getLayers(), oldId, newId, store.getItem(newId));\n\t\titemRepainter.renderItem(newId, renderer);\n\t});\n\n};\n\nmodule.exports = {\n\tbindDataStore: storeRenderCreator\n};","\nfunction createDataStoreSelectMixin(store){\n\tvar selectedId = null;\n\n\tvar deleteItem = store._removeItemInner;\n\tstore._removeItemInner = function(id){\n\t\tif(selectedId == id){\n\t\t\tselectedId = null;\n\t\t}\n\t\treturn deleteItem.apply(this, arguments);\n\t};\n\n\n\tstore.attachEvent(\"onIdChange\", function(oldId, newId) {\n\t\tif (store.getSelectedId() == oldId) {\n\t\t\tstore.silent(function () {\n\t\t\t\tstore.unselect(oldId);\n\t\t\t\tstore.select(newId);\n\t\t\t});\n\t\t}\n\t});\n\n\treturn {\n\t\tselect: function(id){\n\t\t\tif (id){\n\n\t\t\t\tif(selectedId == id)\n\t\t\t\t\treturn selectedId;\n\n\t\t\t\tif(!this._skip_refresh) {\n\t\t\t\t\tif (!this.callEvent(\"onBeforeSelect\", [id])) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.unselect();\n\n\t\t\t\tselectedId = id;\n\n\t\t\t\tif(!this._skip_refresh) {\n\t\t\t\t\tthis.refresh(id);\n\t\t\t\t\tthis.callEvent(\"onAfterSelect\", [id]);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn selectedId;\n\t\t},\n\t\tgetSelectedId: function(){\n\t\t\treturn selectedId;\n\t\t},\n\t\tunselect: function(id){\n\t\t\tvar id = id || selectedId;\n\t\t\tif(!id)\n\t\t\t\treturn;\n\t\t\tselectedId = null;\n\t\t\tif(!this._skip_refresh){\n\t\t\t\tthis.refresh(id);\n\t\t\t\tthis.callEvent(\"onAfterUnselect\", [id]);\n\t\t\t}\n\t\t}\n\t};\n}\n\nmodule.exports = createDataStoreSelectMixin;","var utils = require(\"../../utils/utils\");\n\n\nvar createLinksStoreFacade = function(){\n\treturn {\n\tgetLinkCount: function () {\n\t\treturn this.$data.linksStore.count();\n\t},\n\n\tgetLink : function (id) {\n\t\treturn this.$data.linksStore.getItem(id);\n\t},\n\n\tgetLinks : function () {\n\t\treturn this.$data.linksStore.getItems();\n\t},\n\n\tisLinkExists : function (id) {\n\t\treturn this.$data.linksStore.exists(id);\n\t},\n\n\taddLink : function (link) {\n\t\treturn this.$data.linksStore.addItem(link);\n\t},\n\n\tupdateLink : function (id, data) {\n\t\tif (!utils.defined(data))\n\t\t\tdata = this.getLink(id);\n\t\tthis.$data.linksStore.updateItem(id, data);\n\t},\n\n\tdeleteLink : function (id) {\n\t\treturn this.$data.linksStore.removeItem(id);\n\t},\n\n\tchangeLinkId : function (oldid, newid) {\n\t\treturn this.$data.linksStore.changeId(oldid, newid);\n\t}\n};\n};\n\nmodule.exports = createLinksStoreFacade;","var utils = require(\"../../utils/utils\");\n\nvar createTasksDatastoreFacade = function(){\n\treturn {\n\tgetTask: function (id) {\n\t\tthis.assert(id, \"Invalid argument for gantt.getTask\");\n\t\tvar task = this.$data.tasksStore.getItem(id);\n\t\tthis.assert(task, \"Task not found id=\" + id);\n\t\treturn task;\n\t},\n\tgetTaskByTime: function (from, to) {\n\t\tvar p = this.$data.tasksStore.getItems();\n\n\t\tvar res = [];\n\n\t\tif (!(from || to)) {\n\t\t\tres = p;\n\t\t} else {\n\t\t\tfrom = +from || -Infinity;\n\t\t\tto = +to || Infinity;\n\t\t\tfor (var t = 0; t < p.length; t++){\n\t\t\t\tvar task = p[t];\n\t\t\t\tif (+task.start_date < to && +task.end_date > from)\n\t\t\t\t\tres.push(task);\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t},\n\tisTaskExists: function (id) {\n\t\treturn this.$data.tasksStore.exists(id);\n\t},\n\tupdateTask: function (id, item) {\n\t\tif (!utils.defined(item)) item = this.getTask(id);\n\t\tthis.$data.tasksStore.updateItem(id, item);\n\t\tif(this.isTaskExists(id))\n\t\t\tthis.refreshTask(id);\n\t},\n\taddTask: function (item, parent, index) {\n\t\tif (!utils.defined(item.id))\n\t\t\titem.id = utils.uid();\n\n\t\tif (!utils.defined(parent)) parent = this.getParent(item) || 0;\n\t\tif (!this.isTaskExists(parent)) parent = 0;\n\t\tthis.setParent(item, parent);\n\n\t\treturn this.$data.tasksStore.addItem(item, index, parent);\n\t},\n\tdeleteTask: function (id) {\n\t\treturn this.$data.tasksStore.removeItem(id);\n\t},\n\tgetTaskCount: function () {\n\t\treturn this.$data.tasksStore.count();\n\t},\n\tgetVisibleTaskCount: function () {\n\t\treturn this.$data.tasksStore.countVisible();\n\t},\n\tgetTaskIndex: function (id) {\n\t\treturn this.$data.tasksStore.getBranchIndex(id);\n\t},\n\tgetGlobalTaskIndex: function (id) {\n\t\tthis.assert(id, \"Invalid argument\");\n\t\treturn this.$data.tasksStore.getIndexById(id);\n\t},\n\teachTask: function (code, parent, master) {\n\t\treturn this.$data.tasksStore.eachItem(utils.bind(code, master||this), parent);\n\t},\n\teachParent: function (callback, startTask, master) {\n\t\treturn this.$data.tasksStore.eachParent(utils.bind(callback, master || this), startTask);\n\t},\n\tchangeTaskId: function (oldid, newid) {\n\t\tthis.$data.tasksStore.changeId(oldid, newid);\n\t\tvar task = this.$data.tasksStore.getItem(newid);\n\n\t\tvar links = [];\n\n\t\tif (task.$source) {\n\t\t\tlinks = links.concat(task.$source);\n\t\t}\n\t\tif (task.$target) {\n\t\t\tlinks = links.concat(task.$target);\n\t\t}\n\n\t\tfor (var i = 0; i < links.length; i++) {\n\t\t\tvar link = this.getLink(links[i]);\n\t\t\tif (link.source == oldid) {\n\t\t\t\tlink.source = newid;\n\t\t\t}\n\t\t\tif (link.target == oldid) {\n\t\t\t\tlink.target = newid;\n\t\t\t}\n\t\t}\n\t},\n\tcalculateTaskLevel: function (item) {\n\t\treturn this.$data.tasksStore.calculateItemLevel(item);\n\t},\n\tgetNext: function (id) {\n\t\treturn this.$data.tasksStore.getNext(id);\n\t},\n\tgetPrev: function (id) {\n\t\treturn this.$data.tasksStore.getPrev(id);\n\t},\n\tgetParent: function (id) {\n\t\treturn this.$data.tasksStore.getParent(id);\n\t},\n\tsetParent: function (task, new_pid, silent) {\n\t\treturn this.$data.tasksStore.setParent(task, new_pid, silent);\n\t},\n\tgetSiblings: function (id) {\n\t\treturn this.$data.tasksStore.getSiblings(id).slice();\n\t},\n\tgetNextSibling: function (id) {\n\t\treturn this.$data.tasksStore.getNextSibling(id);\n\t},\n\tgetPrevSibling: function (id) {\n\t\treturn this.$data.tasksStore.getPrevSibling(id);\n\t},\n\tgetTaskByIndex: function(index){\n\t\tvar id = this.$data.tasksStore.getIdByIndex(index);\n\t\tif(this.isTaskExists(id)){\n\t\t\treturn this.getTask(id);\n\t\t}else{\n\t\t\treturn null;\n\t\t}\n\t},\n\tgetChildren: function (id) {\n\t\tif(!this.hasChild(id)){\n\t\t\treturn [];\n\t\t}else{\n\t\t\treturn this.$data.tasksStore.getChildren(id).slice();\n\t\t}\n\t},\n\thasChild: function (id) {\n\t\treturn this.$data.tasksStore.hasChild(id);\n\t},\n\topen: function (id) {\n\t\tthis.$data.tasksStore.open(id);\n\t},\n\tclose: function (id) {\n\t\tthis.$data.tasksStore.close(id);\n\t},\n\tmoveTask: function (sid, tindex, parent) {\n\t\tthis.$data.tasksStore.move.apply(this.$data.tasksStore, arguments);\n\t},\n\tsort: function(field, desc, parent, silent) {\n\t\tvar render = !silent;//4th argument to cancel redraw after sorting\n\t\tthis.$data.tasksStore.sort(field, desc, parent);\n\t\tif (render) {\n\t\t\tthis.render();\n\t\t}\n\t}\n};\n};\n\nmodule.exports = createTasksDatastoreFacade;\n\n\n","var utils = require(\"../../utils/utils\");\nvar createTasksFacade = require(\"./datastore_tasks\"),\n\tcreateLinksFacade = require(\"./datastore_links\"),\n\tDataStore = require(\"../datastore/datastore\"),\n\tTreeDataStore = require(\"../datastore/treedatastore\"),\n\tcreateDatastoreSelect = require(\"../datastore/select\");\nvar datastoreRender = require(\"../datastore/datastore_render\");\n\nfunction getDatastores(){\n\tvar storeNames = this.$services.getService(\"datastores\");\n\tvar res = [];\n\tfor(var i = 0; i < storeNames.length; i++){\n\t\tres.push(this.getDatastore(storeNames[i]));\n\t}\n\treturn res;\n}\n\nvar createDatastoreFacade = function(){\n\treturn {\n\tcreateDatastore: function(config){\n\n\t\tvar $StoreType = (config.type || \"\").toLowerCase() == \"treedatastore\" ? TreeDataStore : DataStore;\n\n\t\tif(config){\n\t\t\tvar self = this;\n\t\t\tconfig.openInitially = function(){ return self.config.open_tree_initially; };\n\t\t}\n\n\t\tvar store = new $StoreType(config);\n\t\tthis.mixin(store, createDatastoreSelect(store));\n\n\t\tif(config.name){\n\n\t\t\tthis.$services.setService(\"datastore:\" + config.name, function(){return store;});\n\t\t\tvar storeList = this.$services.getService(\"datastores\");\n\t\t\tif(!storeList){\n\t\t\t\tstoreList = [];\n\t\t\t\tthis.$services.setService(\"datastores\", function(){return storeList;});\n\t\t\t}\n\t\t\tstoreList.push(config.name);\n\n\t\t\tdatastoreRender.bindDataStore(config.name, this);\n\t\t}\n\n\t\treturn store;\n\t},\n\tgetDatastore: function(name){\n\t\treturn this.$services.getService(\"datastore:\" + name);\n\t},\n\n\trefreshData: function () {\n\t\tvar scrollState = this.getScrollState();\n\t\tthis.callEvent(\"onBeforeDataRender\", []);\n\n\t\tvar stores = getDatastores.call(this);\n\t\tfor(var i = 0; i < stores.length; i++){\n\t\t\tstores[i].refresh();\n\t\t}\n\n\t\tif(scrollState.x || scrollState.y){\n\t\t\tthis.scrollTo(scrollState.x, scrollState.y);\n\t\t}\n\t\tthis.callEvent(\"onDataRender\", []);\n\t},\n\n\tisChildOf: function(childId, parentId){\n\t\treturn this.$data.tasksStore.isChildOf(childId, parentId);\n\t},\n\n\trefreshTask: function (taskId, refresh_links) {\n\t\tvar task = this.getTask(taskId);\n\t\tif (task && this.isTaskVisible(taskId)) {\n\n\t\t\tthis.$data.tasksStore.refresh(taskId, !!this.getState().drag_id);// do quick refresh during drag and drop\n\n\t\t\tif (refresh_links !== undefined && !refresh_links)\n\t\t\t\treturn;\n\t\t\tfor (var i = 0; i < task.$source.length; i++) {\n\t\t\t\tthis.refreshLink(task.$source[i]);\n\t\t\t}\n\t\t\tfor (var i = 0; i < task.$target.length; i++) {\n\t\t\t\tthis.refreshLink(task.$target[i]);\n\t\t\t}\n\t\t}else if(gantt.isTaskExists(taskId) && gantt.isTaskExists(gantt.getParent(taskId))){\n\t\t\tgantt.refreshTask(gantt.getParent(taskId));\n\t\t}\n\n\t},\n\trefreshLink: function (linkId) {\n\t\tthis.$data.linksStore.refresh(linkId, !!this.getState().drag_id);// do quick refresh during drag and drop\n\t},\n\n\tsilent: function(code){\n\t\tvar gantt = this;\n\t\tgantt.$data.tasksStore.silent(function(){\n\t\t\tgantt.$data.linksStore.silent(function(){\n\t\t\t\tcode();\n\t\t\t});\n\t\t});\n\t},\n\n\tclearAll: function () {\n\t\tvar stores = getDatastores.call(this);\n\t\tfor(var i = 0; i < stores.length; i++){\n\t\t\tstores[i].clearAll();\n\t\t}\n\n\t\tthis._update_flags();\n\t\tthis.userdata = {};\n\t\tthis.callEvent(\"onClear\", []);\n\t\tthis.render();\n\t},\n\t_clear_data: function () {\n\t\tthis.$data.tasksStore.clearAll();\n\t\tthis.$data.linksStore.clearAll();\n\t\tthis._update_flags();\n\t\tthis.userdata = {};\n\t},\n\n\tselectTask: function(id){\n\t\tvar store = this.$data.tasksStore;\n\t\tif(!this.config.select_task)\n\t\t\treturn false;\n\t\tif (id){\n\n\t\t\tstore.select(id);\n\t\t}\n\t\treturn store.getSelectedId();\n\t},\n\tunselectTask: function(id){\n\t\tvar store = this.$data.tasksStore;\n\t\tstore.unselect(id);\n\t},\n\tgetSelectedId: function() {\n\t\treturn this.$data.tasksStore.getSelectedId();\n\t}\n};\n};\n\nfunction createFacade(){\n\tvar res = utils.mixin({}, createDatastoreFacade());\n\tutils.mixin(res, createTasksFacade());\n\tutils.mixin(res, createLinksFacade());\n\treturn res;\n}\n\n\n\n\nmodule.exports = {create: createFacade};","var utils = require(\"../../utils/utils\");\nvar facadeFactory = require(\"./../facades/datastore\");\nvar calculateScaleRange = require(\"../gantt_data_range\");\nfunction initDataStores(gantt){\n\n\tvar facade = facadeFactory.create();\n\tutils.mixin(gantt, facade);\n\tvar tasksStore = gantt.createDatastore({\n\t\tname: \"task\",\n\t\ttype: \"treeDatastore\",\n\t\trootId: function(){return gantt.config.root_id;},\n\t\tinitItem: utils.bind(_init_task, gantt)\n\t});\n\n\tvar linksStore = gantt.createDatastore({\n\t\tname: \"link\",\n\t\tinitItem: utils.bind(_init_link, gantt)\n\t});\n\n\ttasksStore.attachEvent(\"onBeforeRefreshAll\", function(){\n\n\t\tvar order = tasksStore.getVisibleItems();\n\n\t\tfor(var i=0; i < order.length; i++){\n\t\t\tvar item = order[i];\n\t\t\titem.$index = i;\n\t\t\tgantt.resetProjectDates(item);\n\t\t}\n\n\t});\n\n\ttasksStore.attachEvent(\"onFilterItem\", function(id, task){\n\t\tvar min = null, max = null;\n\t\tif (gantt.config.start_date && gantt.config.end_date) {\n\t\t\tif (gantt._isAllowedUnscheduledTask(task)) return true;\n\t\t\tmin = gantt.config.start_date.valueOf();\n\t\t\tmax = gantt.config.end_date.valueOf();\n\n\t\t\tif (+task.start_date > max || +task.end_date < +min)\n\t\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t});\n\n\ttasksStore.attachEvent(\"onIdChange\", function(oldId, newId){\n\t\tgantt._update_flags(oldId, newId);\n\t});\n\n\ttasksStore.attachEvent(\"onAfterUpdate\", function(id){\n\t\tgantt._update_parents(id);\n\t\tvar task = tasksStore.getItem(id);\n\t\tfor (var i = 0; i < task.$source.length; i++) {\n\t\t\tlinksStore.refresh(task.$source[i]);\n\t\t}\n\t\tfor (var i = 0; i < task.$target.length; i++) {\n\t\t\tlinksStore.refresh(task.$target[i]);\n\t\t}\n\t});\n\n\ttasksStore.attachEvent(\"onAfterItemMove\", function(sid, parent, tindex){\n\t\tvar source = gantt.getTask(sid);\n\n\t\tif(this.getNextSibling(sid) !== null){\n\t\t\tsource.$drop_target = this.getNextSibling(sid);\n\t\t} else if(this.getPrevSibling(sid) !== null){\n\t\t\tsource.$drop_target = \"next:\" + this.getPrevSibling(sid);\n\t\t}else{\n\t\t\tsource.$drop_target = \"next:null\";\n\t\t}\n\n\t});\n\n\ttasksStore.attachEvent(\"onStoreUpdated\", function(id, item, action){\n\t\tif(action == \"delete\"){\n\t\t\tgantt._update_flags(id, null);\n\t\t}\n\n\t\tvar state = gantt.$services.getService(\"state\");\n\t\tif(state.getState(\"batchUpdate\").batch_update){\n\t\t\treturn;\n\t\t}\n\n\t\tif(gantt.config.fit_tasks && action !== \"paint\"){\n\t\t\tvar oldState = gantt.getState();\n\t\t\tcalculateScaleRange(gantt);\n\t\t\tvar newState = gantt.getState();\n\n\t\t\t//this._init_tasks_range();\n\t\t\tif (+oldState.min_date != +newState.min_date || +oldState.max_date != +newState.max_date) {\n\t\t\t\tgantt.render();\n\n\t\t\t\tgantt.callEvent(\"onScaleAdjusted\", []);\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t}\n\n\t\tif(action == \"add\" || action == \"move\" || action == \"delete\"){\n\t\t\tgantt.$layout.resize();\n\t\t}else if(!id){\n\t\t\tlinksStore.refresh();\n\t\t}\n\n\t});\n\n\tlinksStore.attachEvent(\"onAfterAdd\", function(id, link){\n\t\tsync_link(link);\n\t});\n\tlinksStore.attachEvent(\"onAfterUpdate\", function(id, link){\n\t\tsync_links();\n\t});\n\tlinksStore.attachEvent(\"onAfterDelete\", function(id, link){\n\t\tsync_link_delete(link);\n\t});\n\tlinksStore.attachEvent(\"onBeforeIdChange\", function(oldId, newId){\n\t\tsync_link_delete(gantt.mixin({id:oldId}, gantt.$data.linksStore.getItem(newId)));\n\t\tsync_link(gantt.$data.linksStore.getItem(newId));\n\t});\n\n\tfunction checkLinkedTaskVisibility(taskId){\n\t\tvar isVisible = gantt.isTaskVisible(taskId);\n\t\tif(!isVisible && gantt.isTaskExists(taskId)){\n\t\t\tvar parent = gantt.getParent(taskId);\n\t\t\tif(gantt.isTaskExists(parent) && gantt.isTaskVisible(parent)){\n\t\t\t\tparent = gantt.getTask(parent);\n\t\t\t\tif(gantt.isSplitTask(parent)){\n\t\t\t\t\tisVisible = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn isVisible;\n\t}\n\n\tlinksStore.attachEvent(\"onFilterItem\", function(id, link){\n\t\tif (!gantt.config.show_links) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar sourceVisible = checkLinkedTaskVisibility(link.source);\n\t\tvar targetVisible = checkLinkedTaskVisibility(link.target);\n\n\t\tif (!(sourceVisible && targetVisible) ||\n\t\t\tgantt._isAllowedUnscheduledTask(gantt.getTask(link.source)) || gantt._isAllowedUnscheduledTask(gantt.getTask(link.target)))\n\t\t\treturn false;\n\n\t\treturn gantt.callEvent(\"onBeforeLinkDisplay\", [id, link]);\n\t});\n\n\n\t(function(){\n\t\t// delete all connected links after task is deleted\n\t\tvar treeHelper = require(\"../../utils/task_tree_helpers\");\n\t\tvar deletedLinks = {};\n\n\t\tgantt.attachEvent(\"onBeforeTaskDelete\", function(id, item){\n \t\t\tdeletedLinks[id] = treeHelper.getSubtreeLinks(gantt, id);\n\t\t\treturn true;\n\t\t});\n\n\t\tgantt.attachEvent(\"onAfterTaskDelete\", function(id, item) {\n\t\t\tif(deletedLinks[id]){\n\t\t\t\tgantt.$data.linksStore.silent(function(){\n\t\t\t\t\tfor(var i in deletedLinks[id]){\n\t\t\t\t\t\tgantt.$data.linksStore.removeItem(i);\n\t\t\t\t\t\tsync_link_delete(deletedLinks[id][i]);\n\t\t\t\t\t}\n\n\t\t\t\t\tdeletedLinks[id] = null;\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t})();\n\n\tgantt.attachEvent(\"onAfterLinkDelete\", function(id, link) {\n\t\tgantt.refreshTask(link.source);\n\t\tgantt.refreshTask(link.target);\n\t});\n\n\tgantt.attachEvent(\"onParse\", sync_links);\n\n\tmapEvents({\n\t\tsource: linksStore,\n\t\ttarget: gantt,\n\t\tevents:{\n\t\t\t\"onItemLoading\":\"onLinkLoading\",\n\t\t\t\"onBeforeAdd\":\"onBeforeLinkAdd\",\n\t\t\t\"onAfterAdd\":\"onAfterLinkAdd\",\n\t\t\t\"onBeforeUpdate\":\"onBeforeLinkUpdate\",\n\t\t\t\"onAfterUpdate\":\"onAfterLinkUpdate\",\n\t\t\t\"onBeforeDelete\":\"onBeforeLinkDelete\",\n\t\t\t\"onAfterDelete\":\"onAfterLinkDelete\",\n\t\t\t\"onIdChange\":\"onLinkIdChange\"\n\t\t}\n\t});\n\n\tmapEvents({\n\t\tsource: tasksStore,\n\t\ttarget: gantt,\n\t\tevents:{\n\t\t\t\"onItemLoading\":\"onTaskLoading\",\n\t\t\t\"onBeforeAdd\":\"onBeforeTaskAdd\",\n\t\t\t\"onAfterAdd\":\"onAfterTaskAdd\",\n\t\t\t\"onBeforeUpdate\":\"onBeforeTaskUpdate\",\n\t\t\t\"onAfterUpdate\":\"onAfterTaskUpdate\",\n\t\t\t\"onBeforeDelete\":\"onBeforeTaskDelete\",\n\t\t\t\"onAfterDelete\":\"onAfterTaskDelete\",\n\t\t\t\"onIdChange\":\"onTaskIdChange\",\n\t\t\t\"onBeforeItemMove\":\"onBeforeTaskMove\",\n\t\t\t\"onAfterItemMove\":\"onAfterTaskMove\",\n\t\t\t\"onFilterItem\":\"onBeforeTaskDisplay\",\n\t\t\t\"onItemOpen\":\"onTaskOpened\",\n\t\t\t\"onItemClose\":\"onTaskClosed\",\n\t\t\t\"onBeforeSelect\":\"onBeforeTaskSelected\",\n\t\t\t\"onAfterSelect\":\"onTaskSelected\",\n\t\t\t\"onAfterUnselect\":\"onTaskUnselected\"\n\t\t}\n\t});\n\n\tgantt.$data = {\n\t\ttasksStore: tasksStore,\n\t\tlinksStore: linksStore\n\t};\n\n\tfunction sync_link(link){\n\t\tif(gantt.isTaskExists(link.source)){\n\t\t\tvar sourceTask = gantt.getTask(link.source);\n\t\t\tsourceTask.$source = sourceTask.$source || [];\n\t\t\tsourceTask.$source.push(link.id);\n\t\t}\n\t\tif(gantt.isTaskExists(link.target)){\n\t\t\tvar targetTask = gantt.getTask(link.target);\n\t\t\ttargetTask.$target = targetTask.$target || [];\n\t\t\ttargetTask.$target.push(link.id);\n\t\t}\n\t}\n\n\tfunction sync_link_delete(link){\n\t\tif(gantt.isTaskExists(link.source)){\n\t\t\tvar sourceTask = gantt.getTask(link.source);\n\t\t\tfor(var i = 0; i < sourceTask.$source.length; i++){\n\t\t\t\tif(sourceTask.$source[i] == link.id){\n\t\t\t\t\tsourceTask.$source.splice(i, 1);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(gantt.isTaskExists(link.target)){\n\t\t\tvar targetTask = gantt.getTask(link.target);\n\t\t\tfor(var i = 0; i < targetTask.$target.length; i++){\n\t\t\t\tif(targetTask.$target[i] == link.id){\n\t\t\t\t\ttargetTask.$target.splice(i, 1);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction sync_links() {\n\t\tvar task = null;\n\t\tvar tasks = gantt.$data.tasksStore.getItems();\n\n\t\tfor(var i = 0, len = tasks.length; i < len; i++){\n\t\t\ttask = tasks[i];\n\t\t\ttask.$source = [];\n\t\t\ttask.$target = [];\n\t\t}\n\n\t\tvar links = gantt.$data.linksStore.getItems();\n\t\tfor (var i = 0, len = links.length; i < len; i++) {\n\n\t\t\tvar link = links[i];\n\t\t\tsync_link(link);\n\t\t}\n\t}\n\n\tfunction mapEvents(conf){\n\t\tvar mapFrom = conf.source;\n\t\tvar mapTo = conf.target;\n\t\tfor(var i in conf.events){\n\t\t\t(function(sourceEvent, targetEvent){\n\t\t\t\tmapFrom.attachEvent(sourceEvent, function(){\n\t\t\t\t\treturn mapTo.callEvent(targetEvent, Array.prototype.slice.call(arguments));\n\t\t\t\t}, targetEvent);\n\t\t\t})(i, conf.events[i]);\n\t\t}\n\t}\n\n\tfunction _init_task(task) {\n\t\tif (!this.defined(task.id))\n\t\t\ttask.id = this.uid();\n\n\t\tif (task.start_date)\n\t\t\ttask.start_date = gantt.date.parseDate(task.start_date, \"xml_date\");\n\t\tif (task.end_date)\n\t\t\ttask.end_date = gantt.date.parseDate(task.end_date, \"xml_date\");\n\n\n\t\tvar duration = null;\n\t\tif (task.duration || task.duration === 0) {\n\t\t\ttask.duration = duration = task.duration * 1;\n\t\t}\n\n\t\tif (duration) {\n\t\t\tif (task.start_date && !task.end_date) {\n\t\t\t\ttask.end_date = this.calculateEndDate(task);\n\t\t\t} else if (!task.start_date && task.end_date) {\n\t\t\t\ttask.start_date = this.calculateEndDate({\n\t\t\t\t\tstart_date: task.end_date,\n\t\t\t\t\tduration: -task.duration,\n\t\t\t\t\ttask: task\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\n\t\tif (this._isAllowedUnscheduledTask(task)) {\n\t\t\tthis._set_default_task_timing(task);\n\t\t}\n\t\tthis._init_task_timing(task);\n\t\tif (task.start_date && task.end_date)\n\t\t\tthis.correctTaskWorkTime(task);\n\n\t\ttask.$source = [];\n\t\ttask.$target = [];\n\t\tif (task.parent === undefined) {\n\t\t\tthis.setParent(task, this.config.root_id);\n\t\t}\n\n\t\treturn task;\n\t}\n\n\tfunction _init_link(link) {\n\t\tif (!this.defined(link.id))\n\t\t\tlink.id = this.uid();\n\t\treturn link;\n\t}\n}\n\n\nmodule.exports = initDataStores;\n","function createLayoutFacade(){\n\n\tfunction getTimeline(gantt){\n\t\treturn gantt.$ui.getView(\"timeline\");\n\t}\n\n\tfunction getGrid(gantt){\n\t\treturn gantt.$ui.getView(\"grid\");\n\t}\n\n\tfunction getVerticalScrollbar(gantt){\n\t\treturn gantt.$ui.getView(\"scrollVer\");\n\t}\n\n\tfunction getHorizontalScrollbar(gantt){\n\t\treturn gantt.$ui.getView(\"scrollHor\");\n\t}\n\n\tvar DEFAULT_VALUE = \"DEFAULT_VALUE\";\n\n\tfunction tryCall(getView, method, args, fallback){\n\t\tvar view = getView(this);\n\t\tif (!(view && view.isVisible())) {\n\t\t\tif(fallback){\n\t\t\t\treturn fallback();\n\t\t\t}else{\n\t\t\t\treturn DEFAULT_VALUE;\n\t\t\t}\n\t\t} else {\n\t\t\treturn view[method].apply(view, args);\n\t\t}\n\t}\n\n\treturn {\n\n\t\tgetColumnIndex: function(name) {\n\t\t\tvar res = tryCall.call(this, getGrid, \"getColumnIndex\", [name]);\n\t\t\tif(res === DEFAULT_VALUE){\n\t\t\t\treturn 0;\n\t\t\t}else{\n\t\t\t\treturn res;\n\t\t\t}\n\t\t},\n\n\t\tdateFromPos: function(x) {\n\t\t\tvar res = tryCall.call(this, getTimeline, \"dateFromPos\", Array.prototype.slice.call(arguments));\n\t\t\tif(res === DEFAULT_VALUE){\n\t\t\t\treturn this.getState().min_date;\n\t\t\t}else{\n\t\t\t\treturn res;\n\t\t\t}\n\t\t},\n\n\t\tposFromDate: function(date) {\n\t\t\tvar res = tryCall.call(this, getTimeline, \"posFromDate\", [date]);\n\t\t\tif(res === DEFAULT_VALUE){\n\t\t\t\treturn 0;\n\t\t\t}else{\n\t\t\t\treturn res;\n\t\t\t}\n\t\t},\n\n\t\tgetRowTop: function(index) {\n\t\t\tvar self = this;\n\t\t\tvar res = tryCall.call(self, getTimeline, \"getRowTop\", [index],\n\t\t\t\tfunction(){ return tryCall.call(self, getGrid, \"getRowTop\", [index]);}\n\t\t\t\t);\n\n\t\t\tif(res === DEFAULT_VALUE){\n\t\t\t\treturn 0;\n\t\t\t}else{\n\t\t\t\treturn res;\n\t\t\t}\n\t\t},\n\n\t\tgetTaskTop: function(id) {\n\t\t\tvar self = this;\n\t\t\tvar res = tryCall.call(self, getTimeline, \"getItemTop\", [id],\n\t\t\t\tfunction(){ return tryCall.call(self, getGrid, \"getItemTop\", [id]);}\n\t\t\t);\n\n\t\t\tif(res === DEFAULT_VALUE){\n\t\t\t\treturn 0;\n\t\t\t}else{\n\t\t\t\treturn res;\n\t\t\t}\n\t\t},\n\n\n\t\tgetTaskPosition: function(task, start_date, end_date) {\n\t\t\tvar res = tryCall.call(this, getTimeline, \"getItemPosition\", [task, start_date, end_date]);\n\n\t\t\tif(res === DEFAULT_VALUE){\n\t\t\t\tvar top = this.getTaskTop(task.id);\n\t\t\t\tvar height = this.getTaskHeight();\n\n\t\t\t\treturn {\n\t\t\t\t\tleft: 0,\n\t\t\t\t\ttop: top,\n\t\t\t\t\theight: height,\n\t\t\t\t\twidth: 0\n\t\t\t\t};\n\t\t\t}else{\n\t\t\t\treturn res;\n\t\t\t}\n\t\t},\n\n\t\tgetTaskHeight: function() {\n\t\t\tvar self = this;\n\t\t\tvar res = tryCall.call(self, getTimeline, \"getItemHeight\", [],\n\t\t\t\tfunction(){ return tryCall.call(self, getGrid, \"getItemHeight\", []);}\n\t\t\t);\n\n\t\t\tif(res === DEFAULT_VALUE){\n\t\t\t\treturn 0;\n\t\t\t}else{\n\t\t\t\treturn res;\n\t\t\t}\n\t\t},\n\n\n\t\tcolumnIndexByDate: function(date) {\n\t\t\tvar res = tryCall.call(this, getTimeline, \"columnIndexByDate\", [date]);\n\t\t\tif(res === DEFAULT_VALUE){\n\t\t\t\treturn 0;\n\t\t\t}else{\n\t\t\t\treturn res;\n\t\t\t}\n\t\t},\n\n\t\troundTaskDates: function() {\n\t\t\ttryCall.call(this, getTimeline, \"roundTaskDates\", []);\n\t\t},\n\n\t\tgetScale: function() {\n\t\t\tvar res = tryCall.call(this, getTimeline, \"getScale\", []);\n\t\t\tif(res === DEFAULT_VALUE){\n\t\t\t\treturn null;\n\t\t\t}else{\n\t\t\t\treturn res;\n\t\t\t}\n\t\t},\n\n\t\tgetTaskNode: function(id) {\n\t\t\tvar timeline = getTimeline(this);\n\t\t\tif (!timeline || !timeline.isVisible()) {\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\treturn timeline._taskRenderer.rendered[id];\n\t\t\t}\n\t\t},\n\n\n\t\tgetLinkNode: function(id) {\n\t\t\tvar timeline = getTimeline(this);\n\t\t\tif (!timeline.isVisible()) {\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\treturn timeline._linkRenderer.rendered[id];\n\t\t\t}\n\t\t},\n\n\t\tscrollTo: function(left, top){\n\t\t\tvar vertical = getVerticalScrollbar(this);\n\t\t\tvar horizontal = getHorizontalScrollbar(this);\n\n\t\t\tvar oldH = {position: 0},\n\t\t\t\toldV = {position: 0};\n\n\t\t\tif(vertical){\n\t\t\t\toldV = vertical.getScrollState();\n\t\t\t}\n\t\t\tif(horizontal){\n\t\t\t\toldH = horizontal.getScrollState();\n\t\t\t}\n\n\t\t\tif (horizontal && left*1 == left){\n\t\t\t\thorizontal.scroll(left);\n\t\t\t}\n\t\t\tif(vertical && top*1 == top){\n\t\t\t\tvertical.scroll(top);\n\t\t\t}\n\n\t\t\tvar newV = {position: 0},\n\t\t\t\tnewH = {position: 0};\n\t\t\tif(vertical){\n\t\t\t\tnewV = vertical.getScrollState();\n\t\t\t}\n\t\t\tif(horizontal){\n\t\t\t\tnewH = horizontal.getScrollState();\n\t\t\t}\n\n\t\t\tthis.callEvent(\"onGanttScroll\", [oldH.position, oldV.position, newH.position, newV.position]);\n\t\t},\n\n\t\tshowDate: function(date){\n\t\t\tvar date_x = this.posFromDate(date);\n\t\t\tvar scroll_to = Math.max(date_x - this.config.task_scroll_offset, 0);\n\t\t\tthis.scrollTo(scroll_to);\n\t\t},\n\t\tshowTask: function(id) {\n\t\t\tvar pos = this.getTaskPosition(this.getTask(id));\n\n\t\t\tvar left = Math.max(pos.left - this.config.task_scroll_offset, 0);\n\n\t\t\tvar dataHeight = this._scroll_state().y;\n\t\t\tvar top;\n\t\t\tif(!dataHeight){\n\t\t\t\ttop = pos.top;\n\t\t\t}else{\n\t\t\t\ttop = pos.top - (dataHeight - this.config.row_height)/2;\n\t\t\t}\n\n\t\t\tthis.scrollTo(left, top);\n\t\t},\n\t\t_scroll_state: function(){\n\t\t\tvar result = {\n\t\t\t\tx: false,\n\t\t\t\ty: false,\n\t\t\t\tx_pos: 0,\n\t\t\t\ty_pos: 0,\n\t\t\t\tscroll_size: this.config.scroll_size + 1,//1px for inner content\n\t\t\t\tx_inner: 0,\n\t\t\t\ty_inner: 0\n\t\t\t};\n\n\t\t\tvar scrollVer = getVerticalScrollbar(this),\n\t\t\t\tscrollHor = getHorizontalScrollbar(this);\n\t\t\tif(scrollHor){\n\t\t\t\tvar horState = scrollHor.getScrollState();\n\t\t\t\tif(horState.visible){\n\t\t\t\t\tresult.x = horState.size;\n\t\t\t\t\tresult.x_inner = horState.scrollSize;\n\t\t\t\t}\n\t\t\t\tresult.x_pos = horState.position || 0;\n\t\t\t}\n\n\t\t\tif(scrollVer){\n\t\t\t\tvar verState = scrollVer.getScrollState();\n\t\t\t\tif(verState.visible){\n\t\t\t\t\tresult.y = verState.size;\n\n\t\t\t\t\tresult.y_inner = verState.scrollSize;\n\t\t\t\t}\n\t\t\t\tresult.y_pos = verState.position || 0;\n\t\t\t}\n\n\t\t\treturn result;\n\t\t},\n\t\tgetScrollState: function(){\n\t\t\tvar state = this._scroll_state();\n\t\t\treturn { x:state.x_pos, y:state.y_pos, inner_width:state.x, inner_height:state.y, width: state.x_inner, height: state.y_inner };\n\t\t}\n\n\t};\n\n}\n\nmodule.exports = createLayoutFacade;","module.exports = function(gantt) {\n\n};","var domHelpers = require(\"../../utils/dom_helpers\");\n\nvar initializer = (function() {\n\treturn function (gantt) {\n\t\treturn {\n\n\t\t\tgetVerticalScrollbar: function(){\n\t\t\t\treturn gantt.$ui.getView(\"scrollVer\");\n\t\t\t},\n\t\t\tgetHorizontalScrollbar: function(){\n\t\t\t\treturn gantt.$ui.getView(\"scrollHor\");\n\t\t\t},\n\n\t\t\t_legacyGridResizerClass: function(layout){\n\t\t\t\tvar resizers = layout.getCellsByType(\"resizer\");\n\t\t\t\tfor(var i = 0; i < resizers.length; i++){\n\t\t\t\t\tvar r = resizers[i];\n\t\t\t\t\tvar gridResizer = false;\n\n\t\t\t\t\tvar prev = r.$parent.getPrevSibling(r.$id);\n\t\t\t\t\tif(prev && prev.$config && prev.$config.id === \"grid\"){\n\t\t\t\t\t\tgridResizer= true;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tvar next = r.$parent.getNextSibling(r.$id);\n\t\t\t\t\t\tif(next && next.$config && next.$config.id === \"grid\"){\n\t\t\t\t\t\t\tgridResizer= true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif(gridResizer){\n\t\t\t\t\t\tr.$config.css = (r.$config.css ? r.$config.css + \" \" : \"\") + \"gantt_grid_resize_wrap\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonCreated: function (layout) {\n\t\t\t\tvar first = true;\n\n\t\t\t\tthis._legacyGridResizerClass(layout);\n\n\t\t\t\tlayout.attachEvent(\"onBeforeResize\", function(){\n\t\t\t\t\tvar mainTimeline = gantt.$ui.getView(\"timeline\");\n\t\t\t\t\tif(mainTimeline)\n\t\t\t\t\t\tmainTimeline.$config.hidden = mainTimeline.$parent.$config.hidden = !gantt.config.show_chart;\n\n\t\t\t\t\tvar mainGrid = gantt.$ui.getView(\"grid\");\n\t\t\t\t\tif(!mainGrid)\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\tvar showGrid = gantt.config.show_grid;\n\t\t\t\t\tif(first) {\n\t\t\t\t\t\tvar colsWidth = mainGrid._getColsTotalWidth();\n\t\t\t\t\t\tif(colsWidth !== false){\n\t\t\t\t\t\t\tgantt.config.grid_width = colsWidth;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tshowGrid = showGrid && !!gantt.config.grid_width;\n\t\t\t\t\t\tgantt.config.show_grid = showGrid;\n\t\t\t\t\t}\n\t\t\t\t\tmainGrid.$config.hidden = mainGrid.$parent.$config.hidden = !showGrid;\n\n\t\t\t\t\tif(!mainGrid.$config.hidden){\n\t\t\t\t\t\t/* restrict grid width due to min_width, max_width, min_grid_column_width */\n\t\t\t\t\t\tvar grid_limits = mainGrid._getGridWidthLimits();\n\t\t\t\t\t\tif (grid_limits[0] && gantt.config.grid_width < grid_limits[0])\n\t\t\t\t\t\t\tgantt.config.grid_width = grid_limits[0];\n\t\t\t\t\t\tif (grid_limits[1] && gantt.config.grid_width > grid_limits[1])\n\t\t\t\t\t\t\tgantt.config.grid_width = grid_limits[1];\n\t\t\t\t\t\tif(mainTimeline && gantt.config.show_chart){\n\n\t\t\t\t\t\t\tmainGrid.$config.width = gantt.config.grid_width - 1;\n\t\t\t\t\t\t\tif(!first){\n\n\t\t\t\t\t\t\t\tif(mainTimeline && !domHelpers.isChildOf(mainTimeline.$task, layout.$view)){\n\t\t\t\t\t\t\t\t\t// timeline is being displayed after being not visible, reset grid with from full screen\n\t\t\t\t\t\t\t\t\tif(!mainGrid.$config.original_grid_width){\n\t\t\t\t\t\t\t\t\t\tvar skinSettings = gantt.skins[gantt.skin];\n\t\t\t\t\t\t\t\t\t\tif(skinSettings && skinSettings.config && skinSettings.config.grid_width){\n\t\t\t\t\t\t\t\t\t\t\tmainGrid.$config.original_grid_width =  skinSettings.config.grid_width;\n\t\t\t\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\t\t\t\tmainGrid.$config.original_grid_width = 0;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tgantt.config.grid_width = mainGrid.$config.original_grid_width;\n\t\t\t\t\t\t\t\t\tmainGrid.$parent.$config.width = gantt.config.grid_width;\n\t\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\t\tmainGrid.$parent._setContentSize(mainGrid.$config.width, mainGrid.$config.height);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\tmainGrid.$parent.$config.width = gantt.config.grid_width;\n\t\t\t\t\t\t\t\tif(mainGrid.$parent.$config.group){\n\t\t\t\t\t\t\t\t\tgantt.$layout._syncCellSizes(mainGrid.$parent.$config.group, mainGrid.$parent.$config.width);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tif( mainTimeline && domHelpers.isChildOf(mainTimeline.$task, layout.$view)){\n\t\t\t\t\t\t\t\t// hiding timeline, remember grid with to restore it when timeline is displayed again\n\t\t\t\t\t\t\t\tmainGrid.$config.original_grid_width = gantt.config.grid_width;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(!first){\n\t\t\t\t\t\t\t\tmainGrid.$parent.$config.width = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tfirst = false;\n\n\t\t\t\t});\n\n\t\t\t\tgantt._getVerticalScrollbar = this.getVerticalScrollbar;\n\t\t\t\tgantt._getHorizontalScrollbar = this.getHorizontalScrollbar;\n\n\t\t\t\tvar vertical = this.getVerticalScrollbar();\n\t\t\t\tvar horizontal = this.getHorizontalScrollbar();\n\t\t\t\tif(vertical){\n\t\t\t\t\tvertical.attachEvent(\"onScroll\", function(oldPos, newPos, dir){\n\t\t\t\t\t\tvar scrollState = gantt.getScrollState();\n\t\t\t\t\t\tgantt.callEvent(\"onGanttScroll\", [scrollState.x, oldPos, scrollState.x, newPos]);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tif(horizontal){\n\t\t\t\t\thorizontal.attachEvent(\"onScroll\", function(oldPos, newPos, dir){\n\t\t\t\t\t\tvar scrollState = gantt.getScrollState();\n\t\t\t\t\t\tgantt.callEvent(\"onGanttScroll\", [oldPos, scrollState.y, newPos, scrollState.y]);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tlayout.attachEvent(\"onResize\", function(){\n\t\t\t\t\tif(vertical && !gantt.$scroll_ver){\n\t\t\t\t\t\tgantt.$scroll_ver = vertical.$scroll_ver;\n\t\t\t\t\t}\n\n\t\t\t\t\tif(horizontal && !gantt.$scroll_hor){\n\t\t\t\t\t\tgantt.$scroll_hor = horizontal.$scroll_hor;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t},\n\n\t\t\t_findGridResizer: function(layout, grid){\n\t\t\t\tvar resizers = layout.getCellsByType(\"resizer\");\n\n\t\t\t\tvar gridFirst = true;\n\t\t\t\tvar gridResizer;\n\t\t\t\tfor(var i = 0; i < resizers.length; i++){\n\t\t\t\t\tvar res = resizers[i];\n\t\t\t\t\tres._getSiblings();\n\t\t\t\t\tvar prev = res._behind;\n\t\t\t\t\tvar next = res._front;\n\t\t\t\t\tif(prev && prev.$content === grid || (prev.isChild && prev.isChild(grid))){\n\t\t\t\t\t\tgridResizer = res;\n\t\t\t\t\t\tgridFirst = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}else if(next && next.$content === grid || (next.isChild && next.isChild(grid))){\n\t\t\t\t\t\tgridResizer = res;\n\t\t\t\t\t\tgridFirst = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\tresizer: gridResizer,\n\t\t\t\t\tgridFirst: gridFirst\n\t\t\t\t};\n\t\t\t},\n\n\t\t\tonInitialized: function (layout) {\n\t\t\t\tvar grid = gantt.$ui.getView(\"grid\");\n\n\t\t\t\tvar resizeInfo = this._findGridResizer(layout, grid);\n\n\t\t\t\t// expose grid resize events\n\t\t\t\tif(resizeInfo.resizer){\n\t\t\t\t\tvar gridFirst = resizeInfo.gridFirst,\n\t\t\t\t\t\tnext = resizeInfo.resizer;\n\t\t\t\t\tvar initialWidth;\n\t\t\t\t\tnext.attachEvent(\"onResizeStart\", function(prevCellWidth, nextCellWidth){\n\n\t\t\t\t\t\tvar grid = gantt.$ui.getView(\"grid\");\n\t\t\t\t\t\tvar viewCell = grid ? grid.$parent : null;\n\t\t\t\t\t\tif(viewCell){\n\t\t\t\t\t\t\tvar limits = grid._getGridWidthLimits();\n\n\t\t\t\t\t\t\t// min grid width is defined by min widths of its columns, unless grid has horizontal scroll\n\t\t\t\t\t\t\tif(!grid.$config.scrollable)\n\t\t\t\t\t\t\t\tviewCell.$config.minWidth = limits[0];\n\n\t\t\t\t\t\t\tviewCell.$config.maxWidth = limits[1];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tinitialWidth = gridFirst ? prevCellWidth : nextCellWidth;\n\t\t\t\t\t\treturn gantt.callEvent(\"onGridResizeStart\", [initialWidth]);\n\t\t\t\t\t});\n\t\t\t\t\tnext.attachEvent(\"onResize\", function(newBehindSize, newFrontSize){\n\t\t\t\t\t\tvar newSize = gridFirst ? newBehindSize : newFrontSize;\n\t\t\t\t\t\treturn gantt.callEvent(\"onGridResize\", [initialWidth, newSize]);\n\t\t\t\t\t});\n\t\t\t\t\tnext.attachEvent(\"onResizeEnd\", function(oldBackSize, oldFrontSize, newBackSize, newFrontSize){\n\n\t\t\t\t\t\tvar oldSize = gridFirst ? oldBackSize : oldFrontSize;\n\t\t\t\t\t\tvar newSize = gridFirst ? newBackSize : newFrontSize;\n\t\t\t\t\t\tvar grid = gantt.$ui.getView(\"grid\");\n\t\t\t\t\t\tvar viewCell = grid ? grid.$parent : null;\n\t\t\t\t\t\tif(viewCell){\n\t\t\t\t\t\t\tviewCell.$config.minWidth = undefined;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar res = gantt.callEvent(\"onGridResizeEnd\", [oldSize, newSize]);\n\t\t\t\t\t\tif(res){\n\t\t\t\t\t\t\tgantt.config.grid_width = newSize;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn res;\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t},\n\t\t\tonDestroyed: function (timeline) {\n\n\t\t\t}\n\t\t};\n\t};\n})();\n\nmodule.exports = initializer;","var domHelpers = require(\"../../../utils/dom_helpers\");\n\nvar initLinksDND = function(timeline, gantt) {\n\tvar _link_landing,\n\t\t_link_target_task,\n\t\t_link_target_task_start,\n\t\t_link_source_task,\n\t\t_link_source_task_start;\n\n\n\tfunction getVisibleMilestoneWidth() {\n\t\tvar origWidth = timeline.getItemHeight();//m-s have square shape\n\t\treturn Math.round(Math.sqrt(2 * origWidth * origWidth)) - 2;\n\t}\n\n\tfunction isMilestone(task) {\n\t\treturn gantt.getTaskType(task.type) == gantt.config.types.milestone;\n\t}\n\n\tfunction getDndState(){\n\t\treturn {\n\t\t\tlink_source_id : _link_source_task,\n\t\t\tlink_target_id : _link_target_task,\n\t\t\tlink_from_start : _link_source_task_start,\n\t\t\tlink_to_start : _link_target_task_start,\n\t\t\tlink_landing_area : _link_landing\n\t\t};\n\t}\n\n\tvar services = gantt.$services;\n\n\tvar state = services.getService(\"state\");\n\tvar DnD = services.getService(\"dnd\");\n\n\tstate.registerProvider(\"linksDnD\", getDndState);\n\n\tvar dnd = new DnD(timeline.$task_bars, { sensitivity : 0, updates_per_second : 60 }),\n\t\tstart_marker = \"task_start_date\",\n\t\tend_marker = \"task_end_date\",\n\t\tlink_edge_marker = \"gantt_link_point\",\n\t\tlink_landing_hover_area = \"gantt_link_control\";\n\n\tdnd.attachEvent(\"onBeforeDragStart\", gantt.bind(function(obj,e) {\n\t\tvar target = (e.target||e.srcElement);\n\t\tresetDndState();\n\t\tif(gantt.getState().drag_id)\n\t\t\treturn false;\n\n\t\tif(domHelpers.locateClassName(target, link_edge_marker)){\n\t\t\tif(domHelpers.locateClassName(target, start_marker))\n\t\t\t\t_link_source_task_start = true;\n\n\t\t\tvar sid = gantt.locate(e);\n\t\t\t_link_source_task = sid;\n\n\t\t\tvar t = gantt.getTask(sid);\n\t\t\tif(gantt.isReadonly(t)){\n\t\t\t\tresetDndState();\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tvar shift = 0;\n\n\t\t\tthis._dir_start = getLinePos(t, !!_link_source_task_start, shift, timeline.$getConfig(), true);\n\t\t\treturn true;\n\t\t}else{\n\t\t\treturn false;\n\t\t}\n\n\t}, this));\n\n\tdnd.attachEvent(\"onAfterDragStart\", gantt.bind(function(obj,e) {\n\t\tif(gantt.config.touch) {\n\t\t\tgantt.refreshData();\n\t\t}\n\t\tupdateMarkedHtml(dnd.config.marker);\n\t}, this));\n\n\tfunction getLinePos(task, to_start, shift, cfg, isStart){\n\t\tvar taskPos = getMilestonePosition(task, function(task){ return gantt.getTaskPosition(task);}, cfg);\n\n\t\tvar pos = {x: taskPos.x, y: taskPos.y};\n\t\tif(!to_start){\n\t\t\tpos.x = taskPos.xEnd;\n\t\t}\n\n\t\t//var pos = gantt._get_task_pos(task, !!to_start);\n\t\tpos.y += gantt.config.row_height/2;\n\n\t\tvar offset = isMilestone(task) && isStart ? 2 : 0;\n\n\t\tshift = shift || 0;\n\t\tif(cfg.rtl)\n\t\t\tshift = shift * -1;\n\n\t\tpos.x += (to_start ? -1 : 1)*shift  - offset;\n\t\treturn pos;\n\t}\n\n\tfunction getMilestonePosition(task, getTaskPosition, cfg){\n\t\tvar pos = getTaskPosition(task);\n\n\t\tvar res = {\n\t\t\tx: pos.left,\n\t\t\ty: pos.top,\n\t\t\twidth: pos.width,\n\t\t\theight: pos.height\n\t\t};\n\n\t\tif(cfg.rtl){\n\t\t\tres.xEnd = res.x;\n\t\t\tres.x = res.xEnd + res.width;\n\t\t}else{\n\t\t\tres.xEnd = res.x + res.width;\n\t\t}\n\t\tres.yEnd = res.y + res.height;\n\n\t\tif(gantt.getTaskType(task.type) == gantt.config.types.milestone){\n\t\t\tvar milestoneWidth = getVisibleMilestoneWidth();\n\n\t\t\tres.x += (!cfg.rtl ? -1 : 1)*(milestoneWidth / 2);\n\t\t\tres.xEnd += (!cfg.rtl ? 1 : -1)*(milestoneWidth / 2);\n\n\t\t\t//pos.x -= milestoneWidth / 2;\n\t\t\t//pos.xEnd += milestoneWidth / 2;\n\t\t\tres.width = pos.xEnd - pos.x;\n\t\t}\n\n\n\t\treturn res;\n\t}\n\n\tdnd.attachEvent(\"onDragMove\", gantt.bind(function(obj,e) {\n\t\tvar dd = dnd.config;\n\t\tvar pos = dnd.getPosition(e);\n\t\tadvanceMarker(dd.marker, pos);\n\t\tvar landing = !!domHelpers.locateClassName(e, link_landing_hover_area);\n\n\t\tvar prevTarget = _link_target_task;\n\t\tvar prevLanding = _link_landing;\n\t\tvar prevToStart = _link_target_task_start;\n\n\t\tvar targ = gantt.locate(e),\n\t\t\tto_start = true;\n\t\tif(landing){\n\t\t\t//refreshTask\n\t\t\tto_start = !domHelpers.locateClassName(e, end_marker);\n\t\t\tlanding = !!targ;\n\t\t}\n\n\t\t_link_target_task = targ;\n\t\t_link_landing = landing;\n\t\t_link_target_task_start = to_start;\n\n\t\tif(landing){\n\t\t\tvar t = gantt.getTask(targ);\n\n\t\t\tvar config = timeline.$getConfig();\n\t\t\tvar node = domHelpers.locateClassName(e, link_landing_hover_area);\n\t\t\tvar shift = 0;\n\t\t\tif(node){\n\t\t\t\tshift = Math.floor(node.offsetWidth  / 2);\n\t\t\t}\n\n\t\t\tthis._dir_end = getLinePos(t, !!_link_target_task_start,shift, config);\n\t\t}else{\n\t\t\tthis._dir_end = domHelpers.getRelativeEventPosition(e, timeline.$task_data);\n\t\t}\n\n\t\tvar targetChanged = !(prevLanding == landing && prevTarget == targ && prevToStart == to_start);\n\t\tif(targetChanged){\n\t\t\tif(prevTarget)\n\t\t\t\tgantt.refreshTask(prevTarget, false);\n\t\t\tif(targ)\n\t\t\t\tgantt.refreshTask(targ, false);\n\t\t}\n\n\t\tif(targetChanged){\n\t\t\tupdateMarkedHtml(dd.marker);\n\t\t}\n\n\t\tshowDirectingLine(this._dir_start.x, this._dir_start.y, this._dir_end.x, this._dir_end.y);\n\n\t\treturn true;\n\t}, this));\n\n\n\tdnd.attachEvent(\"onDragEnd\", gantt.bind(function() {\n\t\tvar drag = getDndState();\n\n\t\tif(drag.link_source_id && drag.link_target_id && drag.link_source_id != drag.link_target_id){\n\t\t\tvar type = gantt._get_link_type(drag.link_from_start, drag.link_to_start);\n\n\t\t\tvar link = {source : drag.link_source_id, target: drag.link_target_id, type:type};\n\t\t\tif(link.type && gantt.isLinkAllowed(link))\n\t\t\t\tgantt.addLink(link);\n\t\t}\n\n\t\tresetDndState();\n\n\t\tif(gantt.config.touch) {\n\t\t\tgantt.refreshData();\n\t\t}\n\t\telse {\n\t\t\tif (drag.link_source_id)\n\t\t\t\tgantt.refreshTask(drag.link_source_id, false);\n\t\t\tif (drag.link_target_id)\n\t\t\t\tgantt.refreshTask(drag.link_target_id, false);\n\t\t}\n\t\tremoveDirectionLine();\n\t}, this));\n\n\tfunction updateMarkedHtml(marker){\n\t\tvar link = getDndState();\n\n\t\tvar css = [\"gantt_link_tooltip\"];\n\t\tif(link.link_source_id && link.link_target_id){\n\t\t\tif(gantt.isLinkAllowed(link.link_source_id, link.link_target_id, link.link_from_start, link.link_to_start)){\n\t\t\t\tcss.push(\"gantt_allowed_link\");\n\t\t\t}else{\n\t\t\t\tcss.push(\"gantt_invalid_link\");\n\t\t\t}\n\t\t}\n\n\t\tvar className = gantt.templates.drag_link_class(link.link_source_id, link.link_from_start, link.link_target_id, link.link_to_start);\n\t\tif(className)\n\t\t\tcss.push(className);\n\n\t\tvar html = \"<div class='\"+className+ \"'>\" +\n\t\t\tgantt.templates.drag_link(link.link_source_id, link.link_from_start, link.link_target_id, link.link_to_start) +\n\t\t\t\"</div>\";\n\t\tmarker.innerHTML = html;\n\t}\n\n\tfunction advanceMarker(marker, pos){\n\t\tmarker.style.left = pos.x + 5 + \"px\";\n\t\tmarker.style.top = pos.y + 5 + \"px\";\n\t}\n\n\tfunction resetDndState(){\n\t\t_link_source_task =\n\t\t\t_link_source_task_start =\n\t\t\t\t_link_target_task = null;\n\t\t_link_target_task_start = true;\n\t}\n\tfunction showDirectingLine(s_x, s_y, e_x, e_y){\n\t\tvar div = getDirectionLine();\n\n\t\tvar link = getDndState();\n\n\t\tvar css = [\"gantt_link_direction\"];\n\t\tif(gantt.templates.link_direction_class){\n\t\t\tcss.push(gantt.templates.link_direction_class(link.link_source_id, link.link_from_start, link.link_target_id, link.link_to_start));\n\t\t}\n\n\t\tvar dist =Math.sqrt( (Math.pow(e_x - s_x, 2)) + (Math.pow(e_y - s_y, 2)) );\n\t\tdist = Math.max(0, dist - 3);\n\t\tif(!dist)\n\t\t\treturn;\n\n\t\tdiv.className = css.join(\" \");\n\t\tvar tan = (e_y - s_y)/(e_x - s_x),\n\t\t\tangle = Math.atan(tan);\n\n\t\tif(coordinateCircleQuarter(s_x, e_x, s_y, e_y) == 2){\n\t\t\tangle += Math.PI;\n\t\t}else if(coordinateCircleQuarter(s_x, e_x, s_y, e_y) == 3){\n\t\t\tangle -= Math.PI;\n\t\t}\n\n\n\n\t\tvar sin = Math.sin(angle),\n\t\t\tcos = Math.cos(angle),\n\t\t\ttop = Math.round(s_y),\n\t\t\tleft = Math.round(s_x);\n\n\n\t\tvar style = [\n\t\t\t\"-webkit-transform: rotate(\"+angle+\"rad)\",\n\t\t\t\"-moz-transform: rotate(\"+angle+\"rad)\",\n\t\t\t\"-ms-transform: rotate(\"+angle+\"rad)\",\n\t\t\t\"-o-transform: rotate(\"+angle+\"rad)\",\n\t\t\t\"transform: rotate(\"+angle+\"rad)\",\n\t\t\t\"width:\" + Math.round(dist) + \"px\"\n\t\t];\n\n\t\tif(window.navigator.userAgent.indexOf(\"MSIE 8.0\") != -1){\n\t\t\t//ms-filter breaks styles in ie9, so add it only for 8th\n\t\t\tstyle.push(\"-ms-filter: \\\"\" + ieTransform(sin, cos) + \"\\\"\");\n\n\t\t\tvar shiftLeft = Math.abs(Math.round(s_x - e_x)),\n\t\t\t\tshiftTop = Math.abs(Math.round(e_y - s_y));\n\t\t\t//fix rotation axis\n\t\t\tswitch(coordinateCircleQuarter(s_x, e_x, s_y, e_y)){\n\t\t\t\tcase 1:\n\t\t\t\t\ttop -= shiftTop;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\tleft -= shiftLeft;\n\t\t\t\t\ttop -= shiftTop;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3:\n\t\t\t\t\tleft -= shiftLeft;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t}\n\n\t\tstyle.push(\"top:\" +  top + \"px\");\n\t\tstyle.push(\"left:\" +  left + \"px\");\n\n\t\tdiv.style.cssText = style.join(\";\");\n\t}\n\n\tfunction ieTransform(sin, cos){\n\t\treturn \"progid:DXImageTransform.Microsoft.Matrix(\"+\n\t\t\t\"M11 = \"+cos+\",\"+\n\t\t\t\"M12 = -\"+sin+\",\"+\n\t\t\t\"M21 = \"+sin+\",\"+\n\t\t\t\"M22 = \"+cos+\",\"+\n\t\t\t\"SizingMethod = 'auto expand'\"+\n\t\t\")\";\n\t}\n\tfunction coordinateCircleQuarter(sX, eX, sY, eY){\n\t\tif(eX >= sX){\n\t\t\tif(eY <= sY){\n\t\t\t\treturn 1;\n\t\t\t}else{\n\t\t\t\treturn 4;\n\t\t\t}\n\t\t}else{\n\t\t\tif(eY <= sY){\n\t\t\t\treturn 2;\n\t\t\t}else{\n\t\t\t\treturn 3;\n\t\t\t}\n\t\t}\n\n\t}\n\tfunction getDirectionLine(){\n\t\tif(!dnd._direction){\n\t\t\tdnd._direction = document.createElement(\"div\");\n\t\t\ttimeline.$task_links.appendChild(dnd._direction);\n\t\t}\n\t\treturn dnd._direction;\n\t}\n\tfunction removeDirectionLine(){\n\t\tif(dnd._direction){\n\t\t\tif (dnd._direction.parentNode)\t//the event line can be detached because of data refresh\n\t\t\t\tdnd._direction.parentNode.removeChild(dnd._direction);\n\n\t\t\tdnd._direction = null;\n\t\t}\n\t}\n};\n\nmodule.exports = {\n\tcreateLinkDND: function(){\n\t\treturn {\n\t\t\tinit: initLinksDND\n\t\t};\n\t}\n};","var domHelpers = require(\"../../../utils/dom_helpers\"),\n\tutils = require(\"../../../utils/utils\");\nvar timeout = require(\"../../../utils/timeout\");\n\nfunction createTaskDND(timeline, gantt){\n\tvar services = gantt.$services;\n\treturn {\n\t\tdrag: null,\n\t\tdragMultiple: {},\n\t\t_events: {\n\t\t\tbefore_start: {},\n\t\t\tbefore_finish: {},\n\t\t\tafter_finish: {}\n\t\t},\n\t\t_handlers: {},\n\t\tinit: function () {\n\t\t\tthis._domEvents = gantt._createDomEventScope();\n\t\t\tthis.clear_drag_state();\n\t\t\tvar drag = gantt.config.drag_mode;\n\t\t\tthis.set_actions();\n\n\t\t\tvar stateService = services.getService(\"state\");\n\t\t\tstateService.registerProvider(\"tasksDnd\", utils.bind(function(){\n\t\t\t\treturn {\n\t\t\t\t\tdrag_id : this.drag ? this.drag.id : undefined,\n\t\t\t\t\tdrag_mode : this.drag ? this.drag.mode : undefined,\n\t\t\t\t\tdrag_from_start : this.drag ? this.drag.left : undefined\n\t\t\t\t};\n\t\t\t}, this));\n\n\t\t\tvar evs = {\n\t\t\t\t\"before_start\": \"onBeforeTaskDrag\",\n\t\t\t\t\"before_finish\": \"onBeforeTaskChanged\",\n\t\t\t\t\"after_finish\": \"onAfterTaskDrag\"\n\t\t\t};\n\t\t\t//for now, all drag operations will trigger the same events\n\t\t\tfor (var stage in this._events) {\n\t\t\t\tfor (var mode in drag) {\n\t\t\t\t\tthis._events[stage][mode] = evs[stage];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._handlers[drag.move] = this._move;\n\t\t\tthis._handlers[drag.resize] = this._resize;\n\t\t\tthis._handlers[drag.progress] = this._resize_progress;\n\t\t},\n\t\tset_actions: function () {\n\t\t\tvar data = timeline.$task_data;\n\t\t\tthis._domEvents.attach(data, \"mousemove\", gantt.bind(function (e) {\n\t\t\t\tthis.on_mouse_move(e || event);\n\t\t\t}, this));\n\t\t\tthis._domEvents.attach(data, \"mousedown\", gantt.bind(function (e) {\n\t\t\t\tthis.on_mouse_down(e || event);\n\t\t\t}, this));\n\t\t\tthis._domEvents.attach(data, \"mouseup\", gantt.bind(function (e) {\n\t\t\t\tthis.on_mouse_up(e || event);\n\t\t\t}, this));\n\t\t},\n\n\t\tclear_drag_state: function () {\n\t\t\tthis.drag = {\n\t\t\t\tid: null,\n\t\t\t\tmode: null,\n\t\t\t\tpos: null,\n\t\t\t\tstart_x: null,\n\t\t\t\tstart_y: null,\n\t\t\t\tobj: null,\n\t\t\t\tleft: null\n\t\t\t};\n\t\t\tthis.dragMultiple = {};\n\t\t},\n\t\t_resize: function (ev, shift, drag) {\n\t\t\tvar cfg = timeline.$getConfig();\n\t\t\tvar coords_x = this._drag_task_coords(ev, drag);\n\t\t\tif (drag.left) {\n\t\t\t\tev.start_date = gantt.dateFromPos(coords_x.start + shift);\n\t\t\t\tif (!ev.start_date) {\n\t\t\t\t\tev.start_date = new Date(gantt.getState().min_date);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tev.end_date = gantt.dateFromPos(coords_x.end + shift);\n\t\t\t\tif (!ev.end_date) {\n\t\t\t\t\tev.end_date = new Date(gantt.getState().max_date);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (ev.end_date - ev.start_date < cfg.min_duration) {\n\t\t\t\tif (drag.left)\n\t\t\t\t\tev.start_date = gantt.calculateEndDate({start_date: ev.end_date, duration: -1, task: ev});\n\t\t\t\telse\n\t\t\t\t\tev.end_date = gantt.calculateEndDate({start_date: ev.start_date, duration: 1, task: ev});\n\t\t\t}\n\t\t\tgantt._init_task_timing(ev);\n\t\t},\n\t\t_resize_progress: function (ev, shift, drag) {\n\t\t\tvar coords_x = this._drag_task_coords(ev, drag);\n\n\t\t\tvar config = timeline.$getConfig();\n\t\t\tvar diffValue = !config.rtl ? (drag.pos.x - coords_x.start) : (coords_x.start - drag.pos.x);\n\n\t\t\tvar diff = Math.max(0, diffValue);\n\t\t\tev.progress = Math.min(1, diff / Math.abs(coords_x.end - coords_x.start));\n\t\t},\n\n\t\t_find_max_shift: function(dragItems, shift){\n\t\t\tvar correctShift;\n\t\t\tfor(var i in dragItems){\n\t\t\t\tvar drag = dragItems[i];\n\t\t\t\tvar ev = gantt.getTask(drag.id);\n\n\t\t\t\tvar coords_x = this._drag_task_coords(ev, drag);\n\t\t\t\tvar minX = gantt.posFromDate( new Date(gantt.getState().min_date)),\n\t\t\t\t\tmaxX = gantt.posFromDate( new Date(gantt.getState().max_date));\n\n\t\t\t\tif(coords_x.end + shift > maxX){\n\t\t\t\t\tvar maxShift = maxX - coords_x.end;\n\t\t\t\t\tif(maxShift < correctShift || correctShift === undefined){\n\t\t\t\t\t\tcorrectShift = maxShift;\n\t\t\t\t\t}\n\t\t\t\t}else if(coords_x.start + shift < minX){\n\t\t\t\t\tvar minShift = minX - coords_x.start;\n\t\t\t\t\tif(minShift < correctShift || correctShift === undefined){\n\t\t\t\t\t\tcorrectShift = minShift;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn correctShift;\n\t\t},\n\t\t_move: function (ev, shift, drag) {\n\t\t\tvar coords_x = this._drag_task_coords(ev, drag);\n\t\t\tvar new_start = gantt.dateFromPos(coords_x.start + shift),\n\t\t\t\tnew_end = gantt.dateFromPos(coords_x.end + shift);\n\t\t\tif (!new_start) {\n\t\t\t\tev.start_date = new Date(gantt.getState().min_date);\n\t\t\t\tev.end_date = gantt.dateFromPos(gantt.posFromDate(ev.start_date) + (coords_x.end - coords_x.start));\n\t\t\t} else if (!new_end) {\n\t\t\t\tev.end_date = new Date(gantt.getState().max_date);\n\t\t\t\tev.start_date = gantt.dateFromPos(gantt.posFromDate(ev.end_date) - (coords_x.end - coords_x.start));\n\t\t\t} else {\n\t\t\t\tev.start_date = new_start;\n\t\t\t\tev.end_date = new_end;\n\t\t\t}\n\t\t},\n\t\t_drag_task_coords: function (t, drag) {\n\t\t\tvar start = drag.obj_s_x = drag.obj_s_x || gantt.posFromDate(t.start_date);\n\t\t\tvar end = drag.obj_e_x = drag.obj_e_x || gantt.posFromDate(t.end_date);\n\t\t\treturn {\n\t\t\t\tstart: start,\n\t\t\t\tend: end\n\t\t\t};\n\t\t},\n\t\t_mouse_position_change: function (oldPos, newPos) {\n\t\t\tvar dx = oldPos.x - newPos.x,\n\t\t\t\tdy = oldPos.y - newPos.y;\n\t\t\treturn Math.sqrt(dx * dx + dy * dy);\n\t\t},\n\t\t_is_number: function (n) {\n\t\t\treturn !isNaN(parseFloat(n)) && isFinite(n);\n\t\t},\n\n\t\ton_mouse_move: function (e) {\n\t\t\tif (this.drag.start_drag) {\n\t\t\t\tvar pos = domHelpers.getRelativeEventPosition(e, gantt.$task_data);\n\n\t\t\t\tvar sX = this.drag.start_drag.start_x,\n\t\t\t\t\tsY = this.drag.start_drag.start_y;\n\n\t\t\t\tif ((Date.now() - this.drag.timestamp > 50) ||\n\t\t\t\t\t(this._is_number(sX) && this._is_number(sY) && this._mouse_position_change({\n\t\t\t\t\t\tx: sX,\n\t\t\t\t\t\ty: sY\n\t\t\t\t\t}, pos) > 20)) {\n\t\t\t\t\tthis._start_dnd(e);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar drag = this.drag;\n\n\t\t\tif (drag.mode) {\n\t\t\t\tif (!timeout(this, 40))//limit update frequency\n\t\t\t\t\treturn;\n\n\t\t\t\tthis._update_on_move(e);\n\n\t\t\t}\n\t\t},\n\n\t\t_update_item_on_move: function(shift, id, mode, drag, e){\n\t\t\tvar ev = gantt.getTask(id);\n\t\t\tvar original = gantt.mixin({}, ev);\n\t\t\tvar copy = gantt.mixin({}, ev);\n\t\t\tthis._handlers[mode].apply(this, [copy, shift, drag]);\n\t\t\tgantt.mixin(ev, copy, true);\n\t\t\t//gantt._update_parents(drag.id, true);\n\t\t\tgantt.callEvent(\"onTaskDrag\", [ev.id, mode, copy, original, e]);\n\t\t\tgantt.mixin(ev, copy, true);\n\t\t\tgantt.refreshTask(id);\n\t\t},\n\n\t\t_update_on_move: function (e) {\n\t\t\tvar drag = this.drag;\n\t\t\tvar config = timeline.$getConfig();\n\t\t\tif (drag.mode) {\n\t\t\t\tvar pos = domHelpers.getRelativeEventPosition(e, timeline.$task_data);\n\t\t\t\tif (drag.pos && drag.pos.x == pos.x)\n\t\t\t\t\treturn;\n\n\t\t\t\tdrag.pos = pos;\n\n\t\t\t\tvar curr_date = gantt.dateFromPos(pos.x);\n\t\t\t\tif (!curr_date || isNaN(curr_date.getTime()))\n\t\t\t\t\treturn;\n\n\n\t\t\t\tvar shift = pos.x - drag.start_x;\n\t\t\t\tvar ev = gantt.getTask(drag.id);\n\n\t\t\t\tif (this._handlers[drag.mode]) {\n\n\t\t\t\t\tif(gantt.isSummaryTask(ev) && gantt.config.drag_project && drag.mode == config.drag_mode.move){\n\n\t\t\t\t\t\tvar initialDrag = {};\n\t\t\t\t\t\tinitialDrag[drag.id] = utils.copy(drag);\n\t\t\t\t\t\tvar maxShift = this._find_max_shift(utils.mixin(initialDrag, this.dragMultiple), shift);\n\t\t\t\t\t\tif(maxShift !== undefined){\n\t\t\t\t\t\t\tshift = maxShift;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._update_item_on_move(shift, drag.id, drag.mode, drag, e);\n\t\t\t\t\t\tfor(var i in this.dragMultiple){\n\t\t\t\t\t\t\tvar childDrag =  this.dragMultiple[i];\n\t\t\t\t\t\t\tthis._update_item_on_move(shift, childDrag.id, childDrag.mode, childDrag, e);\n\t\t\t\t\t\t}\n\t\t\t\t\t}else{\n\t\t\t\t\t\tthis._update_item_on_move(shift, drag.id, drag.mode, drag, e);\n\t\t\t\t\t}\n\t\t\t\t\tgantt._update_parents(drag.id);\n\t\t\t\t}\n\n\t\t\t}\n\t\t},\n\n\t\ton_mouse_down: function (e, src) {\n\t\t\t// on Mac we do not get onmouseup event when clicking right mouse button leaving us in dnd state\n\t\t\t// let's ignore right mouse button then\n\t\t\tif (e.button == 2 && e.button !== undefined)\n\t\t\t\treturn;\n\n\t\t\tvar config = timeline.$getConfig();\n\t\t\tvar id = gantt.locate(e);\n\t\t\tvar task = null;\n\t\t\tif (gantt.isTaskExists(id)) {\n\t\t\t\ttask = gantt.getTask(id);\n\t\t\t}\n\n\t\t\tif (gantt.isReadonly(task) || this.drag.mode) return;\n\n\t\t\tthis.clear_drag_state();\n\n\t\t\tsrc = src || (e.target || e.srcElement);\n\n\t\t\tvar className = domHelpers.getClassName(src);\n\t\t\tvar drag = this._get_drag_mode(className, src);\n\n\t\t\tif (!className || !drag) {\n\t\t\t\tif (src.parentNode)\n\t\t\t\t\treturn this.on_mouse_down(e, src.parentNode);\n\t\t\t\telse\n\t\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!drag) {\n\t\t\t\tif (gantt.checkEvent(\"onMouseDown\") && gantt.callEvent(\"onMouseDown\", [className.split(\" \")[0]])) {\n\t\t\t\t\tif (src.parentNode)\n\t\t\t\t\t\treturn this.on_mouse_down(e, src.parentNode);\n\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (drag.mode && drag.mode != config.drag_mode.ignore && config[\"drag_\" + drag.mode]) {\n\t\t\t\t\tid = gantt.locate(src);\n\t\t\t\t\ttask = gantt.copy(gantt.getTask(id) || {});\n\n\t\t\t\t\tif (gantt.isReadonly(task)) {\n\t\t\t\t\t\tthis.clear_drag_state();\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ((gantt.isSummaryTask(task) && !config.drag_project) && drag.mode != config.drag_mode.progress) {//only progress drag is allowed for tasks with flexible duration\n\t\t\t\t\t\tthis.clear_drag_state();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tdrag.id = id;\n\t\t\t\t\tvar pos = domHelpers.getRelativeEventPosition(e, gantt.$task_data);\n\n\t\t\t\t\tdrag.start_x = pos.x;\n\t\t\t\t\tdrag.start_y = pos.y;\n\t\t\t\t\tdrag.obj = task;\n\t\t\t\t\tthis.drag.start_drag = drag;\n\t\t\t\t\tthis.drag.timestamp = Date.now();\n\n\t\t\t\t} else\n\t\t\t\t\tthis.clear_drag_state();\n\t\t\t}\n\t\t},\n\t\t_fix_dnd_scale_time: function (task, drag) {\n\t\t\tvar config = timeline.$getConfig();\n\t\t\tvar unit = gantt.getScale().unit,\n\t\t\t\tstep = gantt.getScale().step;\n\t\t\tif (!config.round_dnd_dates) {\n\t\t\t\tunit = 'minute';\n\t\t\t\tstep = config.time_step;\n\t\t\t}\n\n\t\t\tfunction fixStart(task) {\n\t\t\t\tif (!gantt.config.correct_work_time)\n\t\t\t\t\treturn;\n\t\t\t\tvar config = timeline.$getConfig();\n\t\t\t\tif (!gantt.isWorkTime(task.start_date, undefined, task))\n\t\t\t\t\ttask.start_date = gantt.calculateEndDate({\n\t\t\t\t\t\tstart_date: task.start_date,\n\t\t\t\t\t\tduration: -1,\n\t\t\t\t\t\tunit: config.duration_unit,\n\t\t\t\t\t\ttask: task\n\t\t\t\t\t});\n\t\t\t}\n\n\t\t\tfunction fixEnd(task) {\n\t\t\t\tif (!gantt.config.correct_work_time)\n\t\t\t\t\treturn;\n\t\t\t\tvar config = timeline.$getConfig();\n\t\t\t\tif (!gantt.isWorkTime(new Date(task.end_date - 1), undefined, task))\n\t\t\t\t\ttask.end_date = gantt.calculateEndDate({\n\t\t\t\t\t\tstart_date: task.end_date,\n\t\t\t\t\t\tduration: 1,\n\t\t\t\t\t\tunit: config.duration_unit,\n\t\t\t\t\t\ttask: task\n\t\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (drag.mode == config.drag_mode.resize) {\n\t\t\t\tif (drag.left) {\n\t\t\t\t\ttask.start_date = gantt.roundDate({date: task.start_date, unit: unit, step: step});\n\t\t\t\t\tfixStart(task);\n\t\t\t\t} else {\n\t\t\t\t\ttask.end_date = gantt.roundDate({date: task.end_date, unit: unit, step: step});\n\t\t\t\t\tfixEnd(task);\n\t\t\t\t}\n\t\t\t} else if (drag.mode == config.drag_mode.move) {\n\t\t\t\ttask.start_date = gantt.roundDate({date: task.start_date, unit: unit, step: step});\n\t\t\t\tfixStart(task);\n\t\t\t\ttask.end_date = gantt.calculateEndDate(task);\t\t\t\t\n\t\t\t}\n\t\t},\n\t\t_fix_working_times: function (task, drag) {\n\t\t\tvar config = timeline.$getConfig();\n\t\t\tvar drag = drag || {mode: config.drag_mode.move};\n\t\t\t\n\t\t\tif (drag.mode == config.drag_mode.resize) {\n\t\t\t\tif (drag.left) {\n\t\t\t\t\ttask.start_date = gantt.getClosestWorkTime({date: task.start_date, dir: 'future', task: task});\n\t\t\t\t} else {\n\t\t\t\t\ttask.end_date = gantt.getClosestWorkTime({date: task.end_date, dir: 'past', task: task});\n\t\t\t\t}\n\t\t\t} else if (drag.mode == config.drag_mode.move) {\n\t\t\t\tgantt.correctTaskWorkTime(task);\n\t\t\t}\n\t\t},\n\n\t\t_finalize_mouse_up: function(taskId, config, drag, e){\n\t\t\tvar ev = gantt.getTask(taskId);\n\n\t\t\tif (config.work_time && config.correct_work_time) {\n\t\t\t\tthis._fix_working_times(ev, drag);\n\t\t\t}\n\n\t\t\tthis._fix_dnd_scale_time(ev, drag);\n\n\t\t\tif (!this._fireEvent(\"before_finish\", drag.mode, [taskId, drag.mode, gantt.copy(drag.obj), e])) {\n\t\t\t\t//drag.obj._dhx_changed = false;\n\t\t\t\tthis.clear_drag_state();\n\t\t\t\tif(taskId == drag.id){\n\t\t\t\t\tdrag.obj._dhx_changed = false;\n\t\t\t\t\tgantt.mixin(ev, drag.obj, true);\n\t\t\t\t}\n\n\n\t\t\t\tgantt.refreshTask(ev.id);\n\t\t\t} else {\n\t\t\t\tvar drag_id = taskId;\n\n\t\t\t\tgantt._init_task_timing(ev);\n\n\t\t\t\tthis.clear_drag_state();\n\t\t\t\tgantt.updateTask(ev.id);\n\t\t\t\tthis._fireEvent(\"after_finish\", drag.mode, [drag_id, drag.mode, e]);\n\t\t\t}\n\n\t\t},\n\n\t\ton_mouse_up: function (e) {\n\n\t\t\tvar drag = this.drag;\n\t\t\tif (drag.mode && drag.id) {\n\t\t\t\tvar config = timeline.$getConfig();\n\t\t\t\t//drop\n\t\t\t\tvar ev = gantt.getTask(drag.id);\n\n\t\t\t\tvar dragMultiple = this.dragMultiple;\n\t\t\t\tthis._finalize_mouse_up(drag.id, config, drag, e);\n\t\t\t\tif(gantt.isSummaryTask(ev) && config.drag_project && drag.mode == config.drag_mode.move){\n\t\t\t\t\tfor(var i in dragMultiple){\n\t\t\t\t\t\tthis._finalize_mouse_up(dragMultiple[i].id, config, dragMultiple[i], e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.clear_drag_state();\n\t\t},\n\t\t_get_drag_mode: function (className, el) {\n\t\t\tvar config = timeline.$getConfig();\n\t\t\tvar modes = config.drag_mode;\n\t\t\tvar classes = (className || \"\").split(\" \");\n\t\t\tvar classname = classes[0];\n\t\t\tvar drag = {mode: null, left: null};\n\t\t\tswitch (classname) {\n\t\t\t\tcase \"gantt_task_line\":\n\t\t\t\tcase \"gantt_task_content\":\n\t\t\t\t\tdrag.mode = modes.move;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"gantt_task_drag\":\n\t\t\t\t\tdrag.mode = modes.resize;\n\n\t\t\t\t\tvar dragProperty = el.getAttribute(\"data-bind-property\");\n\n\t\t\t\t\tif (dragProperty == \"start_date\") {\n\t\t\t\t\t\tdrag.left = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdrag.left = false;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"gantt_task_progress_drag\":\n\t\t\t\t\tdrag.mode = modes.progress;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"gantt_link_control\":\n\t\t\t\tcase \"gantt_link_point\":\n\t\t\t\t\tdrag.mode = modes.ignore;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tdrag = null;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn drag;\n\n\t\t},\n\n\t\t_start_dnd: function (e) {\n\t\t\tvar drag = this.drag = this.drag.start_drag;\n\t\t\tdelete drag.start_drag;\n\n\t\t\tvar cfg = timeline.$getConfig();\n\t\t\tvar id = drag.id;\n\t\t\tif (!cfg[\"drag_\" + drag.mode] || !gantt.callEvent(\"onBeforeDrag\", [id, drag.mode, e]) || !this._fireEvent(\"before_start\", drag.mode, [id, drag.mode, e])) {\n\t\t\t\tthis.clear_drag_state();\n\t\t\t} else {\n\t\t\t\tdelete drag.start_drag;\n\n\t\t\t\tvar task = gantt.getTask(id);\n\t\t\t\tif(gantt.isSummaryTask(task) && gantt.config.drag_project && drag.mode == cfg.drag_mode.move){\n\t\t\t\t\tgantt.eachTask(function(child){\n\t\t\t\t\t\tthis.dragMultiple[child.id] = gantt.mixin({\n\t\t\t\t\t\t\tid: child.id,\n\t\t\t\t\t\t\tobj: child\n\t\t\t\t\t\t}, this.drag);\n\t\t\t\t\t}, task.id, this);\n\t\t\t\t}\n\n\t\t\t\tgantt.callEvent(\"onTaskDragStart\", []);\n\t\t\t}\n\n\t\t},\n\t\t_fireEvent: function (stage, mode, params) {\n\t\t\tgantt.assert(this._events[stage], \"Invalid stage:{\" + stage + \"}\");\n\n\t\t\tvar trigger = this._events[stage][mode];\n\n\t\t\tgantt.assert(trigger, \"Unknown after drop mode:{\" + mode + \"}\");\n\t\t\tgantt.assert(params, \"Invalid event arguments\");\n\n\n\t\t\tif (!gantt.checkEvent(trigger))\n\t\t\t\treturn true;\n\n\t\t\treturn gantt.callEvent(trigger, params);\n\t\t},\n\n\t\tround_task_dates: function(task){\n\t\t\tvar drag_state = this.drag;\n\t\t\tvar config = timeline.$getConfig();\n\t\t\tif (!drag_state) {\n\t\t\t\tdrag_state = {mode: config.drag_mode.move};\n\t\t\t}\n\t\t\tthis._fix_dnd_scale_time(task, drag_state);\n\t\t},\n\t\tdestructor: function(){\n\t\t\tthis._domEvents.detachAll();\n\t\t}\n\t};\n}\n\nfunction initTaskDND() {\n\tvar _tasks_dnd;\n\treturn {\n\t\textend: function(timeline){\n\t\t\ttimeline.roundTaskDates = function (task) {\n\t\t\t\t_tasks_dnd.round_task_dates(task);\n\t\t\t};\n\n\t\t},\n\t\tinit: function(timeline, gantt){\n\t\t\t_tasks_dnd = createTaskDND(timeline, gantt);\n\t\t\t// TODO: entry point for touch handlers, move touch to timeline\n\t\t\ttimeline._tasks_dnd = _tasks_dnd;\n\t\t\treturn _tasks_dnd.init(gantt);\n\t\t},\n\t\tdestructor: function(){\n\t\t\t_tasks_dnd.destructor();\n\t\t\t_tasks_dnd = null;\n\t\t}\n\t};\n}\n\nmodule.exports = {\n\tcreateTaskDND: initTaskDND\n};\n","var utils = require(\"../../../utils/utils\"),\n\ttaskDnD = require(\"./tasks_dnd\"),\n\tlinkDnD = require(\"./links_dnd\"),\n\tdomHelpers = require(\"../../../utils/dom_helpers\");\n\nvar initializer = (function(){\n\treturn function(gantt){\n\t\tvar services = gantt.$services;\n\t\treturn {\n\t\t\tonCreated: function (timeline) {\n\t\t\t\tvar config = timeline.$config;\n\t\t\t\tconfig.bind = utils.defined(config.bind) ? config.bind : \"task\";\n\t\t\t\tconfig.bindLinks = utils.defined(config.bindLinks) ? config.bindLinks : \"link\";\n\n\t\t\t\ttimeline._linksDnD = linkDnD.createLinkDND();\n\t\t\t\ttimeline._tasksDnD = taskDnD.createTaskDND();\n\t\t\t\ttimeline._tasksDnD.extend(timeline);\n\n\t\t\t\tthis._mouseDelegates = require(\"../mouse_event_container\")(gantt);\n\t\t\t},\n\t\t\tonInitialized: function (timeline) {\n\t\t\t\tthis._attachDomEvents(gantt);\n\n\t\t\t\tthis._attachStateProvider(gantt, timeline);\n\n\t\t\t\ttimeline._tasksDnD.init(timeline, gantt);\n\t\t\t\ttimeline._linksDnD.init(timeline, gantt);\n\n\t\t\t\tif(timeline.$config.id == \"timeline\"){\n\t\t\t\t\tthis.extendDom(timeline);\n\t\t\t\t}\n\n\t\t\t},\n\t\t\tonDestroyed: function (timeline) {\n\t\t\t\tthis._clearDomEvents(gantt);\n\t\t\t\tthis._clearStateProvider(gantt);\n\t\t\t},\n\t\t\textendDom: function(timeline){\n\t\t\t\tgantt.$task = timeline.$task;\n\t\t\t\tgantt.$task_scale = timeline.$task_scale;\n\t\t\t\tgantt.$task_data = timeline.$task_data;\n\t\t\t\tgantt.$task_bg = timeline.$task_bg;\n\t\t\t\tgantt.$task_links = timeline.$task_links;\n\t\t\t\tgantt.$task_bars = timeline.$task_bars;\n\t\t\t},\n\n\t\t\t_clearDomEvents: function(){\n\t\t\t\tthis._mouseDelegates.destructor();\n\t\t\t\tthis._mouseDelegates = null;\n\t\t\t},\n\n\t\t\t_attachDomEvents: function(gantt){\n\t\t\t\tfunction _delete_link_handler(id, e) {\n\t\t\t\t\tif (id && this.callEvent(\"onLinkDblClick\", [id, e])) {\n\n\t\t\t\t\t\tvar link = this.getLink(id);\n\t\t\t\t\t\tif (this.isReadonly(link)) return;\n\n\t\t\t\t\t\tvar title = \"\";\n\t\t\t\t\t\tvar question = this.locale.labels.link + \" \" + this.templates.link_description(this.getLink(id)) + \" \" + this.locale.labels.confirm_link_deleting;\n\n\t\t\t\t\t\twindow.setTimeout(function () {\n\t\t\t\t\t\t\tgantt._dhtmlx_confirm(question, title, function () {\n\t\t\t\t\t\t\t\tgantt.deleteLink(id);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}, (this.config.touch ? 300 : 1));\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis._mouseDelegates.delegate(\"click\", \"gantt_task_link\", gantt.bind(function (e, trg) {\n\t\t\t\t\tvar id = this.locate(e, this.config.link_attribute);\n\t\t\t\t\tif (id) {\n\t\t\t\t\t\tthis.callEvent(\"onLinkClick\", [id, e]);\n\t\t\t\t\t}\n\t\t\t\t}, gantt), this.$task);\n\n\t\t\t\tthis._mouseDelegates.delegate(\"click\", \"gantt_scale_cell\", gantt.bind(function (e, trg) {\n\t\t\t\t\tvar pos = domHelpers.getRelativeEventPosition(e, gantt.$task_data);\n\t\t\t\t\tvar date = gantt.dateFromPos(pos.x);\n\t\t\t\t\tvar coll = Math.floor(gantt.columnIndexByDate(date));\n\n\t\t\t\t\tvar coll_date = gantt.getScale().trace_x[coll];\n\n\t\t\t\t\tgantt.callEvent(\"onScaleClick\", [e, coll_date]);\n\t\t\t\t}, gantt), this.$task);\n\n\t\t\t\tthis._mouseDelegates.delegate(\"doubleclick\", \"gantt_task_link\", gantt.bind(function (e, id, trg) {\n\t\t\t\t\tvar id = this.locate(e, gantt.config.link_attribute);\n\t\t\t\t\t_delete_link_handler.call(this, id, e);\n\t\t\t\t}, gantt), this.$task);\n\n\t\t\t\tthis._mouseDelegates.delegate(\"doubleclick\", \"gantt_link_point\", gantt.bind(function (e, id, trg) {\n\t\t\t\t\tvar id = this.locate(e),\n\t\t\t\t\t\ttask = this.getTask(id);\n\n\t\t\t\t\tvar link = null;\n\t\t\t\t\tif (trg.parentNode && domHelpers.getClassName(trg.parentNode)) {\n\t\t\t\t\t\tif (domHelpers.getClassName(trg.parentNode).indexOf(\"_left\") > -1) {\n\t\t\t\t\t\t\tlink = task.$target[0];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlink = task.$source[0];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (link)\n\t\t\t\t\t\t_delete_link_handler.call(this, link, e);\n\t\t\t\t\treturn false;\n\t\t\t\t}, gantt), this.$task);\n\t\t\t},\n\n\t\t\t_attachStateProvider: function(gantt, timeline){\n\t\t\t\tvar self = timeline;\n\t\t\t\tvar state = services.getService(\"state\");\n\t\t\t\tstate.registerProvider(\"tasksTimeline\", function(){\n\t\t\t\t\treturn {\n\t\t\t\t\t\tscale_unit: self._tasks ? self._tasks.unit : undefined,\n\t\t\t\t\t\tscale_step:  self._tasks ? self._tasks.step  : undefined\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t},\n\n\t\t\t_clearStateProvider: function(){\n\t\t\t\tvar state = services.getService(\"state\");\n\t\t\t\tstate.unregisterProvider(\"tasksTimeline\");\n\t\t\t}\n\t\t};\n\t};\n\n})();\n\nmodule.exports = initializer;","var domHelpers = require(\"../../../utils/dom_helpers\");\n\nfunction _init_dnd(gantt, grid) {\n\tvar DnD = gantt.$services.getService(\"dnd\");\n\n\tif(!grid.$config.bind || !gantt.getDatastore(grid.$config.bind)){\n\t\treturn;\n\t}\n\n\tfunction locate(e){\n\t\treturn domHelpers.locateAttribute(e, grid.$config.item_attribute);\n\t}\n\n\tfunction getStore(){\n\t\treturn gantt.getDatastore(grid.$config.bind);\n\t}\n\n\tvar dnd = new DnD(grid.$grid_data, {updates_per_second: 60});\n\tif (gantt.defined(grid.$getConfig().dnd_sensitivity))\n\t\tdnd.config.sensitivity = grid.$getConfig().dnd_sensitivity;\n\n\tdnd.attachEvent(\"onBeforeDragStart\", gantt.bind(function (obj, e) {\n\t\tvar el = locate(e);\n\t\tif (!el) return false;\n\t\tif (gantt.hideQuickInfo) gantt._hideQuickInfo();\n\n\t\tvar id = el.getAttribute(grid.$config.item_attribute);\n\n\t\tvar datastore = getStore();\n\n\t\tvar task = datastore.getItem(id);\n\n\t\tif (gantt.isReadonly(task))\n\t\t\treturn false;\n\n\t\tdnd.config.initial_open_state = task.$open;\n\t\tif (!gantt.callEvent(\"onRowDragStart\", [id, e.target || e.srcElement, e])) {\n\t\t\treturn false;\n\t\t}\n\n\t}, gantt));\n\n\tdnd.attachEvent(\"onAfterDragStart\", gantt.bind(function (obj, e) {\n\t\tvar el = locate(e);\n\t\tdnd.config.marker.innerHTML = el.outerHTML;\n\t\tvar element = dnd.config.marker.firstChild;\n\t\tif(element){\n\t\t\telement.style.position = \"static\";\n\t\t}\n\n\t\tdnd.config.id = el.getAttribute(grid.$config.item_attribute);\n\n\t\tvar store = getStore();\n\n\t\tvar task = store.getItem(dnd.config.id);\n\t\tdnd.config.index = store.getBranchIndex(dnd.config.id);\n\t\tdnd.config.parent = task.parent;\n\t\ttask.$open = false;\n\t\ttask.$transparent = true;\n\t\tthis.refreshData();\n\t}, gantt));\n\n\tdnd.lastTaskOfLevel = function (level) {\n\t\tvar last_item = null;\n\t\tvar store = getStore();\n\t\tvar tasks = store.getItems();\n\t\tfor (var i = 0, len = tasks.length; i < len; i++) {\n\t\t\tif (tasks[i].$level == level) {\n\t\t\t\tlast_item = tasks[i];\n\t\t\t}\n\t\t}\n\t\treturn last_item ? last_item.id : null;\n\t};\n\tdnd._getGridPos = gantt.bind(function (e) {\n\t\tvar pos = domHelpers.getNodePosition(grid.$grid_data);\n\t\tvar store = getStore();\n\t\t// row offset\n\t\tvar x = pos.x;\n\t\tvar y = e.pos.y - 10;\n\n\t\tvar config = grid.$getConfig();\n\t\t// prevent moving row out of grid_data container\n\t\tif (y < pos.y) y = pos.y;\n\t\tvar gridHeight = store.countVisible() * config.row_height;\n\t\tif (y > pos.y + gridHeight - config.row_height) y = pos.y + gridHeight - config.row_height;\n\n\t\tpos.x = x;\n\t\tpos.y = y;\n\t\treturn pos;\n\t}, gantt);\n\tdnd._getTargetY = gantt.bind(function (e) {\n\t\tvar pos = domHelpers.getNodePosition(grid.$grid_data);\n\n\t\tvar y = e.pageY - pos.y + (grid.$state.scrollTop || 0);\n\t\tif (y < 0)\n\t\t\ty = 0;\n\t\treturn y;\n\t}, gantt);\n\tdnd._getTaskByY = gantt.bind(function (y, dropIndex) {\n\n\t\tvar config = grid.$getConfig(),\n\t\t\tstore = getStore();\n\n\t\ty = y || 0;\n\n\t\tvar index = Math.floor(y / config.row_height);\n\t\tindex = dropIndex < index ? index - 1 : index;\n\n\t\tif (index > store.countVisible() - 1)\n\t\t\treturn null;\n\n\t\treturn store.getIdByIndex(index);\n\t}, gantt);\n\tdnd.attachEvent(\"onDragMove\", gantt.bind(function (obj, e) {\n\t\tvar dd = dnd.config;\n\t\tvar pos = dnd._getGridPos(e);\n\n\t\tvar config = grid.$getConfig(),\n\t\t\tstore = getStore();\n\n\t\t// setting position of row\n\t\tdd.marker.style.left = pos.x + 10 + \"px\";\n\t\tdd.marker.style.top = pos.y + \"px\";\n\n\t\t// highlight row when mouseover\n\t\tvar item = store.getItem(dnd.config.id);\n\t\tvar targetY = dnd._getTargetY(e);\n\t\tvar el = dnd._getTaskByY(targetY, store.getIndexById(item.id));\n\n\t\tif (!store.exists(el)) {\n\t\t\tel = dnd.lastTaskOfLevel(config.order_branch_free ? item.$level : 0);\n\t\t\tif (el == dnd.config.id) {\n\t\t\t\tel = null;\n\t\t\t}\n\t\t}\n\n\t\tfunction allowedLevel(next, item) {\n\t\t\treturn (!(store.isChildOf(over.id, item.id)) && (next.$level == item.$level || config.order_branch_free));\n\t\t}\n\n\t\tif (store.exists(el)) {\n\t\t\tvar over = store.getItem(el);\n\n\t\t\tif (store.getIndexById(over.id) * config.row_height + config.row_height / 2 < targetY) {\n\t\t\t\t//hovering over bottom part of item, check can be drop to bottom\n\t\t\t\tvar index = store.getIndexById(over.id);\n\t\t\t\tvar nextId = store.getNext(over.id);//adds +1 when hovering over placeholder\n\t\t\t\tvar next = store.getItem(nextId);\n\t\t\t\tif (next) {\n\t\t\t\t\tif (next.id != item.id) {\n\t\t\t\t\t\tover = next; //there is a valid target\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (config.order_branch_free) {\n\t\t\t\t\t\t\tif (!(store.isChildOf(item.id, over.id) && store.getChildren(over.id).length == 1))\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tstore.move(item.id, store.getBranchIndex(over.id) + 1, store.getParent(over.id));\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t//we at end of the list, check and drop at the end of list\n\t\t\t\t\tnextId = store.getIdByIndex(index);\n\t\t\t\t\tnext = store.getItem(nextId);\n\n\t\t\t\t\tif (allowedLevel(next, item) && next.id != item.id) {\n\t\t\t\t\t\tstore.move(item.id, -1, store.getParent(next.id));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (config.order_branch_free) {\n\t\t\t\tif (over.id != item.id && allowedLevel(over, item)) {\n\t\t\t\t\tif (!store.hasChild(over.id)) {\n\t\t\t\t\t\tover.$open = true;\n\t\t\t\t\t\tstore.move(item.id, -1, over.id);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif (store.getIndexById(over.id) || config.row_height / 3 < targetY) return;\n\t\t\t\t}\n\t\t\t}\n\t\t\t//if item is on different level, check the one before it\n\t\t\tvar index = store.getIndexById(over.id),\n\t\t\t\tprevId = store.getIdByIndex(index - 1);\n\n\t\t\tvar prev = store.getItem(prevId);\n\n\t\t\tvar shift = 1;\n\t\t\twhile ((!prev || prev.id == over.id) && index - shift >= 0) {\n\n\t\t\t\tprevId = store.getIdByIndex(index - shift);\n\t\t\t\tprev = store.getItem(prevId);\n\t\t\t\tshift++;\n\t\t\t}\n\n\t\t\tif (item.id == over.id) return;\n\t\t\t//replacing item under cursor\n\t\t\tif (allowedLevel(over, item) && item.id != over.id) {\n\t\t\t\tstore.move(item.id, 0, 0, over.id);\n\n\t\t\t} else if (over.$level == item.$level - 1 && !store.getChildren(over.id).length) {\n\t\t\t\tstore.move(item.id, 0, over.id);\n\n\t\t\t} else if (prev && (allowedLevel(prev, item)) && (item.id != prev.id)) {\n\t\t\t\tstore.move(item.id, -1, store.getParent(prev.id));\n\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}, gantt));\n\n\tdnd.attachEvent(\"onDragEnd\", gantt.bind(function () {\n\t\tvar store = getStore();\n\t\tvar task = store.getItem(dnd.config.id);\n\t\ttask.$transparent = false;\n\t\ttask.$open = dnd.config.initial_open_state;\n\n\t\tif (this.callEvent(\"onBeforeRowDragEnd\", [dnd.config.id, dnd.config.parent, dnd.config.index]) === false) {\n\t\t\tstore.move(dnd.config.id, dnd.config.index, dnd.config.parent);\n\t\t\ttask.$drop_target = null;\n\t\t} else {\n\t\t\tthis.callEvent(\"onRowDragEnd\", [dnd.config.id, task.$drop_target]);\n\t\t}\n\t\t\n\t\tstore.refresh(task.id);\n\t\t//this.refreshData();\n\t}, gantt));\n}\n\nmodule.exports = {\n\tinit: _init_dnd\n};","var utils = require(\"../../../utils/utils\");\nvar rowDnd = require(\"./tasks_grid_dnd\");\nvar editors = require(\"./editors/controller\");\nvar initializer = (function(){\n\treturn function(gantt){\n\t\treturn {\n\t\t\tonCreated: function (grid) {\n\t\t\t\tgrid.$config = utils.mixin(grid.$config, {\n\t\t\t\t\tbind: \"task\"\n\t\t\t\t});\n\t\t\t\tif(grid.$config.id == \"grid\") {\n\t\t\t\t\tthis.extendGantt(grid);\n\t\t\t\t\tgantt.ext.inlineEditors = gantt.ext._inlineEditors.createEditors(grid);\n\t\t\t\t\tgantt.ext.inlineEditors.init();\n\t\t\t\t}\n\n\n\n\t\t\t\tthis._mouseDelegates = require(\"../mouse_event_container\")(gantt);\n\t\t\t},\n\t\t\tonInitialized: function (grid) {\n\t\t\t\tvar config = grid.$getConfig();\n\t\t\t\tif (config.order_branch) {\n\t\t\t\t\trowDnd.init(grid.$gantt, grid);\n\t\t\t\t}\n\n\t\t\t\tthis.initEvents(grid, gantt);\n\t\t\t\tif(grid.$config.id == \"grid\") {\n\t\t\t\t\tthis.extendDom(grid);\n\t\t\t\t}\n\t\t\t},\n\t\t\tonDestroyed: function (grid) {\n\t\t\t\tgantt.ext.inlineEditors.destructor();\n\t\t\t\tthis.clearEvents(grid, gantt);\n\t\t\t},\n\n\t\t\tinitEvents: function (grid, gantt) {\n\t\t\t\tthis._mouseDelegates.delegate(\"click\", \"gantt_row\", gantt.bind(function (e, id, trg) {\n\t\t\t\t\tvar config = grid.$getConfig();\n\t\t\t\t\tif (id !== null) {\n\t\t\t\t\t\tvar task = this.getTask(id);\n\t\t\t\t\t\tif (config.scroll_on_click && !gantt._is_icon_open_click(e))\n\t\t\t\t\t\t\tthis.showDate(task.start_date);\n\t\t\t\t\t\tgantt.callEvent(\"onTaskRowClick\", [id, trg]);\n\t\t\t\t\t}\n\t\t\t\t}, gantt), grid.$grid);\n\n\t\t\t\tthis._mouseDelegates.delegate(\"click\", \"gantt_grid_head_cell\", gantt.bind(function (e, id, trg) {\n\t\t\t\t\tvar column = trg.getAttribute(\"data-column-id\");\n\n\t\t\t\t\tif (!gantt.callEvent(\"onGridHeaderClick\", [column, e]))\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\tvar config = grid.$getConfig();\n\n\t\t\t\t\tif (column == \"add\") {\n\t\t\t\t\t\tvar mouseEvents = gantt.$services.getService(\"mouseEvents\");\n\t\t\t\t\t\tmouseEvents.callHandler(\"click\", \"gantt_add\", grid.$grid, [e, config.root_id]);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (config.sort) {\n\t\t\t\t\t\tvar sorting_method = column,\n\t\t\t\t\t\t\tconf;\n\n\t\t\t\t\t\tfor (var i = 0; i < config.columns.length; i++) {\n\t\t\t\t\t\t\tif (config.columns[i].name == column) {\n\t\t\t\t\t\t\t\tconf = config.columns[i];\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (conf && conf.sort !== undefined && conf.sort !== true) {\n\t\t\t\t\t\t\tsorting_method = conf.sort;\n\n\t\t\t\t\t\t\tif (!sorting_method) { // column sort property 'false', no sorting\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar sort = (this._sort && this._sort.direction && this._sort.name == column) ? this._sort.direction : \"desc\";\n\t\t\t\t\t\t// invert sort direction\n\t\t\t\t\t\tsort = (sort == \"desc\") ? \"asc\" : \"desc\";\n\t\t\t\t\t\tthis._sort = {\n\t\t\t\t\t\t\tname: column,\n\t\t\t\t\t\t\tdirection: sort\n\t\t\t\t\t\t};\n\t\t\t\t\t\tthis.sort(sorting_method, sort == \"desc\");\n\t\t\t\t\t}\n\t\t\t\t}, gantt), grid.$grid);\n\n\t\t\t\tthis._mouseDelegates.delegate(\"click\", \"gantt_add\", gantt.bind(function (e, id, trg) {\n\t\t\t\t\tvar config = grid.$getConfig();\n\t\t\t\t\tif (config.readonly) return;\n\n\t\t\t\t\tvar item = {};\n\t\t\t\t\tthis.createTask(item, id ? id : gantt.config.root_id);\n\n\t\t\t\t\treturn false;\n\t\t\t\t}, gantt), grid.$grid);\n\n\t\t\t},\n\n\t\t\tclearEvents: function(grid, gantt){\n\t\t\t\tthis._mouseDelegates.destructor();\n\t\t\t\tthis._mouseDelegates = null;\n\t\t\t},\n\n\t\t\textendDom: function(grid){\n\t\t\t\tgantt.$grid = grid.$grid;\n\t\t\t\tgantt.$grid_scale = grid.$grid_scale;\n\t\t\t\tgantt.$grid_data = grid.$grid_data;\n\t\t\t},\n\t\t\textendGantt: function(grid){\n\t\t\t\tgantt.getGridColumns = gantt.bind(grid.getGridColumns, grid);\n\n\t\t\t\tgrid.attachEvent(\"onColumnResizeStart\", function(){\n\t\t\t\t\treturn gantt.callEvent(\"onColumnResizeStart\", arguments);\n\t\t\t\t});\n\t\t\t\tgrid.attachEvent(\"onColumnResize\", function(){\n\t\t\t\t\treturn gantt.callEvent(\"onColumnResize\", arguments);\n\t\t\t\t});\n\t\t\t\tgrid.attachEvent(\"onColumnResizeEnd\", function(){\n\t\t\t\t\treturn gantt.callEvent(\"onColumnResizeEnd\", arguments);\n\t\t\t\t});\n\n\t\t\t\tgrid.attachEvent(\"onColumnResizeComplete\", function(columns, totalWidth){\n\t\t\t\t\tgantt.config.grid_width = totalWidth;\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t};\n})();\n\nmodule.exports = initializer;","var dateHelper = require(\"../../../utils/date_helpers\");\n\nfunction createGridLineRender(gantt){\n\tfunction _render_grid_item(item, view) {\n\t\t//if (!_is_grid_visible.call(this))\n\t\t//\treturn null;\n\n\t\tvar columns = view.getGridColumns();\n\t\tvar config = view.$getConfig(),\n\t\t\ttemplates = view.$getTemplates();\n\n\t\tvar store = view.$config.rowStore;\n\n\t\tif(config.rtl){\n\t\t\tcolumns = columns.reverse();\n\t\t}\n\n\t\tvar cells = [];\n\t\tvar width = 0;\n\t\tvar has_child;\n\t\tfor (var i = 0; i < columns.length; i++) {\n\t\t\tvar last = i == columns.length - 1;\n\t\t\tvar col = columns[i];\n\t\t\tvar cell;\n\n\t\t\tvar value;\n\t\t\tvar textValue;\n\t\t\tif (col.name == \"add\") {\n\t\t\t\tvar aria = gantt._waiAria.gridAddButtonAttrString(col);\n\n\t\t\t\tvalue = \"<div \" + aria + \" class='gantt_add'></div>\";\n\t\t\t\ttextValue = \"\";\n\t\t\t} else {\n\t\t\t\tif (col.template)\n\t\t\t\t\tvalue = col.template(item);\n\t\t\t\telse\n\t\t\t\t\tvalue = item[col.name];\n\n\t\t\t\tif (dateHelper.isDate(value))\n\t\t\t\t\tvalue = templates.date_grid(value, item);\n\t\t\t\ttextValue = value;\n\t\t\t\tvalue = \"<div class='gantt_tree_content'>\" + value + \"</div>\";\n\t\t\t}\n\t\t\tvar css = \"gantt_cell\" + (last ? \" gantt_last_cell\" : \"\");\n\n\t\t\tvar tree = [];\n\t\t\tif (col.tree) {\n\t\t\t\tfor (var j = 0; j < item.$level; j++)\n\t\t\t\t\ttree.push(templates.grid_indent(item));\n\n\t\t\t\thas_child = store.hasChild(item.id) && !(gantt.isSplitTask(item));\n\t\t\t\tif (has_child) {\n\t\t\t\t\ttree.push(templates.grid_open(item));\n\t\t\t\t\ttree.push(templates.grid_folder(item));\n\t\t\t\t} else {\n\t\t\t\t\ttree.push(templates.grid_blank(item));\n\t\t\t\t\ttree.push(templates.grid_file(item));\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar style = \"width:\" + (col.width - (last ? 1 : 0)) + \"px;\";\n\t\t\tif (this.defined(col.align))\n\t\t\t\tstyle += \"text-align:\" + col.align + \";\";\n\n\t\t\tvar aria = gantt._waiAria.gridCellAttrString(col, textValue);\n\n\t\t\ttree.push(value);\n\t\t\tif(config.rtl){\n\t\t\t\ttree = tree.reverse();\n\t\t\t}\n\t\t\tcell = \"<div class='\" + css + \"' data-column-index='\"+i+\"' data-column-name='\"+col.name+\"' style='\" + style + \"' \" + aria + \">\" + tree.join(\"\") + \"</div>\";\n\t\t\tcells.push(cell);\n\t\t}\n\t\tvar css = gantt.getGlobalTaskIndex(item.id) % 2 === 0 ? \"\" : \" odd\";\n\t\tcss += (item.$transparent) ? \" gantt_transparent\" : \"\";\n\n\t\tcss += (item.$dataprocessor_class ? \" \" + item.$dataprocessor_class : \"\");\n\n\t\tif (templates.grid_row_class) {\n\t\t\tvar css_template = templates.grid_row_class.call(gantt, item.start_date, item.end_date, item);\n\t\t\tif (css_template)\n\t\t\t\tcss += \" \" + css_template;\n\t\t}\n\n\t\tif(store.getSelectedId() == item.id) {\n\t\t\tcss += \" gantt_selected\";\n\t\t}\n\n\t\tvar el = document.createElement(\"div\");\n\t\tel.className = \"gantt_row\" + css + \" gantt_row_\" + gantt.getTaskType(item.type);\n\t\tvar height = view.getItemHeight();\n\t\tel.style.height = height + \"px\";\n\t\tel.style.lineHeight = height + \"px\";\n\n\t\tif(config.smart_rendering){\n\t\t\tel.style.position = \"absolute\";\n\t\t\tel.style.left = \"0px\";\n\t\t\tel.style.top = view.getItemTop(item.id) + \"px\";\n\t\t}\n\n\t\tif(view.$config.item_attribute){\n\t\t\tel.setAttribute(view.$config.item_attribute, item.id);\n\t\t}\n\n\t\tgantt._waiAria.taskRowAttr(item, el);\n\n\t\tel.innerHTML = cells.join(\"\");\n\t\treturn el;\n\t}\n\n\treturn _render_grid_item;\n}\n\nmodule.exports = createGridLineRender;\n\n","\nfunction createLinkRender(gantt){\n\nfunction _render_link_element(link, view) {\n\tvar config = view.$getConfig();\n\n\tvar pt = path_builder.get_endpoint(link, view);\n\tvar dy = pt.e_y - pt.y;\n\tvar dx = pt.e_x - pt.x;\n\tif(!dx && !dy){\n\t\treturn null;\n\t}\n\n\n\tvar dots = path_builder.get_points(link, view);\n\tvar lines = drawer.get_lines(dots, view);\n\n\tvar div = document.createElement(\"div\");\n\n\tvar css = \"gantt_task_link\";\n\n\tif (link.color) {\n\t\tcss += \" gantt_link_inline_color\";\n\t}\n\tvar cssTemplate = gantt.templates.link_class ? gantt.templates.link_class(link) : \"\";\n\tif (cssTemplate) {\n\t\tcss += \" \" + cssTemplate;\n\t}\n\n\tif (config.highlight_critical_path && gantt.isCriticalLink) {\n\t\tif (gantt.isCriticalLink(link))\n\t\t\tcss += \" gantt_critical_link\";\n\t}\n\n\tdiv.className = css;\n\n\tif(view.$config.link_attribute){\n\t\tdiv.setAttribute(view.$config.link_attribute, link.id);\n\t}\n\n\tfor (var i = 0; i < lines.length; i++) {\n\t\tif (i == lines.length - 1) {\n\t\t\tlines[i].size -= config.link_arrow_size;\n\t\t}\n\t\tvar el = drawer.render_line(lines[i], lines[i + 1], view);\n\t\tif (link.color) {\n\t\t\tel.firstChild.style.backgroundColor = link.color;\n\t\t}\n\t\tdiv.appendChild(el);\n\t}\n\n\tvar direction = lines[lines.length - 1].direction;\n\tvar endpoint = _render_link_arrow(dots[dots.length - 1], direction, view);\n\tif (link.color) {\n\t\tendpoint.style.borderColor = link.color;\n\t}\n\tdiv.appendChild(endpoint);\n\n\tgantt._waiAria.linkAttr(link, div);\n\n\treturn div;\n}\n\nfunction _render_link_arrow(point, direction, view) {\n\tvar config = view.$getConfig();\n\tvar div = document.createElement(\"div\");\n\tvar top = point.y;\n\tvar left = point.x;\n\n\tvar size = config.link_arrow_size;\n\tvar line_width = config.row_height;\n\tvar className = \"gantt_link_arrow gantt_link_arrow_\" + direction;\n\tswitch (direction) {\n\t\tcase drawer.dirs.right:\n\t\t\ttop -= (size - line_width) / 2;\n\t\t\tleft -= size;\n\t\t\tbreak;\n\t\tcase drawer.dirs.left:\n\t\t\ttop -= (size - line_width) / 2;\n\t\t\tbreak;\n\t\tcase drawer.dirs.up:\n\t\t\tleft -= size;\n\t\t\tbreak;\n\t\tcase drawer.dirs.down:\n\t\t\ttop += size * 2;\n\t\t\tleft -= size;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t}\n\tdiv.style.cssText = [\n\t\t\"top:\" + top + \"px\",\n\t\t\"left:\" + left + 'px'].join(';');\n\tdiv.className = className;\n\n\treturn div;\n}\n\n\nvar drawer = {\n\tcurrent_pos: null,\n\tdirs: {\"left\": 'left', \"right\": 'right', \"up\": 'up', \"down\": 'down'},\n\tpath: [],\n\tclear: function () {\n\t\tthis.current_pos = null;\n\t\tthis.path = [];\n\t},\n\tpoint: function (pos) {\n\t\tthis.current_pos = gantt.copy(pos);\n\t},\n\tget_lines: function (dots) {\n\t\tthis.clear();\n\t\tthis.point(dots[0]);\n\t\tfor (var i = 1; i < dots.length; i++) {\n\t\t\tthis.line_to(dots[i]);\n\t\t}\n\t\treturn this.get_path();\n\t},\n\tline_to: function (pos) {\n\t\tvar next = gantt.copy(pos);\n\t\tvar prev = this.current_pos;\n\n\t\tvar line = this._get_line(prev, next);\n\t\tthis.path.push(line);\n\t\tthis.current_pos = next;\n\t},\n\tget_path: function () {\n\t\treturn this.path;\n\t},\n\tget_wrapper_sizes: function (v, view) {\n\t\tvar config = view.$getConfig();\n\t\tvar res,\n\t\t\twrapper_size = config.link_wrapper_width,\n\t\t\tline_size = config.link_line_width,\n\t\t\ty = v.y + (config.row_height - wrapper_size) / 2;\n\t\tswitch (v.direction) {\n\t\t\tcase this.dirs.left:\n\t\t\t\tres = {\n\t\t\t\t\ttop: y,\n\t\t\t\t\theight: wrapper_size,\n\t\t\t\t\tlineHeight: wrapper_size,\n\t\t\t\t\tleft: v.x - v.size - wrapper_size / 2,\n\t\t\t\t\twidth: v.size + wrapper_size\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\tcase this.dirs.right:\n\t\t\t\tres = {\n\t\t\t\t\ttop: y,\n\t\t\t\t\tlineHeight: wrapper_size,\n\t\t\t\t\theight: wrapper_size,\n\t\t\t\t\tleft: v.x - wrapper_size / 2,\n\t\t\t\t\twidth: v.size + wrapper_size\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\tcase this.dirs.up:\n\t\t\t\tres = {\n\t\t\t\t\ttop: y - v.size,\n\t\t\t\t\tlineHeight: v.size + wrapper_size,\n\t\t\t\t\theight: v.size + wrapper_size,\n\t\t\t\t\tleft: v.x - wrapper_size / 2,\n\t\t\t\t\twidth: wrapper_size\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\tcase this.dirs.down:\n\t\t\t\tres = {\n\t\t\t\t\ttop: y /*- wrapper_size/2*/,\n\t\t\t\t\tlineHeight: v.size + wrapper_size,\n\t\t\t\t\theight: v.size + wrapper_size,\n\t\t\t\t\tleft: v.x - wrapper_size / 2,\n\t\t\t\t\twidth: wrapper_size\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn res;\n\t},\n\tget_line_sizes: function (v, view) {\n\t\tvar config = view.$getConfig();\n\t\tvar res,\n\t\t\tline_size = config.link_line_width,\n\t\t\twrapper_size = config.link_wrapper_width,\n\t\t\tsize = v.size + line_size;\n\t\tswitch (v.direction) {\n\t\t\tcase this.dirs.left:\n\t\t\tcase this.dirs.right:\n\t\t\t\tres = {\n\t\t\t\t\theight: line_size,\n\t\t\t\t\twidth: size,\n\t\t\t\t\tmarginTop: (wrapper_size - line_size) / 2,\n\t\t\t\t\tmarginLeft: (wrapper_size - line_size) / 2\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\tcase this.dirs.up:\n\t\t\tcase this.dirs.down:\n\t\t\t\tres = {\n\t\t\t\t\theight: size,\n\t\t\t\t\twidth: line_size,\n\t\t\t\t\tmarginTop: (wrapper_size - line_size) / 2,\n\t\t\t\t\tmarginLeft: (wrapper_size - line_size) / 2\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\n\t\treturn res;\n\t},\n\trender_line: function (v, end, view) {\n\t\tvar pos = this.get_wrapper_sizes(v, view);\n\t\tvar wrapper = document.createElement(\"div\");\n\t\twrapper.style.cssText = [\n\t\t\t\"top:\" + pos.top + \"px\",\n\t\t\t\"left:\" + pos.left + \"px\",\n\t\t\t\"height:\" + pos.height + \"px\",\n\t\t\t\"width:\" + pos.width + \"px\"\n\t\t].join(';');\n\t\twrapper.className = \"gantt_line_wrapper\";\n\n\t\tvar innerPos = this.get_line_sizes(v, view);\n\t\tvar inner = document.createElement(\"div\");\n\t\tinner.style.cssText = [\n\t\t\t\"height:\" + innerPos.height + \"px\",\n\t\t\t\"width:\" + innerPos.width + \"px\",\n\t\t\t\"margin-top:\" + innerPos.marginTop + \"px\",\n\t\t\t\"margin-left:\" + innerPos.marginLeft + \"px\"\n\t\t].join(\";\");\n\n\t\tinner.className = \"gantt_link_line_\" + v.direction;\n\t\twrapper.appendChild(inner);\n\n\t\treturn wrapper;\n\t},\n\t_get_line: function (from, to) {\n\t\tvar direction = this.get_direction(from, to);\n\t\tvar vect = {\n\t\t\tx: from.x,\n\t\t\ty: from.y,\n\t\t\tdirection: this.get_direction(from, to)\n\t\t};\n\t\tif (direction == this.dirs.left || direction == this.dirs.right) {\n\t\t\tvect.size = Math.abs(from.x - to.x);\n\t\t} else {\n\t\t\tvect.size = Math.abs(from.y - to.y);\n\t\t}\n\t\treturn vect;\n\t},\n\tget_direction: function (from, to) {\n\t\tvar direction = 0;\n\t\tif (to.x < from.x) {\n\t\t\tdirection = this.dirs.left;\n\t\t} else if (to.x > from.x) {\n\t\t\tdirection = this.dirs.right;\n\t\t} else if (to.y > from.y) {\n\t\t\tdirection = this.dirs.down;\n\t\t} else {\n\t\t\tdirection = this.dirs.up;\n\t\t}\n\t\treturn direction;\n\t}\n\n};\n\nvar path_builder = {\n\n\tpath: [],\n\tclear: function () {\n\t\tthis.path = [];\n\t},\n\tcurrent: function () {\n\t\treturn this.path[this.path.length - 1];\n\t},\n\tpoint: function (next) {\n\t\tif (!next)\n\t\t\treturn this.current();\n\n\t\tthis.path.push(gantt.copy(next));\n\t\treturn next;\n\t},\n\tpoint_to: function (direction, diff, point) {\n\t\tif (!point)\n\t\t\tpoint = gantt.copy(this.point());\n\t\telse\n\t\t\tpoint = {x: point.x, y: point.y};\n\t\tvar dir = drawer.dirs;\n\t\tswitch (direction) {\n\t\t\tcase (dir.left):\n\t\t\t\tpoint.x -= diff;\n\t\t\t\tbreak;\n\t\t\tcase (dir.right):\n\t\t\t\tpoint.x += diff;\n\t\t\t\tbreak;\n\t\t\tcase (dir.up):\n\t\t\t\tpoint.y -= diff;\n\t\t\t\tbreak;\n\t\t\tcase (dir.down):\n\t\t\t\tpoint.y += diff;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t\treturn this.point(point);\n\t},\n\tget_points: function (link, view) {\n\t\tvar pt = this.get_endpoint(link, view);\n\t\tvar xy = gantt.config;\n\n\t\tvar dy = pt.e_y - pt.y;\n\t\tvar dx = pt.e_x - pt.x;\n\n\t\tvar dir = drawer.dirs;\n\n\t\tthis.clear();\n\t\tthis.point({x: pt.x, y: pt.y});\n\n\t\tvar shiftX = 2 * xy.link_arrow_size;//just random size for first line\n\t\tvar lineType = this.get_line_type(link, view.$getConfig());\n\n\t\tvar forward = (pt.e_x > pt.x);\n\t\tif (lineType.from_start && lineType.to_start) {\n\t\t\tthis.point_to(dir.left, shiftX);\n\t\t\tif (forward) {\n\t\t\t\tthis.point_to(dir.down, dy);\n\t\t\t\tthis.point_to(dir.right, dx);\n\t\t\t} else {\n\t\t\t\tthis.point_to(dir.right, dx);\n\t\t\t\tthis.point_to(dir.down, dy);\n\t\t\t}\n\t\t\tthis.point_to(dir.right, shiftX);\n\n\t\t} else if (!lineType.from_start && lineType.to_start) {\n\t\t\tforward = (pt.e_x > (pt.x + 2 * shiftX));\n\t\t\tthis.point_to(dir.right, shiftX);\n\t\t\tif (forward) {\n\t\t\t\tdx -= shiftX;\n\t\t\t\tthis.point_to(dir.down, dy);\n\t\t\t\tthis.point_to(dir.right, dx);\n\t\t\t} else {\n\t\t\t\tdx -= 2 * shiftX;\n\t\t\t\tvar sign = dy > 0 ? 1 : -1;\n\n\t\t\t\tthis.point_to(dir.down, sign * (xy.row_height / 2));\n\t\t\t\tthis.point_to(dir.right, dx);\n\t\t\t\tthis.point_to(dir.down, sign * ( Math.abs(dy) - (xy.row_height / 2)));\n\t\t\t\tthis.point_to(dir.right, shiftX);\n\t\t\t}\n\n\t\t} else if (!lineType.from_start && !lineType.to_start) {\n\t\t\tthis.point_to(dir.right, shiftX);\n\t\t\tif (forward) {\n\t\t\t\tthis.point_to(dir.right, dx);\n\t\t\t\tthis.point_to(dir.down, dy);\n\t\t\t} else {\n\t\t\t\tthis.point_to(dir.down, dy);\n\t\t\t\tthis.point_to(dir.right, dx);\n\t\t\t}\n\t\t\tthis.point_to(dir.left, shiftX);\n\t\t} else if (lineType.from_start && !lineType.to_start) {\n\n\t\t\tforward = (pt.e_x > (pt.x - 2 * shiftX));\n\t\t\tthis.point_to(dir.left, shiftX);\n\n\t\t\tif (!forward) {\n\t\t\t\tdx += shiftX;\n\t\t\t\tthis.point_to(dir.down, dy);\n\t\t\t\tthis.point_to(dir.right, dx);\n\t\t\t} else {\n\t\t\t\tdx += 2 * shiftX;\n\t\t\t\tvar sign = dy > 0 ? 1 : -1;\n\t\t\t\tthis.point_to(dir.down, sign * (xy.row_height / 2));\n\t\t\t\tthis.point_to(dir.right, dx);\n\t\t\t\tthis.point_to(dir.down, sign * ( Math.abs(dy) - (xy.row_height / 2)));\n\t\t\t\tthis.point_to(dir.left, shiftX);\n\t\t\t}\n\n\t\t}\n\n\t\treturn this.path;\n\t},\n\tget_line_type: function(link, config){\n\t\tvar types = config.links;\n\t\tvar from_start = false, to_start = false;\n\t\tif (link.type == types.start_to_start) {\n\t\t\tfrom_start = to_start = true;\n\t\t} else if (link.type == types.finish_to_finish) {\n\t\t\tfrom_start = to_start = false;\n\t\t} else if (link.type == types.finish_to_start) {\n\t\t\tfrom_start = false;\n\t\t\tto_start = true;\n\t\t} else if (link.type == types.start_to_finish) {\n\t\t\tfrom_start = true;\n\t\t\tto_start = false;\n\t\t} else {\n\t\t\tgantt.assert(false, \"Invalid link type\");\n\t\t}\n\n\t\tif(config.rtl){\n\t\t\tfrom_start = !from_start;\n\t\t\tto_start = !to_start;\n\t\t}\n\n\t\treturn {from_start: from_start, to_start: to_start};\n\t},\n\n\tget_endpoint: function (link, view) {\n\t\tvar config = view.$getConfig();\n\t\tvar types = config.links;\n\n\t\tvar lineType = this.get_line_type(link, config);\n\t\tvar from_start = lineType.from_start,\n\t\t\tto_start = lineType.to_start;\n\n\t\tvar source = gantt.getTask(link.source);\n\t\tvar target = gantt.getTask(link.target);\n\n\t\tvar from = getMilestonePosition(source, view),\n\t\t\tto = getMilestonePosition(target, view);\n\n\t\treturn {\n\t\t\tx: from_start ? from.left : (from.left + from.width),\n\t\t\te_x: to_start ? to.left : (to.left + to.width),\n\t\t\ty: from.top,\n\t\t\te_y: to.top\n\t\t};\n\t}\n};\n\nfunction getMilestonePosition(task, view){\n\tvar config = view.$getConfig();\n\tvar pos = view.getItemPosition(task);\n\tif(gantt.getTaskType(task.type) == config.types.milestone){\n\t\tvar milestoneHeight = gantt.getTaskHeight();\n\t\tvar milestoneWidth = Math.sqrt(2*milestoneHeight*milestoneHeight);\n\t\tpos.left -= milestoneWidth / 2;\n\t\tpos.width = milestoneWidth;\n\t}\n\treturn pos;\n}\n\nreturn _render_link_element;\n\n}\n\nmodule.exports = createLinkRender;","function createTaskBgRender(gantt){\n\t//this.getTaskTop\n\tfunction _render_bg_line(item, view) {\n\t\tvar config = view.$getConfig(),\n\t\t\ttemplates = view.$getTemplates();\n\t\tvar cfg = view.getScale();\n\t\tvar count = cfg.count;\n\t\tvar row = document.createElement(\"div\");\n\t\tif (config.show_task_cells) {\n\t\t\tfor (var j = 0; j < count; j++) {\n\t\t\t\tvar width = cfg.width[j],\n\t\t\t\t\tcssclass = \"\";\n\n\t\t\t\tif (width > 0) {//do not render skipped columns\n\t\t\t\t\tvar cell = document.createElement(\"div\");\n\t\t\t\t\tcell.style.width = (width) + \"px\";\n\n\t\t\t\t\tcssclass = \"gantt_task_cell\" + (j == count - 1 ? \" gantt_last_cell\" : \"\");\n\t\t\t\t\tcssTemplate = templates.task_cell_class(item, cfg.trace_x[j]);\n\t\t\t\t\tif (cssTemplate)\n\t\t\t\t\t\tcssclass += \" \" + cssTemplate;\n\t\t\t\t\tcell.className = cssclass;\n\n\t\t\t\t\trow.appendChild(cell);\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\t\tvar odd = gantt.getGlobalTaskIndex(item.id) % 2 !== 0;\n\t\tvar cssTemplate = templates.task_row_class(item.start_date, item.end_date, item);\n\t\tvar css = \"gantt_task_row\" + (odd ? \" odd\" : \"\") + (cssTemplate ? ' ' + cssTemplate : '');\n\n\t\tvar store = view.$config.rowStore;\n\t\tif(store.getSelectedId() == item.id) {\n\t\t\tcss += \" gantt_selected\";\n\t\t}\n\n\t\t//var row = \"<div class='\" + css + \"' \" + this.config.task_attribute + \"='\" + item.id + \"'>\" + cells.join(\"\") + \"</div>\";\n\n\t\trow.className = css;\n\n\t\tif (config.smart_rendering) {\n\t\t\trow.style.position = \"absolute\";\n\t\t\trow.style.top = view.getItemTop(item.id) + \"px\";\n\t\t\trow.style.width = \"100%\";\n\t\t}\n\t\trow.style.height = (config.row_height) + \"px\";\n\n\t\tif(view.$config.item_attribute){\n\t\t\trow.setAttribute(view.$config.item_attribute, item.id);\n\t\t}\n\n\t\treturn row;\n\t}\n\n\treturn _render_bg_line;\n}\n\nmodule.exports = createTaskBgRender;","function createTaskRenderer(gantt){\n\tvar defaultRender = require(\"./task_bar_render\")(gantt);\n\n\treturn function show_children(task, timeline) {\n\t\tif (gantt.isSplitTask(task)) {\n\t\t\tvar sub_height = gantt.config.row_height - 5,\n\t\t\t\tel = document.createElement('div'),\n\t\t\t\tsizes = gantt.getTaskPosition(task);\n\n\t\t\tvar sub_tasks = gantt.getChildren(task.id);\n\n\n\t\t\tfor (var i = 0; i < sub_tasks.length; i++) {\n\t\t\t\tvar child = gantt.getTask(sub_tasks[i]);\n\n\t\t\t\tvar element = defaultRender(child, timeline);\n\t\t\t\tif(!element)\n\t\t\t\t\tcontinue;\n\n\t\t\t\tvar padding = Math.floor((gantt.config.row_height - sizes.height) / 2);\n\n\t\t\t\telement.style.top = (sizes.top + padding) + \"px\";\n\t\t\t\telement.className += \" gantt_split_child\";\n\n\t\t\t\tel.appendChild(element);\n\t\t\t}\n\t\t\treturn el;\n\t\t}\n\t\treturn false;\n\t};\n}\n\nmodule.exports = createTaskRenderer;","var utils = require(\"../../../utils/utils\");\nvar Timeline = require(\"./timeline\");\nvar resourceStoreMixin = require(\"../resouce_store_mixin\");\nvar __extends = require(\"../../../utils/extends\");\n\nvar ResourceTimeline = (function (_super) {\n\n\tfunction ResourceTimeline(parent, config, factory, gantt) {\n\t\tvar self = _super.apply(this, arguments) || this;\n\t\tself.$config.bindLinks = null;\n\t\treturn self;\n\t}\n\n\t__extends(ResourceTimeline, _super);\n\n\tutils.mixin(ResourceTimeline.prototype, {\n\t\tinit: function(){\n\t\t\tif(this.$config.bind === undefined){\n\t\t\t\tthis.$config.bind = this.$getConfig().resource_store;\n\t\t\t}\n\t\t\t_super.prototype.init.apply(this, arguments);\n\t\t},\n\t\t_createLayerConfig: function(){\n\t\t\tvar self = this;\n\t\t\tvar taskFilter = function(){\n\t\t\t\treturn self.isVisible();\n\t\t\t};\n\n\t\t\tvar taskLayers = [\n\t\t\t\t{\n\t\t\t\t\trenderer: this.$gantt.$ui.layers.resourceRow,\n\t\t\t\t\tcontainer: this.$task_bars,\n\t\t\t\t\tfilter: [taskFilter]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\trenderer: this.$gantt.$ui.layers.taskBg,\n\t\t\t\t\tcontainer: this.$task_bg,\n\t\t\t\t\tfilter: [taskFilter]\n\t\t\t\t}\n\t\t\t];\n\n\t\t\tvar linkLayers = [];\n\n\t\t\treturn {\n\t\t\t\ttasks: taskLayers,\n\t\t\t\tlinks: linkLayers\n\t\t\t};\n\t\t}\n\n\t}, true);\n\n\tutils.mixin(ResourceTimeline.prototype, resourceStoreMixin(_super), true);\n\n\treturn ResourceTimeline;\n})(Timeline);\n\n\nmodule.exports = ResourceTimeline;\n\n\n","var domHelpers = require(\"../../../utils/dom_helpers\"),\n\tutils = require(\"../../../utils/utils\"),\n\tresourceStoreMixin = require(\"../resouce_store_mixin\"),\n\tGrid = require(\"./grid\");\nvar __extends = require(\"../../../utils/extends\");\n\nvar ResourceGrid = (function (_super) {\n\n\tfunction ResourceGrid(parent, config, factory, gantt) {\n\t\treturn _super.apply(this, arguments) || this;\n\t}\n\n\t__extends(ResourceGrid, _super);\n\n\tutils.mixin(ResourceGrid.prototype, {\n\t\tinit: function(){\n\t\t\tif(this.$config.bind === undefined){\n\t\t\t\tthis.$config.bind = this.$getConfig().resource_store;\n\t\t\t}\n\t\t\t_super.prototype.init.apply(this, arguments);\n\t\t},\n\n\t\t_initEvents: function(){\n\t\t\t_super.prototype._initEvents.apply(this, arguments);\n\t\t\tthis._mouseDelegates.delegate(\"click\", \"gantt_row\", gantt.bind(function (e, id, trg) {\n\t\t\t\tvar store = this.$config.rowStore;\n\t\t\t\tif(!store) return true;\n\n\t\t\t\tvar target = domHelpers.locateAttribute(e, this.$config.item_attribute);\n\t\t\t\tif(target){\n\t\t\t\t\tstore.select(target.getAttribute(this.$config.item_attribute));\n\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}, this), this.$grid);\n\n\t\t}\n\n\t}, true);\n\n\tutils.mixin(ResourceGrid.prototype, resourceStoreMixin(_super), true);\n\n\treturn ResourceGrid;\n})(Grid);\n\nmodule.exports = ResourceGrid;","module.exports = function (gantt) {\n\n\tvar BaseEditor = require(\"./base\")(gantt),\n\t\tutils = require(\"../../../../../utils/utils\");\n\tvar __extends = require(\"../../../../../utils/extends\");\n\n\tfunction PredecessorEditor() {\n\t\tvar self = BaseEditor.apply(this, arguments) || this;\n\t\treturn self;\n\t}\n\n\t__extends(PredecessorEditor, BaseEditor);\n\n\tfunction parseInputString(value, config) {\n\t\tvar predecessors = (value || \"\").split(config.delimiter || \",\");\n\t\tfor (var i = 0; i < predecessors.length; i++) {\n\t\t\tvar val = predecessors[i].trim();\n\t\t\tif (val) {\n\t\t\t\tpredecessors[i] = val;\n\t\t\t} else {\n\t\t\t\tpredecessors.splice(i, 1);\n\t\t\t\ti--;\n\t\t\t}\n\t\t}\n\t\tpredecessors.sort();\n\t\treturn predecessors;\n\t}\n\n\tfunction formatPredecessors(task, config, gantt) {\n\t\tvar links = task.$target;\n\t\tvar labels = [];\n\t\tfor (var i = 0; i < links.length; i++) {\n\t\t\tvar link = gantt.getLink(links[i]);\n\t\t\tvar pred = gantt.getTask(link.source);\n\t\t\tlabels.push(gantt.getWBSCode(pred));\n\t\t}\n\t\treturn labels.join((config.delimiter || \",\") + \" \");\n\t}\n\n\tfunction getSelectedLinks(taskId, predecessorCodes) {\n\t\tvar links = [];\n\t\tpredecessorCodes.forEach(function (code) {\n\t\t\tvar predecessor = gantt.getTaskByWBSCode(code);\n\t\t\tif (predecessor) {\n\t\t\t\tvar link = {\n\t\t\t\t\tsource: predecessor.id,\n\t\t\t\t\ttarget: taskId,\n\t\t\t\t\ttype: gantt.config.links.finish_to_start,\n\t\t\t\t\tlag: 0\n\t\t\t\t};\n\t\t\t\tif (gantt.isLinkAllowed(link)) {\n\t\t\t\t\tlinks.push(link);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn links;\n\t}\n\n\tfunction getLinksDiff(task, predecessorCodes) {\n\t\tvar selectedLinks = getSelectedLinks(task.id, predecessorCodes);\n\t\tvar existingLinksSearch = {};\n\t\ttask.$target.forEach(function (linkId) {\n\t\t\tvar link = gantt.getLink(linkId);\n\t\t\texistingLinksSearch[link.source + \"_\" + link.target] = link.id;\n\t\t});\n\n\t\tvar linksToAdd = [];\n\t\tselectedLinks.forEach(function (link) {\n\t\t\tvar linkKey = link.source + \"_\" + link.target;\n\t\t\tif (!existingLinksSearch[linkKey]) {\n\t\t\t\tlinksToAdd.push(link);\n\t\t\t} else {\n\t\t\t\tdelete existingLinksSearch[linkKey];\n\t\t\t}\n\t\t});\n\n\t\tvar linksToDelete = [];\n\t\tfor (var i in existingLinksSearch) {\n\t\t\tlinksToDelete.push(existingLinksSearch[i]);\n\t\t}\n\n\t\treturn {\n\t\t\tadd: linksToAdd,\n\t\t\tremove: linksToDelete\n\t\t};\n\t}\n\n\tutils.mixin(PredecessorEditor.prototype, {\n\t\tshow: function (id, column, config, placeholder) {\n\t\t\tvar html = \"<div><input type='text' name='\" + column.name + \"'></div>\";\n\t\t\tplaceholder.innerHTML = html;\n\t\t},\n\t\thide: function () {\n\t\t},\n\t\tset_value: function (value, id, column, node) {\n\t\t\tthis.get_input(node).value = formatPredecessors(value, column.editor, gantt);\n\t\t},\n\t\tget_value: function (id, column, node) {\n\t\t\treturn parseInputString((this.get_input(node).value || \"\"), column.editor);\n\t\t},\n\t\tsave: function (id, column, node) {\n\t\t\tvar task = gantt.getTask(id);\n\n\t\t\tvar linksDiff = getLinksDiff(task, this.get_value(id, column, node));\n\n\t\t\tif (linksDiff.add.length || linksDiff.remove.length) {\n\t\t\t\tgantt.batchUpdate(function () {\n\t\t\t\t\tlinksDiff.add.forEach(function (link) {\n\t\t\t\t\t\tgantt.addLink(link);\n\t\t\t\t\t});\n\t\t\t\t\tlinksDiff.remove.forEach(function (linkId) {\n\t\t\t\t\t\tgantt.deleteLink(linkId);\n\t\t\t\t\t});\n\n\t\t\t\t\tif (gantt.autoSchedule)\n\t\t\t\t\t\tgantt.autoSchedule();\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tis_changed: function (value, id, column, node) {\n\t\t\tvar inputPredecessors = this.get_value(id, column, node);\n\t\t\tvar taskPredecessors = parseInputString(formatPredecessors(value, column.editor, gantt), column.editor);\n\n\t\t\treturn inputPredecessors.join() !== taskPredecessors.join();\n\t\t}\n\t}, true);\n\n\treturn PredecessorEditor;\n};","module.exports = function(gantt) {\n\tvar BaseEditor = require(\"./base\")(gantt),\n\t\tutils = require(\"../../../../../utils/utils\");\n\tvar __extends = require(\"../../../../../utils/extends\");\n\n\tvar html5DateFormat = \"%Y-%m-%d\";\n\n\tvar dateToStr = null;\n\tvar strToDate = null;\n\n\tfunction init(){\n\t\tif(!dateToStr){\n\t\t\tdateToStr = gantt.date.date_to_str(html5DateFormat);\n\t\t}\n\t\tif(!strToDate){\n\t\t\tstrToDate = gantt.date.str_to_date(html5DateFormat);\n\t\t}\n\t}\n\n\tfunction DateEditor() {\n\t\tvar self = BaseEditor.apply(this, arguments) || this;\n\n\t\treturn self;\n\t}\n\n\t__extends(DateEditor, BaseEditor);\n\n\tutils.mixin(DateEditor.prototype, {\n\t\tshow: function (id, column, config, placeholder) {\n\n\t\t\tinit();\n\t\t\tvar minValue = dateToStr(config.min || gantt.getState().min_date);\n\t\t\tvar maxValue = dateToStr(config.max || gantt.getState().max_date);\n\n\t\t\tvar html = \"<div style='width:140px'><input type='date' min='\" + minValue + \"' max='\" + maxValue + \"' name='\" + column.name + \"'></div>\";\n\t\t\tplaceholder.innerHTML = html;\n\t\t},\n\t\tset_value: function (value, id, column, node) {\n\t\t\tthis.get_input(node).value = dateToStr(value);\n\t\t},\n\t\tis_valid: function (value, id, column, node) {\n\t\t\tif (!value || isNaN(value.getTime()))\n\t\t\t\treturn false;\n\t\t\treturn true;\n\t\t},\n\t\tget_value: function (id, column, node) {\n\t\t\tvar parsed = null;\n\t\t\ttry {\n\t\t\t\tparsed = strToDate(this.get_input(node).value || \"\");\n\t\t\t} catch (e) {\n\t\t\t}\n\n\t\t\treturn parsed;\n\t\t}\n\t}, true);\n\n\treturn DateEditor;\n};\n","module.exports = function(gantt) {\n\tvar BaseEditor = require(\"./base\")(gantt),\n\t\tutils = require(\"../../../../../utils/utils\");\n\tvar __extends = require(\"../../../../../utils/extends\");\n\n\tfunction SelectEditor() {\n\t\tvar self = BaseEditor.apply(this, arguments) || this;\n\t\treturn self;\n\t}\n\n\t__extends(SelectEditor, BaseEditor);\n\n\tutils.mixin(SelectEditor.prototype, {\n\t\tshow: function (id, column, config, placeholder) {\n\t\t\tvar html = \"<div><select name='\" + column.name + \"'>\";\n\t\t\tvar optionsHtml = [],\n\t\t\t\toptions = config.options || [];\n\n\t\t\tfor (var i = 0; i < options.length; i++) {\n\t\t\t\toptionsHtml.push(\"<option value='\" + config.options[i].key + \"'>\" + options[i].label + \"</option>\");\n\t\t\t}\n\n\t\t\thtml += optionsHtml.join(\"\") + \"</select></div>\";\n\t\t\tplaceholder.innerHTML = html;\n\t\t},\n\t\tget_input: function (node) {\n\t\t\treturn node.querySelector(\"select\");\n\t\t}\n\t}, true);\n\n\treturn SelectEditor;\n};","module.exports = function (gantt) {\n\n\tvar BaseEditor = require(\"./base\")(gantt),\n\t\tutils = require(\"../../../../../utils/utils\");\n\tvar __extends = require(\"../../../../../utils/extends\");\n\n\tfunction NumberEditor() {\n\t\tvar self = BaseEditor.apply(this, arguments) || this;\n\t\treturn self;\n\t}\n\n\t__extends(NumberEditor, BaseEditor);\n\n\tutils.mixin(NumberEditor.prototype, {\n\t\tshow: function (id, column, config, placeholder) {\n\t\t\tvar min = config.min || 0,\n\t\t\t\tmax = config.max || 100;\n\n\t\t\tvar html = \"<div><input type='number' min='\" + min + \"' max='\" + max + \"' name='\" + column.name + \"'></div>\";\n\t\t\tplaceholder.innerHTML = html;\n\t\t},\n\t\tget_value: function (id, column, node) {\n\t\t\tvar value = BaseEditor.prototype.get_value(id, column, node);\n\t\t\treturn this.get_input(node).value || \"\";\n\t\t},\n\t\tis_valid: function (value, id, column, node) {\n\t\t\treturn !isNaN(parseInt(value, 10));\n\t\t}\n\t}, true);\n\n\treturn NumberEditor;\n};","module.exports = function(gantt) {\n\n\tvar BaseEditor = require(\"./base\")(gantt),\n\t\tutils = require(\"../../../../../utils/utils\");\n\tvar __extends = require(\"../../../../../utils/extends\");\n\n\tfunction TextEditor() {\n\t\tvar self = BaseEditor.apply(this, arguments) || this;\n\t\treturn self;\n\t}\n\n\t__extends(TextEditor, BaseEditor);\n\n\tutils.mixin(TextEditor.prototype, {\n\t\tshow: function (id, column, config, placeholder) {\n\t\t\tvar html = \"<div><input type='text' name='\" + column.name + \"'></div>\";\n\t\t\tplaceholder.innerHTML = html;\n\t\t}\n\t}, true);\n\n\treturn TextEditor;\n};","module.exports = {\n\tinit: function(controller, grid){\n\t\tvar self = controller;\n\t\tvar gantt = grid.$gantt;\n\n\t\tvar onBlurDelay = null;\n\t\tvar keyNav = gantt.ext.keyboardNavigation;\n\t\tkeyNav.attachEvent(\"onBeforeFocus\", function (node) {\n\t\t\tvar activeCell = controller.locateCell(node);\n\t\t\tclearTimeout(onBlurDelay);\n\t\t\tif (activeCell) {\n\t\t\t\tvar columnName = activeCell.columnName;\n\t\t\t\tvar id = activeCell.id;\n\n\t\t\t\tvar editorState = self.getState();\n\t\t\t\tif(self.isVisible()){\n\t\t\t\t\tif(editorState.id == id && editorState.columnName === columnName) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t});\n\n\t\tkeyNav.attachEvent(\"onFocus\", function (node) {\n\t\t\tvar activeCell = controller.locateCell(node);\n\t\t\tvar state = controller.getState();\n\t\t\tclearTimeout(onBlurDelay);\n\t\t\tif (activeCell && !(activeCell.id == state.id && activeCell.columnName == state.columnName)) {\n\t\t\t\tif(self.isVisible()){\n\t\t\t\t\tself.save();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t});\n\n\t\tcontroller.attachEvent(\"onHide\", function(){\n\t\t\tclearTimeout(onBlurDelay);\n\t\t});\n\n\t\tkeyNav.attachEvent(\"onBlur\", function () {\n\t\t\tonBlurDelay = setTimeout(function(){\n\t\t\t\tself.save();\n\t\t\t});\n\n\t\t\treturn true;\n\t\t});\n\n\t\tgantt.attachEvent(\"onTaskDblClick\", function(id,e){\n\t\t\t// block lightbox on double click inside editor\n\t\t\tvar state = controller.getState();\n\t\t\tvar cell = controller.locateCell(e.target);\n\t\t\tif(cell && controller.isVisible() && cell.columnName == state.columnName){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t});\n\n\t\tgantt.attachEvent(\"onTaskClick\", function (id, e) {\n\t\t\tif(gantt._is_icon_open_click(e))\n\t\t\t\treturn true;\n\n\t\t\tvar state = controller.getState();\n\t\t\tvar cell = controller.locateCell(e.target);\n\n\t\t\tif (cell && controller.getEditorConfig(cell.columnName)) {\n\t\t\t\tif(controller.isVisible() && state.id == cell.id && state.columnName == cell.columnName){\n\t\t\t\t}else{\n\t\t\t\t\tcontroller.startEdit(cell.id, cell.columnName);\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t});\n\t\tgantt.attachEvent(\"onEmptyClick\", function () {\n\t\t\tself.save();\n\t\t\treturn true;\n\t\t});\n\n\t\tkeyNav.attachEvent(\"onKeyDown\", function(command, e){\n\t\t\tvar activeCell = controller.locateCell(e.target);\n\t\t\tvar hasEditor = activeCell ? controller.getEditorConfig(activeCell.columnName) : false;\n\n\t\t\tvar state = controller.getState();\n\t\t\tvar keyboard = gantt.constants.KEY_CODES;\n\t\t\tvar keyCode = e.keyCode;\n\t\t\tvar preventKeyNav = false;\n\n\t\t\tswitch (keyCode){\n\t\t\t\tcase keyboard.ENTER:\n\t\t\t\t\tif(controller.isVisible()){\n\t\t\t\t\t\tcontroller.save();\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tpreventKeyNav = true;\n\t\t\t\t\t}else if(hasEditor && !(e.ctrlKey || e.metaKey || e.shiftKey)){\n\t\t\t\t\t\tself.startEdit(activeCell.id, activeCell.columnName);\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tpreventKeyNav = true;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase keyboard.ESC:\n\t\t\t\t\tif(controller.isVisible()){\n\t\t\t\t\t\tcontroller.hide();\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tpreventKeyNav = true;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase keyboard.UP:\n\t\t\t\tcase keyboard.DOWN:\n\t\t\t\t\tbreak;\n\t\t\t\tcase keyboard.LEFT:\n\t\t\t\tcase keyboard.RIGHT:\n\t\t\t\t\tif(state.editorType === \"date\"){\n\t\t\t\t\t\tpreventKeyNav = true;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase keyboard.SPACE:\n\t\t\t\t\tif(controller.isVisible()){\n\t\t\t\t\t\tpreventKeyNav = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tif(hasEditor && !controller.isVisible()){\n\t\t\t\t\t\tself.startEdit(activeCell.id, activeCell.columnName);\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tpreventKeyNav = true;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase keyboard.DELETE:\n\t\t\t\t\tif(hasEditor && !controller.isVisible()){\n\t\t\t\t\t\tself.startEdit(activeCell.id, activeCell.columnName);\n\t\t\t\t\t\tpreventKeyNav = true;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase keyboard.TAB:\n\t\t\t\t\tif(controller.isVisible()){\n\n\t\t\t\t\t\tif(e.shiftKey){\n\t\t\t\t\t\t\tcontroller.editPrevCell(true);\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tcontroller.editNextCell(true);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar newState = controller.getState();\n\t\t\t\t\t\tif(newState.id){\n\t\t\t\t\t\t\tkeyNav.focus({type:\"taskCell\", id: newState.id, column:newState.columnName});\n\t\t\t\t\t\t}\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tpreventKeyNav = true;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tif(controller.isVisible())\n\t\t\t\t\t\tpreventKeyNav = true;\n\t\t\t\t\telse{\n\n\t\t\t\t\t\t// start editing on character key\n\t\t\t\t\t\tif((keyCode >= 48 && keyCode <= 57) || // [0-9]\n\t\t\t\t\t\t\t(keyCode > 95 && keyCode < 112) || // numpad\n\t\t\t\t\t\t\t(keyCode >= 64 && keyCode <= 91) || // [a-z]\n\t\t\t\t\t\t\t(keyCode > 185 && keyCode < 193) || //;=-,etc\n\t\t\t\t\t\t\t(keyCode > 218  && keyCode < 223)\n\t\t\t\t\t\t){\n\t\t\t\t\t\t\tif(hasEditor && !controller.isVisible()){\n\t\t\t\t\t\t\t\tself.show(activeCell.id, activeCell.columnName);\n\t\t\t\t\t\t\t\tself.setValue();\n\t\t\t\t\t\t\t\tpreventKeyNav = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (preventKeyNav){\n\t\t\t\treturn false;\n\t\t\t} else{\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t});\n\t},\n\tonShow: function(controller, placeholder, grid){},\n\tonHide: function(controller, placeholder, grid){\n\t\tvar gantt = grid.$gantt;\n\t\tgantt.focus();\n\n\t},\n\tdestroy: function(){}\n};\n\n","module.exports = {\n\tinit: function(controller, grid){\n\t\tvar gantt = grid.$gantt;\n\n\t\tgantt.attachEvent(\"onTaskClick\", function (id, e) {\n\t\t\tif(gantt._is_icon_open_click(e))\n\t\t\t\treturn true;\n\t\t\tvar state = controller.getState();\n\t\t\tvar cell = controller.locateCell(e.target);\n\n\t\t\tif (cell && controller.getEditorConfig(cell.columnName)) {\n\t\t\t\tif(controller.isVisible() && state.id == cell.id && state.columnName == cell.columnName){\n\t\t\t\t}else{\n\t\t\t\t\tcontroller.startEdit(cell.id, cell.columnName);\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t});\n\t\tgantt.attachEvent(\"onEmptyClick\", function () {\n\t\t\tcontroller.hide();\n\t\t\treturn true;\n\t\t});\n\n\t\tgantt.attachEvent(\"onTaskDblClick\", function(id,e){\n\t\t\tvar state = controller.getState();\n\t\t\tvar cell = controller.locateCell(e.target);\n\t\t\tif(cell && controller.isVisible() && cell.columnName == state.columnName){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t});\n\t},\n\n\tonShow: function(controller, placeholder, grid){\n\t\tif(grid.$getConfig().keyboard_navigation){\n\t\t\t// keyboard navigation extension will handle arrows if enabled\n\t\t\treturn;\n\t\t}\n\t\tvar gantt = grid.$gantt;\n\t\tplaceholder.onkeydown = function (e) {\n\t\t\te = e || window.event;\n\n\t\t\tvar keyboard = gantt.constants.KEY_CODES;\n\t\t\tif(e.defaultPrevented || (e.shiftKey && e.keyCode != keyboard.TAB)){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar shouldPrevent = true;\n\t\t\tswitch (e.keyCode) {\n\t\t\t\tcase gantt.keys.edit_save:\n\t\t\t\t\tcontroller.save();\n\t\t\t\t\tbreak;\n\t\t\t\tcase gantt.keys.edit_cancel:\n\t\t\t\t\tcontroller.hide();\n\t\t\t\t\tbreak;\n\t\t\t\tcase keyboard.TAB:\n\t\t\t\t\tif(e.shiftKey){\n\t\t\t\t\t\tcontroller.editPrevCell(true);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tcontroller.editNextCell(true);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tshouldPrevent = false;\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif(shouldPrevent){\n\t\t\t\te.preventDefault();\n\t\t\t}\n\t\t};\n\t},\n\tonHide: function(){\n\n\t},\n\n\tdestroy: function(){\n\n\t}\n};\n\n","var defaultMapping = require(\"./keyboard_mappings/default\");\nvar keyNavMappings = require(\"./keyboard_mappings/keyboard_navigation\");\n\nmodule.exports = function(){\n\tvar mapping = null;\n\n\treturn {\n\t\tsetMapping: function(map){\n\t\t\tmapping = map;\n\t\t},\n\t\tgetMapping: function(){\n\n\t\t\tif(mapping){\n\t\t\t\treturn mapping;\n\t\t\t}else if(gantt.config.keyboard_navigation_cells){\n\t\t\t\treturn keyNavMappings;\n\t\t\t}else{\n\t\t\t\treturn defaultMapping;\n\t\t\t}\n\t\t}\n\t};\n};\n","var domHelpers = require(\"../../../utils/dom_helpers\");\n\nfunction createResizer(gantt, grid){\n// renders resize elements in the grid header\n\tvar _render_grid_header_resize = function () {\n\t\tvar columns = grid.getGridColumns(),\n\t\t\tconfig = grid.$getConfig(),\n\t\t\twidth = 0,\n\t\t\ttotalWidth = grid.$config.width,\n\t\t\tlineHeigth = config.scale_height;\n\n\t\tfor (var i = 0; i < columns.length; i++) {\n\t\t\tvar last = i == columns.length - 1;\n\t\t\tvar col = columns[i];\n\n\t\t\tvar pos;\n\t\t\twidth += col.width;\n\t\t\tif(config.rtl){\n\t\t\t\tpos = totalWidth - width;\n\t\t\t}else{\n\t\t\t\tpos = width;\n\t\t\t}\n\n\t\t\tif (col.resize) {\n\t\t\t\tvar resize_el = document.createElement(\"div\");\n\t\t\t\tresize_el.className = \"gantt_grid_column_resize_wrap\";\n\t\t\t\tresize_el.style.top = \"0px\";\n\t\t\t\tresize_el.style.height = lineHeigth + \"px\";\n\t\t\t\tresize_el.innerHTML = \"<div class='gantt_grid_column_resize'></div>\";\n\t\t\t\tresize_el.setAttribute(config.grid_resizer_column_attribute, i);\n\n\t\t\t\tgantt._waiAria.gridSeparatorAttr(resize_el);\n\n\t\t\t\tgrid.$grid_scale.appendChild(resize_el);\n\n\t\t\t\tresize_el.style.left = Math.max(0, pos) + \"px\";\n\t\t\t}\n\t\t}\n\t};\n\n\tvar _grid_resize = {\n\t\tcolumn_before_start: gantt.bind(function (dnd, obj, e) {\n\t\t\tvar config = grid.$getConfig();\n\n\t\t\tvar el = domHelpers.locateAttribute(e, config.grid_resizer_column_attribute);\n\t\t\tif (!el) return false;\n\n\t\t\tvar column_index = this.locate(e, config.grid_resizer_column_attribute),\n\t\t\t\tcolumn = grid.getGridColumns()[column_index];\n\n\t\t\tif (grid.callEvent(\"onColumnResizeStart\", [column_index, column]) === false)\n\t\t\t\treturn false;\n\t\t}, gantt),\n\n\t\tcolumn_after_start: gantt.bind(function (dnd, obj, e) {\n\t\t\tvar config = grid.$getConfig();\n\n\t\t\tvar column_index = this.locate(e, config.grid_resizer_column_attribute);\n\t\t\tdnd.config.marker.innerHTML = \"\";\n\t\t\tdnd.config.marker.className += \" gantt_grid_resize_area\";\n\t\t\tdnd.config.marker.style.height = grid.$grid.offsetHeight + \"px\";\n\t\t\tdnd.config.marker.style.top = \"0px\";\n\t\t\tdnd.config.drag_index = column_index;\n\n\t\t}, gantt),\n\n\t\tcolumn_drag_move: gantt.bind(function (dnd, obj, e) {\n\t\t\tvar config = grid.$getConfig();\n\n\t\t\tvar dd = dnd.config,\n\t\t\t\tcolumns = grid.getGridColumns();\n\t\t\tvar index = parseInt(dd.drag_index, 10);\n\t\t\tvar target_column = columns[index];\n\t\t\tvar\tpos = domHelpers.getNodePosition(grid.$grid_scale),\n\t\t\t\tpointerPosition = parseInt(dd.marker.style.left, 10),\n\t\t\t\tminPointerPosition = target_column.min_width ? target_column.min_width : config.min_grid_column_width,\n\t\t\t\tmaxPointerPosition = grid.$grid_data.offsetWidth,// - config.min_grid_column_width * (columns.length - dd.drag_index - 2),// 1 for current column + 1 for last column\n\t\t\t\tmarkerStartPosition = 0,\n\t\t\t\tmarker_width = 0;\n\n\t\t\t\n\t\t/*\tif(config.rtl){\n\t\t\t\tindex = columns.length - 1 - index;\n\t\t\t\tcolumns = columns.reverse();\n\t\t\t}*/\n\n\t\t\tif(!config.rtl){\n\t\t\t\tpointerPosition -= pos.x - 1;\n\t\t\t}else{\n\t\t\t\tpointerPosition = (pos.x + pos.width - 1) - pointerPosition;\n\t\t\t}\n\n\t\t\t//pointerPosition -= pos.x - 1;\n\t\t\tfor (var i = 0; i < index; i++) {\n\t\t\t\tminPointerPosition += columns[i].width;\n\t\t\t\tmarkerStartPosition += columns[i].width;\n\t\t\t}\n\n\t\t\tif (pointerPosition < minPointerPosition) {\n\t\t\t\tpointerPosition = minPointerPosition;\n\t\t\t}\n\n\t\t\tif (config.keep_grid_width) {\n\t\t\t\tvar limit_max = 0;\n\t\t\t\tfor (var i=index+1; i<columns.length; i++) {\n\t\t\t\t\tif (columns[i].min_width)\n\t\t\t\t\t\tmaxPointerPosition -= columns[i].min_width;\n\t\t\t\t\telse if (config.min_grid_column_width)\n\t\t\t\t\t\tmaxPointerPosition -= config.min_grid_column_width;\n\n\t\t\t\t\tif (columns[i].max_width && limit_max !== false)\n\t\t\t\t\t\tlimit_max += columns[i].max_width;\n\t\t\t\t\telse\n\t\t\t\t\t\tlimit_max = false;\t\t\t\t\t\n\t\t\t\t}\n\n\t\t\t\t// we have to restrict min value if only ALL right-side columns have 'max_width' field\n\t\t\t\tif (limit_max) {\n\t\t\t\t\tminPointerPosition = grid.$grid_data.offsetWidth - limit_max;\n\t\t\t\t}\n\t\t\t\tif (pointerPosition < minPointerPosition) {\n\t\t\t\t\tpointerPosition = minPointerPosition;\n\t\t\t\t}\n\n\t\t\t\tif (pointerPosition > maxPointerPosition)\n\t\t\t\t\tpointerPosition = maxPointerPosition;\n\t\t\t} else if (!grid.$config.scrollable) {\n\t\t\t\tvar targetWidth = pointerPosition;\n\t\t\t\tvar rightColumnsWidth = 0;\n\t\t\t\tfor (var i=index+1; i<columns.length; i++) {\n\t\t\t\t\trightColumnsWidth += columns[i].width;\n\t\t\t\t}\n\t\n\t\t\t\tif(targetWidth + rightColumnsWidth > gantt.$container.offsetWidth){\n\t\t\t\t\tpointerPosition = gantt.$container.offsetWidth - rightColumnsWidth;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdd.left = pointerPosition - 1;// -1 for border\n\n\t\t\tmarker_width = Math.abs(pointerPosition - markerStartPosition);\n\n\t\t\t// column.max_width - maximum width of the column, user defined\n\t\t\tif (target_column.max_width && marker_width > target_column.max_width)\n\t\t\t\tmarker_width = target_column.max_width;\n\n\t\t\tif(config.rtl){\n\t\t\t\tmarkerStartPosition = (pos.width - markerStartPosition) + 2 - marker_width;\n\t\t\t}\n\t\t\tdd.marker.style.top = pos.y + \"px\";\n\t\t\tdd.marker.style.left = pos.x - 1 + markerStartPosition + \"px\";\n\t\t\tdd.marker.style.width = marker_width + \"px\";\n\n\t\t\tgrid.callEvent(\"onColumnResize\", [index, columns[index], marker_width - 1]);\n\t\t\treturn true;\n\t\t}, gantt),\n\n\t\tcolumn_drag_end: gantt.bind(function (dnd, obj, e) {\n\t\t\tvar config = grid.$getConfig();\n\t\t\tvar columns = grid.getGridColumns(),\n\t\t\t\tcolumns_width = 0,\n\t\t\t\tindex = parseInt(dnd.config.drag_index, 10),\n\t\t\t\ttarget_column = columns[index];\n\n\t\t\t// var colIndex = index;\n\t\t\t/*if(config.rtl){\n\t\t\t\tcolIndex = columns.length - 1 - target_index;\n\t\t\t\tcolumns = columns.reverse();\n\t\t\t}*/\n\n\t\t\tfor (var i = 0; i < index; i++) {\n\t\t\t\tcolumns_width += columns[i].width;\n\t\t\t}\n\n\t\t\tvar final_width = (target_column.min_width && (dnd.config.left - columns_width) < target_column.min_width) ?\n\t\t\t\ttarget_column.min_width : (dnd.config.left - columns_width);\n\n\t\t\tif (target_column.max_width && target_column.max_width < final_width) // TODO: probably can be omitted\n\t\t\t\tfinal_width = target_column.max_width;\n\n\t\t\tif (grid.callEvent(\"onColumnResizeEnd\", [index, target_column, final_width]) === false)\n\t\t\t\treturn;\n\n\t\t\tif (target_column.width == final_width)\n\t\t\t\treturn;\n\n\t\t\ttarget_column.width = final_width;\n\n\t\t\tif (config.keep_grid_width) {\n\t\t\t\tcolumns_width = config.grid_width;\n\t\t\t} else {\n\t\t\t\t// in other case we set a new grid width and call gantt render\n\t\t\t\tfor (var i = index, l = columns.length; i < l; i++) {\n\t\t\t\t\tcolumns_width += columns[i].width;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tgrid.callEvent(\"onColumnResizeComplete\", [columns, grid._setColumnsWidth(columns_width, index)]);\n\n\t\t\tif(!grid.$config.scrollable){\n\t\t\t\tgantt.$layout._syncCellSizes(grid.$config.group, config.grid_width);\n\t\t\t}\n\t\t\t//grid.callEvent(\"onColumnResizeComplete\", [columns, columns_width]);\n\n\t\t\tthis.render();\n\t\t}, gantt)\n\t};\n\n// calls the initialization of the D'n'D events for resize elements\n\tvar _init_resize = function () {\n\t\tvar DnD = gantt.$services.getService(\"dnd\");\n\n\t\tvar config = grid.$getConfig();\n\n\t\tvar dnd = new DnD(grid.$grid_scale, {updates_per_second: 60});\n\t\tif (gantt.defined(config.dnd_sensitivity))\n\t\t\tdnd.config.sensitivity = config.dnd_sensitivity;\n\n\t\tdnd.attachEvent(\"onBeforeDragStart\", function (obj, e) {\n\t\t\treturn _grid_resize.column_before_start(dnd, obj, e);\n\t\t});\n\t\tdnd.attachEvent(\"onAfterDragStart\", function (obj, e) {\n\t\t\treturn _grid_resize.column_after_start(dnd, obj, e);\n\t\t});\n\t\tdnd.attachEvent(\"onDragMove\", function (obj, e) {\n\t\t\treturn _grid_resize.column_drag_move(dnd, obj, e);\n\t\t});\n\t\tdnd.attachEvent(\"onDragEnd\", function (obj, e) {\n\t\t\treturn _grid_resize.column_drag_end(dnd, obj, e);\n\t\t});\n\n\t};\n\n\treturn {\n\t\tinit: _init_resize,\n\t\tdoOnRender: _render_grid_header_resize\n\t};\n}\n\nmodule.exports = createResizer;","var utils = require(\"../../../utils/utils\"),\n\tenv = require(\"../../../utils/env\");\n\nvar createStaticBgHelper = function(utils, env){\n\n\tvar canvasBgCache = {};\n\tvar staticBgStyleId = \"gantt-static-bg-styles-\" + utils.uid();\n\n\tfunction renderBgCanvas(targetNode, config, scale, totalHeight) {\n\t\tif (!config.static_background) return;\n\n\t\tvar canvas = document.createElement(\"canvas\");\n\t\tif (!canvas.getContext) return; // if canvas is not supported (for IE8)\n\n\t\t// clear previous bg data\n\t\ttargetNode.innerHTML = \"\";\n\n\t\tvar styleParams = getCellStyles(targetNode);\n\t\tvar png = createBackgroundTiles(styleParams, config, scale);\n\t\tvar bgDivs = createBgDivs(png, config, scale, totalHeight);\n\n\t\tvar fragment = document.createDocumentFragment();\n\n\t\tbgDivs.forEach(function (div) {\n\t\t\tfragment.appendChild(div);\n\t\t});\n\n\t\ttargetNode.appendChild(fragment);\n\t}\n\n\tfunction getColumnWidths(scale) {\n\t\tvar widths = scale.width;\n\t\tvar differentWidths = {};\n\t\tfor (var i = 0; i < widths.length; i++) {\n\t\t\tif (widths[i] * 1)\n\t\t\t\tdifferentWidths[widths[i]] = true;\n\t\t}\n\t\treturn differentWidths;\n\t}\n\n\tfunction parseRgb(rgbCss) {\n\t\tvar result = /^rgba?\\(([\\d]{1,3}), *([\\d]{1,3}), *([\\d]{1,3}) *(,( *[\\d\\.]+ *))?\\)$/i.exec(rgbCss);\n\t\treturn result ? {\n\t\t\tr: result[1] * 1,\n\t\t\tg: result[2] * 1,\n\t\t\tb: result[3] * 1,\n\t\t\ta: (result[5] * 255) || 255\n\t\t} : null;\n\t}\n\n\tfunction getUrlFromCache(key) {\n\t\treturn canvasBgCache[key] || null;\n\t}\n\n\tfunction getHashKey(width, height, cellStyles) {\n\t\treturn (width + '' + height + cellStyles.bottomBorderColor + cellStyles.rightBorderColor).replace(/[^\\w\\d]/g, '');\n\t}\n\n\tfunction getStyleElement() {\n\t\tvar style = document.getElementById(staticBgStyleId);\n\n\t\tif (!style) {\n\t\t\tstyle = document.createElement(\"style\");\n\t\t\tstyle.id = staticBgStyleId;\n\t\t\tdocument.body.appendChild(style);\n\t\t}\n\t\treturn style;\n\t}\n\n\tfunction cacheUrl(key, url) {\n\t\tcanvasBgCache[key] = url;\n\t}\n\n\tfunction generateBgUrl(width, height, cellStyles) {\n\t\t// use relatively big bg image about 500*500px in order to reduce misalignments due browser zoom\n\t\tvar cols = Math.floor(500 / width) || 1;\n\t\tvar rows = Math.floor(500 / height) || 1;\n\n\t\tvar canvas = document.createElement(\"canvas\");\n\t\tcanvas.height = height * rows;\n\t\tcanvas.width = width * cols;\n\n\t\tvar context = canvas.getContext(\"2d\");\n\n\t\tdrawGrid(height, width, rows, cols, context, cellStyles);\n\n\t\treturn canvas.toDataURL();\n\n\t\tfunction drawGrid(rowHeight, colWidth, rows, cols, context, styles) {\n\t\t\t// paint pixels manually instead of using lineTo in order to prevent canvas aliasing\n\t\t\tvar image = context.createImageData(colWidth * cols, rowHeight * rows);\n\t\t\timage.imageSmoothingEnabled = false;\n\n\t\t\tvar verticalLineWidth = styles.rightBorderWidth * 1;\n\t\t\tvar verticalLineColor = parseRgb(styles.rightBorderColor);\n\n\t\t\tvar x = 0,\n\t\t\t\ty = 0,\n\t\t\t\tw = 0;\n\n\t\t\tfor (var col = 1; col <= cols; col++) {\n\t\t\t\tx = col * colWidth - 1;\n\t\t\t\tfor (w = 0; w < verticalLineWidth; w++) {\n\t\t\t\t\tfor (y = 0; y < rowHeight * rows; y++) {\n\t\t\t\t\t\tdrawDot(x - w, y, verticalLineColor, image);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar horizontalLineWidth = styles.bottomBorderWidth * 1;\n\t\t\tvar horizontalLineColor = parseRgb(styles.bottomBorderColor);\n\n\t\t\ty = 0;\n\t\t\tfor (var row = 1; row <= rows; row++) {\n\t\t\t\ty = row * rowHeight - 1;\n\t\t\t\tfor (w = 0; w < horizontalLineWidth; w++) {\n\t\t\t\t\tfor (x = 0; x < colWidth * cols; x++) {\n\t\t\t\t\t\tdrawDot(x, y - w, horizontalLineColor, image);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tcontext.putImageData(image, 0, 0);\n\t\t}\n\n\t\tfunction drawDot(x, y, color, matrix) {\n\t\t\tvar rowLength = width * cols;\n\n\t\t\tvar index = (y * rowLength + x) * 4;\n\n\t\t\tmatrix.data[index] = color.r;\n\t\t\tmatrix.data[index + 1] = color.g;\n\t\t\tmatrix.data[index + 2] = color.b;\n\t\t\tmatrix.data[index + 3] = color.a;\n\t\t}\n\t}\n\n\tfunction getCssClass(key) {\n\t\treturn \"gantt-static-bg-\" + key;\n\t}\n\n\tfunction createBackgroundTiles(cellStyles, config, scale) {\n\t\tvar data = {};\n\t\tvar widths = getColumnWidths(scale),\n\t\t\theight = config.row_height;\n\n\t\tvar styleHTML = \"\";\n\t\tfor (var i in widths) {\n\n\t\t\tvar width = i * 1;\n\t\t\tvar key = getHashKey(width, height, cellStyles);\n\t\t\tvar cachedUrl = getUrlFromCache(key);\n\n\t\t\tif (!cachedUrl) {\n\t\t\t\tvar bgImage = generateBgUrl(width, height, cellStyles);\n\t\t\t\tcacheUrl(key, bgImage);\n\t\t\t\tstyleHTML += \".\" + getCssClass(key) + \"{ background-image: url('\" + bgImage + \"');}\";\n\t\t\t}\n\n\t\t\tdata[i] = getCssClass(key);\n\t\t}\n\n\t\tif (styleHTML) {\n\t\t\tvar style = getStyleElement();\n\t\t\tstyle.innerHTML += styleHTML;\n\t\t}\n\n\t\treturn data;\n\t}\n\n\tfunction createBgDivs(bgTiles, config, scale, dataHeight) {\n\t\tvar divs = [];\n\t\tvar tile,\n\t\t\tprevWidth = 0,\n\t\t\tprevCell;\n\n\t\tvar widths = scale.width.filter(function (i) {\n\t\t\treturn !!i;\n\t\t});\n\n\t\tvar leftPos = 0;\n\n\t\t//TODO: fixme\n\t\t// bg image misalignments on horizontal scroll on very large time scales, especially in IE/Edge browsers\n\t\t// limiting max tile width seems to solve the issue, but can increase rendering time\n\t\tvar maxTileSize = 100000;\n\t\tif (env.isIE) {\n\t\t\t// special case for IE11 on win7x and probably 8x\n\t\t\tvar appVersion = navigator.appVersion || \"\";\n\t\t\tif (appVersion.indexOf(\"Windows NT 6.2\") != -1 ||\n\t\t\t\tappVersion.indexOf(\"Windows NT 6.1\") != -1 ||\n\t\t\t\tappVersion.indexOf(\"Windows NT 6.0\") != -1) {\n\n\t\t\t\tmaxTileSize = 20000;\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i < widths.length; i++) {\n\t\t\t//var currentWidth = cells[i].clientWidth;\n\t\t\tvar cell = widths[i];\n\n\t\t\tif ((cell != prevCell && prevCell !== undefined) || (i == widths.length - 1) || (prevWidth > maxTileSize)) {\n\n\t\t\t\tvar totalHeight = dataHeight,\n\t\t\t\t\tcurrentTop = 0,\n\t\t\t\t\trowHeight = Math.floor(maxTileSize / config.row_height) * config.row_height;\n\n\t\t\t\tvar tileWidth = prevWidth;\n\n\t\t\t\twhile (totalHeight > 0) {\n\t\t\t\t\tvar currentHeight = Math.min(totalHeight, rowHeight);\n\t\t\t\t\ttotalHeight -= rowHeight;\n\n\t\t\t\t\ttile = document.createElement(\"div\");\n\n\t\t\t\t\ttile.style.height = currentHeight + \"px\";\n\t\t\t\t\ttile.style.position = \"absolute\";\n\t\t\t\t\ttile.style.top = currentTop + \"px\";\n\t\t\t\t\ttile.style.left = leftPos + \"px\";\n\n\t\t\t\t\ttile.style.whiteSpace = \"no-wrap\";\n\t\t\t\t\ttile.className = bgTiles[prevCell || cell];\n\n\t\t\t\t\t// if last - short by 1 px (bug fix)\n\t\t\t\t\tif (i == widths.length - 1) {\n\t\t\t\t\t\ttileWidth = cell + tileWidth - 1;\n\t\t\t\t\t}\n\t\t\t\t\ttile.style.width = tileWidth + \"px\";\n\n\t\t\t\t\tdivs.push(tile);\n\t\t\t\t\tcurrentTop += currentHeight;\n\t\t\t\t}\n\t\t\t\tprevWidth = 0;\n\t\t\t\tleftPos += tileWidth;\n\n\t\t\t\t//cell = 0;\n\t\t\t}\n\t\t\tif (cell) {\n\t\t\t\tprevWidth += cell;\n\t\t\t\tprevCell = cell;\n\t\t\t}\n\n\t\t}\n\n\t\treturn divs;\n\t}\n\n\tfunction getCellStyles(targetNode) {\n\t\t// creating temp DOM structure for resolving style parameters. Will be removed after calculating.\n\t\tvar cell = document.createElement(\"div\");\n\t\tcell.className = \"gantt_task_cell\";\n\t\tvar row = document.createElement(\"div\");\n\t\trow.className = \"gantt_task_row\";\n\t\trow.appendChild(cell);\n\t\ttargetNode.appendChild(row);\n\n\t\tvar rowStyles = getComputedStyle(row),\n\t\t\tcellStyles = getComputedStyle(cell);\n\n\t\tvar params = {\n\t\t\tbottomBorderWidth: rowStyles.getPropertyValue(\"border-bottom-width\").replace(\"px\", \"\"),\n\t\t\trightBorderWidth: cellStyles.getPropertyValue(\"border-right-width\").replace(\"px\", \"\"),\n\t\t\tbottomBorderColor: rowStyles.getPropertyValue(\"border-bottom-color\"),\n\t\t\trightBorderColor: cellStyles.getPropertyValue(\"border-right-color\")\n\t\t};\n\n\t\ttargetNode.removeChild(row);\n\n\t\treturn params;\n\t}\n\n\treturn {\n\t\trender: renderBgCanvas\n\t};\n};\n\nmodule.exports = {\n\tcreate: function(){\n\t\treturn createStaticBgHelper(utils, env);\n\t}\n};\n\n","var utils = require(\"../../../utils/utils\");\n\nfunction ScaleHelper(gantt){\n\tvar dateHelper = gantt.date;\n\tvar services = gantt.$services;\n\n\treturn {\n\t\tgetSum: function (sizes, from, to) {\n\t\t\tif (to === undefined)\n\t\t\t\tto = sizes.length - 1;\n\t\t\tif (from === undefined)\n\t\t\t\tfrom = 0;\n\n\t\t\tvar summ = 0;\n\t\t\tfor (var i = from; i <= to; i++)\n\t\t\t\tsumm += sizes[i];\n\n\t\t\treturn summ;\n\t\t},\n\t\tsetSumWidth: function (sum_width, scale, from, to) {\n\t\t\tvar parts = scale.width;\n\n\t\t\tif (to === undefined)\n\t\t\t\tto = parts.length - 1;\n\t\t\tif (from === undefined)\n\t\t\t\tfrom = 0;\n\t\t\tvar length = to - from + 1;\n\n\t\t\tif (from > parts.length - 1 || length <= 0 || to > parts.length - 1)\n\t\t\t\treturn;\n\n\t\t\tvar oldWidth = this.getSum(parts, from, to);\n\n\t\t\tvar diff = sum_width - oldWidth;\n\n\t\t\tthis.adjustSize(diff, parts, from, to);\n\t\t\tthis.adjustSize(-diff, parts, to + 1);\n\n\t\t\tscale.full_width = this.getSum(parts);\n\t\t},\n\t\tsplitSize: function (width, count) {\n\t\t\tvar arr = [];\n\t\t\tfor (var i = 0; i < count; i++) arr[i] = 0;\n\n\t\t\tthis.adjustSize(width, arr);\n\t\t\treturn arr;\n\n\t\t},\n\t\tadjustSize: function (width, parts, from, to) {\n\t\t\tif (!from)\n\t\t\t\tfrom = 0;\n\t\t\tif (to === undefined)\n\t\t\t\tto = parts.length - 1;\n\n\t\t\tvar length = to - from + 1;\n\n\t\t\tvar full = this.getSum(parts, from, to);\n\n\t\t\tvar shared = 0;\n\n\t\t\tfor (var i = from; i <= to; i++) {\n\t\t\t\tvar share = Math.floor(width * (full ? (parts[i] / full) : (1 / length)));\n\n\t\t\t\tfull -= parts[i];\n\t\t\t\twidth -= share;\n\t\t\t\tlength--;\n\n\t\t\t\tparts[i] += share;\n\t\t\t\tshared += share;\n\t\t\t}\n\t\t\tparts[parts.length - 1] += width;\n\t\t\t//parts[parts.length - 1] += width - shared;\n\t\t},\n\t\tsortScales: function (scales) {\n\t\t\tfunction cellSize(unit, step) {\n\t\t\t\tvar d = new Date(1970, 0, 1);\n\t\t\t\treturn dateHelper.add(d, step, unit) - d;\n\t\t\t}\n\n\t\t\tscales.sort(function (a, b) {\n\t\t\t\tif (cellSize(a.unit, a.step) < cellSize(b.unit, b.step)) {\n\t\t\t\t\treturn 1;\n\t\t\t\t} else if (cellSize(a.unit, a.step) > cellSize(b.unit, b.step)) {\n\t\t\t\t\treturn -1;\n\t\t\t\t} else {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tfor (var i = 0; i < scales.length; i++) {\n\t\t\t\tscales[i].index = i;\n\t\t\t}\n\t\t},\n\t\tprimaryScale: function () {\n\n\t\t\tvar config = services.getService(\"templateLoader\");\n\t\t\tconfig.initTemplate(\"date_scale\", undefined, undefined, services.config(), services.templates());\n\n\t\t\treturn {\n\t\t\t\tunit: services.config().scale_unit,\n\t\t\t\tstep: services.config().step,\n\t\t\t\ttemplate: services.templates().date_scale,\n\t\t\t\tdate: services.config().date_scale,\n\t\t\t\tcss: services.templates().scale_cell_class\n\t\t\t};\n\t\t},\n\n\t\tprepareConfigs: function (scales, min_coll_width, container_width, scale_height, minDate, maxDate, rtl) {\n\t\t\tvar heights = this.splitSize(scale_height, scales.length);\n\t\t\tvar full_width = container_width;\n\n\t\t\tvar configs = [];\n\t\t\tfor (var i = scales.length - 1; i >= 0; i--) {\n\t\t\t\tvar main_scale = (i == scales.length - 1);\n\t\t\t\tvar cfg = this.initScaleConfig(scales[i], minDate, maxDate);\n\t\t\t\tif (main_scale) {\n\t\t\t\t\tthis.processIgnores(cfg);\n\t\t\t\t}\n\n\t\t\t\tthis.initColSizes(cfg, min_coll_width, full_width, heights[i]);\n\t\t\t\tthis.limitVisibleRange(cfg);\n\n\t\t\t\tif (main_scale) {\n\t\t\t\t\tfull_width = cfg.full_width;\n\t\t\t\t}\n\n\t\t\t\tconfigs.unshift(cfg);\n\t\t\t}\n\n\n\t\t\tfor (var i = 0; i < configs.length - 1; i++) {\n\t\t\t\tthis.alineScaleColumns(configs[configs.length - 1], configs[i]);\n\t\t\t}\n\t\t\tfor (var i = 0; i < configs.length; i++) {\n\n\t\t\t\tif(rtl){\n\t\t\t\t\tthis.reverseScale(configs[i]);\n\t\t\t\t}\n\t\t\t\tthis.setPosSettings(configs[i]);\n\t\t\t}\n\t\t\treturn configs;\n\n\t\t},\n\n\t\treverseScale: function(scale){\n\t\t\tscale.width = scale.width.reverse();\n\t\t\tscale.trace_x = scale.trace_x.reverse();\n\n\t\t\tvar indexes = scale.trace_indexes;\n\t\t\tscale.trace_indexes = {};\n\t\t\tscale.trace_index_transition = {};\n\t\t\tscale.rtl = true;\n\t\t\tfor(var i = 0; i < scale.trace_x.length; i++){\n\t\t\t\tscale.trace_indexes[scale.trace_x[i].valueOf()] = i;\n\t\t\t\tscale.trace_index_transition[indexes[scale.trace_x[i].valueOf()]] = i;\n\t\t\t}\n\t\t\treturn scale;\n\t\t},\n\n\t\tsetPosSettings: function (config) {\n\t\t\tfor (var i = 0, len = config.trace_x.length; i < len; i++) {\n\t\t\t\tconfig.left.push((config.width[i - 1] || 0) + (config.left[i - 1] || 0));\n\t\t\t}\n\t\t},\n\n\t\t_ignore_time_config: function (date, scale) {\n\n\t\t\tif (services.config().skip_off_time) {\n\t\t\t\tvar skip = true;\n\t\t\t\tvar probe = date;\n\n\t\t\t\t// check dates in case custom scale unit, e.g. {unit: \"month\", step: 3}\n\t\t\t\tfor (var i = 0; i < scale.step; i++) {\n\t\t\t\t\tif (i) {\n\t\t\t\t\t\tprobe = dateHelper.add(date, i, scale.unit);\n\t\t\t\t\t}\n\n\t\t\t\t\tskip = skip && !this.isWorkTime(probe, scale.unit);\n\t\t\t\t}\n\n\t\t\t\treturn skip;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\t//defined in an extension\n\t\tprocessIgnores: function (config) {\n\t\t\tconfig.ignore_x = {};\n\t\t\tconfig.display_count = config.count;\n\t\t},\n\t\tinitColSizes: function (config, min_col_width, full_width, line_height) {\n\t\t\tvar cont_width = full_width;\n\n\t\t\tconfig.height = line_height;\n\n\t\t\tvar column_count = config.display_count === undefined ? config.count : config.display_count;\n\n\t\t\tif (!column_count)\n\t\t\t\tcolumn_count = 1;\n\n\t\t\tconfig.col_width = Math.floor(cont_width / column_count);\n\n\t\t\tif (min_col_width) {\n\t\t\t\tif (config.col_width < min_col_width) {\n\t\t\t\t\tconfig.col_width = min_col_width;\n\t\t\t\t\tcont_width = config.col_width * column_count;\n\t\t\t\t}\n\t\t\t}\n\t\t\tconfig.width = [];\n\t\t\tvar ignores = config.ignore_x || {};\n\t\t\tfor (var i = 0; i < config.trace_x.length; i++) {\n\t\t\t\tif (ignores[config.trace_x[i].valueOf()] || (config.display_count == config.count)) {\n\t\t\t\t\tconfig.width[i] = 0;\n\t\t\t\t} else {\n\t\t\t\t\t// width of month columns should be proportional month duration\n\t\t\t\t\tvar width = 1;\n\t\t\t\t\tif (config.unit == \"month\") {\n\t\t\t\t\t\tvar days = Math.round((dateHelper.add(config.trace_x[i], config.step, config.unit) - config.trace_x[i]) / (1000 * 60 * 60 * 24));\n\t\t\t\t\t\twidth = days;\n\t\t\t\t\t}\n\t\t\t\t\tconfig.width[i] = width;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.adjustSize(cont_width - this.getSum(config.width)/* 1 width per column from the code above */, config.width);\n\t\t\tconfig.full_width = this.getSum(config.width);\n\t\t},\n\t\tinitScaleConfig: function (config, min_date, max_date) {\n\t\t\tvar cfg = utils.mixin({\n\t\t\t\tcount: 0,\n\t\t\t\tcol_width: 0,\n\t\t\t\tfull_width: 0,\n\t\t\t\theight: 0,\n\t\t\t\twidth: [],\n\t\t\t\tleft: [],\n\t\t\t\ttrace_x: [],\n\t\t\t\ttrace_indexes: {},\n\t\t\t\tmin_date: new Date(min_date),\n\t\t\t\tmax_date: new Date(max_date)\n\t\t\t}, config);\n\n\t\t\tthis.eachColumn(config.unit, config.step, min_date, max_date, function (date) {\n\t\t\t\tcfg.count++;\n\t\t\t\tcfg.trace_x.push(new Date(date));\n\t\t\t\tcfg.trace_indexes[date.valueOf()] = cfg.trace_x.length - 1;\n\t\t\t});\n\n\t\t\tcfg.trace_x_ascending = cfg.trace_x.slice();\n\t\t\treturn cfg;\n\t\t},\n\t\titerateScales: function (lower_scale, upper_scale, from, to, callback) {\n\t\t\tvar upper_dates = upper_scale.trace_x;\n\t\t\tvar lower_dates = lower_scale.trace_x;\n\n\t\t\tvar prev = from || 0;\n\t\t\tvar end = to || (lower_dates.length - 1);\n\t\t\tvar prevUpper = 0;\n\n\n\t\t\tfor (var up = 1; up < upper_dates.length; up++) {\n\t\t\t\tvar target_index = (lower_scale.trace_indexes[+upper_dates[up]]);\n\t\t\t\tif (target_index !== undefined && target_index <= end) {\n\t\t\t\t\tif (callback) {\n\t\t\t\t\t\tcallback.apply(this, [prevUpper, up, prev, target_index]);\n\t\t\t\t\t}\n\t\t\t\t\tprev = target_index;\n\t\t\t\t\tprevUpper = up;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\talineScaleColumns: function (lower_scale, upper_scale, from, to) {\n\t\t\tthis.iterateScales(lower_scale, upper_scale, from, to, function (upper_start, upper_end, lower_start, lower_end) {\n\t\t\t\tvar targetWidth = this.getSum(lower_scale.width, lower_start, lower_end - 1);\n\t\t\t\tvar actualWidth = this.getSum(upper_scale.width, upper_start, upper_end - 1);\n\t\t\t\tif (actualWidth != targetWidth) {\n\t\t\t\t\tthis.setSumWidth(targetWidth, upper_scale, upper_start, upper_end - 1);\n\t\t\t\t}\n\n\t\t\t});\n\t\t},\n\n\t\teachColumn: function (unit, step, min_date, max_date, callback) {\n\t\t\tvar start = new Date(min_date),\n\t\t\t\tend = new Date(max_date);\n\t\t\tif (dateHelper[unit + \"_start\"]) {\n\t\t\t\tstart = dateHelper[unit + \"_start\"](start);\n\t\t\t}\n\n\t\t\tvar curr = new Date(start);\n\t\t\tif (+curr >= +end) {\n\t\t\t\tend = dateHelper.add(curr, step, unit);\n\t\t\t}\n\t\t\twhile (+curr < +end) {\n\t\t\t\tcallback.call(this, new Date(curr));\n\t\t\t\tvar tzOffset = curr.getTimezoneOffset();\n\t\t\t\tcurr = dateHelper.add(curr, step, unit);\n\t\t\t\tcurr = gantt._correct_dst_change(curr, tzOffset, step, unit);\n\t\t\t\tif (dateHelper[unit + '_start'])\n\t\t\t\t\tcurr = dateHelper[unit + \"_start\"](curr);\n\t\t\t}\n\t\t},\n\t\tlimitVisibleRange: function (cfg) {\n\t\t\tvar dates = cfg.trace_x;\n\n\t\t\tvar left = 0, right = cfg.width.length - 1;\n\t\t\tvar diff = 0;\n\t\t\tif (+dates[0] < +cfg.min_date && left != right) {\n\t\t\t\tvar width = Math.floor(cfg.width[0] * ((dates[1] - cfg.min_date) / (dates[1] - dates[0])));\n\t\t\t\tdiff += cfg.width[0] - width;\n\t\t\t\tcfg.width[0] = width;\n\n\t\t\t\tdates[0] = new Date(cfg.min_date);\n\t\t\t}\n\n\t\t\tvar last = dates.length - 1;\n\t\t\tvar lastDate = dates[last];\n\t\t\tvar outDate = dateHelper.add(lastDate, cfg.step, cfg.unit);\n\t\t\tif (+outDate > +cfg.max_date && last > 0) {\n\t\t\t\tvar width = cfg.width[last] - Math.floor(cfg.width[last] * ((outDate - cfg.max_date) / (outDate - lastDate)));\n\t\t\t\tdiff += cfg.width[last] - width;\n\t\t\t\tcfg.width[last] = width;\n\t\t\t}\n\n\t\t\tif (diff) {\n\t\t\t\tvar full = this.getSum(cfg.width);\n\t\t\t\tvar shared = 0;\n\t\t\t\tfor (var i = 0; i < cfg.width.length; i++) {\n\t\t\t\t\tvar share = Math.floor(diff * (cfg.width[i] / full));\n\t\t\t\t\tcfg.width[i] += share;\n\t\t\t\t\tshared += share;\n\t\t\t\t}\n\t\t\t\tthis.adjustSize(diff - shared, cfg.width);\n\t\t\t}\n\n\t\t}\n\t};\n}\n\nmodule.exports = ScaleHelper;\n","var __extends = require(\"../../../utils/extends\"),\n\tdomHelpers = require(\"../../../utils/dom_helpers\"),\n\tutils = require(\"../../../utils/utils\"),\n\tenv = require(\"../../../utils/env\"),\n\teventable = require(\"../../../utils/eventable\"),\n\tCell = require(\"./cell\");\n\nvar ScrollbarCell = (function (_super) {\n\t\"use strict\";\n\n\t__extends(ScrollbarCell, _super);\n\tfunction ScrollbarCell(parent, config, factory, gantt) {\n\n\t\tvar _this = _super.apply(this, arguments) || this;\n\t\tthis.$config = utils.mixin(config, {scroll: \"x\"});\n\t\t_this._scrollHorizontalHandler = utils.bind(_this._scrollHorizontalHandler, _this);\n\t\t_this._scrollVerticalHandler = utils.bind(_this._scrollVerticalHandler, _this);\n\t\t_this._outerScrollVerticalHandler = utils.bind(_this._outerScrollVerticalHandler, _this);\n\t\t_this._outerScrollHorizontalHandler = utils.bind(_this._outerScrollHorizontalHandler, _this);\n\t\t_this._mouseWheelHandler = utils.bind(_this._mouseWheelHandler, _this);\n\n\t\tthis.$config.hidden = true;\n\t\tvar size = gantt.config.scroll_size;\n\n\t\tif(gantt.env.isIE){\n\t\t\t// full element height/width must be bigger than just a browser scrollbar,\n\t\t\t// otherwise the scrollbar element won't be scrolled on click\n\t\t\tsize += 1;\n\t\t}\n\n\t\tif(this._isHorizontal()){\n\t\t\t_this.$config.height = size;\n\t\t\t_this.$parent.$config.height = size;\n\t\t}else{\n\t\t\t_this.$config.width = size;\n\t\t\t_this.$parent.$config.width = size;\n\t\t}\n\n\t\tthis.$config.scrollPosition = 0;\n\n\t\t_this.$name = \"scroller\";\n\t\treturn _this;\n\t}\n\n\tScrollbarCell.prototype.init = function(container){\n\t\tcontainer.innerHTML = this.$toHTML();\n\t\tthis.$view = container.firstChild;\n\n\t\tif(!this.$view){\n\t\t\tthis.init();\n\t\t}\n\t\tif(this._isVertical()){\n\t\t\tthis._initVertical();\n\t\t}else{\n\t\t\tthis._initHorizontal();\n\t\t}\n\t\tthis._initMouseWheel();\n\t\tthis._initLinkedViews();\n\t};\n\n\tScrollbarCell.prototype.$toHTML = function () {\n\t\tvar className = this._isHorizontal() ? \"gantt_hor_scroll\" : \"gantt_ver_scroll\";\n\t\treturn \"<div class='gantt_layout_cell \"+className+\"'><div style='\"+(this._isHorizontal() ? \"width:2000px\" : \"height:2000px\")+\"'></div></div>\";\n\t};\n\n\tScrollbarCell.prototype._getRootParent = function(){\n\t\tvar parent = this.$parent;\n\t\twhile(parent && parent.$parent){\n\t\t\tparent = parent.$parent;\n\t\t}\n\t\tif(parent){\n\t\t\treturn parent;\n\t\t}\n\t};\n\n\n\tfunction eachCell(root, res){\n\t\tres.push(root);\n\t\tif(root.$cells){\n\t\t\tfor(var i = 0; i < root.$cells.length; i++){\n\t\t\t\teachCell(root.$cells[i], res);\n\t\t\t}\n\t\t}\n\t}\n\tScrollbarCell.prototype._eachView = function(){\n\t\tvar res = [];\n\t\teachCell(this._getRootParent(), res);\n\t\treturn res;\n\t};\n\n\tScrollbarCell.prototype._getLinkedViews = function(){\n\t\tvar views = this._eachView();\n\t\tvar res = [];\n\t\tfor(var i = 0; i < views.length; i++){\n\t\t\tif(views[i].$config && ((this._isVertical() && views[i].$config.scrollY == this.$id) || (this._isHorizontal() && views[i].$config.scrollX == this.$id)) ){\n\t\t\t\tres.push(views[i]);\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t};\n\n\n\tScrollbarCell.prototype._initHorizontal = function(){\n\t\tthis.$scroll_hor = this.$view;\n\t\tthis.$domEvents.attach(this.$view, \"scroll\", this._scrollHorizontalHandler);\n\n\t};\n\n\tScrollbarCell.prototype._initLinkedViews = function(){\n\t\tvar views = this._getLinkedViews();\n\t\tvar css = this._isVertical() ?\"gantt_layout_outer_scroll gantt_layout_outer_scroll_vertical\" : \"gantt_layout_outer_scroll gantt_layout_outer_scroll_horizontal\";\n\t\tfor(var i = 0; i < views.length; i++){\n\t\t\t//views[i].$config.css = [views[i].$config.css || \"\", css].join(\" \");\n\t\t\tdomHelpers.addClassName(views[i].$view || views[i].getNode(), css);\n\t\t}\n\t};\n\n\tScrollbarCell.prototype._initVertical = function(){\n\t\tthis.$scroll_ver = this.$view;\n\t\tthis.$domEvents.attach(this.$view, \"scroll\", this._scrollVerticalHandler);\n\t};\n\n\tScrollbarCell.prototype._updateLinkedViews = function(){\n\t\tvar root = this._getRootParent();\n\t};\n\n\tScrollbarCell.prototype._initMouseWheel = function(){\n\t\tvar ff = env.isFF;\n\t\tif (ff)\n\t\t\tthis.$domEvents.attach(this._getRootParent().$view, \"wheel\", this._mouseWheelHandler);\n\t\telse\n\t\t\tthis.$domEvents.attach(this._getRootParent().$view, \"mousewheel\", this._mouseWheelHandler);\n\t};\n\n\n\n\n\tScrollbarCell.prototype.scrollHorizontally = function(left){\n\t\tif(this._scrolling) return;\n\t\tthis._scrolling = true;\n\n\t\tthis.$scroll_hor.scrollLeft = left;\n\t\tthis.$config.codeScrollLeft = left;\n\t\tleft = this.$scroll_hor.scrollLeft;\n\n\t\tvar views = this._getLinkedViews();\n\t\tfor(var i = 0; i < views.length; i++){\n\t\t\tif(views[i].scrollTo){\n\t\t\t\tviews[i].scrollTo(left, undefined);\n\t\t\t}\n\t\t}\n\t\tvar oldSize = this.$config.scrollPosition;\n\t\tthis.$config.scrollPosition = left;\n\t\tthis.callEvent(\"onScroll\", [oldSize, left, this.$config.scroll]);\n\t\tthis._scrolling = false;\n\t};\n\tScrollbarCell.prototype.scrollVertically = function(top){\n\t\tif(this._scrolling) return;\n\t\tthis._scrolling = true;\n\n\t\tthis.$scroll_ver.scrollTop = top;\n\t\ttop = this.$scroll_ver.scrollTop;\n\n\t\tvar views = this._getLinkedViews();\n\n\t\tfor(var i = 0; i < views.length; i++){\n\t\t\tif(views[i].scrollTo){\n\t\t\t\tviews[i].scrollTo(undefined, top);\n\t\t\t}\n\t\t}\n\t\tvar oldSize = this.$config.scrollPosition;\n\t\tthis.$config.scrollPosition = top;\n\t\tthis.callEvent(\"onScroll\", [oldSize, top, this.$config.scroll]);\n\t\tthis._scrolling = false;\n\t};\n\n\tScrollbarCell.prototype._isVertical = function(){\n\t\treturn this.$config.scroll == \"y\";\n\t};\n\tScrollbarCell.prototype._isHorizontal = function(){\n\t\treturn this.$config.scroll == \"x\";\n\t};\n\tScrollbarCell.prototype._scrollHorizontalHandler = function (e) {\n\t\tif(this._isVertical() || this._scrolling){\n\t\t\treturn;\n\t\t}\n\n\t\t//in safari we can catch previous onscroll after setting new value from mouse-wheel event\n\t\t//set delay to prevent value drifiting\n\t\tif ((new Date()) - ( this._wheel_time || 0 ) < 100) return true;\n\t\tif (this.$gantt._touch_scroll_active) return;\n\t\tvar left = this.$scroll_hor.scrollLeft;\n\n\t\tthis.scrollHorizontally(left);\n\n\t\tthis._oldLeft = this.$scroll_hor.scrollLeft;\n\t};\n\tScrollbarCell.prototype._outerScrollHorizontalHandler = function(e){\n\t\tif(this._isVertical()){\n\t\t\treturn;\n\t\t}\n\t};\n\n\tScrollbarCell.prototype.show = function(){\n\t\tthis.$parent.show();\n\t};\n\tScrollbarCell.prototype.hide = function(){\n\t\tthis.$parent.hide();\n\t};\n\n\tScrollbarCell.prototype._getScrollSize = function(){\n\t\tvar scrollSize = 0;\n\t\tvar outerSize = 0;\n\t\tvar isHorizontal = this._isHorizontal();\n\n\t\tvar linked = this._getLinkedViews();\n\t\tvar view;\n\t\tvar scrollProperty = isHorizontal ? \"scrollWidth\" : \"scrollHeight\",\n\t\t\tinnerSizeProperty = isHorizontal ? \"contentX\" : \"contentY\";\n\t\tvar outerProperty = isHorizontal ? \"x\" : \"y\";\n\t\tvar offset = this._getScrollOffset();\n\n\t\tfor(var i = 0; i < linked.length; i++){\n\t\t\tview = linked[i];\n\t\t\tif(!(view && view.$content && view.$content.getSize && !view.$config.hidden)) continue;\n\n\t\t\tvar sizes = view.$content.getSize();\n\t\t\tvar cellScrollSize;\n\t\t\tif(sizes.hasOwnProperty(scrollProperty)){\n\t\t\t\tcellScrollSize = sizes[scrollProperty];\n\t\t\t}else{\n\t\t\t\tcellScrollSize = sizes[innerSizeProperty];\n\t\t\t}\n\n\t\t\tif(offset){\n\t\t\t\t// precalculated vertical/horizontal offsets of scrollbar to emulate 4.x look\n\t\t\t\tif(sizes[innerSizeProperty] > sizes[outerProperty] && sizes[innerSizeProperty] > scrollSize && (cellScrollSize > (sizes[outerProperty] - offset + 2))){\n\t\t\t\t\tscrollSize = cellScrollSize + (isHorizontal ? 0 : 2);\n\t\t\t\t\touterSize = sizes[outerProperty];\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tvar nonScrollableSize = Math.max(sizes[innerSizeProperty] - cellScrollSize, 0);\n\t\t\t\tvar scrollableViewPortSize = Math.max(sizes[outerProperty] - nonScrollableSize, 0);\n\t\t\t\tcellScrollSize = cellScrollSize + nonScrollableSize;\n\n\t\t\t\tif(cellScrollSize > scrollableViewPortSize && (cellScrollSize > scrollSize) ){\n\t\t\t\t\t//|| (cellScrollSize === scrollSize && sizes[outerProperty] < outerSize) // same scroll width but smaller scrollable view port\n\n\t\t\t\t\tscrollSize = cellScrollSize;\n\t\t\t\t\touterSize = sizes[outerProperty];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\touterScroll: outerSize,\n\t\t\tinnerScroll: scrollSize\n\t\t};\n\t};\n\n\tScrollbarCell.prototype.scroll = function(position){\n\t\tif(this._isHorizontal()){\n\t\t\tthis.scrollHorizontally(position);\n\t\t}else{\n\t\t\tthis.scrollVertically(position);\n\t\t}\n\t};\n\n\tScrollbarCell.prototype.getScrollState = function(){\n\t\treturn {\n\t\t\tvisible: this.isVisible(),\n\t\t\tdirection: this.$config.scroll,\n\t\t\tsize: this.$config.outerSize,\n\t\t\tscrollSize: this.$config.scrollSize || 0,\n\t\t\tposition: this.$config.scrollPosition || 0\n\t\t};\n\t};\n\n\tScrollbarCell.prototype.setSize = function(width, height){\n\t\t_super.prototype.setSize.apply(this, arguments);\n\n\t\tvar scrollSizes = this._getScrollSize();\n\n\t\tvar ownSize = (this._isVertical() ? height : width) - this._getScrollOffset() + (this._isHorizontal() ? 1 : 0);\n\n\t\tif(scrollSizes.innerScroll && ownSize > scrollSizes.outerScroll){\n\t\t\tscrollSizes.innerScroll += (ownSize - scrollSizes.outerScroll);\n\t\t}\n\t\tthis.$config.scrollSize = scrollSizes.innerScroll;\n\n\t\tthis.$config.width = width;\n\t\tthis.$config.height = height;\n\t\tthis._setScrollSize(scrollSizes.innerScroll);\n\t};\n\n\tScrollbarCell.prototype.isVisible = function(){\n\t\treturn !!(this.$parent && this.$parent.$view.parentNode);\n\t};\n\n\tScrollbarCell.prototype.shouldShow = function(){\n\t\tvar scrollSizes = this._getScrollSize();\n\t\tif(!scrollSizes.innerScroll && (this.$parent && this.$parent.$view.parentNode)){\n\t\t\treturn false;\n\t\t}else if(scrollSizes.innerScroll && !(this.$parent && this.$parent.$view.parentNode)){\n\t\t\treturn true;\n\t\t}else{\n\t\t\treturn false;\n\t\t}\n\t};\n\n\tScrollbarCell.prototype.shouldHide = function(){\n\t\tvar scrollSizes = this._getScrollSize();\n\t\tif(!scrollSizes.innerScroll && (this.$parent && this.$parent.$view.parentNode)){\n\t\t\treturn true;\n\t\t}else{\n\t\t\treturn false;\n\t\t}\n\t};\n\n\n\tScrollbarCell.prototype.toggleVisibility = function(){\n\t\tif(this.shouldHide()){\n\t\t\tthis.hide();\n\t\t}else if(this.shouldShow()){\n\t\t\tthis.show();\n\t\t}\n\t};\n\t\n\tScrollbarCell.prototype._getScaleOffset = function(view){\n\t\tvar offset = 0;\n\t\tif(view && (view.$config.view == \"timeline\" || view.$config.view == \"grid\")){\n\t\t\toffset = view.$content.$getConfig().scale_height;\n\t\t}\n\t\treturn offset;\n\t};\n\n\tScrollbarCell.prototype._getScrollOffset = function(){\n\t\tvar offset = 0;\n\t\tif(this._isVertical()){\n\t\t\tvar parentLayout = this.$parent.$parent;\n\t\t\toffset = Math.max(\n\t\t\t\tthis._getScaleOffset(parentLayout.getPrevSibling(this.$parent.$id)),\n\t\t\t\tthis._getScaleOffset(parentLayout.getNextSibling(this.$parent.$id))\n\t\t\t\t);\n\t\t}else{\n\t\t\tvar linked = this._getLinkedViews();\n\n\t\t\tfor (var i = 0; i < linked.length; i++) {\n\t\t\t\tvar view = linked[i],\n\t\t\t\t\tvparent = view.$parent;\n\t\t\t\tvar cells = vparent.$cells;\n\n\t\t\t\tvar last = cells[cells.length - 1];\n\n\t\t\t\tif (last && last.$config.view == \"scrollbar\" && last.$config.hidden === false) {\n\t\t\t\t\toffset = last.$config.width;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\t\treturn offset || 0;\n\t};\n\n\tScrollbarCell.prototype._setScrollSize = function(size){\n\t\tvar property = this._isHorizontal() ? \"width\" : \"height\";\n\t\tvar scrollbar = this._isHorizontal() ? this.$scroll_hor : this.$scroll_ver;\n\n\t\tvar offset = this._getScrollOffset();\n\n\t\tvar node = scrollbar.firstChild;\n\n\t\tif(offset){\n\t\t\tif(this._isVertical()){\n\n\t\t\t\tthis.$config.outerSize = (this.$config.height - offset + 3);\n\t\t\t\tscrollbar.style.height = this.$config.outerSize + \"px\";\n\t\t\t\tscrollbar.style.top = (offset-1) + \"px\";\n\t\t\t\tdomHelpers.addClassName(scrollbar, this.$parent._borders.top);\n\t\t\t\tdomHelpers.addClassName(scrollbar.parentNode, \"gantt_task_vscroll\");\n\t\t\t}else{\n\t\t\t\tthis.$config.outerSize = (this.$config.width - offset + 1);\n\t\t\t\tscrollbar.style.width = this.$config.outerSize + \"px\";\n\t\t\t\t//domHelpers.addClassName(scrollbar, this.$parent._borders.right);\n\t\t\t}\n\t\t}else{\n\t\t\tscrollbar.style.top = \"auto\";\n\t\t\tdomHelpers.removeClassName(scrollbar, this.$parent._borders.top);\n\t\t\tdomHelpers.removeClassName(scrollbar.parentNode, \"gantt_task_vscroll\");\n\t\t\tthis.$config.outerSize = this.$config.height;\n\t\t}\n\n\t\tnode.style[property] = size + \"px\";\n\t};\n\n\tScrollbarCell.prototype._scrollVerticalHandler = function (e) {\n\t\tif(this._scrollHorizontalHandler() || this._scrolling){\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.$gantt._touch_scroll_active) return;\n\t\tvar top = this.$scroll_ver.scrollTop;\n\t\tvar prev = this._oldTop;\n\t\tif(top == prev) return;\n\n\t\tthis.scrollVertically(top);\n\n\t\tthis._oldTop = this.$scroll_ver.scrollTop;\n\n\t};\n\tScrollbarCell.prototype._outerScrollVerticalHandler = function(e){\n\t\tif(this._scrollHorizontalHandler()){\n\t\t\treturn;\n\t\t}\n\t};\n\n\tScrollbarCell.prototype._checkWheelTarget = function(targetNode){\n\t\tvar connectedViews = this._getLinkedViews().concat(this);\n\n\t\tfor(var i = 0; i < connectedViews.length; i++){\n\t\t\tvar node = connectedViews[i].$view;\n\t\t\tif(domHelpers.isChildOf(targetNode, node)){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t};\n\n\tScrollbarCell.prototype._mouseWheelHandler = function(e){\n\t\tvar target = e.target || e.srcElement;\n\n\t\tif(!this._checkWheelTarget(target))\n\t\t\treturn;\n\n\t\tthis._wheel_time = new Date();\n\n\t\tvar res = {};\n\t\tvar ff = env.isFF;\n\t\tvar wx = ff ? (e.deltaX*-20) : e.wheelDeltaX*2;\n\t\tvar wy = ff ? (e.deltaY*-40) : e.wheelDelta;\n\n\t\tif(e.shiftKey && !(e.deltaX || e.wheelDeltaX)){\n\t\t\t// shift+mousewheel for horizontal scroll\n\t\t\twx = wy*2;\n\t\t\twy = 0;\n\t\t}\n\n\t\tif (wx && Math.abs(wx) > Math.abs(wy)){\n\t\t\tif(this._isVertical()){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif(res.x) return true;//no horisontal scroll, must not block scrolling\n\t\t\tif(!this.$scroll_hor || !this.$scroll_hor.offsetWidth) return true;\n\n\t\t\tvar dir  = wx/-40;\n\t\t\tvar oldLeft = this._oldLeft;\n\t\t\tvar left = oldLeft+dir*30;\n\t\t\tthis.scrollHorizontally(left);\n\t\t\tthis.$scroll_hor.scrollLeft = left;\n\t\t\t// not block scroll if position hasn't changed\n\t\t\tif(oldLeft == this.$scroll_hor.scrollLeft){\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tthis._oldLeft = this.$scroll_hor.scrollLeft;\n\t\t} else {\n\t\t\tif(this._isHorizontal()){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif(res.y) return true;//no vertical scroll, must not block scrolling\n\t\t\tif(!this.$scroll_ver || !this.$scroll_ver.offsetHeight) return true;\n\n\t\t\tvar dir  = wy/-40;\n\t\t\tif (typeof wy == \"undefined\")\n\t\t\t\tdir = e.detail;\n\n\t\t\tvar oldTop = this._oldTop;\n\t\t\tvar top = this.$scroll_ver.scrollTop+dir*30;\n\n\t\t\t//if(!this.$gantt.config.prevent_default_scroll &&\n\t\t\t//\t(this.$gantt._cached_scroll_pos && ((this.$gantt._cached_scroll_pos.y == top) || (this.$gantt._cached_scroll_pos.y <= 0 && top <= 0)))) return true;\n\n\n\t\t\tthis.scrollVertically(top);\n\t\t\tthis.$scroll_ver.scrollTop = top;\n\n\t\t\t// not block scroll if position hasn't changed\n\t\t\tif(oldTop == this.$scroll_ver.scrollTop){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tthis._oldTop = this.$scroll_ver.scrollTop;\n\t\t}\n\n\t\tif (e.preventDefault)\n\t\t\te.preventDefault();\n\t\te.cancelBubble=true;\n\t\treturn false;\n\t};\n\n\treturn ScrollbarCell;\n})(Cell);\n\nmodule.exports = ScrollbarCell;","var __extends = require(\"../../../utils/extends\"),\n\tdomHelpers = require(\"../../../utils/dom_helpers\"),\n\tutils = require(\"../../../utils/utils\"),\n\tCell = require(\"./cell\");\n\nvar ResizerCell = (function (_super) {\n\t\"use strict\";\n\n\t__extends(ResizerCell, _super);\n\tfunction ResizerCell(parent, config, factory) {\n\t\tvar _this = _super.apply(this, arguments) || this;\n\n\t\tvar startBackSize, startFrontSize;\n\n\t\t_this._moveHandler = function (e) {\n\t\t\t_this._moveResizer(_this._resizer, e.pageX, e.pageY);\n\t\t};\n\t\t_this._upHandler = function () {\n\t\t\tvar newSizes = _this._getNewSizes();\n\t\t\tif(_this.callEvent(\"onResizeEnd\", [startBackSize, startFrontSize, newSizes ? newSizes.back : 0, newSizes ? newSizes.front : 0]) !== false){\n\t\t\t\t_this._setSizes();\n\t\t\t}\n\n\t\t\t_this._setBackground(false);\n\t\t\t_this._clearResizer();\n\t\t\t_this._clearListeneres();\n\t\t};\n\n\t\t_this._clearListeneres = function(){\n\t\t\tthis.$domEvents.detach(document, \"mouseup\", _this._upHandler);\n\t\t\tthis.$domEvents.detach(document, \"mousemove\", _this._moveHandler);\n\t\t\tthis.$domEvents.detach(document, \"mousemove\", _this._startOnMove);\n\t\t\tthis.$domEvents.detach(document, \"mouseup\", _this._cancelDND);\n\t\t};\n\n\t\t_this._callStartDNDEvent = function(){\n\t\t\tif (this._xMode) {\n\t\t\t\tstartBackSize = this._behind.$config.width || this._behind.$view.offsetWidth;\n\t\t\t\tstartFrontSize = this._front.$config.width || this._front.$view.offsetWidth;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tstartBackSize = this._behind.$config.height || this._behind.$view.offsetHeight;\n\t\t\t\tstartFrontSize = this._front.$config.height || this._front.$view.offsetHeight;\n\t\t\t}\n\n\t\t\tif(_this.callEvent(\"onResizeStart\", [startBackSize, startFrontSize]) === false){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t};\n\n\t\t_this._startDND = function(e){\n\t\t\tvar res = this._callStartDNDEvent();\n\t\t\tif(res === false){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar stop = false;\n\t\t\tthis._eachGroupItem(function(resizer){\n\t\t\t\tresizer._getSiblings();\n\t\t\t\tif(resizer._callStartDNDEvent() === false){\n\t\t\t\t\tstop = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif(stop){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t_this._moveHandler(e);\n\n\t\t\t_this.$domEvents.attach(document, \"mousemove\", _this._moveHandler);\n\t\t\t_this.$domEvents.attach(document, \"mouseup\", _this._upHandler);\n\t\t};\n\n\t\t_this._cancelDND = function(){\n\t\t\t_this._setBackground(false);\n\t\t\t_this._clearResizer();\n\t\t\t_this._clearListeneres();\n\t\t};\n\n\t\t_this._startOnMove = function(e){\n\t\t\tif(_this._isPosChanged(e)){\n\t\t\t\t_this._clearListeneres();\n\t\t\t\t_this._startDND(e);\n\t\t\t}\n\t\t};\n\n\t\t_this._downHandler = function (e) {\n\t\t\t_this._getSiblings();\n\n\t\t\tif (_this._behind.$config.collapsed || _this._front.$config.collapsed) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t_this._setBackground(true);\n\t\t\t_this._resizer = _this._setResizer();\n\n\t\t\t_this._positions = {\n\t\t\t\tx: e.pageX,\n\t\t\t\ty: e.pageY,\n\t\t\t\ttimestamp: Date.now()\n\t\t\t};\n\n\t\t\t_this.$domEvents.attach(document, \"mousemove\", _this._startOnMove);\n\t\t\t_this.$domEvents.attach(document, \"mouseup\", _this._cancelDND);\n\t\t};\n\t\t_this.$name = \"resizer\";\n\t\treturn _this;\n\t}\n\tResizerCell.prototype.init = function () {\n\t\tvar _this = this;\n\t\t_super.prototype.init.call(this);\n\t\tthis._xMode = this.$config.mode === \"x\";\n\t\tif (this._xMode && !this.$config.width) {\n\t\t\tthis.$config.width = this.$config.minWidth = 1;\n\t\t}\n\t\telse if (!this._xMode && !this.$config.height) {\n\t\t\tthis.$config.height = this.$config.minHeight = 1;\n\t\t}\n\n\t\tthis.$config.margin = -1;\n\n\t\tthis.$domEvents.attach(this.$view, \"mousedown\", _this._downHandler);\n\n\t};\n\tResizerCell.prototype.$toHTML = function () {\n\t\tvar mode = this.$config.mode;\n\t\tvar css = this.$config.css || \"\";\n\t\treturn \"<div class='gantt_layout_cell gantt_resizer gantt_resizer_\"+mode+\"'><div class='gantt_layout_content gantt_resizer_\" + mode + (css ? (\" \" + css) : \"\") + \"'></div></div>\";\n\t};\n\n\tResizerCell.prototype._clearResizer = function(){\n\t\tif(this._resizer){\n\t\t\tif(this._resizer.parentNode){\n\t\t\t\tthis._resizer.parentNode.removeChild(this._resizer);\n\t\t\t}\n\t\t\tthis._resizer = null;\n\t\t}\n\t};\n\n\tResizerCell.prototype._isPosChanged = function(e){\n\t\tif(!this._positions){\n\t\t\treturn false;\n\t\t}\n\n\t\tif(Math.abs(this._positions.x - e.pageX) > 3 || Math.abs(this._positions.y - e.pageY) > 3){\n\t\t\treturn true;\n\t\t}\n\n\t\tif(Date.now() - this._positions.timestamp > 300){\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t};\n\n\tResizerCell.prototype._getSiblings = function () {\n\t\tvar cells = this.$parent.getCells();\n\n\t\tif(this.$config.prev){\n\t\t\tthis._behind = this.$factory.getView(this.$config.prev);\n\t\t\tif(!(this._behind instanceof Cell)){\n\t\t\t\tthis._behind = this._behind.$parent;\n\t\t\t}\n\t\t}\n\t\tif(this.$config.next){\n\t\t\tthis._front = this.$factory.getView(this.$config.next);\n\t\t\tif(!(this._front instanceof Cell)){\n\t\t\t\tthis._front = this._behind.$parent;\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i < cells.length; i++) {\n\t\t\tif (this === cells[i]) {\n\t\t\t\tif(!this._behind)\n\t\t\t\t\tthis._behind = cells[i - 1];\n\t\t\t\tif(!this._front)\n\t\t\t\t\tthis._front = cells[i + 1];\n\t\t\t}\n\t\t}\n\t};\n\tResizerCell.prototype._setBackground = function (state) {\n\t\tvar classes = \"gantt_resizing\";\n\t\tif (!state) {\n\t\t\tdomHelpers.removeClassName(this._behind.$view, classes);\n\t\t\tdomHelpers.removeClassName(this._front.$view, classes);\n\t\t\tdomHelpers.removeClassName(document.body, 'gantt_noselect');\n\t\t\treturn;\n\t\t}\n\t\tdomHelpers.addClassName(this._behind.$view, classes, true);\n\t\tdomHelpers.addClassName(this._front.$view, classes, true);\n\t\tdomHelpers.addClassName(document.body, 'gantt_noselect', true);\n\t};\n\tResizerCell.prototype._setResizer = function () {\n\t\tvar resizer = document.createElement(\"div\");\n\t\tresizer.className = \"gantt_resizer_stick\";\n\t\tthis.$view.appendChild(resizer);\n\t\tthis.$view.style.overflow = \"visible\";\n\t\tresizer.style.height = this.$view.style.height;\n\t\treturn resizer;\n\t};\n\n\tResizerCell.prototype._getDirection = function(x, y){\n\t\tvar shift;\n\t\tif (this._xMode) {\n\t\t\tshift = x - this._positions.x;\n\t\t}else{\n\t\t\tshift = y - this._positions.y;\n\t\t}\n\t\treturn shift ? shift < 0 ? -1 : 1 : 0;\n\t};\n\n\tResizerCell.prototype._getResizePosition = function(x, y){\n\t\tvar size;\n\t\tvar behindSide;\n\t\tvar behindMin;\n\t\tvar frontSide;\n\t\tvar frontMin;\n\t\tif (this._xMode) {\n\t\t\tsize = x - this._positions.x;\n\t\t\tbehindSide = this._behind.$config.width || this._behind.$view.offsetWidth;\n\t\t\tfrontSide = this._front.$config.width || this._front.$view.offsetWidth;\n\t\t\tbehindMin = this._behind.$config.minWidth;\n\t\t\tfrontMin = this._front.$config.minWidth;\n\t\t}\n\t\telse {\n\t\t\tsize = y - this._positions.y;\n\t\t\tbehindSide = this._behind.$config.height || this._behind.$view.offsetHeight;\n\t\t\tfrontSide = this._front.$config.height || this._front.$view.offsetHeight;\n\t\t\tbehindMin = this._front.$config.minHeight;\n\t\t\tfrontMin = this._front.$config.minHeight;\n\t\t}\n\t\tvar direction = this._getDirection(x, y);\n\t\tvar newBehindSide,\n\t\t\tnewFrontSide;\n\n\t\tif (direction === -1) {\n\t\t\tnewFrontSide = frontSide - size;\n\t\t\tnewBehindSide = behindSide - Math.abs(size);\n\n\t\t\tif (frontSide - size > this._front.$config.maxWidth) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (Math.abs(size) >= behindSide) {\n\t\t\t\tsize = -Math.abs(behindSide - 2);\n\t\t\t}\n\t\t\t// if min width\n\t\t\tif (behindSide - Math.abs(size) <= behindMin) {\n\t\t\t\t//this._resizer.style.background = \"red\";\n\t\t\t\tsize = -Math.abs(behindSide - behindMin);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tnewFrontSide = frontSide - Math.abs(size);\n\t\t\tnewBehindSide = behindSide + size;\n\n\t\t\tif (behindSide + size > this._behind.$config.maxWidth) {\n\t\t\t\tsize = this._behind.$config.maxWidth - behindSide;\n\t\t\t\t// return;\n\t\t\t}\n\t\t\tif (Math.abs(size) >= frontSide) {\n\t\t\t\tsize = frontSide - 2;\n\t\t\t}\n\t\t\t// if min width\n\t\t\tif (frontSide - Math.abs(size) <= frontMin) {\n\t\t\t\tsize = Math.abs(frontSide - frontMin);\n\t\t\t}\n\t\t}\n\n\t\tif (direction === -1) {\n\t\t\tnewFrontSide = frontSide - size;\n\t\t\tnewBehindSide = behindSide - Math.abs(size);\n\t\t} else {\n\t\t\tnewFrontSide = frontSide - Math.abs(size);\n\t\t\tnewBehindSide = behindSide + size;\n\t\t}\n\n\t\treturn {\n\t\t\tsize: size,\n\t\t\tnewFrontSide: newFrontSide,\n\t\t\tnewBehindSide: newBehindSide\n\t\t};\n\t};\n\n\tResizerCell.prototype._getGroupName = function(){\n\t\tthis._getSiblings();\n\t\treturn this._front.$config.group || this._behind.$config.group;\n\t};\n\n\tResizerCell.prototype._eachGroupItem = function(callback, master){\n\t\tvar layout = this.$factory.getView(\"main\");\n\n\t\tvar group = this._getGroupName();\n\n\t\tvar resizers = layout.getCellsByType(\"resizer\");\n\t\tfor(var i = 0; i < resizers.length; i++) {\n\t\t\tif (resizers[i]._getGroupName() == group && resizers[i] != this) {\n\t\t\t\tcallback.call(master || this, resizers[i]);\n\t\t\t}\n\t\t}\n\t};\n\n\tResizerCell.prototype._getGroupResizePosition = function(x, y){\n\t\tvar sizes = this._getResizePosition(x, y);\n\n\t\tif(!this._getGroupName()){\n\t\t\treturn sizes;\n\t\t}\n\n\t\tvar positions = [sizes];\n\n\t\tthis._eachGroupItem(function(resizer){\n\t\t\tresizer._getSiblings();\n\t\t\tvar pos = utils.copy(this._positions);\n\t\t\tif(this._xMode){\n\t\t\t\tpos.x += (resizer._behind.$config.width - this._behind.$config.width);\n\t\t\t}else{\n\t\t\t\tpos.y += (resizer._behind.$config.height - this._behind.$config.height);\n\t\t\t}\n\t\t\tresizer._positions = pos;\n\t\t\tpositions.push(resizer._getResizePosition(x, y));\n\t\t});\n\n\t\tvar minMax;\n\t\tfor(var i =0; i < positions.length; i++){\n\t\t\tif(!positions[i]) return;\n\t\t\tif(minMax === undefined){\n\t\t\t\tminMax = positions[i];\n\t\t\t}else if(positions[i].newBehindSide > minMax.newBehindSide){\n\t\t\t\tminMax = positions[i];\n\t\t\t}\n\t\t}\n\n\t/*\tif(minMax != sizes){\n\t\t\tminMax.size = minMax.size;\n\t\t}*/\n\n\t\treturn minMax;\n\t};\n\n\tResizerCell.prototype._moveResizer = function (av, x, y) {\n\t\tif (x === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar sizes = this._getGroupResizePosition(x, y);\n\t\tif(!sizes)\n\t\t\treturn;\n\n\t\tif (Math.abs(sizes.size) === 1) {\n\t\t\treturn;\n\t\t}\n\t\tif (this._xMode) {\n\t\t\tav.style.left = sizes.size + 'px';\n\t\t\tthis._positions.nextX = sizes.size || 0;\n\t\t}\n\t\telse {\n\t\t\tav.style.top = sizes.size + 'px';\n\t\t\tthis._positions.nextY = sizes.size || 0;\n\t\t}\n\n\t\tthis.callEvent(\"onResize\", [sizes.newBehindSide, sizes.newFrontSide]);\n\t};\n\tResizerCell.prototype._setGravity = function (cell) {\n\t\tvar size = this._xMode ? \"offsetWidth\" : \"offsetHeight\";\n\t\tvar position = this._xMode ? this._positions.nextX : this._positions.nextY;\n\t\tvar frontSize = this._front.$view[size];\n\t\tvar behindSize = this._behind.$view[size];\n\t\tvar frontG = this._front.getSize().gravity;\n\t\tvar behindG = this._behind.getSize().gravity;\n\t\tvar newFrontG = (frontSize - position) / frontSize * frontG;\n\t\tvar newBehindG = (behindSize + position) / behindSize * behindG;\n\t\tif (cell !== \"front\") {\n\t\t\tthis._front.$config.gravity = newFrontG;\n\t\t}\n\t\tif (cell !== \"behind\") {\n\t\t\tthis._behind.$config.gravity = newBehindG;\n\t\t}\n\t};\n\n/*\tResizerCell.prototype.setSize = function(){\n\t\t_super.apply(this, arguments)\n\t};*/\n\n\tResizerCell.prototype._getNewSizes = function(){\n\t\tvar behindSize = this._xMode ? this._behind.$config.width : this._behind.$config.height;\n\t\tvar frontSize = this._xMode ? this._front.$config.width : this._front.$config.height;\n\t\tvar position = this._xMode ? this._positions.nextX : this._positions.nextY;\n\n\t\tif(!frontSize && !behindSize){\n\t\t\treturn null;\n\t\t}\n\n\t\treturn {\n\t\t\tfront: frontSize ? ((frontSize - position) || 1) : 0,\n\t\t\tback: behindSize ? ((behindSize + position) || 1) : 0\n\t\t};\n\t};\n\n\tResizerCell.prototype._assignNewSizes = function(newSizes){\n\t\tthis._getSiblings();\n\t\tvar side = this._xMode ? 'width' : 'height';\n\n\t\t// if only gravity cells\n\t\tif (!newSizes) {\n\t\t\tthis._setGravity();\n\t\t}\n\t\telse {\n\t\t\tif (!newSizes.front) {\n\t\t\t\tthis._setGravity(\"behind\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._front.$config[side] = newSizes.front;\n\t\t\t}\n\t\t\tif (!newSizes.back) {\n\t\t\t\tthis._setGravity(\"front\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._behind.$config[side] = newSizes.back;\n\t\t\t}\n\t\t}\n\n\t};\n\n\tResizerCell.prototype._setSizes = function () {\n\t\tif (this._resizer) {\n\t\t\tthis.$view.removeChild(this._resizer);\n\t\t}\n\t\tvar newSizes = this._getNewSizes();\n\n\t\tif (this._positions.nextX || this._positions.nextY) {\n\t\t\tthis._assignNewSizes(newSizes);\n\n\t\t\tvar side = this._xMode ? 'width' : 'height';\n\t\t\tif(this._front.$config.group){\n\t\t\t\tthis.$gantt.$layout._syncCellSizes(this._front.$config.group, this._front.$config[side]);\n\t\t\t}else if(this._behind.$config.group){\n\t\t\t\tthis.$gantt.$layout._syncCellSizes(this._behind.$config.group, this._behind.$config[side]);\n\t\t\t}\n\n\t\t\tif(this._getGroupName()){\n\t\t\t\tthis.$factory.getView(\"main\").resize();\n\t\t\t}else{\n\t\t\t\tthis.$parent.resize();\n\t\t\t}\n\n\t\t}\n\t};\n\treturn ResizerCell;\n}(Cell));\n\nmodule.exports = ResizerCell;","var __extends = require(\"../../../utils/extends\"),\n\tutils = require(\"../../../utils/utils\"),\n\tCell = require(\"./cell\");\n\nvar ViewCell = (function (_super) {\n\t\"use strict\";\n\n\t__extends(ViewCell, _super);\n\tfunction ViewCell(parent, config, factory) {\n\n\t\tvar _this = _super.apply(this, arguments) || this;\n\n\t\tif(config.view){\n\t\t\tif(config.id){\n\t\t\t\t// pass id to the nested view\n\t\t\t\tthis.$id = utils.uid();\n\t\t\t}\n\t\t\tvar childConfig = utils.copy(config);\n\t\t\tdelete childConfig.config;\n\t\t\tdelete childConfig.templates;\n\n\t\t\tthis.$content = this.$factory.createView(config.view, this, childConfig, this);\n\t\t\tif(!this.$content)\n\t\t\t\treturn false;\n\t\t}\n\n\t\t_this.$name = \"viewCell\";\n\t\treturn _this;\n\t}\n\n\tViewCell.prototype.destructor = function(){\n\t\tthis.clear();\n\t\t_super.prototype.destructor.call(this);\n\t};\n\n\tViewCell.prototype.clear = function(){\n\n\t\tthis.$initialized = false;\n\n\t\t// call destructor\n\t\tif (this.$content){\n\t\t\tvar method = this.$content.unload || this.$content.destructor;\n\t\t\tif (method){\n\t\t\t\tmethod.call(this.$content);\n\t\t\t}\n\t\t}\n\n\t\t_super.prototype.clear.call(this);\n\n\t};\n\n\tViewCell.prototype.scrollTo = function(left, top){\n\n\t\tif(this.$content && this.$content.scrollTo){\n\t\t\tthis.$content.scrollTo(left, top);\n\t\t}else{\n\t\t\t_super.prototype.scrollTo.call(this, left, top);\n\t\t}\n\t};\n\n\tViewCell.prototype._setContentSize = function(x, y){\n\t\tvar borders = this._getBorderSizes();\n\t\tvar outerX = x + borders.horizontal;\n\t\tvar outerY = y + borders.vertical;\n\t\tthis.$config.width = outerX;\n\t\tthis.$config.height = outerY;\n\t};\n\n\tViewCell.prototype.setSize = function(x, y){\n\t\t_super.prototype.setSize.call(this, x, y);\n\n\t\tif(!this.$preResize && this.$content) {\n\t\t\tif (!this.$initialized) {\n\t\t\t\tthis.$initialized = true;\n\t\t\t\tvar header = this.$view.childNodes[0];\n\t\t\t\tvar content = this.$view.childNodes[1];\n\t\t\t\tif(!content) content = header;\n\n\t\t\t\t/*if(this.$content.$config){\n\t\t\t\t\tthis.$content.$config.width = this.$lastSize.contentX;\n\t\t\t\t\tthis.$content.$config.height = this.$lastSize.contentY;\n\t\t\t\t}*/\n\t\t\t\tthis.$content.init(content);\n\t\t\t}\n\t\t}\n\t};\n\n\tViewCell.prototype.setContentSize = function(){\n\t\tif(!this.$preResize && this.$content) {\n\t\t\tif (this.$initialized) {\n\t\t\t\tthis.$content.setSize(this.$lastSize.contentX, this.$lastSize.contentY);\n\t\t\t}\n\t\t}\n\t};\n\n\n\tViewCell.prototype.getContentSize = function(){\n\t\tvar size = _super.prototype.getContentSize.call(this);\n\n\t\tif(this.$content && this.$initialized){\n\t\t\tvar childSize = this.$content.getSize();\n\t\t\tsize.width = childSize.contentX === undefined ? childSize.width : childSize.contentX;\n\t\t\tsize.height = childSize.contentY === undefined ? childSize.height : childSize.contentY;\n\t\t}\n\n\t\tvar borders = this._getBorderSizes();\n\t\tsize.width += borders.horizontal;\n\t\tsize.height += borders.vertical;\n\n\t\treturn size;\n\t};\n\n\treturn ViewCell;\n}(Cell));\n\nmodule.exports = ViewCell;","var __extends = require(\"../../../utils/extends\"),\n\tLayout = require(\"./layout\"),\n\tCell = require(\"./cell\");\n\nvar ViewLayout = (function (_super) {\n\t\"use strict\";\n\n\t__extends(ViewLayout, _super);\n\tfunction ViewLayout(parent, config, factory) {\n\t\tvar _this = _super.apply(this, arguments) || this;\n\t\tfor (var i = 0; i < _this.$cells.length; i++) {\n\t\t\t_this.$cells[i].$config.hidden = (i !== 0);\n\t\t}\n\t\t_this.$cell = _this.$cells[0];\n\t\t_this.$name = \"viewLayout\";\n\n\t\treturn _this;\n\t}\n\tViewLayout.prototype.cell = function (id) {\n\t\tvar cell = _super.prototype.cell.call(this, id);\n\t\tif (!cell.$view) {\n\t\t\tthis.$fill(null, this);\n\t\t}\n\t\treturn cell;\n\t};\n\tViewLayout.prototype.moveView = function (view) {\n\t\tvar body = this.$view;\n\t\tif (this.$cell) {\n\t\t\tthis.$cell.$config.hidden = true;\n\t\t\tbody.removeChild(this.$cell.$view);\n\t\t}\n\t\tthis.$cell = view;\n\t\tbody.appendChild(view.$view);\n\t};\n\tViewLayout.prototype.setSize = function (x, y) {\n\t\tCell.prototype.setSize.call(this, x, y);\n\t};\n\n\tViewLayout.prototype.setContentSize = function(){\n\t\tvar size = this.$lastSize;\n\t\tthis.$cell.setSize(size.contentX, size.contentY);\n\t};\n\n\tViewLayout.prototype.getSize = function () {\n\t\tvar sizes = _super.prototype.getSize.call(this);\n\t\tif (this.$cell) {\n\t\t\tvar cellSize = this.$cell.getSize();\n\t\t\tif (this.$config.byMaxSize) {\n\t\t\t\tfor (var i = 0; i < this.$cells.length; i++) {\n\t\t\t\t\tvar otherCell = this.$cells[i].getSize();\n\t\t\t\t\tfor (var cell in cellSize) {\n\t\t\t\t\t\tcellSize[cell] = Math.max(cellSize[cell], otherCell[cell]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (var size in sizes) {\n\t\t\t\tsizes[size] = sizes[size] || cellSize[size];\n\t\t\t}\n\t\t\tsizes.gravity = Math.max(sizes.gravity, cellSize.gravity);\n\t\t}\n\t\treturn sizes;\n\t};\n\treturn ViewLayout;\n}(Layout));\n\nmodule.exports = ViewLayout;","var rendererFactory = function(gantt){\n\tvar services = gantt.$services;\n\n\t//hash of dom elements is needed to redraw single bar/link\n\tvar task_area_pulls = {},\n\t\ttask_area_renderers = {};\n\n\tfunction getRenderer(id, layer, node) {\n\n\t\tif (task_area_renderers[id])\n\t\t\treturn task_area_renderers[id];\n\n\t\tif (!layer.renderer)\n\t\t\tgantt.assert(false, \"Invalid renderer call\");\n\n\t\tvar renderOne = function(item){\n\t\t\treturn layer.renderer.call(this, item, layer.host);\n\t\t} ;\n\n\t\tvar filter = layer.filter;\n\n\t\tif (node)\n\t\t\tnode.setAttribute(services.config().layer_attribute, true);\n\n\t\ttask_area_renderers[id] = {\n\t\t\trender_item: function (item, container) {\n\t\t\t\tcontainer = container || node;\n\n\t\t\t\tif (filter) {\n\t\t\t\t\tif (!filter(item)) {\n\t\t\t\t\t\tthis.remove_item(item.id);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar dom = renderOne.call(gantt, item);\n\t\t\t\tthis.append(item, dom, container);\n\n\t\t\t},\n\n\t\t\tclear: function (container) {\n\n\t\t\t\tthis.rendered = task_area_pulls[id] = {};\n\t\t\t\tif(!layer.append)\n\t\t\t\t\tthis.clear_container(container);\n\t\t\t},\n\t\t\tclear_container: function (container) {\n\t\t\t\tcontainer = container || node;\n\t\t\t\tif (container)\n\t\t\t\t\tcontainer.innerHTML = \"\";\n\t\t\t},\n\t\t\trender_items: function (items, container) {\n\t\t\t\tcontainer = container || node;\n\n\t\t\t\tvar buffer = document.createDocumentFragment();\n\t\t\t\tthis.clear(container);\n\t\t\t\tfor (var i = 0, vis = items.length; i < vis; i++) {\n\t\t\t\t\tthis.render_item(items[i], buffer);\n\t\t\t\t}\n\n\t\t\t\tcontainer.appendChild(buffer);\n\t\t\t},\n\t\t\tappend: function (item, node, container) {\n\t\t\t\tif (!node) {\n\t\t\t\t\tif (this.rendered[item.id]) {\n\t\t\t\t\t\tthis.remove_item(item.id);\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (this.rendered[item.id] && this.rendered[item.id].parentNode) {\n\t\t\t\t\tthis.replace_item(item.id, node);\n\t\t\t\t} else {\n\t\t\t\t\tcontainer.appendChild(node);\n\t\t\t\t}\n\t\t\t\tthis.rendered[item.id] = node;\n\n\t\t\t},\n\t\t\treplace_item: function (item_id, newNode) {\n\t\t\t\tvar item = this.rendered[item_id];\n\t\t\t\tif (item && item.parentNode) {\n\t\t\t\t\titem.parentNode.replaceChild(newNode, item);\n\t\t\t\t}\n\t\t\t\tthis.rendered[item_id] = newNode;\n\t\t\t},\n\t\t\tremove_item: function (item_id) {\n\t\t\t\tthis.hide(item_id);\n\t\t\t\tdelete this.rendered[item_id];\n\t\t\t},\n\t\t\thide: function (item_id) {\n\t\t\t\tvar item = this.rendered[item_id];\n\t\t\t\tif (item && item.parentNode) {\n\t\t\t\t\titem.parentNode.removeChild(item);\n\t\t\t\t}\n\t\t\t},\n\t\t\trestore: function (item) {\n\t\t\t\tvar dom = this.rendered[item.id];\n\t\t\t\tif (dom) {\n\t\t\t\t\tif (!dom.parentNode) {\n\t\t\t\t\t\tthis.append(item, dom, node);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.render_item(item, node);\n\t\t\t\t}\n\t\t\t},\n\t\t\tchange_id: function (oldid, newid) {\n\t\t\t\tthis.rendered[newid] = this.rendered[oldid];\n\t\t\t\tdelete this.rendered[oldid];\n\t\t\t},\n\t\t\trendered: task_area_pulls[id],\n\t\t\tnode: node,\n\t\t\tdestructor: function () {\n\t\t\t\tthis.clear();\n\t\t\t\tdelete task_area_renderers[id];\n\t\t\t\tdelete task_area_pulls[id];\n\t\t\t}\n\t\t};\n\n\t\treturn task_area_renderers[id];\n\t}\n\n\n\tfunction clearRenderers() {\n\t\tfor (var i in task_area_renderers) {\n\t\t\tgetRenderer(i).destructor();\n\t\t}\n\t}\n\n\treturn {\n\t\tgetRenderer: getRenderer,\n\t\tclearRenderers: clearRenderers\n\t};\n\n};\n\nmodule.exports = rendererFactory;","var renderFactoryProvider = require(\"./render_factory\");\nvar utils = require(\"../../../utils/utils\"),\n\tdomHelpers = require(\"../../../utils/dom_helpers\");\n\nvar layerFactory = function(gantt){\n\n\tvar renderFactory = renderFactoryProvider(gantt);\n\treturn {\n\tcreateGroup: function (get_container, rel_root, defaultFilters) {\n\n\t\tvar renderGroup = {\n\t\t\ttempCollection: [],\n\t\t\trenderers: {},\n\t\t\tcontainer: get_container,\n\t\t\tfilters: [],\n\t\t\tgetLayers: function () {\n\t\t\t\tthis._add();// add pending layers\n\n\t\t\t\tvar res = [];\n\t\t\t\tfor (var i in this.renderers) {\n\t\t\t\t\tres.push(this.renderers[i]);\n\t\t\t\t}\n\t\t\t\treturn res;\n\t\t\t},\n\t\t\tgetLayer: function (id) {\n\t\t\t\treturn this.renderers[id];\n\t\t\t},\n\t\t\t_add: function (layer) {\n\t\t\t\tif (layer) {\n\t\t\t\t\tlayer.id = layer.id || utils.uid();\n\t\t\t\t\tthis.tempCollection.push(layer);\n\t\t\t\t}\n\n\t\t\t\tvar container = this.container();\n\n\t\t\t\tvar pending = this.tempCollection;\n\t\t\t\tfor (var i = 0; i < pending.length; i++) {\n\t\t\t\t\tlayer = pending[i];\n\n\t\t\t\t\tif (!this.container() && !(layer && layer.container && domHelpers.isChildOf(layer.container, document.body))) continue;\n\n\t\t\t\t\tvar node = layer.container,\n\t\t\t\t\t\tid = layer.id,\n\t\t\t\t\t\ttopmost = layer.topmost;\n\t\t\t\t\tif (!node.parentNode) {\n\t\t\t\t\t\t//insert on top or below the tasks\n\t\t\t\t\t\tif (topmost) {\n\t\t\t\t\t\t\tcontainer.appendChild(node);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar rel = rel_root ? rel_root() : container.firstChild;\n\t\t\t\t\t\t\tif (rel)\n\t\t\t\t\t\t\t\tcontainer.insertBefore(node, rel);\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tcontainer.appendChild(node);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.renderers[id] = renderFactory.getRenderer(\n\t\t\t\t\t\tid,\n\t\t\t\t\t\tlayer,\n\t\t\t\t\t\tnode\n\t\t\t\t\t);\n\t\t\t\t\tthis.tempCollection.splice(i, 1);\n\t\t\t\t\ti--;\n\t\t\t\t}\n\t\t\t},\n\t\t\taddLayer: function (config) {\n\t\t\t\t//config = prepareConfig(config);\n\t\t\t\tif(config){\n\t\t\t\t\tif(typeof config == \"function\"){\n\t\t\t\t\t\tconfig = {renderer: config};\n\t\t\t\t\t}\n\n\t\t\t\t\tif(config.filter === undefined){\n\t\t\t\t\t\tconfig.filter = mergeFilters(defaultFilters || []);\n\t\t\t\t\t}else if(config.filter instanceof Array){\n\t\t\t\t\t\tconfig.filter.push(defaultFilters);\n\t\t\t\t\t\tconfig.filter = mergeFilters(config.filter);\n\t\t\t\t\t}\n\n\t\t\t\t\tif(!config.container){\n\t\t\t\t\t\tconfig.container = document.createElement(\"div\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis._add(config);\n\t\t\t\treturn (config ? config.id : undefined);\n\t\t\t},\n\t\t\teachLayer: function(code){\n\t\t\t\tfor (var i in this.renderers) {\n\t\t\t\t\tcode(this.renderers[i]);\n\t\t\t\t}\n\t\t\t},\n\t\t\tremoveLayer: function (id) {\n\t\t\t\tif(!this.renderers[id])\n\t\t\t\t\treturn;\n\t\t\t\tthis.renderers[id].destructor();\n\t\t\t\tdelete this.renderers[id];\n\t\t\t},\n\t\t\tclear: function () {\n\t\t\t\tfor (var i in this.renderers) {\n\t\t\t\t\tthis.renderers[i].destructor();\n\t\t\t\t}\n\t\t\t\tthis.renderers = {};\n\t\t\t}//,\n\t\t\t//prepareConfig: prepareConfig\n\t\t};\n\n\t\tgantt.attachEvent(\"onDestroy\", function(){\n\t\t\trenderGroup.clear();\n\t\t\trenderGroup = null;\n\t\t});\n\n\t\treturn renderGroup;\n\t}\n};};\n\n\nfunction mergeFilters(filter_methods){\n\tif(!(filter_methods instanceof Array)){\n\t\tfilter_methods = Array.prototype.slice.call(arguments, 0);\n\t}\n\n\treturn function(obj){\n\t\tvar res = true;\n\t\tfor(var i = 0, len = filter_methods.length; i < len; i++){\n\t\t\tvar filter_method = filter_methods[i];\n\t\t\tif(filter_method){\n\t\t\t\tres = res && (filter_method(obj.id, obj) !== false);\n\t\t\t}\n\t\t}\n\n\t\treturn res;\n\t};\n}\n\n\nmodule.exports = layerFactory;\n","var createLayerFactory = require(\"./render/layer_engine\");\n\nvar createLayerEngine = function(gantt){\n\tvar factory = createLayerFactory(gantt);\n\treturn {\n\t\tgetDataRender: function(name){\n\t\t\treturn gantt.$services.getService(\"layer:\" + name) || null;\n\t\t},\n\t\tcreateDataRender: function(config){\n\t\t\tvar name = config.name,\n\t\t\t\tdefaultContainer = config.defaultContainer,\n\t\t\t\tpreviusSiblingContainer = config.defaultContainerSibling;\n\n\t\t\tvar layers = factory.createGroup(\n\t\t\t\tdefaultContainer,\n\t\t\t\tpreviusSiblingContainer,\n\t\t\t\tfunction(itemId, item){\n\t\t\t\t\tif(layers.filters){\n\t\t\t\t\t\tfor(var i = 0; i < layers.filters.length; i++){\n\t\t\t\t\t\t\tif(layers.filters[i](itemId, item) === false){\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}else{\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tgantt.$services.setService(\"layer:\" + name, function(){\n\t\t\t\treturn layers;\n\t\t\t});\n\n\t\t\tgantt.attachEvent(\"onGanttReady\", function () {\n\t\t\t\tlayers.addLayer();// init layers on start\n\t\t\t});\n\n\t\t\treturn layers;\n\t\t},\n\t\tinit: function(){\n\t\t\tvar taskLayers = this.createDataRender({\n\t\t\t\tname: \"task\",\n\t\t\t\tdefaultContainer: function(){\n\t\t\t\t\tif(gantt.$task_data){\n\t\t\t\t\t\treturn gantt.$task_data;\n\t\t\t\t\t}else if(gantt.$ui.getView(\"timeline\")){\n\t\t\t\t\t\treturn gantt.$ui.getView(\"timeline\").$task_data;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tdefaultContainerSibling: function(){\n\t\t\t\t\tif(gantt.$task_links){\n\t\t\t\t\t\treturn gantt.$task_links;\n\t\t\t\t\t}else if(gantt.$ui.getView(\"timeline\")){\n\t\t\t\t\t\treturn gantt.$ui.getView(\"timeline\").$task_links;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfilter: function(item){\n\n\t\t\t\t}\n\t\t\t}, gantt);\n\n\t\t\tvar linkLayers = this.createDataRender({\n\t\t\t\tname: \"link\",\n\t\t\t\tdefaultContainer: function(){\n\t\t\t\t\tif(gantt.$task_data){\n\t\t\t\t\t\treturn gantt.$task_data;\n\t\t\t\t\t}else if(gantt.$ui.getView(\"timeline\")){\n\t\t\t\t\t\treturn gantt.$ui.getView(\"timeline\").$task_data;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, gantt);\n\n\t\t\treturn {\n\t\t\t\taddTaskLayer: function(config){\n\t\t\t\t\treturn taskLayers.addLayer(config);\n\t\t\t\t},\n\n\t\t\t\t/*getTaskLayer: function(id){\n\t\t\t\t\treturn taskLayers.getLayer(id);\n\t\t\t\t},*/\n\n\t\t\t\t_getTaskLayers: function(){\n\t\t\t\t\treturn taskLayers.getLayers();\n\t\t\t\t},\n\t\t\t\tremoveTaskLayer: function(id){\n\t\t\t\t\ttaskLayers.removeLayer(id);\n\t\t\t\t},\n\t\t\t\t/*eachTaskLayer: function(code){\n\t\t\t\t\ttaskLayers.eachLayer(code);\n\t\t\t\t},*/\n\t\t\t\t_clearTaskLayers: function(){\n\t\t\t\t\ttaskLayers.clear();\n\t\t\t\t},\n\t\t\t\taddLinkLayer: function(config){\n\t\t\t\t\treturn linkLayers.addLayer(config);\n\t\t\t\t},\n\t\t\t\t/*getLinkLayer: function(id){\n\t\t\t\t\treturn linkLayers.getLayer(id);\n\t\t\t\t},*/\n\t\t\t\t_getLinkLayers: function(){\n\t\t\t\t\treturn linkLayers.getLayers();\n\t\t\t\t},\n\t\t\t\tremoveLinkLayer: function(id){\n\t\t\t\t\tlinkLayers.removeLayer(id);\n\t\t\t\t},\n\t\t\t\t/*eachLinkLayer: function(code){\n\t\t\t\t\tlinkLayers.eachLayer(code);\n\t\t\t\t},*/\n\t\t\t\t_clearLinkLayers: function(){\n\t\t\t\t\tlinkLayers.clear();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t};\n};\n\nmodule.exports = createLayerEngine;","var domHelpers = require(\"../../utils/dom_helpers\");\n\nvar createMouseHandler = (function(domHelpers) {\n\treturn function (gantt) {\n\t\tvar eventHandlers = {\n\t\t\t\"click\": {},\n\t\t\t\"doubleclick\": {},\n\t\t\t\"contextMenu\": {}\n\t\t};\n\n\t\tfunction addEventTarget(event, className, handler, root) {\n\t\t\tif(!eventHandlers[event][className]){\n\t\t\t\teventHandlers[event][className] = [];\n\t\t\t}\n\n\t\t\teventHandlers[event][className].push({\n\t\t\t\thandler: handler,\n\t\t\t\troot: root\n\t\t\t});\n\t\t}\n\n\t\tfunction callHandler(eventName, className, root, args) {\n\t\t\tvar handlers = eventHandlers[eventName][className];\n\t\t\tif(handlers){\n\t\t\t\tfor(var i = 0; i < handlers.length; i++){\n\t\t\t\t\tif(!(root || handlers[i].root) || handlers[i].root === root){\n\t\t\t\t\t\thandlers[i].handler.apply(this, args);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction onClick(e) {\n\t\t\te = e || window.event;\n\t\t\tvar trg = e.target || e.srcElement;\n\t\t\tvar id = gantt.locate(e);\n\n\t\t\tvar handlers = findEventHandlers(e, eventHandlers.click);\n\t\t\tvar res = true;\n\t\t\tif (id !== null) {\n\t\t\t\tres = !gantt.checkEvent(\"onTaskClick\") || gantt.callEvent(\"onTaskClick\", [id, e]);\n\t\t\t} else {\n\t\t\t\tgantt.callEvent(\"onEmptyClick\", [e]);\n\t\t\t}\n\n\t\t\tif (res) {\n\t\t\t\tvar default_action = callEventHandlers(handlers, e, id);\n\t\t\t\tif (!default_action)\n\t\t\t\t\treturn;\n\n\t\t\t\tif (id && gantt.getTask(id) && gantt.config.select_task && !gantt.config.multiselect) {\n\t\t\t\t\tgantt.selectTask(id);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction onContextMenu(e) {\n\t\t\te = e || window.event;\n\t\t\tvar src = e.target || e.srcElement,\n\t\t\t\ttaskId = gantt.locate(src),\n\t\t\t\tlinkId = gantt.locate(src, gantt.config.link_attribute);\n\n\t\t\tvar res = !gantt.checkEvent(\"onContextMenu\") || gantt.callEvent(\"onContextMenu\", [taskId, linkId, e]);\n\t\t\tif (!res) {\n\t\t\t\tif (e.preventDefault)\n\t\t\t\t\te.preventDefault();\n\t\t\t\telse\n\t\t\t\t\te.returnValue = false;\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tfunction findEventHandlers(e, hash){\n\t\t\tvar trg = e.target || e.srcElement;\n\t\t\tvar handlers = [];\n\t\t\twhile (trg) {\n\t\t\t\tvar css = domHelpers.getClassName(trg);\n\t\t\t\tif (css) {\n\t\t\t\t\tcss = css.split(\" \");\n\t\t\t\t\tfor (var i = 0; i < css.length; i++) {\n\t\t\t\t\t\tif (!css[i]) continue;\n\t\t\t\t\t\tif (hash[css[i]]) {\n\t\t\t\t\t\t\tvar delegateHandlers = hash[css[i]];\n\n\t\t\t\t\t\t\tfor(var h = 0; h < delegateHandlers.length; h++){\n\t\t\t\t\t\t\t\tif(delegateHandlers[h].root){\n\t\t\t\t\t\t\t\t\tif(!domHelpers.isChildOf(trg, delegateHandlers[h].root)){\n\t\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\thandlers.push(delegateHandlers[h].handler);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttrg = trg.parentNode;\n\t\t\t}\n\t\t\treturn handlers;\n\t\t}\n\n\t\tfunction callEventHandlers(handlers, e, id){\n\t\t\tvar res = true;\n\n\t\t\tfor(var i = 0; i < handlers.length; i++){\n\t\t\t\tvar handlerResult =  handlers[i].call(gantt, e, id, e.target || e.srcElement);\n\t\t\t\tres = res && !(typeof handlerResult != \"undefined\" && handlerResult !== true);\n\t\t\t}\n\n\t\t\treturn res;\n\t\t}\n\n\n\t\tfunction onDoubleClick(e) {\n\t\t\te = e || window.event;\n\t\t\tvar trg = e.target || e.srcElement;\n\t\t\tvar id = gantt.locate(e);\n\n\t\t\tvar handlers = findEventHandlers(e, eventHandlers.doubleclick);\n\t\t\tvar res = !gantt.checkEvent(\"onTaskDblClick\") || gantt.callEvent(\"onTaskDblClick\", [id, e]);\n\t\t\tif (res) {\n\t\t\t\tvar default_action = callEventHandlers(handlers, e, id);\n\t\t\t\tif (!default_action)\n\t\t\t\t\treturn;\n\n\t\t\t\tif (id !== null && gantt.getTask(id)) {\n\t\t\t\t\tif (res && gantt.config.details_on_dblclick) {\n\t\t\t\t\t\tgantt.showLightbox(id);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction onMouseMove(e) {\n\t\t\tif (gantt.checkEvent(\"onMouseMove\")) {\n\t\t\t\tvar id = gantt.locate(e);\n\t\t\t\tgantt._last_move_event = e;\n\t\t\t\tgantt.callEvent(\"onMouseMove\", [id, e]);\n\t\t\t}\n\t\t}\n\n\t\tfunction detach(eventName, className, handler, root) {\n\t\t\tif (eventHandlers[eventName] && eventHandlers[eventName][className]) {\n\t\t\t\tvar handlers = eventHandlers[eventName];\n\t\t\t\tvar elementHandlers = handlers[className];\n\t\t\t\tfor(var i = 0; i < elementHandlers.length; i++){\n\t\t\t\t\tif(elementHandlers[i].root == root){\n\t\t\t\t\t\telementHandlers.splice(i, 1);\n\t\t\t\t\t\ti--;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(!elementHandlers.length){\n\t\t\t\t\tdelete handlers[className];\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\n\t\tvar domEvents = gantt._createDomEventScope();\n\n\t\tfunction reset(node){\n\n\t\t\tdomEvents.detachAll();\n\n\t\t\tif(node){\n\t\t\t\tdomEvents.attach(node, \"click\", onClick);\n\t\t\t\tdomEvents.attach(node, \"dblclick\", onDoubleClick);\n\t\t\t\tdomEvents.attach(node, \"mousemove\", onMouseMove);\n\t\t\t\tdomEvents.attach(node, \"contextmenu\", onContextMenu);\n\t\t\t}\n\t\t}\n\n\n\n\t\treturn {\n\t\t\treset: reset,\n\t\t\tglobal: function(event, classname, handler){\n\t\t\t\taddEventTarget(event, classname, handler, null);\n\t\t\t},\n\t\t\tdelegate: addEventTarget,\n\t\t\tdetach: detach,\n\t\t\tcallHandler: callHandler,\n\t\t\tonDoubleClick: onDoubleClick,\n\t\t\tonMouseMove: onMouseMove,\n\t\t\tonContextMenu: onContextMenu,\n\t\t\tonClick: onClick,\n\t\t\tdestructor: function(){\n\t\t\t\treset();\n\t\t\t\teventHandlers = null;\n\t\t\t\tdomEvents = null;\n\t\t\t}\n\n\t\t};\n\t};\n\n})(domHelpers);\n\n\nmodule.exports = {\n\tinit:createMouseHandler\n};","var utils = require(\"../../utils/utils\");\n\nfunction ViewSettings(config){\n\tutils.mixin(this, config, true);\n}\n\n\nfunction extendSettings (store, parentSettings){\n\tvar own = this.$config[store];\n\n\tif(own){\n\t\tif(own instanceof ViewSettings){\n\t\t\treturn own;\n\t\t}else{\n\t\t\tViewSettings.prototype = parentSettings;\n\t\t\tthis.$config[store] = new ViewSettings(own);\n\t\t\treturn this.$config[store];\n\t\t}\n\t}else{\n\t\treturn parentSettings;\n\t}\n}\n\nvar configurable = function(parentView){\n\tvar parentConfig,\n\t\tparentTemplates;\n\n\treturn {\n\t\t$getConfig: function(){\n\t\t\tif(!parentConfig){\n\t\t\t\tparentConfig = parentView ? parentView.$getConfig() : this.$gantt.config;\n\t\t\t}\n\n\t\t\treturn extendSettings.call(this, \"config\", parentConfig);\n\t\t},\n\t\t$getTemplates: function(){\n\t\t\tif(!parentTemplates){\n\t\t\t\tparentTemplates = parentView ? parentView.$getTemplates() : this.$gantt.templates;\n\t\t\t}\n\n\t\t\treturn extendSettings.call(this, \"templates\", parentTemplates);\n\t\t}\n\t};\n};\n\nmodule.exports = function(obj, parent){\n\tutils.mixin(obj, configurable(parent));\n};","var utils = require(\"../../utils/utils\"),\n\tconfigurable = require(\"./configurable\");\n\nvar uiFactory = function createFactory(gantt){\n\tvar views = {};\n\n\tfunction ui(cell, parentView) {\n\t\tvar content;\n\t\tvar view = \"cell\";\n\t\tif (cell.view){\n\t\t\tview = \"viewcell\";\n\t\t}else if (cell.resizer) {\n\t\t\tview = \"resizer\";\n\t\t}\n\t\telse if (cell.rows || cell.cols) {\n\t\t\tview = \"layout\";\n\t\t}\n\t\telse if (cell.views) {\n\t\t\tview = \"multiview\";\n\t\t}\n\n\t\tcontent = createView.call(this, view, null, cell, parentView);\n\t\treturn content;\n\t}\n\t\n\tvar createdViews = {};\n\n\tfunction createView(name, parent, config, parentView) {\n\t\tvar creator = views[name];\n\n\t\tif(!creator || !creator.create)\n\t\t\treturn false;\n\n\t\tif(name == \"resizer\" && !config.mode){\n\t\t\tif(parentView.$config.cols){\n\t\t\t\tconfig.mode = \"x\";\n\t\t\t}else{\n\t\t\t\tconfig.mode = \"y\";\n\t\t\t}\n\t\t}\n\n\t\tif(name == \"viewcell\" && config.view == \"scrollbar\" && !config.scroll){\n\t\t\tif(parentView.$config.cols){\n\t\t\t\tconfig.scroll = \"y\";\n\t\t\t}else{\n\t\t\t\tconfig.scroll = \"x\";\n\t\t\t}\n\t\t}\n\n\t\tvar config = utils.copy(config);\n\n\t\tif(!config.id && !createdViews[config.view]){\n\t\t\tconfig.id = config.view;\n\t\t}\n\n\t\tif(config.id && !config.css){\n\t\t\tconfig.css = config.id+\"_cell\";\n\t\t}\n\n\t\tvar view = new creator.create(parent, config, this, gantt);\n\n\t\tif(creator.configure){\n\t\t\tcreator.configure(view);\n\t\t}\n\n\t\tconfigurable(view, parentView);\n\t\tif(!view.$id){\n\t\t\tview.$id = config.id || gantt.uid();\n\t\t}\n\n\t\tif(!view.$parent && typeof parent == \"object\"){\n\t\t\tview.$parent = parent;\n\t\t}\n\t\tif(!view.$config){\n\t\t\tview.$config = config;\n\t\t}\n\n\t\tif(createdViews[view.$id]){\n\t\t\tview.$id = gantt.uid();\n\t\t}\n\n\t\tcreatedViews[view.$id] = view;\n\n\t\treturn view;\n\t}\n\n\tfunction reset(){\n\t\tcreatedViews = {};\n\t}\n\n\tfunction register(name, viewConstructor, configure){\n\t\tviews[name] = {create: viewConstructor, configure: configure};\n\t}\n\n\tfunction getView(id){\n\t\treturn createdViews[id];\n\t}\n\n\tvar factory = {\n\t\tinitUI:ui,\n\t\treset: reset,\n\t\tregisterView: register,\n\t\tcreateView: createView,\n\t\tgetView: getView\n\t};\n\n\treturn factory;\n};\n\nmodule.exports = {\n\tcreateFactory: uiFactory\n};\n\n","var uiFactory = require(\"./ui_factory\"),\n\tmouseEvents = require(\"./mouse\"),\n\tcreateLayers = require(\"./gantt_layers\"),\n\tCell = require(\"./layout/cell\"),\n\tLayout = require(\"./layout/layout\"),\n\tViewLayout = require(\"./layout/view_layout\"),\n\tViewCell = require(\"./layout/view_cell\"),\n\tResizer = require(\"./layout/resizer_cell\"),\n\tScrollbar = require(\"./layout/scrollbar_cell\"),\n\tTimeline = require(\"./timeline/timeline\"),\n\tGrid = require(\"./grid/grid\"),\n\tResourceGrid = require(\"./grid/resource_grid\"),\n\tResourceTimeline = require(\"./timeline/resource_timeline\");\n\n\nvar gridEditorsFactory = require(\"./grid/editors/controller\");\n\n\nvar renderTaskBar = require(\"./render/task_bar_render\"),\n\trenderSplitTaskBar = require(\"./render/task_split_render\"),\n\trenderTaskBg = require(\"./render/task_bg_render\"),\n\trenderLink = require(\"./render/link_render\"),\n\tgridRenderer = require(\"./render/task_grid_line_render\");\n\nvar mainGridInitializer = require(\"./grid/main_grid_initializer\");\nvar mainTimelineInitializer = require(\"./timeline/main_timeline_initializer\");\nvar mainLayoutInitializer = require(\"./main_layout_initializer\");\n\nfunction initUI(gantt){\n\tfunction inheritGridConfig(id){\n\t\treturn {\n\t\t\t//width: gantt.config.grid_width\n\t\t};\n\t}\n\n\tfunction attachInitializer(view, initializer){\n\t\tvar ext = initializer(gantt);\n\t\tif(ext.onCreated)\n\t\t\text.onCreated(view);\n\t\tview.attachEvent(\"onReady\", function(){\n\t\t\tif(ext.onInitialized)\n\t\t\t\text.onInitialized(view);\n\t\t});\n\t\tview.attachEvent(\"onDestroy\", function(){\n\t\t\tif(ext.onDestroyed)\n\t\t\t\text.onDestroyed(view);\n\t\t});\n\t}\n\n\tvar factory = uiFactory.createFactory(gantt);\n\tfactory.registerView(\"cell\", Cell);\n\tfactory.registerView(\"resizer\", Resizer);\n\tfactory.registerView(\"scrollbar\", Scrollbar);\n\tfactory.registerView(\"layout\", Layout, function(view){\n\t\tvar id = view.$config ? view.$config.id : null;\n\t\tif(id === \"main\"){\n\t\t\tattachInitializer(view, mainLayoutInitializer);\n\t\t}\n\t});\n\tfactory.registerView(\"viewcell\", ViewCell);\n\tfactory.registerView(\"multiview\", ViewLayout);\n\tfactory.registerView(\"timeline\", Timeline, function(view){\n\t\tvar id = view.$config ? view.$config.id : null;\n\t\tif(id === \"timeline\" || view.$config.bind == \"task\"){\n\t\t\tattachInitializer(view, mainTimelineInitializer);\n\t\t}\n\t});\n\tfactory.registerView(\"grid\", Grid, function(view){\n\t\tvar id = view.$config ? view.$config.id : null;\n\t\tif(id === \"grid\" || view.$config.bind == \"task\"){\n\t\t\tattachInitializer(view, mainGridInitializer);\n\t\t}\n\t});\n\n\tfactory.registerView(\"resourceGrid\", ResourceGrid);\n\tfactory.registerView(\"resourceTimeline\", ResourceTimeline);\n\n\tvar layersEngine = createLayers(gantt);\n\n\tvar inlineEditors = gridEditorsFactory(gantt);\n\n\tgantt.ext.inlineEditors = inlineEditors;\n\tgantt.ext._inlineEditors = inlineEditors;\n\tinlineEditors.init(gantt);\n\n\treturn {\n\t\tfactory:factory,\n\t\tmouseEvents: mouseEvents.init(gantt),\n\t\tlayersApi: layersEngine.init(),\n\t\trender:{\n\t\t\tgridLine: gridRenderer(gantt),\n\t\t\ttaskBg: renderTaskBg(gantt),\n\t\t\ttaskBar: renderTaskBar(gantt),\n\t\t\ttaskSplitBar: renderSplitTaskBar(gantt),\n\t\t\tlink: renderLink(gantt)\n\t\t},\n\t\tlayersService: {\n\t\t\tgetDataRender: function(name){\n\t\t\t\treturn layersEngine.getDataRender(name, gantt);\n\t\t\t},\n\t\t\tcreateDataRender: function(config){\n\t\t\t\treturn layersEngine.createDataRender(config, gantt);\n\t\t\t}\n\t\t}\n\t};\n}\n\nmodule.exports = {\n\tinit: initUI\n};","var utils = require(\"../utils/utils\");\nvar domHelpers = require(\"../utils/dom_helpers\");\n\nmodule.exports = function(gantt) {\n\n\tvar boxAttribute = \"data-dhxbox\";\n\n\tvar _dhx_msg_cfg = null;\n\n\tfunction callback(config, result) {\n\t\tvar usercall = config.callback;\n\t\tmodalBox.hide(config.box);\n\n\t\t_dhx_msg_cfg = config.box = null;\n\t\tif (usercall)\n\t\t\tusercall(result);\n\t}\n\n\tfunction modal_key(e) {\n\t\tif (_dhx_msg_cfg) {\n\t\t\te = e || event;\n\t\t\tvar code = e.which || event.keyCode;\n\t\t\tvar preventDefault = false;\n\n\t\t\tif (messageBox.keyboard) {\n\t\t\t\tif (code == 13 || code == 32) {\n\t\t\t\t\t// default behavior is to confirm/submit popup on space/enter\n\t\t\t\t\t// if browser focus is set on button element - do button click instead of default behavior\n\t\t\t\t\tvar target = e.target || e.srcElement;\n\t\t\t\t\tif (domHelpers.getClassName(target).indexOf(\"gantt_popup_button\") > -1 && target.click) {\n\t\t\t\t\t\ttarget.click();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcallback(_dhx_msg_cfg, true);\n\t\t\t\t\t\tpreventDefault = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (code == 27) {\n\t\t\t\t\tcallback(_dhx_msg_cfg, false);\n\t\t\t\t\tpreventDefault = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (preventDefault) {\n\t\t\t\tif (e.preventDefault)\n\t\t\t\t\te.preventDefault();\n\t\t\t\treturn !(e.cancelBubble = true);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t}\n\n\tgantt.event(document, \"keydown\", modal_key, true);\n\n\tfunction modality(mode) {\n\t\tif (!modality.cover) {\n\t\t\tmodality.cover = document.createElement(\"div\");\n\t\t\t//necessary for IE only\n\t\t\tmodality.cover.onkeydown = modal_key;\n\t\t\tmodality.cover.className = \"dhx_modal_cover\";\n\t\t\tdocument.body.appendChild(modality.cover);\n\t\t}\n\t\tvar height = document.body.scrollHeight;\n\t\tmodality.cover.style.display = mode ? \"inline-block\" : \"none\";\n\t}\n\n\tfunction button(text, className, result) {\n\t\tvar buttonAriaAttrs = gantt._waiAria.messageButtonAttrString(text);\n\t\tvar name = className.toLowerCase().replace(/ /g, \"_\");\n\t\tvar button_css = \"gantt_\" + name + \"_button\" + \" dhtmlx_\" + name + \"_button\"; // dhtmlx_ok_button, dhtmlx_click_me_button\n\t\treturn \"<div \" + buttonAriaAttrs + \" class='gantt_popup_button dhtmlx_popup_button \" + button_css + \"' data-result='\" + result + \"' result='\" + result + \"' ><div>\" + text + \"</div></div>\";\n\t}\n\n\tfunction info(text) {\n\t\tif (!messageBox.area) {\n\t\t\tmessageBox.area = document.createElement(\"div\");\n\t\t\tmessageBox.area.className = \"gantt_message_area dhtmlx_message_area\";\n\t\t\tmessageBox.area.style[messageBox.position] = \"5px\";\n\t\t\tdocument.body.appendChild(messageBox.area);\n\t\t}\n\n\t\tmessageBox.hide(text.id);\n\t\tvar message = document.createElement(\"div\");\n\t\tmessage.innerHTML = \"<div>\" + text.text + \"</div>\";\n\t\tmessage.className = \"gantt-info dhtmlx-info gantt-\" + text.type + \" dhtmlx-\" + text.type;\n\t\tmessage.onclick = function () {\n\t\t\tmessageBox.hide(text.id);\n\t\t\ttext = null;\n\t\t};\n\n\t\tgantt._waiAria.messageInfoAttr(message);\n\n\t\tif (messageBox.position == \"bottom\" && messageBox.area.firstChild)\n\t\t\tmessageBox.area.insertBefore(message, messageBox.area.firstChild);\n\t\telse\n\t\t\tmessageBox.area.appendChild(message);\n\n\t\tif (text.expire > 0)\n\t\t\tmessageBox.timers[text.id] = window.setTimeout(function () {\n\t\t\t\tmessageBox.hide(text.id);\n\t\t\t}, text.expire);\n\n\t\tmessageBox.pull[text.id] = message;\n\t\tmessage = null;\n\n\t\treturn text.id;\n\t}\n\n\tfunction getFirstDefined() {\n\t\tvar values = [].slice.apply(arguments, [0]);\n\n\t\tfor (var i = 0; i < values.length; i++) {\n\t\t\tif (values[i]) {\n\t\t\t\treturn values[i];\n\t\t\t}\n\t\t}\n\n\t}\n\n\tfunction _boxStructure(config, ok, cancel) {\n\t\tvar box = document.createElement(\"div\");\n\n\t\tvar locale = gantt.locale;\n\n\t\tvar contentId = utils.uid();\n\t\tgantt._waiAria.messageModalAttr(box, contentId);\n\n\n\t\tbox.className = \" gantt_modal_box dhtmlx_modal_box gantt-\" + config.type + \" dhtmlx-\" + config.type;\n\t\tbox.setAttribute(boxAttribute, 1);\n\n\t\tvar inner = '';\n\n\t\tif (config.width)\n\t\t\tbox.style.width = config.width;\n\t\tif (config.height)\n\t\t\tbox.style.height = config.height;\n\t\tif (config.title)\n\t\t\tinner += '<div class=\"gantt_popup_title dhtmlx_popup_title\">' + config.title + '</div>';\n\t\tinner += '<div class=\"gantt_popup_text dhtmlx_popup_text\" id=\"' + contentId + '\"><span>' + (config.content ? '' : config.text) + '</span></div><div  class=\"gantt_popup_controls dhtmlx_popup_controls\">';\n\t\tif (ok)\n\t\t\tinner += button(getFirstDefined(config.ok, gantt.locale.labels.message_ok, \"OK\"), \"ok\", true);\n\t\tif (cancel)\n\t\t\tinner += button(getFirstDefined(config.cancel, gantt.locale.labels.message_cancel, \"Cancel\"), \"cancel\", false);\n\n\t\tif (config.buttons) {\n\t\t\tfor (var i = 0; i < config.buttons.length; i++) {\n\t\t\t\tvar btn = config.buttons[i];\n\t\t\t\tif (typeof btn == \"object\") {\n\t\t\t\t\t// Support { label:\"Save\", css:\"main_button\", value:\"save\" }\n\t\t\t\t\tvar label = btn.label;\n\t\t\t\t\tvar css = btn.css || (\"gantt_\" + btn.label.toLowerCase() + \"_button dhtmlx_\" + btn.label.toLowerCase() + \"_button\");\n\t\t\t\t\tvar value = btn.value || i;\n\t\t\t\t\tinner += button(label, css, value);\n\t\t\t\t} else {\n\t\t\t\t\tinner += button(btn, btn, i);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tinner += '</div>';\n\t\tbox.innerHTML = inner;\n\n\t\tif (config.content) {\n\t\t\tvar node = config.content;\n\t\t\tif (typeof node == \"string\")\n\t\t\t\tnode = document.getElementById(node);\n\t\t\tif (node.style.display == 'none')\n\t\t\t\tnode.style.display = \"\";\n\t\t\tbox.childNodes[config.title ? 1 : 0].appendChild(node);\n\t\t}\n\n\t\tbox.onclick = function (e) {\n\t\t\te = e || event;\n\t\t\tvar source = e.target || e.srcElement;\n\t\t\tif (!source.className) source = source.parentNode;\n\t\t\tif (source.className.split(\" \")[0] == \"gantt_popup_button\") {\n\t\t\t\tvar result = source.getAttribute(\"data-result\");\n\t\t\t\tresult = (result == \"true\") || (result == \"false\" ? false : result);\n\t\t\t\tcallback(config, result);\n\t\t\t}\n\t\t};\n\t\tconfig.box = box;\n\t\tif (ok || cancel)\n\t\t\t_dhx_msg_cfg = config;\n\n\t\treturn box;\n\t}\n\n\tfunction _createBox(config, ok, cancel) {\n\t\tvar box = config.tagName ? config : _boxStructure(config, ok, cancel);\n\n\t\tif (!config.hidden)\n\t\t\tmodality(true);\n\t\tdocument.body.appendChild(box);\n\t\tvar x = Math.abs(Math.floor(((window.innerWidth || document.documentElement.offsetWidth) - box.offsetWidth) / 2));\n\t\tvar y = Math.abs(Math.floor(((window.innerHeight || document.documentElement.offsetHeight) - box.offsetHeight) / 2));\n\t\tif (config.position == \"top\")\n\t\t\tbox.style.top = \"-3px\";\n\t\telse\n\t\t\tbox.style.top = y + 'px';\n\t\tbox.style.left = x + 'px';\n\t\t//necessary for IE only\n\t\tbox.onkeydown = modal_key;\n\n\t\tmodalBox.focus(box);\n\n\t\tif (config.hidden)\n\t\t\tmodalBox.hide(box);\n\n\t\tgantt.callEvent(\"onMessagePopup\", [box]);\n\t\treturn box;\n\t}\n\n\tfunction alertPopup(config) {\n\t\treturn _createBox(config, true, false);\n\t}\n\n\tfunction confirmPopup(config) {\n\t\treturn _createBox(config, true, true);\n\t}\n\n\tfunction boxPopup(config) {\n\t\treturn _createBox(config);\n\t}\n\n\tfunction box_params(text, type, callback) {\n\t\tif (typeof text != \"object\") {\n\t\t\tif (typeof type == \"function\") {\n\t\t\t\tcallback = type;\n\t\t\t\ttype = \"\";\n\t\t\t}\n\t\t\ttext = {text: text, type: type, callback: callback};\n\t\t}\n\t\treturn text;\n\t}\n\n\tfunction params(text, type, expire, id) {\n\t\tif (typeof text != \"object\")\n\t\t\ttext = {text: text, type: type, expire: expire, id: id};\n\t\ttext.id = text.id || utils.uid();\n\t\ttext.expire = text.expire || messageBox.expire;\n\t\treturn text;\n\t}\n\n\tvar alertBox = function () {\n\t\tvar text = box_params.apply(this, arguments);\n\t\ttext.type = text.type || \"confirm\";\n\t\treturn alertPopup(text);\n\t};\n\tvar confirmBox = function () {\n\t\tvar text = box_params.apply(this, arguments);\n\t\ttext.type = text.type || \"alert\";\n\t\treturn confirmPopup(text);\n\t};\n\tvar modalBox = function () {\n\t\tvar text = box_params.apply(this, arguments);\n\t\ttext.type = text.type || \"alert\";\n\t\treturn boxPopup(text);\n\t};\n\tmodalBox.hide = function (node) {\n\t\twhile (node && node.getAttribute && !node.getAttribute(boxAttribute))\n\t\t\tnode = node.parentNode;\n\t\tif (node) {\n\t\t\tnode.parentNode.removeChild(node);\n\t\t\tmodality(false);\n\n\t\t\tgantt.callEvent(\"onAfterMessagePopup\", [node]);\n\t\t}\n\t};\n\n\tvar domHelpers = require(\"../utils/dom_helpers\");\n\n\tmodalBox.focus = function (node) {\n\t\tsetTimeout(function () {\n\t\t\tvar focusable = domHelpers.getFocusableNodes(node);\n\t\t\tif (focusable.length) {\n\t\t\t\tif (focusable[0].focus) focusable[0].focus();\n\t\t\t}\n\t\t}, 1);\n\t};\n\n\tvar messageBox = function (text, type, expire, id) {\n\t\ttext = params.apply(this, arguments);\n\t\ttext.type = text.type || \"info\";\n\n\t\tvar subtype = text.type.split(\"-\")[0];\n\t\tswitch (subtype) {\n\t\t\tcase \"alert\":\n\t\t\t\treturn alertPopup(text);\n\t\t\tcase \"confirm\":\n\t\t\t\treturn confirmPopup(text);\n\t\t\tcase \"modalbox\":\n\t\t\t\treturn boxPopup(text);\n\t\t\tdefault:\n\t\t\t\treturn info(text);\n\t\t}\n\t};\n\n\tmessageBox.seed = (new Date()).valueOf();\n\tmessageBox.uid = utils.uid;\n\tmessageBox.expire = 4000;\n\tmessageBox.keyboard = true;\n\tmessageBox.position = \"top\";\n\tmessageBox.pull = {};\n\tmessageBox.timers = {};\n\n\tmessageBox.hideAll = function () {\n\t\tfor (var key in messageBox.pull)\n\t\t\tmessageBox.hide(key);\n\t};\n\tmessageBox.hide = function (id) {\n\t\tvar obj = messageBox.pull[id];\n\t\tif (obj && obj.parentNode) {\n\t\t\twindow.setTimeout(function () {\n\t\t\t\tobj.parentNode.removeChild(obj);\n\t\t\t\tobj = null;\n\t\t\t}, 2000);\n\t\t\tobj.className += \" hidden\";\n\n\t\t\tif (messageBox.timers[id])\n\t\t\t\twindow.clearTimeout(messageBox.timers[id]);\n\t\t\tdelete messageBox.pull[id];\n\t\t}\n\t};\n\n\tvar popups = [];\n\tgantt.attachEvent(\"onMessagePopup\", function(box){\n\t\tpopups.push(box);\n\t});\n\tgantt.attachEvent(\"onAfterMessagePopup\", function(box){\n\t\tfor(var i = 0; i < popups.length; i++){\n\t\t\tif(popups[i] === box){\n\t\t\t\tpopups.splice(i, 1);\n\t\t\t\ti--;\n\t\t\t}\n\t\t}\n\t});\n\n\tgantt.attachEvent(\"onDestroy\", function(){\n\t\tif(modality.cover && modality.cover.parentNode){\n\t\t\tmodality.cover.parentNode.removeChild(modality.cover);\n\t\t}\n\n\t\tfor(var i = 0; i < popups.length; i++){\n\t\t\tif(popups[i].parentNode){\n\t\t\t\tpopups[i].parentNode.removeChild(popups[i]);\n\t\t\t}\n\t\t}\n\t\tpopups = null;\n\n\t\tif(messageBox.area && messageBox.area.parentNode){\n\t\t\tmessageBox.area.parentNode.removeChild(messageBox.area);\n\t\t}\n\t\tmessageBox = null;\n\t});\n\n\treturn {\n\t\talert: alertBox,\n\t\tconfirm: confirmBox,\n\t\tmessage: messageBox,\n\t\tmodalbox: modalBox\n\t};\n};","var utils = require(\"../../utils/utils\");\n\nvar StateService = (function(){\n\tvar stateProviders = {};\n\n\tfunction getState(name){\n\t\tif(name){\n\t\t\treturn stateProviders[name].method();\n\t\t}else{\n\t\t\tvar res = {};\n\t\t\tfor(var i in stateProviders){\n\t\t\t\tif(!stateProviders[i].internal)\n\t\t\t\t\tutils.mixin(res, stateProviders[i].method(), true);\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\t}\n\n\tfunction registerProvider(name, provider, internal){\n\t\tstateProviders[name] = { method: provider, internal: internal};\n\t}\n\n\tfunction unregisterProvider(name){\n\t\tdelete stateProviders[name];\n\t}\n\n\treturn {\n\t\tgetState: getState,\n\t\tregisterProvider: registerProvider,\n\t\tunregisterProvider: unregisterProvider\n\t};\n});\n\nmodule.exports = StateService;\n\n","module.exports = function(gantt) {\n\n\tvar regTemplates = {};\n\n\tfunction initTemplate(name, initial, template_name) {\n\t\ttemplate_name = template_name || name;\n\t\tvar config = gantt.config,\n\t\t\ttemplates = gantt.templates;\n\n\t\tif (gantt.config[name] && regTemplates[template_name] != config[name]) {\n\t\t\tif (!(initial && templates[template_name])) {\n\t\t\t\ttemplates[template_name] = gantt.date.date_to_str(config[name]);\n\t\t\t\tregTemplates[template_name] = config[name];\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction initTemplates() {\n\t\tvar labels = gantt.locale.labels;\n\t\tlabels.gantt_save_btn = labels.icon_save;\n\t\tlabels.gantt_cancel_btn = labels.icon_cancel;\n\t\tlabels.gantt_delete_btn = labels.icon_delete;\n\n\n\t\tvar date = gantt.date;\n\n\t\t//build configuration based templates\n\t\tvar d = date.date_to_str;\n\t\tvar c = gantt.config;\n\t\tinitTemplate(\"date_scale\", true, undefined, gantt.config, gantt.templates);\n\t\tinitTemplate(\"date_grid\", true, \"grid_date_format\", gantt.config, gantt.templates);\n\t\tinitTemplate(\"task_date\", true, undefined, gantt.config, gantt.templates);\n\n\t\tgantt.mixin(gantt.templates, {\n\t\t\txml_date: date.str_to_date(c.xml_date, c.server_utc),\n\t\t\txml_format: d(c.xml_date, c.server_utc),\n\t\t\tapi_date: date.str_to_date(c.api_date),\n\t\t\tprogress_text: function (start, end, task) {\n\t\t\t\treturn \"\";\n\t\t\t},\n\t\t\tgrid_header_class: function (column, config) {\n\t\t\t\treturn \"\";\n\t\t\t},\n\n\t\t\ttask_text: function (start, end, task) {\n\t\t\t\treturn task.text;\n\t\t\t},\n\t\t\ttask_class: function (start, end, task) {\n\t\t\t\treturn \"\";\n\t\t\t},\n\t\t\tgrid_row_class: function (start, end, task) {\n\t\t\t\treturn \"\";\n\t\t\t},\n\t\t\ttask_row_class: function (start, end, task) {\n\t\t\t\treturn \"\";\n\t\t\t},\n\t\t\ttask_cell_class: function (item, date) {\n\t\t\t\treturn \"\";\n\t\t\t},\n\t\t\tscale_cell_class: function (date) {\n\t\t\t\treturn \"\";\n\t\t\t},\n\t\t\tscale_row_class: function (date) {\n\t\t\t\treturn \"\";\n\t\t\t},\n\n\t\t\tgrid_indent: function (item) {\n\t\t\t\treturn \"<div class='gantt_tree_indent'></div>\";\n\t\t\t},\n\t\t\tgrid_folder: function (item) {\n\t\t\t\treturn \"<div class='gantt_tree_icon gantt_folder_\" + (item.$open ? \"open\" : \"closed\") + \"'></div>\";\n\t\t\t},\n\t\t\tgrid_file: function (item) {\n\t\t\t\treturn \"<div class='gantt_tree_icon gantt_file'></div>\";\n\t\t\t},\n\t\t\tgrid_open: function (item) {\n\t\t\t\treturn \"<div class='gantt_tree_icon gantt_\" + (item.$open ? \"close\" : \"open\") + \"'></div>\";\n\t\t\t},\n\t\t\tgrid_blank: function (item) {\n\t\t\t\treturn \"<div class='gantt_tree_icon gantt_blank'></div>\";\n\t\t\t},\n\t\t\tdate_grid: function (date, item) {\n\t\t\t\tif (item && gantt.isUnscheduledTask(item) && gantt.config.show_unscheduled) {\n\t\t\t\t\treturn gantt.templates.task_unscheduled_time(item);\n\t\t\t\t} else {\n\t\t\t\t\treturn gantt.templates.grid_date_format(date);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\ttask_time: function (start, end, ev) {\n\t\t\t\tif (gantt.isUnscheduledTask(ev) && gantt.config.show_unscheduled) {\n\t\t\t\t\treturn gantt.templates.task_unscheduled_time(ev);\n\t\t\t\t} else {\n\t\t\t\t\treturn gantt.templates.task_date(start) + \" - \" + gantt.templates.task_date(end);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\ttask_unscheduled_time: function (task) {\n\t\t\t\treturn \"\";\n\t\t\t},\n\n\t\t\ttime_picker: d(c.time_picker),\n\t\t\tlink_class: function (link) {\n\t\t\t\treturn \"\";\n\t\t\t},\n\t\t\tlink_description: function (link) {\n\t\t\t\tvar from = gantt.getTask(link.source),\n\t\t\t\t\tto = gantt.getTask(link.target);\n\n\t\t\t\treturn \"<b>\" + from.text + \"</b> &ndash;  <b>\" + to.text + \"</b>\";\n\t\t\t},\n\n\t\t\tdrag_link: function (from, from_start, to, to_start) {\n\t\t\t\tfrom = gantt.getTask(from);\n\t\t\t\tvar labels = gantt.locale.labels;\n\n\t\t\t\tvar text = \"<b>\" + from.text + \"</b> \" + (from_start ? labels.link_start : labels.link_end) + \"<br/>\";\n\t\t\t\tif (to) {\n\t\t\t\t\tto = gantt.getTask(to);\n\t\t\t\t\ttext += \"<b> \" + to.text + \"</b> \" + (to_start ? labels.link_start : labels.link_end) + \"<br/>\";\n\t\t\t\t}\n\t\t\t\treturn text;\n\t\t\t},\n\t\t\tdrag_link_class: function (from, from_start, to, to_start) {\n\t\t\t\tvar add = \"\";\n\n\t\t\t\tif (from && to) {\n\t\t\t\t\tvar allowed = gantt.isLinkAllowed(from, to, from_start, to_start);\n\t\t\t\t\tadd = \" \" + (allowed ? \"gantt_link_allow\" : \"gantt_link_deny\");\n\t\t\t\t}\n\n\t\t\t\treturn \"gantt_link_tooltip\" + add;\n\t\t\t},\n\n\t\t\t/* used for aria-labels of bar elements and for tooltip.js */\n\t\t\ttooltip_date_format: date.date_to_str(\"%Y-%m-%d\"),\n\t\t\ttooltip_text: function (start, end, event) {\n\t\t\t\treturn \"<b>Task:</b> \" + event.text + \"<br/><b>Start date:</b> \" + gantt.templates.tooltip_date_format(start) + \"<br/><b>End date:</b> \" + gantt.templates.tooltip_date_format(end);\n\t\t\t}\n\t\t});\n\t}\n\n\treturn {\n\t\tinitTemplates: initTemplates,\n\t\tinitTemplate: initTemplate\n\t};\n\n};","var eventable = require(\"../../utils/eventable\");\nvar utils = require(\"../../utils/utils\");\nvar timeout = require(\"../../utils/timeout\");\n\nmodule.exports = function(gantt){\n\n\tfunction copyDomEvent(e){\n\t\treturn {\n\t\t\ttarget: e.target || e.srcElement,\n\t\t\tpageX: e.pageX,\n\t\t\tpageY: e.pageY,\n\t\t\tclientX: e.clientX,\n\t\t\tclientY: e.clientY,\n\t\t\tmetaKey: e.metaKey,\n\t\t\tshiftKey: e.shiftKey,\n\t\t\tctrlKey: e.ctrlKey,\n\t\t\taltKey: e.altKey\n\t\t};\n\t}\n\n\tfunction DnD(obj, config) {\n\t\tthis._obj = obj;\n\t\tthis._settings = config || {};\n\t\teventable(this);\n\n\t\tvar inputMethods = this.getInputMethods();\n\n\t\tthis._drag_start_timer = null;\n\t\tgantt.attachEvent(\"onGanttScroll\", utils.bind(function (left, top) {\n\t\t\tthis.clearDragTimer();\n\t\t}, this));\n\n\t\tfor(var i = 0; i < inputMethods.length; i++){\n\t\t\t(utils.bind(function(input){\n\n\t\t\t\tgantt.event(obj, input.down, utils.bind(function (e) {\n\t\t\t\t\tif(!input.accessor(e)){\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._settings.original_target = copyDomEvent(e);\n\n\t\t\t\t\tif (gantt.config.touch) {\n\t\t\t\t\t\tthis.clearDragTimer();\n\n\t\t\t\t\t\tthis._drag_start_timer = setTimeout(utils.bind(function () {\n\t\t\t\t\t\t\tthis.dragStart(obj, e, input);\n\t\t\t\t\t\t}, this), gantt.config.touch_drag);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.dragStart(obj, e, input);\n\t\t\t\t\t}\n\t\t\t\t}, this));\n\n\t\t\t\tgantt.event(document.body, input.up, utils.bind(function (e) {\n\t\t\t\t\tif(!input.accessor(e)){\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tthis.clearDragTimer();\n\t\t\t\t}, this));\n\n\t\t\t}, this))(inputMethods[i]);\n\t\t}\n\t}\n\n\tDnD.prototype = {\n\t\ttraceDragEvents: function (domElement, inputMethod) {\n\t\t\tvar mousemove = utils.bind(function (e) {\n\t\t\t\treturn this.dragMove(domElement, e, inputMethod.accessor);\n\t\t\t}, this);\n\t\t\tvar scroll = utils.bind(function (e) {\n\t\t\t\treturn this.dragScroll(domElement, e);\n\t\t\t}, this);\n\n\t\t\tvar limited_mousemove = utils.bind(function (e) {\n\t\t\t\tif (e && e.preventDefault) //Cancel default action on DND\n\t\t\t\t\te.preventDefault();\n\t\t\t\t(e || event).cancelBubble = true;\n\t\t\t\tif (utils.defined(this.config.updates_per_second)) {\n\t\t\t\t\tif (!timeout(this, this.config.updates_per_second))\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn mousemove(e);\n\t\t\t}, this);\n\n\t\t\tvar mouseup = utils.bind(function (e) {\n\t\t\t\tgantt.eventRemove(document.body, inputMethod.move, limited_mousemove);\n\t\t\t\tgantt.eventRemove(document.body, inputMethod.up, mouseup);\n\t\t\t\treturn this.dragEnd(domElement);\n\t\t\t}, this);\n\n\n\t\t\tgantt.event(document.body, inputMethod.move, limited_mousemove);\n\t\t\tgantt.event(document.body, inputMethod.up, mouseup);\n\t\t},\n\t\tcheckPositionChange: function (pos) {\n\t\t\tvar diff_x = pos.x - this.config.pos.x;\n\t\t\tvar diff_y = pos.y - this.config.pos.y;\n\t\t\tvar distance = Math.sqrt(Math.pow(Math.abs(diff_x), 2) + Math.pow(Math.abs(diff_y), 2));\n\n\t\t\tif (distance > this.config.sensitivity) {\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\t\tinitDnDMarker: function () {\n\t\t\t// create dnd placeholder and put it in dom\n\t\t\tvar marker = this.config.marker = document.createElement(\"div\");\n\t\t\tmarker.className = \"gantt_drag_marker\";\n\t\t\tmarker.innerHTML = \"Dragging object\";\n\t\t\tdocument.body.appendChild(marker);\n\t\t},\n\t\tbackupEventTarget: function (domEvent, getEvent) {\n\t\t\tif (!gantt.config.touch) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// keep original event target in DOM in order to keep dnd on touchmove event\n\t\t\tvar e = getEvent(domEvent);\n\n\t\t\tvar el = e.target || e.srcElement;\n\t\t\tvar copy = el.cloneNode(true);\n\t\t\t//this.config.target.target = copy;\n\t\t\tthis.config.original_target = copyDomEvent(e);\n\t\t\tthis.config.original_target.target = copy;\n\t\t\tthis.config.backup_element = el;\n\t\t\tel.parentNode.appendChild(copy);\n\n\t\t\tel.style.display = \"none\";\n\t\t\tdocument.body.appendChild(el);\n\t\t},\n\t\tgetInputMethods: function () {\n\t\t\t// bind actions to browser events\n\t\t\tvar inputMethods = [];\n\n\t\t\tinputMethods.push({\n\t\t\t\t\"move\": \"mousemove\",\n\t\t\t\t\"down\": \"mousedown\",\n\t\t\t\t\"up\": \"mouseup\",\n\t\t\t\t\"accessor\": function (e) {\n\t\t\t\t\treturn e;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (gantt.config.touch) {\n\n\t\t\t\tvar touchEventsSupported = true;\n\t\t\t\ttry{\n\t\t\t\t\tdocument.createEvent(\"TouchEvent\");\n\t\t\t\t}catch (e){\n\t\t\t\t\ttouchEventsSupported = false;\n\t\t\t\t}\n\n\t\t\t\tif(touchEventsSupported){\n\t\t\t\t\tinputMethods.push({\n\t\t\t\t\t\t\"move\": \"touchmove\",\n\t\t\t\t\t\t\"down\": \"touchstart\",\n\t\t\t\t\t\t\"up\": \"touchend\",\n\t\t\t\t\t\t\"accessor\": function (ev) {\n\t\t\t\t\t\t\tif (ev.touches && ev.touches.length > 1) return null;\n\t\t\t\t\t\t\tif (ev.touches[0])\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\ttarget: document.elementFromPoint(ev.touches[0].clientX, ev.touches[0].clientY),\n\t\t\t\t\t\t\t\t\tpageX: ev.touches[0].pageX,\n\t\t\t\t\t\t\t\t\tpageY: ev.touches[0].pageY,\n\t\t\t\t\t\t\t\t\tclientX: ev.touches[0].clientX,\n\t\t\t\t\t\t\t\t\tclientY: ev.touches[0].clientY\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\treturn ev;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}else if(window.navigator.pointerEnabled){\n\t\t\t\t\tinputMethods.push({\n\t\t\t\t\t\t\"move\": \"pointermove\",\n\t\t\t\t\t\t\"down\": \"pointerdown\",\n\t\t\t\t\t\t\"up\": \"pointerup\",\n\t\t\t\t\t\t\"accessor\": function (ev) {\n\t\t\t\t\t\t\tif (ev.pointerType == \"mouse\") return null;\n\t\t\t\t\t\t\treturn ev;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t}else if (window.navigator.msPointerEnabled){\n\t\t\t\t\tinputMethods.push({\n\t\t\t\t\t\t\"move\": \"MSPointerMove\",\n\t\t\t\t\t\t\"down\": \"MSPointerDown\",\n\t\t\t\t\t\t\"up\": \"MSPointerUp\",\n\t\t\t\t\t\t\"accessor\": function (ev) {\n\t\t\t\t\t\t\tif (ev.pointerType == ev.MSPOINTER_TYPE_MOUSE) return null;\n\t\t\t\t\t\t\treturn ev;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn inputMethods;\n\t\t},\n\t\tclearDragTimer: function () {\n\t\t\tif (this._drag_start_timer) {\n\t\t\t\tclearTimeout(this._drag_start_timer);\n\t\t\t\tthis._drag_start_timer = null;\n\t\t\t}\n\t\t},\n\t\tdragStart: function (obj, e, inputMethod) {\n\t\t\tthis.config = {\n\t\t\t\tobj: obj,\n\t\t\t\tmarker: null,\n\t\t\t\tstarted: false,\n\t\t\t\tpos: this.getPosition(e),\n\t\t\t\tsensitivity: 4\n\t\t\t};\n\t\t\tif (this._settings)\n\t\t\t\tutils.mixin(this.config, this._settings, true);\n\n\n\t\t\tthis.traceDragEvents(obj, inputMethod);\n\n\t\t\tgantt._prevent_touch_scroll = true;\n\t\t\tdocument.body.className += \" gantt_noselect\";\n\n\t\t\tif (gantt.config.touch) {\n\t\t\t\tthis.dragMove(obj, e, inputMethod.accessor);\n\t\t\t}\n\n\t\t},\n\t\tdragMove: function (obj, e, getEvent) {\n\t\t\tvar source = getEvent(e);\n\t\t\tif (!source) return;\n\n\t\t\tif (!this.config.marker && !this.config.started) {\n\t\t\t\tvar pos = this.getPosition(source);\n\n\t\t\t\tif (gantt.config.touch || this.checkPositionChange(pos)) {\n\t\t\t\t\t// real drag starts here,\n\t\t\t\t\t// when user moves mouse at first time after onmousedown\n\t\t\t\t\tthis.config.started = true;\n\t\t\t\t\tthis.config.ignore = false;\n\t\t\t\t\tif (this.callEvent(\"onBeforeDragStart\", [obj, this.config.original_target]) === false) {\n\t\t\t\t\t\tthis.config.ignore = true;\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tthis.backupEventTarget(e, getEvent);\n\t\t\t\t\tthis.initDnDMarker();\n\t\t\t\t\tgantt._touch_feedback();\n\t\t\t\t\tthis.callEvent(\"onAfterDragStart\", [obj, this.config.original_target]);\n\t\t\t\t} else {\n\t\t\t\t\tthis.config.ignore = true;\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\tif (!this.config.ignore) {\n\t\t\t\tsource.pos = this.getPosition(source);\n\t\t\t\tthis.config.marker.style.left = source.pos.x + \"px\";\n\t\t\t\tthis.config.marker.style.top = source.pos.y + \"px\";\n\t\t\t\tthis.callEvent(\"onDragMove\", [obj, source]);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\n\t\tdragEnd: function (obj) {\n\t\t\tvar target = this.config.backup_element;\n\t\t\tif (target && target.parentNode) {\n\t\t\t\ttarget.parentNode.removeChild(target);\n\t\t\t}\n\t\t\tgantt._prevent_touch_scroll = false;\n\t\t\tif (this.config.marker) {\n\t\t\t\tthis.config.marker.parentNode.removeChild(this.config.marker);\n\t\t\t\tthis.config.marker = null;\n\n\t\t\t\tthis.callEvent(\"onDragEnd\", []);\n\t\t\t}\n\t\t\tdocument.body.className = document.body.className.replace(\" gantt_noselect\", \"\");\n\t\t},\n\n\t\tgetPosition: function (e) {\n\t\t\tvar x = 0, y = 0;\n\t\t\te = e || window.event;\n\t\t\tif (e.pageX || e.pageY) {\n\t\t\t\tx = e.pageX;\n\t\t\t\ty = e.pageY;\n\t\t\t} else if (e.clientX || e.clientY) {\n\t\t\t\tx = e.clientX + document.body.scrollLeft + document.documentElement.scrollLeft;\n\t\t\t\ty = e.clientY + document.body.scrollTop + document.documentElement.scrollTop;\n\t\t\t}\n\t\t\treturn {x: x, y: y};\n\t\t}\n\t};\n\n\treturn DnD;\n};\n","/*\n %d - the day as a number with a leading zero ( 01 to 31 );\n %j - the day as a number without a leading zero ( 1 to 31 );\n %D - the day as an abbreviation ( Sun to Sat );\n %l - the day as a full name ( Sunday to Saturday );\n %W - the ISO-8601 week number of the year. Weeks start on Monday; 1)\n %m - the month as a number without a leading zero ( 1 to 12 );\n %n - the month as a number with a leading zero ( 01 to 12);\n %M - the month as an abbreviation ( Jan to Dec );\n %F - the month as a full name ( January to December );\n %y - the year as a two-digit number ( 00 to 99 );\n %Y - the year as a four-digit number ( 1900–9999 );\n %h - the hour based on the 12-hour clock ( 00 to 11 );\n %H - the hour based on the 24-hour clock ( 00 to 23 );\n %i - the minute as a number with a leading zero ( 00 to 59 );\n %s - the second as a number without a leading zero ( 00 to 59 ); 2)\n %a - displays am (for times from midnight until noon) and pm (for times from noon until midnight);\n %A - displays AM (for times from midnight until noon) and PM (for times from noon until midnight).\n*/\n\nmodule.exports = function(gantt) {\n\tvar dateHelper = {\n\t\tinit: function () {\n\t\t\tvar locale = gantt.locale;\n\n\t\t\tvar s = locale.date.month_short;\n\t\t\tvar t = locale.date.month_short_hash = {};\n\t\t\tfor (var i = 0; i < s.length; i++)\n\t\t\t\tt[s[i]] = i;\n\n\t\t\tvar s = locale.date.month_full;\n\t\t\tvar t = locale.date.month_full_hash = {};\n\t\t\tfor (var i = 0; i < s.length; i++)\n\t\t\t\tt[s[i]] = i;\n\t\t},\n\t\tdate_part: function (date) {\n\t\t\tvar old = new Date(date);\n\t\t\tdate.setHours(0);\n\t\t\tthis.hour_start(date);\n\t\t\tif (date.getHours() && //shift to yesterday on dst\n\t\t\t\t(date.getDate() < old.getDate() || date.getMonth() < old.getMonth() || date.getFullYear() < old.getFullYear()))\n\t\t\t\tdate.setTime(date.getTime() + 60 * 60 * 1000 * (24 - date.getHours()));\n\t\t\treturn date;\n\t\t},\n\t\ttime_part: function (date) {\n\t\t\treturn (date.valueOf() / 1000 - date.getTimezoneOffset() * 60) % 86400;\n\t\t},\n\t\tweek_start: function (date) {\n\t\t\tvar shift = date.getDay();\n\t\t\tif (gantt.config.start_on_monday) {\n\t\t\t\tif (shift === 0) shift = 6;\n\t\t\t\telse shift--;\n\t\t\t}\n\t\t\treturn this.date_part(this.add(date, -1 * shift, \"day\"));\n\t\t},\n\t\tmonth_start: function (date) {\n\t\t\tdate.setDate(1);\n\t\t\treturn this.date_part(date);\n\t\t},\n\t\tquarter_start: function (date) {\n\t\t\tthis.month_start(date);\n\t\t\tvar m = date.getMonth(),\n\t\t\t\tres_month;\n\n\t\t\tif (m >= 9) {\n\t\t\t\tres_month = 9;\n\t\t\t} else if (m >= 6) {\n\t\t\t\tres_month = 6;\n\t\t\t} else if (m >= 3) {\n\t\t\t\tres_month = 3;\n\t\t\t} else {\n\t\t\t\tres_month = 0;\n\t\t\t}\n\n\t\t\tdate.setMonth(res_month);\n\t\t\treturn date;\n\t\t},\n\t\tyear_start: function (date) {\n\t\t\tdate.setMonth(0);\n\t\t\treturn this.month_start(date);\n\t\t},\n\t\tday_start: function (date) {\n\t\t\treturn this.date_part(date);\n\t\t},\n\t\thour_start: function (date) {\n\t\t\tif (date.getMinutes())\n\t\t\t\tdate.setMinutes(0);\n\t\t\tthis.minute_start(date);\n\n\t\t\treturn date;\n\t\t},\n\t\tminute_start: function (date) {\n\t\t\tif (date.getSeconds())\n\t\t\t\tdate.setSeconds(0);\n\t\t\tif (date.getMilliseconds())\n\t\t\t\tdate.setMilliseconds(0);\n\t\t\treturn date;\n\t\t},\n\t\t_add_days: function (date, inc) {\n\t\t\tvar ndate = new Date(date.valueOf());\n\n\t\t\tndate.setDate(ndate.getDate() + inc);\n\t\t\tif (inc >= 0 && (!date.getHours() && ndate.getHours()) &&//shift to yesterday on dst\n\t\t\t\t(ndate.getDate() <= date.getDate() || ndate.getMonth() < date.getMonth() || ndate.getFullYear() < date.getFullYear()))\n\t\t\t\tndate.setTime(ndate.getTime() + 60 * 60 * 1000 * (24 - ndate.getHours()));\n\t\t\treturn ndate;\n\t\t},\n\n\t\tadd: function (date, inc, mode) {\n\t\t\t/*jsl:ignore*/\n\t\t\tvar ndate = new Date(date.valueOf());\n\t\t\tswitch (mode) {\n\t\t\t\tcase \"day\":\n\t\t\t\t\tndate = this._add_days(ndate, inc);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"week\":\n\t\t\t\t\tndate = this._add_days(ndate, inc * 7);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"month\":\n\t\t\t\t\tndate.setMonth(ndate.getMonth() + inc);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"year\":\n\t\t\t\t\tndate.setYear(ndate.getFullYear() + inc);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"hour\":\n\t\t\t\t\t/*\n\t\t\t\t\t\tadding hours/minutes via setHour(getHour() + inc) gives weird result when\n\t\t\t\t\t\tadding one hour to the time before switch to a Daylight Saving time\n\n\t\t\t\t\t\texample: //Sun Mar 30 2014 01:00:00 GMT+0100 (W. Europe Standard Time)\n\t\t\t\t\t\tnew Date(2014, 02, 30, 1).setHours(2)\n\t\t\t\t\t\t>>Sun Mar 30 2014 01:00:00 GMT+0100 (W. Europe Standard Time)\n\n\t\t\t\t\t\tsetTime seems working as expected\n\t\t\t\t\t */\n\t\t\t\t\tndate.setTime(ndate.getTime() + inc * 60 * 60 * 1000);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"minute\":\n\n\t\t\t\t\tndate.setTime(ndate.getTime() + inc * 60 * 1000);\n\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\treturn this[\"add_\" + mode](date, inc, mode);\n\t\t\t}\n\t\t\treturn ndate;\n\t\t\t/*jsl:end*/\n\t\t},\n\t\tadd_quarter: function (date, inc) {\n\t\t\treturn this.add(date, inc * 3, \"month\");\n\t\t},\n\n\t\tto_fixed: function (num) {\n\t\t\tif (num < 10) return \"0\" + num;\n\t\t\treturn num;\n\t\t},\n\t\tcopy: function (date) {\n\t\t\treturn new Date(date.valueOf());\n\t\t},\n\t\tdate_to_str: function (format, utc) {\n\t\t\tformat = format.replace(/%[a-zA-Z]/g, function (a) {\n\t\t\t\tswitch (a) {\n\t\t\t\t\tcase \"%d\":\n\t\t\t\t\t\treturn \"\\\"+to_fixed(date.getDate())+\\\"\";\n\t\t\t\t\tcase \"%m\":\n\t\t\t\t\t\treturn \"\\\"+to_fixed((date.getMonth()+1))+\\\"\";\n\t\t\t\t\tcase \"%j\":\n\t\t\t\t\t\treturn \"\\\"+date.getDate()+\\\"\";\n\t\t\t\t\tcase \"%n\":\n\t\t\t\t\t\treturn \"\\\"+(date.getMonth()+1)+\\\"\";\n\t\t\t\t\tcase \"%y\":\n\t\t\t\t\t\treturn \"\\\"+to_fixed(date.getFullYear()%100)+\\\"\";\n\t\t\t\t\tcase \"%Y\":\n\t\t\t\t\t\treturn \"\\\"+date.getFullYear()+\\\"\";\n\t\t\t\t\tcase \"%D\":\n\t\t\t\t\t\treturn \"\\\"+locale.date.day_short[date.getDay()]+\\\"\";\n\t\t\t\t\tcase \"%l\":\n\t\t\t\t\t\treturn \"\\\"+locale.date.day_full[date.getDay()]+\\\"\";\n\t\t\t\t\tcase \"%M\":\n\t\t\t\t\t\treturn \"\\\"+locale.date.month_short[date.getMonth()]+\\\"\";\n\t\t\t\t\tcase \"%F\":\n\t\t\t\t\t\treturn \"\\\"+locale.date.month_full[date.getMonth()]+\\\"\";\n\t\t\t\t\tcase \"%h\":\n\t\t\t\t\t\treturn \"\\\"+to_fixed((date.getHours()+11)%12+1)+\\\"\";\n\t\t\t\t\tcase \"%g\":\n\t\t\t\t\t\treturn \"\\\"+((date.getHours()+11)%12+1)+\\\"\";\n\t\t\t\t\tcase \"%G\":\n\t\t\t\t\t\treturn \"\\\"+date.getHours()+\\\"\";\n\t\t\t\t\tcase \"%H\":\n\t\t\t\t\t\treturn \"\\\"+to_fixed(date.getHours())+\\\"\";\n\t\t\t\t\tcase \"%i\":\n\t\t\t\t\t\treturn \"\\\"+to_fixed(date.getMinutes())+\\\"\";\n\t\t\t\t\tcase \"%a\":\n\t\t\t\t\t\treturn \"\\\"+(date.getHours()>11?\\\"pm\\\":\\\"am\\\")+\\\"\";\n\t\t\t\t\tcase \"%A\":\n\t\t\t\t\t\treturn \"\\\"+(date.getHours()>11?\\\"PM\\\":\\\"AM\\\")+\\\"\";\n\t\t\t\t\tcase \"%s\":\n\t\t\t\t\t\treturn \"\\\"+to_fixed(date.getSeconds())+\\\"\";\n\t\t\t\t\tcase \"%W\":\n\t\t\t\t\t\treturn \"\\\"+to_fixed(getISOWeek(date))+\\\"\";\n\t\t\t\t\tcase \"%w\":\n\t\t\t\t\t\treturn \"\\\"+to_fixed(getWeek(date))+\\\"\";\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn a;\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (utc) format = format.replace(/date\\.get/g, \"date.getUTC\");\n\t\t\tvar dateToStr = new Function(\"date\", \"to_fixed\", \"locale\", \"getISOWeek\", \"getWeek\", \"return \\\"\" + format + \"\\\";\");\n\n\t\t\treturn function (date) {\n\t\t\t\treturn dateToStr(date, dateHelper.to_fixed, gantt.locale, dateHelper.getISOWeek, dateHelper.getWeek);\n\t\t\t};\n\t\t},\n\t\tstr_to_date: function (format, utc) {\n\t\t\tvar splt = \"var temp=date.match(/[a-zA-Z]+|[0-9]+/g);\";\n\t\t\tvar mask = format.match(/%[a-zA-Z]/g);\n\t\t\tfor (var i = 0; i < mask.length; i++) {\n\t\t\t\tswitch (mask[i]) {\n\t\t\t\t\tcase \"%j\":\n\t\t\t\t\tcase \"%d\":\n\t\t\t\t\t\tsplt += \"set[2]=temp[\" + i + \"]||1;\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"%n\":\n\t\t\t\t\tcase \"%m\":\n\t\t\t\t\t\tsplt += \"set[1]=(temp[\" + i + \"]||1)-1;\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"%y\":\n\t\t\t\t\t\tsplt += \"set[0]=temp[\" + i + \"]*1+(temp[\" + i + \"]>50?1900:2000);\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"%g\":\n\t\t\t\t\tcase \"%G\":\n\t\t\t\t\tcase \"%h\":\n\t\t\t\t\tcase \"%H\":\n\t\t\t\t\t\tsplt += \"set[3]=temp[\" + i + \"]||0;\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"%i\":\n\t\t\t\t\t\tsplt += \"set[4]=temp[\" + i + \"]||0;\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"%Y\":\n\t\t\t\t\t\tsplt += \"set[0]=temp[\" + i + \"]||0;\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"%a\":\n\t\t\t\t\tcase \"%A\":\n\t\t\t\t\t\tsplt += \"set[3]=set[3]%12+((temp[\" + i + \"]||'').toLowerCase()=='am'?0:12);\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"%s\":\n\t\t\t\t\t\tsplt += \"set[5]=temp[\" + i + \"]||0;\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"%M\":\n\t\t\t\t\t\tsplt += \"set[1]=locale.date.month_short_hash[temp[\" + i + \"]]||0;\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"%F\":\n\t\t\t\t\t\tsplt += \"set[1]=locale.date.month_full_hash[temp[\" + i + \"]]||0;\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar code = \"set[0],set[1],set[2],set[3],set[4],set[5]\";\n\t\t\tif (utc) code = \" Date.UTC(\" + code + \")\";\n\t\t\tvar strToDate = new Function(\"date\", \"locale\", \"var set=[0,0,1,0,0,0]; \" + splt + \" return new Date(\" + code + \");\");\n\n\t\t\treturn function (dateString) {\n\t\t\t\treturn strToDate(dateString, gantt.locale);\n\t\t\t};\n\t\t},\n\t\tgetISOWeek: function (ndate) {\n\t\t\treturn gantt.date._getWeekNumber(ndate, true);\n\t\t},\n\t\t_getWeekNumber: function(ndate, isoWeek){\n\t\t\tif (!ndate) return false;\n\t\t\tvar nday = ndate.getDay();\n\t\t\tif(isoWeek){\n\t\t\t\tif (nday === 0) {\n\t\t\t\t\tnday = 7;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar first_thursday = new Date(ndate.valueOf());\n\t\t\tfirst_thursday.setDate(ndate.getDate() + (4 - nday));\n\t\t\tvar year_number = first_thursday.getFullYear(); // year of the first Thursday\n\t\t\tvar ordinal_date = Math.round((first_thursday.getTime() - new Date(year_number, 0, 1).getTime()) / 86400000); //ordinal date of the first Thursday - 1 (so not really ordinal date)\n\t\t\tvar week_number = 1 + Math.floor(ordinal_date / 7);\n\t\t\treturn week_number;\n\t\t},\n\n\t\tgetWeek: function(ndate){\n\t\t\treturn gantt.date._getWeekNumber(ndate, gantt.config.start_on_monday);\n\t\t},\n\t\tgetUTCISOWeek: function (ndate) {\n\t\t\treturn gantt.date.getISOWeek(ndate);\n\t\t},\n\t\tconvert_to_utc: function (date) {\n\t\t\treturn new Date(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate(), date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds());\n\t\t},\n\t\tparseDate: function (date, format) {\n\t\t\t// raw date may be of type string, number (timestamp) or something else\n\t\t\t// do not check for instanceof Date explicitly, since we may swap native date with different date implementation at some point\n\t\t\tif (date && !date.getFullYear) {\n\t\t\t\tif (gantt.defined(format)) {\n\t\t\t\t\tif (typeof(format) == \"string\")\n\t\t\t\t\t\tformat = gantt.defined(gantt.templates[format]) ? gantt.templates[format] : gantt.date.str_to_date(format);\n\t\t\t\t\telse\n\t\t\t\t\t\tformat = gantt.templates.xml_date;\n\t\t\t\t}\n\t\t\t\tif (date)\n\t\t\t\t\tdate = format(date);\n\t\t\t\telse\n\t\t\t\t\tdate = null;\n\t\t\t}\n\t\t\treturn date;\n\t\t}\n\t};\n\treturn dateHelper;\n};","var env = require(\"../../utils/env\");\n\nmodule.exports = function(gantt){\n\treturn {\n\n\t\t// if false - dhxr param will added to prevent caching on client side (default),\n\t\t// if true - do not add extra params\n\t\tcache: true,\n\n\t\t// default method for load/loadStruct, post/get allowed\n\t\t// get - since 4.1.1, this should fix 412 error for macos safari\n\t\tmethod: \"get\",\n\n\t\tparse: function(data) {\n\t\t\tif (typeof data !== \"string\") return data;\n\n\t\t\tvar obj;\n\t\t\tdata = data.replace(/^[\\s]+/,\"\");\n\t\t\tif (window.DOMParser && !env.isIE) { // ff,ie9\n\t\t\t\tobj = (new window.DOMParser()).parseFromString(data, \"text/xml\");\n\t\t\t} else if (window.ActiveXObject !== window.undefined) {\n\t\t\t\tobj = new window.ActiveXObject(\"Microsoft.XMLDOM\");\n\t\t\t\tobj.async = \"false\";\n\t\t\t\tobj.loadXML(data);\n\t\t\t}\n\t\t\treturn obj;\n\t\t},\n\t\txmltop: function(tagname, xhr, obj) {\n\t\t\tif (typeof xhr.status == \"undefined\" || xhr.status < 400) {\n\t\t\t\tvar xml = (!xhr.responseXML) ? this.parse(xhr.responseText || xhr) : (xhr.responseXML || xhr);\n\t\t\t\tif (xml && xml.documentElement !== null && !xml.getElementsByTagName(\"parsererror\").length) {\n\t\t\t\t\treturn xml.getElementsByTagName(tagname)[0];\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (obj !== -1) gantt.callEvent(\"onLoadXMLError\",[\"Incorrect XML\", arguments[1], obj]);\n\t\t\treturn document.createElement(\"DIV\");\n\t\t},\n\t\txpath: function(xpathExp, docObj) {\n\t\t\tif (!docObj.nodeName) docObj = docObj.responseXML || docObj;\n\t\t\tif (env.isIE) {\n\t\t\t\treturn docObj.selectNodes(xpathExp)||[];\n\t\t\t} else {\n\t\t\t\tvar rows = [];\n\t\t\t\tvar first;\n\t\t\t\tvar col = (docObj.ownerDocument||docObj).evaluate(xpathExp, docObj, null, XPathResult.ANY_TYPE, null);\n\n\t\t\t\twhile (true){\n\t\t\t\t\tfirst = col.iterateNext();\n\t\t\t\t\tif(first){\n\t\t\t\t\t\trows.push(first);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn rows;\n\t\t\t}\n\t\t},\n\t\tquery: function(config) {\n\t\t\tthis._call(\n\t\t\t\t(config.method || \"GET\"),\n\t\t\t\tconfig.url,\n\t\t\t\tconfig.data || \"\",\n\t\t\t\t(config.async || true),\n\t\t\t\tconfig.callback,\n\t\t\t\tnull,\n\t\t\t\tconfig.headers\n\t\t\t);\n\t\t},\n\t\tget: function(url, onLoad) {\n\t\t\tthis._call(\"GET\", url, null, true, onLoad);\n\t\t},\n\t\tgetSync: function(url) {\n\t\t\treturn this._call(\"GET\", url, null, false);\n\t\t},\n\t\tput: function(url, postData, onLoad) {\n\t\t\tthis._call(\"PUT\", url, postData, true, onLoad);\n\t\t},\n\t\tdel: function(url, postData, onLoad) {\n\t\t\tthis._call(\"DELETE\", url, postData, true, onLoad);\n\t\t},\n\t\tpost: function(url, postData, onLoad) {\n\t\t\tif (arguments.length == 1) {\n\t\t\t\tpostData = \"\";\n\t\t\t} else if (arguments.length == 2 && (typeof(postData) == \"function\" || typeof(window[postData]) == \"function\")) {\n\t\t\t\tonLoad = postData;\n\t\t\t\tpostData = \"\";\n\t\t\t} else {\n\t\t\t\tpostData = String(postData);\n\t\t\t}\n\t\t\tthis._call(\"POST\", url, postData, true, onLoad);\n\t\t},\n\t\tpostSync: function(url, postData) {\n\t\t\tpostData = (postData === null ? \"\" : String(postData));\n\t\t\treturn this._call(\"POST\", url, postData, false);\n\t\t},\n\t\tgetLong: function(url, onLoad) {\n\t\t\tthis._call(\"GET\", url, null, true, onLoad, {url:url});\n\t\t},\n\t\tpostLong: function(url, postData, onLoad) {\n\t\t\tif (arguments.length == 2 && (typeof(postData) == \"function\" || typeof(window[postData]))) {\n\t\t\t\tonLoad = postData;\n\t\t\t\tpostData = \"\";\n\t\t\t}\n\t\t\tthis._call(\"POST\", url, postData, true, onLoad, {url:url, postData:postData});\n\t\t},\n\t\t_call: function(method, url, postData, async, onLoad, longParams, headers) {\n\n\t\t\tvar t = (window.XMLHttpRequest && !env.isIE ? new XMLHttpRequest() : new ActiveXObject(\"Microsoft.XMLHTTP\"));\n\t\t\tvar isQt = (navigator.userAgent.match(/AppleWebKit/) !== null && navigator.userAgent.match(/Qt/) !== null && navigator.userAgent.match(/Safari/) !== null);\n\n\t\t\tif (!!async) {\n\t\t\t\tt.onreadystatechange = function() {\n\t\t\t\t\tif ((t.readyState == 4) || (isQt && t.readyState == 3)) { // what for long response and status 404?\n\t\t\t\t\t\tif (t.status != 200 || t.responseText === \"\")\n\t\t\t\t\t\t\tif (!gantt.callEvent(\"onAjaxError\", [t])) return;\n\n\t\t\t\t\t\twindow.setTimeout(function(){\n\t\t\t\t\t\t\tif (typeof(onLoad) == \"function\") {\n\t\t\t\t\t\t\t\tonLoad.apply(window, [{xmlDoc:t, filePath:url}]); // dhtmlx-compat, response.xmlDoc.responseXML/responseText\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (longParams) {\n\t\t\t\t\t\t\t\tif (typeof(longParams.postData) != \"undefined\") {\n\t\t\t\t\t\t\t\t\tthis.postLong(longParams.url, longParams.postData, onLoad);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tthis.getLong(longParams.url, onLoad);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tonLoad = null;\n\t\t\t\t\t\t\tt = null;\n\t\t\t\t\t\t},1);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (method == \"GET\" && !this.cache) {\n\t\t\t\turl += (url.indexOf(\"?\")>=0?\"&\":\"?\")+\"dhxr\"+new Date().getTime()+\"=1\";\n\t\t\t}\n\n\t\t\tt.open(method, url, async);\n\n\t\t\tif (headers){\n\t\t\t\tfor (var key in headers)\n\t\t\t\t\tt.setRequestHeader(key, headers[key]);\n\t\t\t} else if (method.toUpperCase() == \"POST\" || method == \"PUT\" || method == \"DELETE\") {\n\t\t\t\tt.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\n\t\t\t} else if (method == \"GET\") {\n\t\t\t\tpostData = null;\n\t\t\t}\n\n\t\t\tt.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n\n\t\t\tt.send(postData);\n\n\t\t\tif (!async) return {xmlDoc:t, filePath:url}; // dhtmlx-compat, response.xmlDoc.responseXML/responseText\n\n\t\t},\n\t\turlSeparator: function(str){\n\t\t\tif (str.indexOf(\"?\") != -1)\n\t\t\t\treturn \"&\";\n\t\t\telse\n\t\t\t\treturn \"?\";\n\t\t}\n\t};\n};\n","module.exports = function() {\n\treturn {\n\t\tlayout: {\n\t\t\tcss: \"gantt_container\",\n\t\t\trows: [\n\t\t\t\t{\n\t\t\t\t\tcols: [\n\t\t\t\t\t\t{view: \"grid\", scrollX: \"scrollHor\", scrollY: \"scrollVer\"},\n\t\t\t\t\t\t{resizer: true, width: 1},\n\t\t\t\t\t\t{view: \"timeline\", scrollX: \"scrollHor\", scrollY: \"scrollVer\"},\n\t\t\t\t\t\t{view: \"scrollbar\", id: \"scrollVer\"}\n\t\t\t\t\t]\n\n\t\t\t\t},\n\t\t\t\t{view: \"scrollbar\", id: \"scrollHor\", height: 20}\n\t\t\t]\n\t\t},\n\t\tlinks: {\n\t\t\t\"finish_to_start\": \"0\",\n\t\t\t\"start_to_start\": \"1\",\n\t\t\t\"finish_to_finish\": \"2\",\n\t\t\t\"start_to_finish\": \"3\"\n\t\t},\n\t\ttypes: {\n\t\t\t'task': 'task',\n\t\t\t'project': 'project',\n\t\t\t'milestone': 'milestone'\n\t\t},\n\t\tauto_types: false,\n\t\tduration_unit: \"day\",\n\t\twork_time: false,\n\t\tcorrect_work_time: false,\n\t\tskip_off_time: false,\n\n\t\tcascade_delete: true,\n\n\t\tautosize: false,\n\t\tautosize_min_width: 0,\n\t\tautoscroll: true,\n\t\tautoscroll_speed: 30,\n\n\t\tshow_links: true,\n\t\tshow_task_cells: true,\n\t\t// replace backgroung of the task area with a canvas img\n\t\tstatic_background: false,\n\t\tbranch_loading: false,\n\t\tbranch_loading_property: \"$has_child\",\n\t\tshow_loading: false,\n\t\tshow_chart: true,\n\t\tshow_grid: true,\n\t\tmin_duration: 60 * 60 * 1000,\n\t\txml_date: \"%d-%m-%Y %H:%i\",\n\t\tapi_date: \"%d-%m-%Y %H:%i\",\n\t\tstart_on_monday: true,\n\t\tserver_utc: false,\n\t\tshow_progress: true,\n\t\tfit_tasks: false,\n\t\tselect_task: true,\n\t\tscroll_on_click: true,\n\t\tpreserve_scroll: true,\n\t\treadonly: false,\n\n\t\t/*grid */\n\t\tdate_grid: \"%Y-%m-%d\",\n\n\t\tdrag_links: true,\n\t\tdrag_progress: true,\n\t\tdrag_resize: true,\n\t\tdrag_project: false,\n\t\tdrag_move: true,\n\t\tdrag_mode: {\n\t\t\t\"resize\": \"resize\",\n\t\t\t\"progress\": \"progress\",\n\t\t\t\"move\": \"move\",\n\t\t\t\"ignore\": \"ignore\"\n\t\t},\n\t\tround_dnd_dates: true,\n\t\tlink_wrapper_width: 20,\n\t\troot_id: 0,\n\n\t\tautofit: false, // grid column automatic fit grid_width config\n\t\tcolumns: [\n\t\t\t{name: \"text\", tree: true, width: '*', resize: true},\n\t\t\t{name: \"start_date\", align: \"center\", resize: true},\n\t\t\t{name: \"duration\", align: \"center\"},\n\t\t\t{name: \"add\", width: 44}\n\t\t],\n\n\t\t/*scale*/\n\t\tstep: 1,\n\t\tscale_unit: \"day\",\n\t\tscale_offset_minimal: true,\n\t\tsubscales: [],\n\n\t\tinherit_scale_class: false,\n\n\t\ttime_step: 60,\n\t\tduration_step: 1,\n\t\tdate_scale: \"%d %M\",\n\t\ttask_date: \"%d %F %Y\",\n\t\ttime_picker: \"%H:%i\",\n\t\ttask_attribute: \"task_id\",\n\t\tlink_attribute: \"link_id\",\n\t\tlayer_attribute: \"data-layer\",\n\t\tbuttons_left: [\n\t\t\t\"gantt_save_btn\",\n\t\t\t\"gantt_cancel_btn\"\n\t\t],\n\t\t_migrate_buttons: {\n\t\t\t\"dhx_save_btn\": \"gantt_save_btn\",\n\t\t\t\"dhx_cancel_btn\": \"gantt_cancel_btn\",\n\t\t\t\"dhx_delete_btn\": \"gantt_delete_btn\"\n\t\t},\n\t\tbuttons_right: [\n\t\t\t\"gantt_delete_btn\"\n\t\t],\n\t\tlightbox: {\n\t\t\tsections: [\n\t\t\t\t{name: \"description\", height: 70, map_to: \"text\", type: \"textarea\", focus: true},\n\t\t\t\t{name: \"time\", type: \"duration\", map_to: \"auto\"}\n\t\t\t],\n\t\t\tproject_sections: [\n\t\t\t\t{name: \"description\", height: 70, map_to: \"text\", type: \"textarea\", focus: true},\n\t\t\t\t{name: \"type\", type: \"typeselect\", map_to: \"type\"},\n\t\t\t\t{name: \"time\", type: \"duration\", readonly: true, map_to: \"auto\"}\n\t\t\t],\n\t\t\tmilestone_sections: [\n\t\t\t\t{name: \"description\", height: 70, map_to: \"text\", type: \"textarea\", focus: true},\n\t\t\t\t{name: \"type\", type: \"typeselect\", map_to: \"type\"},\n\t\t\t\t{name: \"time\", type: \"duration\", single_date: true, map_to: \"auto\"}\n\t\t\t]\n\t\t},\n\t\tdrag_lightbox: true,\n\t\tsort: false,\n\t\tdetails_on_create: true,\n\t\tdetails_on_dblclick: true,\n\t\tinitial_scroll: true,\n\t\ttask_scroll_offset: 100,\n\n\t\torder_branch: false,\n\t\torder_branch_free: false,\n\n\t\ttask_height: \"full\",//number px of 'full' for row height\n\t\tmin_column_width: 70,\n\n\t\t// min width for grid column (when resizing)\n\t\tmin_grid_column_width: 70,\n\t\t// name of the attribute with column index for resize element\n\t\tgrid_resizer_column_attribute: \"column_index\",\n\t\t// name of the attribute with column index for resize element\n\t\tgrid_resizer_attribute: \"grid_resizer\",\n\n\t\t// grid width can be increased after the column has been resized\n\t\tkeep_grid_width: false,\n\n\t\t// grid width can be adjusted\n\t\tgrid_resize: false,\n\n\t\tshow_unscheduled: true,\n\n\t\t//\n\t\treadonly_property: \"readonly\",\n\t\teditable_property: \"editable\",\n\t\tcalendar_property: \"calendar_id\",\n\t\tresource_calendars: {},\n\n\t\ttype_renderers: {},\n\n\t\topen_tree_initially: false,\n\t\toptimize_render: true,\n\t\tprevent_default_scroll: false,\n\t\tshow_errors: true,\n\t\twai_aria_attributes: true,\n\t\tsmart_scales: true,\n\t\trtl:false,\n\t\tplaceholder_task: false\n\t};\n};\n","module.exports = function(){\n\tvar services = {};\n\tfunction register (name, getter){\n\t\tservices[name] = getter;\n\t}\n\n\tfunction getService(name){\n\t\tif(!services[name]){\n\t\t\treturn null;\n\t\t}\n\t\treturn services[name]();\n\t}\n\n\tvar servicesEnum = {\n\t\t\"config\": \"config\",\n\t\t\"templates\": \"templates\",\n\t\t\"locale\": \"locale\"\n\t};\n\n\treturn {\n\t\tservices: servicesEnum,\n\t\tsetService: register,\n\t\tgetService: getService,\n\t\tconfig: function(){\n\t\t\treturn this.getService(\"config\");\n\t\t},\n\t\ttemplates: function(){\n\t\t\treturn this.getService(\"templates\");\n\t\t},\n\t\tlocale: function(){\n\t\t\treturn this.getService(\"locale\");\n\t\t},\n\t\tdestructor: function(){\n\t\t\tfor(var i in services){\n\t\t\t\tif(services[i]){\n\t\t\t\t\tvar service = services[i];\n\t\t\t\t\tif(service && service.destructor){\n\t\t\t\t\t\tservice.destructor();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tservices = null;\n\t\t}\n\t};\n};\n","module.exports = function(gantt){\n\tgantt.$inject = function(module){\n\t\treturn module(this.$services);\n\t};\n};","module.exports = {\n\tKEY_CODES: {\n\t\tUP: 38,\n\t\tDOWN: 40,\n\t\tLEFT: 37,\n\t\tRIGHT: 39,\n\t\tSPACE: 32,\n\t\tENTER: 13,\n\t\tDELETE: 46,\n\t\tESC: 27,\n\t\tTAB: 9\n\t}\n};","require(\"css/skins/terrace.less\");\n\nfunction DHXGantt(){\n\tthis.constants = require(\"./../constants\");\n\tthis.version = VERSION;\n\tthis.templates = {};\n\tthis.ext = {};\n\tthis.keys = {\n\t\tedit_save: this.constants.KEY_CODES.ENTER,\n\t\tedit_cancel: this.constants.KEY_CODES.ESC\n\t};\n}\n\nmodule.exports = function() {\n\t// use a named constructor to make gantt instance discoverable in heap snapshots\n\tvar gantt = new DHXGantt();\n\n\trequire(\"./common/import\")(gantt);\n\n\tgantt.$services = gantt.$inject(require(\"./common/services\"));\n\tgantt.config = gantt.$inject(require(\"./common/config\"));\n\tgantt.ajax =  require(\"./common/ajax\")(gantt);\n\tgantt.date = require(\"./common/date\")(gantt);\n\tvar dnd = require(\"./common/dnd\")(gantt);\n\tgantt.$services.setService(\"dnd\", function(){return dnd;});\n\n\tgantt.$services.setService(\"config\", function () {\n\t\treturn gantt.config;\n\t});\n\tgantt.$services.setService(\"date\", function () {\n\t\treturn gantt.date;\n\t});\n\tgantt.$services.setService(\"locale\", function () {\n\t\treturn gantt.locale;\n\t});\n\tgantt.$services.setService(\"templates\", function () {\n\t\treturn gantt.templates;\n\t});\n\n\tvar templatesLoader = require(\"./common/templates\")(gantt);\n\tgantt.$services.setService(\"templateLoader\", function () {\n\t\treturn templatesLoader;\n\t});\n\n\tvar eventable = require(\"../utils/eventable\");\n\teventable(gantt);\n\n\tvar StateService = require(\"./common/state\");\n\tvar stateService = new StateService();\n\n\tstateService.registerProvider(\"global\", function () {\n\t\treturn {\n\t\t\tmin_date: gantt._min_date,\n\t\t\tmax_date: gantt._max_date,\n\t\t\tselected_task: gantt.$data.tasksStore.getSelectedId()\n\t\t};\n\t});\n\tgantt.getState = stateService.getState;\n\tgantt.$services.setService(\"state\", function () {\n\t\treturn stateService;\n\t});\n\n\tvar utils = require(\"../utils/utils\");\n\tutils.mixin(gantt, utils);\n\tgantt.env = require(\"../utils/env\");\n\n\tvar domEvents = require(\"../utils/dom_event_scope\")();\n\tgantt.event = domEvents.attach;\n\tgantt.eventRemove = domEvents.detach;\n\tgantt._eventRemoveAll = domEvents.detachAll;\n\tgantt._createDomEventScope = domEvents.extend;\n\n\tutils.mixin(gantt, require(\"./message\")(gantt));\n\tvar uiApi = require(\"./ui/index\").init(gantt);\n\tgantt.$ui = uiApi.factory;\n\tgantt.$ui.layers = uiApi.render;\n\tgantt.$mouseEvents = uiApi.mouseEvents;\n\tgantt.$services.setService(\"mouseEvents\", function () {\n\t\treturn gantt.$mouseEvents;\n\t});\n\tgantt.mixin(gantt, uiApi.layersApi);\n\n\trequire(\"./data_task_layers\")(gantt);\n\n\tgantt.$services.setService(\"layers\", function () {\n\t\treturn uiApi.layersService;\n\t});\n\n\tvar createLayoutFacade = require(\"./facades/layout\");\n\tgantt.mixin(gantt, createLayoutFacade());\n\n\trequire(\"./datastore/datastore_hooks\")(gantt);\n\n\trequire(\"./dataprocessor/hooks\")(gantt);\n\trequire(\"./plugins\")(gantt);\n\n\trequire(\"./dynamic_loading\")(gantt);\n\trequire(\"./grid_column_api\")(gantt);\n\trequire(\"./wai_aria\")(gantt);\n\trequire(\"./tasks\")(gantt);\n\trequire(\"./load\")(gantt);\n\trequire(\"./worktime/work_time\")(gantt);\n\trequire(\"./data\")(gantt);\n\trequire(\"./lightbox\")(gantt);\n\trequire(\"./lightbox_optional_time\")(gantt);\n\trequire(\"./data_task_types\")(gantt);\n\trequire(\"./cached_functions\")(gantt);\n\trequire(\"./skin\")(gantt);\n\trequire(\"../css/skins/skyblue\")(gantt);\n\trequire(\"../css/skins/meadow\")(gantt);\n\trequire(\"../css/skins/terrace\")(gantt);\n\trequire(\"../css/skins/broadway\")(gantt);\n\trequire(\"../css/skins/material\")(gantt);\n\trequire(\"../css/skins/contrast_black\")(gantt);\n\trequire(\"../css/skins/contrast_white\")(gantt);\n\trequire(\"./touch\")(gantt);\n\trequire(\"../locale/locale\")(gantt);\n\trequire(\"./gantt_core\")(gantt);\n\trequire(\"./destructor\")(gantt);\n\n\treturn gantt;\n};","module.exports = function(gantt){\n\n\tfunction deprecated(badCode, goodCode) {\n\n\t\tvar formatting = gantt.env.isIE ? \"\" : \"%c\";\n\n\n\t\tvar message = [\n\t\t\tformatting, \"\\\"\", badCode, \"\\\"\",  formatting,\n\t\t\t\" has been deprecated in dhtmlxGantt v4.0 and will stop working in v6.0. Use \",\n\t\t\tformatting, \"\\\"\", goodCode, \"\\\"\",  formatting,\n\t\t\t\" instead. \\nSee more details at http://docs.dhtmlx.com/gantt/migrating.html \"\n\t\t].join(\"\");\n\n\t\tvar log = window.console.warn || window.console.log;\n\n\t\tvar args = [message];\n\t\tif(!gantt.env.isIE){\n\t\t\targs = args.concat([\"font-weight:bold\", \"font-weight:normal\", \"font-weight:bold\", \"font-weight:normal\"]);\n\t\t}\n\n\t\tlog.apply(window.console, args);\n\t}\n\n\tfunction wrapDeprecated(method) {\n\t\treturn function () {\n\t\t\tdeprecated(\"dhtmlx.\" + method, \"gantt.\" + method);\n\t\t\treturn gantt[method].apply(gantt, arguments);\n\t\t};\n\t}\n\n\t/* dhtmlx */\n\n\n\tif (!window.dhtmlx)\n\t\twindow.dhtmlx = {};\n\n\tvar dhtmlxMethods = [\n\t\t\"message\",\n\t\t\"alert\",\n\t\t\"confirm\",\n\t\t\"modalbox\",\n\t\t\"uid\",\n\t\t\"copy\",\n\t\t\"mixin\",\n\t\t\"defined\",\n\t\t\"bind\",\n\t\t\"assert\"\n\t];\n\n\tvar dynMethods = [];\n\n\tfor(var i = 0; i < dhtmlxMethods.length; i++){\n\t\t// wrap dhtmlx methods with 'deprecated' warnings\n\t\t// do not wrap if methods are defined by dhtmlxSuite\n\t\tif(!window.dhtmlx[dhtmlxMethods[i]]){\n\t\t\tdynMethods.push(dhtmlxMethods[i]);\n\t\t\tdhtmlx[dhtmlxMethods[i]] = wrapDeprecated(dhtmlxMethods[i]);\n\t\t}\n\t}\n\n\tgantt.attachEvent(\"onDestroy\", function(){\n\t\tfor(var i = 0; i < dynMethods.length; i++){\n\t\t\tdelete window.dhtmlx[dynMethods[i]];\n\t\t}\n\t\tdynMethods = null;\n\n\t});\n\n\t/* global functions */\n\n\n\tif (!window.dataProcessor) {\n\t\twindow.dataProcessor = function (url) {\n\t\t\tdeprecated(\"new dataProcessor(url)\", \"new gantt.dataProcessor(url)\");\n\t\t\treturn new gantt.dataProcessor(url);\n\t\t};\n\t\tgantt.attachEvent(\"onDestroy\", function(){\n\t\t\twindow.dataProcessor = null;\n\t\t});\n\t}\n\n};","import * as warnings from \"./core/deprecated_warnings\";\nimport * as base from \"./core/gantt\";\n\n\nconst gantt = (window as any).gantt = base();\nwarnings(gantt);"],"sourceRoot":""}